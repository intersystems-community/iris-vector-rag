# ColBERT Reconciliation Configuration Example
# This file demonstrates the complete configuration schema for the
# Generalized Reconciliation Framework with ColBERT token embeddings

# Global Reconciliation Settings
reconciliation:
  # Enable/disable reconciliation framework
  enabled: true
  
  # Reconciliation mode: "progressive" | "complete" | "emergency"
  # - progressive: Incremental healing with minimal disruption
  # - complete: Full state validation and healing
  # - emergency: Fast healing for critical issues only
  mode: "progressive"
  
  # Reconciliation execution interval (hours)
  interval_hours: 24
  
  # Performance management settings
  performance:
    max_concurrent_pipelines: 3
    batch_size_documents: 100
    batch_size_embeddings: 50
    memory_limit_gb: 8
    cpu_limit_percent: 70
    
  # Error handling configuration
  error_handling:
    max_retries: 3
    retry_delay_seconds: 30
    rollback_on_failure: true
    
  # Monitoring and alerting
  monitoring:
    enable_progress_tracking: true
    log_level: "INFO"
    alert_on_failures: true
    
  # Pipeline-specific overrides
  pipeline_overrides:
    colbert:
      batch_size_embeddings: 16
      memory_limit_gb: 12
    graphrag:
      max_retries: 5

# ColBERT-Specific Configuration
colbert:
  # Target document count for reconciliation
  target_document_count: 1000
  
  # ColBERT model configuration
  model_name: "fjmgAI/reason-colBERT-150M-GTE-ModernColBERT"
  token_dimension: 768
  
  # Validation settings
  validation:
    # Diversity threshold for embedding quality (0.0-1.0)
    diversity_threshold: 0.7
    
    # Enable mock detection (detects placeholder/dummy embeddings)
    mock_detection_enabled: true
    
    # Minimum embedding quality score (0.0-1.0)
    min_embedding_quality_score: 0.8
    
  # Completeness requirements
  completeness:
    # Require all documents to have embeddings
    require_all_docs: true
    
    # Require token-level embeddings (ColBERT-specific)
    require_token_embeddings: true
    
    # Minimum completeness percentage (0.0-100.0)
    min_completeness_percent: 95.0
    
    # Maximum allowed missing documents
    max_missing_documents: 50
    
  # Remediation settings
  remediation:
    # Enable automatic healing of missing embeddings
    auto_heal_missing_embeddings: true
    
    # Enable automatic schema migration
    auto_migrate_schema: false
    
    # Batch size for embedding generation
    embedding_generation_batch_size: 32
    
    # Maximum time for remediation operations (minutes)
    max_remediation_time_minutes: 120
    
    # Enable backup before remediation
    backup_before_remediation: true

# Target States for Different Environments
target_states:
  development:
    document_count: 1000
    pipelines:
      basic:
        required_embeddings: 
          document_level: 1000
        schema_version: "2.1"
        embedding_model: "all-MiniLM-L6-v2"
        vector_dimensions: 384
      colbert:
        required_embeddings:
          document_level: 1000
          token_level: 1000
        schema_version: "2.1"
        embedding_model: "fjmgAI/reason-colBERT-150M-GTE-ModernColBERT"
        vector_dimensions: 768
        
  production:
    document_count: 50000
    pipelines:
      basic:
        required_embeddings:
          document_level: 50000
        schema_version: "2.1"
        embedding_model: "all-MiniLM-L6-v2"
        vector_dimensions: 384
      colbert:
        required_embeddings:
          document_level: 50000
          token_level: 50000
        schema_version: "2.1"
        embedding_model: "fjmgAI/reason-colBERT-150M-GTE-ModernColBERT"
        vector_dimensions: 768

# Environment Variable Examples
# These can be overridden using environment variables with RAG_ prefix
# Example: RAG_COLBERT__TARGET_DOCUMENT_COUNT=2000
# Example: RAG_RECONCILIATION__PERFORMANCE__MEMORY_LIMIT_GB=16
# Example: RAG_COLBERT__VALIDATION__DIVERSITY_THRESHOLD=0.8

# Database Configuration (inherited from main config)
database:
  db_host: "${IRIS_HOST:localhost}"
  db_port: "${IRIS_PORT:1972}"
  db_user: "${IRIS_USER:SuperUser}"
  db_password: "${IRIS_PASSWORD:SYS}"
  db_namespace: "${IRIS_NAMESPACE:USER}"

# Logging Configuration
logging:
  log_level: "${RAG_LOG_LEVEL:INFO}"
  log_format: "%(asctime)s - %(name)s - %(levelname)s - %(message)s"