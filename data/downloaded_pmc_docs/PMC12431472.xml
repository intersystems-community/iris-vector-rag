<?xml version="1.0"  ?><!DOCTYPE pmc-articleset PUBLIC "-//NLM//DTD ARTICLE SET 2.0//EN" "https://dtd.nlm.nih.gov/ncbi/pmc/articleset/nlm-articleset-2.0.dtd"><pmc-articleset><article xmlns:mml="http://www.w3.org/1998/Math/MathML" xmlns:ali="http://www.niso.org/schemas/ali/1.0/" xml:lang="en" article-type="research-article" dtd-version="1.4"><processing-meta base-tagset="archiving" mathml-version="3.0" table-model="xhtml" tagset-family="jats"><restricted-by>pmc</restricted-by></processing-meta><front><journal-meta><journal-id journal-id-type="nlm-ta">Sensors (Basel)</journal-id><journal-id journal-id-type="iso-abbrev">Sensors (Basel)</journal-id><journal-id journal-id-type="pmc-domain-id">1660</journal-id><journal-id journal-id-type="pmc-domain">sensors</journal-id><journal-id journal-id-type="publisher-id">sensors</journal-id><journal-title-group><journal-title>Sensors (Basel, Switzerland)</journal-title></journal-title-group><issn pub-type="epub">1424-8220</issn><publisher><publisher-name>Multidisciplinary Digital Publishing Institute  (MDPI)</publisher-name></publisher></journal-meta><article-meta><article-id pub-id-type="pmcid">PMC12431472</article-id><article-id pub-id-type="pmcid-ver">PMC12431472.1</article-id><article-id pub-id-type="pmcaid">12431472</article-id><article-id pub-id-type="pmcaiid">12431472</article-id><article-id pub-id-type="doi">10.3390/s25175308</article-id><article-id pub-id-type="publisher-id">sensors-25-05308</article-id><article-version article-version-type="pmc-version">1</article-version><article-categories><subj-group subj-group-type="heading"><subject>Article</subject></subj-group></article-categories><title-group><article-title>Exploring MQTT Broker-Based, End-to-End Models for Security and Efficiency</article-title></title-group><contrib-group><contrib contrib-type="author"><contrib-id contrib-id-type="orcid" authenticated="true">https://orcid.org/0000-0003-1054-109X</contrib-id><name name-style="western"><surname>Chien</surname><given-names initials="HY">Hung-Yu</given-names></name><role vocab="credit" vocab-identifier="https://credit.niso.org/" vocab-term="Methodology" vocab-term-identifier="https://credit.niso.org/contributor-roles/methodology/">Methodology</role><role vocab="credit" vocab-identifier="https://credit.niso.org/" vocab-term="Validation" vocab-term-identifier="https://credit.niso.org/contributor-roles/validation/">Validation</role><role vocab="credit" vocab-identifier="https://credit.niso.org/" vocab-term="Formal analysis" vocab-term-identifier="https://credit.niso.org/contributor-roles/formal-analysis/">Formal analysis</role><role vocab="credit" vocab-identifier="https://credit.niso.org/" vocab-term="Investigation" vocab-term-identifier="https://credit.niso.org/contributor-roles/investigation/">Investigation</role><role vocab="credit" vocab-identifier="https://credit.niso.org/" vocab-term="Resources" vocab-term-identifier="https://credit.niso.org/contributor-roles/resources/">Resources</role><xref rid="af1-sensors-25-05308" ref-type="aff">1</xref><xref rid="c1-sensors-25-05308" ref-type="corresp">*</xref></contrib><contrib contrib-type="author"><name name-style="western"><surname>Shih</surname><given-names initials="AT">An-Tong</given-names></name><role vocab="credit" vocab-identifier="https://credit.niso.org/" vocab-term="Software" vocab-term-identifier="https://credit.niso.org/contributor-roles/software/">Software</role><xref rid="af2-sensors-25-05308" ref-type="aff">2</xref></contrib><contrib contrib-type="author"><name name-style="western"><surname>Huang</surname><given-names initials="YM">Yuh-Ming</given-names></name><role vocab="credit" vocab-identifier="https://credit.niso.org/" vocab-term="Supervision" vocab-term-identifier="https://credit.niso.org/contributor-roles/supervision/">Supervision</role><xref rid="af2-sensors-25-05308" ref-type="aff">2</xref></contrib></contrib-group><contrib-group><contrib contrib-type="editor"><name name-style="western"><surname>Wu</surname><given-names initials="S">Shaoen</given-names></name><role>Academic Editor</role></contrib><contrib contrib-type="editor"><name name-style="western"><surname>Xiong</surname><given-names initials="J">Jinbo</given-names></name><role>Academic Editor</role></contrib><contrib contrib-type="editor"><name name-style="western"><surname>Chatzimisios</surname><given-names initials="P">Periklis</given-names></name><role>Academic Editor</role></contrib><contrib contrib-type="editor"><name name-style="western"><surname>Daneshmand</surname><given-names initials="M">Mahmoud</given-names></name><role>Academic Editor</role></contrib></contrib-group><aff id="af1-sensors-25-05308"><label>1</label>Department of Information Management, National Chinan University, Nantou County 54561, Taiwan</aff><aff id="af2-sensors-25-05308"><label>2</label>Department of Computer Science &amp; Information Engineering, National Chinan University, Nantou County 54561, Taiwan; <email>s112321902@mail1.ncnu.edu.tw</email> (A.-T.S.); <email>ymhuang@csie.ncnu.edu.tw</email> (Y.-M.H.)</aff><author-notes><corresp id="c1-sensors-25-05308"><label>*</label>Correspondence: <email>hychien@mail.ncnu.edu.tw</email></corresp></author-notes><pub-date pub-type="epub"><day>26</day><month>8</month><year>2025</year></pub-date><pub-date pub-type="collection"><month>9</month><year>2025</year></pub-date><volume>25</volume><issue>17</issue><issue-id pub-id-type="pmc-issue-id">496815</issue-id><elocation-id>5308</elocation-id><history><date date-type="received"><day>21</day><month>6</month><year>2025</year></date><date date-type="rev-recd"><day>15</day><month>8</month><year>2025</year></date><date date-type="accepted"><day>18</day><month>8</month><year>2025</year></date></history><pub-history><event event-type="pmc-release"><date><day>26</day><month>08</month><year>2025</year></date></event><event event-type="pmc-live"><date><day>13</day><month>09</month><year>2025</year></date></event><event event-type="pmc-last-change"><date iso-8601-date="2025-09-13 14:25:13.570"><day>13</day><month>09</month><year>2025</year></date></event></pub-history><permissions><copyright-statement>&#169; 2025 by the authors.</copyright-statement><copyright-year>2025</copyright-year><license><ali:license_ref specific-use="textmining" content-type="ccbylicense">https://creativecommons.org/licenses/by/4.0/</ali:license_ref><license-p>Licensee MDPI, Basel, Switzerland. This article is an open access article distributed under the terms and conditions of the Creative Commons Attribution (CC BY) license (<ext-link xmlns:xlink="http://www.w3.org/1999/xlink" ext-link-type="uri" xlink:href="https://creativecommons.org/licenses/by/4.0/">https://creativecommons.org/licenses/by/4.0/</ext-link>).</license-p></license></permissions><self-uri xmlns:xlink="http://www.w3.org/1999/xlink" content-type="pmc-pdf" xlink:href="sensors-25-05308.pdf"/><abstract><sec sec-type="highlights"><title>Highlights</title><p>
<bold>What are the main findings?</bold>
<list list-type="bullet"><list-item><p>Highlight the double-encryption issue of the conventional MQTT broker-based, end-to-end (E2E) models.</p></list-item><list-item><p>Highlight the heavy broker-decrypt-re-encrypt overhead undermining the MQTT efficiency strengths.</p></list-item><list-item><p>Explore new MQTT broker-based E2E models, which aim to preserve high efficiency and security goals.</p></list-item></list>
</p><p>
<bold>What is the implication of the main finding?</bold>
<list list-type="bullet"><list-item><p>Both the group key-based approach and the client&#8211;broker channel, Integrity-only approach are promising solutions for securing MQTT systems while preserving the efficiency strength.</p></list-item><list-item><p>The proposed approaches are fully compatible with MQTT 5.0 and have been implemented using MQTT 5.0 APIs.</p></list-item></list>
</p></sec><sec><title>Abstract</title><p>MQTT is a publisher&#8211;broker&#8211;subscriber architecture in which a broker forwards the messages to interested subscribers, which facilitates the broker&#8217;s capacity to peek at the message contents; therefore, both academia and industry design and develop end-to-end (E2E) channels to protect the privacy against a curious broker which honestly follows the protocols but would peek at the contents for its benefits. However, we notice that the double-encryption issue of the conventional MQTT broker-based E2E models and the heavy broker-decrypt-re-encrypt overhead undermine MQTT efficiency strengths. In this study, we highlight the weaknesses, propose several solutions, implement the schemes, and experiment with them in the simulated scenarios. Security analysis and formal security proofs are verified to ensure the security goals. The analysis and the evaluations on the implementations confirm both the group key-based approach and the client&#8211;broker-channel, integrity-only approach could improve the efficiency performance while preserving security strengths.</p></sec></abstract><kwd-group><kwd>MQTT</kwd><kwd>Mosquitto</kwd><kwd>ECDH</kwd><kwd>enhanced authentication</kwd><kwd>end to end</kwd></kwd-group><funding-group><award-group><award-id>MOST 111-2221-E-260-009-MY3</award-id></award-group><funding-statement>This research was funded by the grant number MOST 111-2221-E-260-009-MY3.</funding-statement></funding-group><custom-meta-group><custom-meta><meta-name>pmc-status-qastatus</meta-name><meta-value>0</meta-value></custom-meta><custom-meta><meta-name>pmc-status-live</meta-name><meta-value>yes</meta-value></custom-meta><custom-meta><meta-name>pmc-status-embargo</meta-name><meta-value>no</meta-value></custom-meta><custom-meta><meta-name>pmc-status-released</meta-name><meta-value>yes</meta-value></custom-meta><custom-meta><meta-name>pmc-prop-open-access</meta-name><meta-value>yes</meta-value></custom-meta><custom-meta><meta-name>pmc-prop-olf</meta-name><meta-value>no</meta-value></custom-meta><custom-meta><meta-name>pmc-prop-manuscript</meta-name><meta-value>no</meta-value></custom-meta><custom-meta><meta-name>pmc-prop-legally-suppressed</meta-name><meta-value>no</meta-value></custom-meta><custom-meta><meta-name>pmc-prop-has-pdf</meta-name><meta-value>yes</meta-value></custom-meta><custom-meta><meta-name>pmc-prop-has-supplement</meta-name><meta-value>no</meta-value></custom-meta><custom-meta><meta-name>pmc-prop-pdf-only</meta-name><meta-value>no</meta-value></custom-meta><custom-meta><meta-name>pmc-prop-suppress-copyright</meta-name><meta-value>no</meta-value></custom-meta><custom-meta><meta-name>pmc-prop-is-real-version</meta-name><meta-value>no</meta-value></custom-meta><custom-meta><meta-name>pmc-prop-is-scanned-article</meta-name><meta-value>no</meta-value></custom-meta><custom-meta><meta-name>pmc-prop-preprint</meta-name><meta-value>no</meta-value></custom-meta><custom-meta><meta-name>pmc-prop-in-epmc</meta-name><meta-value>yes</meta-value></custom-meta></custom-meta-group></article-meta></front><body><sec sec-type="intro" id="sec1-sensors-25-05308"><title>1. Introduction</title><p>MQTT (message queuing telemetry transport) [<xref rid="B1-sensors-25-05308" ref-type="bibr">1</xref>,<xref rid="B2-sensors-25-05308" ref-type="bibr">2</xref>], as one of the most popular Internet of Things (IoT) communication protocols, has been widely deployed around the globe. However, its publisher&#8211;broker&#8211;subscriber architecture allows the broker to peek at the message content, even if a TLS authentication is activated between clients and a broker.</p><p>To protect the message privacy from curious brokers, several works like [<xref rid="B3-sensors-25-05308" ref-type="bibr">3</xref>,<xref rid="B4-sensors-25-05308" ref-type="bibr">4</xref>,<xref rid="B5-sensors-25-05308" ref-type="bibr">5</xref>,<xref rid="B6-sensors-25-05308" ref-type="bibr">6</xref>,<xref rid="B7-sensors-25-05308" ref-type="bibr">7</xref>,<xref rid="B8-sensors-25-05308" ref-type="bibr">8</xref>] propose their solutions for the end-to-end (E2E) channel building between a publisher and a subscriber; in such settings, a publisher and a subscriber would build an E2E channel, in addition to the client&#8211;broker secure channel. <xref rid="sensors-25-05308-f001" ref-type="fig">Figure 1</xref> shows the MQTT E2E architecture. Conventional MQTT standards (MQTT 5.0 [<xref rid="B2-sensors-25-05308" ref-type="bibr">2</xref>], MQTT 3.1 [<xref rid="B1-sensors-25-05308" ref-type="bibr">1</xref>] and its previous versions) encourage users to activate SSL/TLS on the brokers or design their customized secure channel between clients and a broker to protect the security between clients and the broker.</p><p>However, we find that this MQTT E2E model would result in a double-encryption-overhead issue. In <xref rid="sensors-25-05308-f001" ref-type="fig">Figure 1</xref>, assume publisher <inline-formula><mml:math id="mm1" overflow="scroll"><mml:mrow><mml:mrow><mml:msub><mml:mrow><mml:mi mathvariant="normal">P</mml:mi></mml:mrow><mml:mrow><mml:mi>A</mml:mi></mml:mrow></mml:msub></mml:mrow></mml:mrow></mml:math></inline-formula> publishes a message <inline-formula><mml:math id="mm2" overflow="scroll"><mml:mrow><mml:mrow><mml:msub><mml:mrow><mml:mi>M</mml:mi></mml:mrow><mml:mrow><mml:mi>A</mml:mi></mml:mrow></mml:msub></mml:mrow></mml:mrow></mml:math></inline-formula> to a group of <italic toggle="yes">n</italic> subscribers (say <inline-formula><mml:math id="mm3" overflow="scroll"><mml:mrow><mml:mrow><mml:msub><mml:mrow><mml:mi>S</mml:mi></mml:mrow><mml:mrow><mml:mi>i</mml:mi></mml:mrow></mml:msub></mml:mrow></mml:mrow></mml:math></inline-formula>, for <inline-formula><mml:math id="mm4" overflow="scroll"><mml:mrow><mml:mrow><mml:mi>i</mml:mi><mml:mo>=</mml:mo><mml:mn>1</mml:mn><mml:mo>~</mml:mo><mml:mi>n</mml:mi></mml:mrow></mml:mrow></mml:math></inline-formula>); <inline-formula><mml:math id="mm5" overflow="scroll"><mml:mrow><mml:mrow><mml:msub><mml:mrow><mml:mi mathvariant="normal">P</mml:mi></mml:mrow><mml:mrow><mml:mi>A</mml:mi></mml:mrow></mml:msub></mml:mrow></mml:mrow></mml:math></inline-formula> first encrypts <inline-formula><mml:math id="mm6" overflow="scroll"><mml:mrow><mml:mrow><mml:msub><mml:mrow><mml:mi>M</mml:mi></mml:mrow><mml:mrow><mml:mi>A</mml:mi></mml:mrow></mml:msub></mml:mrow></mml:mrow></mml:math></inline-formula> using the E2E key between <inline-formula><mml:math id="mm7" overflow="scroll"><mml:mrow><mml:mrow><mml:msub><mml:mrow><mml:mi mathvariant="normal">P</mml:mi></mml:mrow><mml:mrow><mml:mi>A</mml:mi></mml:mrow></mml:msub></mml:mrow></mml:mrow></mml:math></inline-formula> and <inline-formula><mml:math id="mm8" overflow="scroll"><mml:mrow><mml:mrow><mml:msub><mml:mrow><mml:mi>S</mml:mi></mml:mrow><mml:mrow><mml:mi>i</mml:mi></mml:mrow></mml:msub></mml:mrow></mml:mrow></mml:math></inline-formula> for <inline-formula><mml:math id="mm9" overflow="scroll"><mml:mrow><mml:mrow><mml:mi>i</mml:mi><mml:mo>=</mml:mo><mml:mn>1</mml:mn><mml:mo>~</mml:mo><mml:mi>n</mml:mi></mml:mrow></mml:mrow></mml:math></inline-formula>) to get <inline-formula><mml:math id="mm10" overflow="scroll"><mml:mrow><mml:mrow><mml:msub><mml:mrow><mml:mi>E</mml:mi><mml:mo>(</mml:mo><mml:msub><mml:mrow><mml:mi>M</mml:mi></mml:mrow><mml:mrow><mml:mi>A</mml:mi></mml:mrow></mml:msub><mml:mo>)</mml:mo></mml:mrow><mml:mrow><mml:msub><mml:mrow><mml:mi>E</mml:mi><mml:mn>2</mml:mn><mml:mi>E</mml:mi></mml:mrow><mml:mrow><mml:msub><mml:mrow><mml:mi>P</mml:mi></mml:mrow><mml:mrow><mml:mi>A</mml:mi></mml:mrow></mml:msub><mml:mo>,</mml:mo><mml:msub><mml:mrow><mml:mi>S</mml:mi></mml:mrow><mml:mrow><mml:mi>i</mml:mi></mml:mrow></mml:msub></mml:mrow></mml:msub></mml:mrow></mml:msub></mml:mrow></mml:mrow></mml:math></inline-formula>, and then re-encrypts each encryption again using the SSL key between <inline-formula><mml:math id="mm11" overflow="scroll"><mml:mrow><mml:mrow><mml:msub><mml:mrow><mml:mi mathvariant="normal">P</mml:mi></mml:mrow><mml:mrow><mml:mi>A</mml:mi></mml:mrow></mml:msub></mml:mrow></mml:mrow></mml:math></inline-formula> and <inline-formula><mml:math id="mm12" overflow="scroll"><mml:mrow><mml:mrow><mml:mi>B</mml:mi></mml:mrow></mml:mrow></mml:math></inline-formula> to get <inline-formula><mml:math id="mm13" overflow="scroll"><mml:mrow><mml:mrow><mml:msup><mml:mi>M</mml:mi><mml:mo>&#8243;</mml:mo></mml:msup><mml:mo>=</mml:mo><mml:msub><mml:mrow><mml:mi>E</mml:mi><mml:mo>(</mml:mo><mml:msub><mml:mrow><mml:mi>E</mml:mi><mml:mo>(</mml:mo><mml:msub><mml:mrow><mml:mi>M</mml:mi></mml:mrow><mml:mrow><mml:mi>A</mml:mi></mml:mrow></mml:msub><mml:mo>)</mml:mo></mml:mrow><mml:mrow><mml:msub><mml:mrow><mml:mi>E</mml:mi><mml:mn>2</mml:mn><mml:mi>E</mml:mi></mml:mrow><mml:mrow><mml:msub><mml:mrow><mml:mi>P</mml:mi></mml:mrow><mml:mrow><mml:mi>A</mml:mi></mml:mrow></mml:msub><mml:mo>,</mml:mo><mml:msub><mml:mrow><mml:mi>S</mml:mi></mml:mrow><mml:mrow><mml:mi>i</mml:mi></mml:mrow></mml:msub></mml:mrow></mml:msub></mml:mrow></mml:msub><mml:mo>)</mml:mo></mml:mrow><mml:mrow><mml:msub><mml:mrow><mml:mi>S</mml:mi><mml:mi>S</mml:mi><mml:mi>L</mml:mi></mml:mrow><mml:mrow><mml:msub><mml:mrow><mml:mi>P</mml:mi></mml:mrow><mml:mrow><mml:mi>A</mml:mi></mml:mrow></mml:msub><mml:mo>,</mml:mo><mml:mi>B</mml:mi></mml:mrow></mml:msub></mml:mrow></mml:msub></mml:mrow></mml:mrow></mml:math></inline-formula>; upon receiving the double-encrypted message <inline-formula><mml:math id="mm14" overflow="scroll"><mml:mrow><mml:mrow><mml:msup><mml:mi>M</mml:mi><mml:mo>&#8243;</mml:mo></mml:msup></mml:mrow></mml:mrow></mml:math></inline-formula>, the broker first decrypts it to get <inline-formula><mml:math id="mm15" overflow="scroll"><mml:mrow><mml:mrow><mml:msub><mml:mrow><mml:mi>E</mml:mi><mml:mo>(</mml:mo><mml:msub><mml:mrow><mml:mi>M</mml:mi></mml:mrow><mml:mrow><mml:mi>A</mml:mi></mml:mrow></mml:msub><mml:mo>)</mml:mo></mml:mrow><mml:mrow><mml:msub><mml:mrow><mml:mi>E</mml:mi><mml:mn>2</mml:mn><mml:mi>E</mml:mi></mml:mrow><mml:mrow><mml:msub><mml:mrow><mml:mi>P</mml:mi></mml:mrow><mml:mrow><mml:mi>A</mml:mi></mml:mrow></mml:msub><mml:mo>,</mml:mo><mml:msub><mml:mrow><mml:mi>S</mml:mi></mml:mrow><mml:mrow><mml:mi>i</mml:mi></mml:mrow></mml:msub></mml:mrow></mml:msub></mml:mrow></mml:msub></mml:mrow></mml:mrow></mml:math></inline-formula>, and then re-encrypts it using the SSL key between it and <inline-formula><mml:math id="mm16" overflow="scroll"><mml:mrow><mml:mrow><mml:msub><mml:mrow><mml:mi>S</mml:mi></mml:mrow><mml:mrow><mml:mi>i</mml:mi></mml:mrow></mml:msub></mml:mrow></mml:mrow></mml:math></inline-formula> to get <inline-formula><mml:math id="mm17" overflow="scroll"><mml:mrow><mml:mrow><mml:msup><mml:mi>M</mml:mi><mml:mrow><mml:mo>&#8243;</mml:mo><mml:mo>&#8242;</mml:mo></mml:mrow></mml:msup><mml:mo>=</mml:mo><mml:msub><mml:mrow><mml:mi>E</mml:mi><mml:mo>(</mml:mo><mml:msub><mml:mrow><mml:mi>E</mml:mi><mml:mo>(</mml:mo><mml:msub><mml:mrow><mml:mi>M</mml:mi></mml:mrow><mml:mrow><mml:mi>A</mml:mi></mml:mrow></mml:msub><mml:mo>)</mml:mo></mml:mrow><mml:mrow><mml:msub><mml:mrow><mml:mi>E</mml:mi><mml:mn>2</mml:mn><mml:mi>E</mml:mi></mml:mrow><mml:mrow><mml:msub><mml:mrow><mml:mi>P</mml:mi></mml:mrow><mml:mrow><mml:mi>A</mml:mi></mml:mrow></mml:msub><mml:mo>,</mml:mo><mml:msub><mml:mrow><mml:mi>S</mml:mi></mml:mrow><mml:mrow><mml:mi>i</mml:mi></mml:mrow></mml:msub></mml:mrow></mml:msub></mml:mrow></mml:msub><mml:mo>)</mml:mo></mml:mrow><mml:mrow><mml:msub><mml:mrow><mml:mi>S</mml:mi><mml:mi>S</mml:mi><mml:mi>L</mml:mi></mml:mrow><mml:mrow><mml:mi>B</mml:mi><mml:mo>,</mml:mo><mml:msub><mml:mrow><mml:mi>S</mml:mi></mml:mrow><mml:mrow><mml:mi>i</mml:mi></mml:mrow></mml:msub></mml:mrow></mml:msub></mml:mrow></mml:msub></mml:mrow></mml:mrow></mml:math></inline-formula>; finally, <inline-formula><mml:math id="mm18" overflow="scroll"><mml:mrow><mml:mrow><mml:msub><mml:mrow><mml:mi>S</mml:mi></mml:mrow><mml:mrow><mml:mi>i</mml:mi></mml:mrow></mml:msub></mml:mrow></mml:mrow></mml:math></inline-formula> decrypts <inline-formula><mml:math id="mm19" overflow="scroll"><mml:mrow><mml:mrow><mml:msup><mml:mi>M</mml:mi><mml:mrow><mml:mo>&#8243;</mml:mo><mml:mo>&#8242;</mml:mo></mml:mrow></mml:msup></mml:mrow></mml:mrow></mml:math></inline-formula> twice to get the plaintext.</p><p>In this conventional MQTT E2E model, we would like to point out two critical weaknesses; one is the double-encryption issue from <inline-formula><mml:math id="mm20" overflow="scroll"><mml:mrow><mml:mrow><mml:msub><mml:mrow><mml:mi mathvariant="normal">P</mml:mi></mml:mrow><mml:mrow><mml:mi>A</mml:mi></mml:mrow></mml:msub></mml:mrow></mml:mrow></mml:math></inline-formula> and <italic toggle="yes">B</italic>, and from <italic toggle="yes">B</italic> to <inline-formula><mml:math id="mm21" overflow="scroll"><mml:mrow><mml:mrow><mml:msub><mml:mrow><mml:mi>S</mml:mi></mml:mrow><mml:mrow><mml:mi>i</mml:mi></mml:mrow></mml:msub></mml:mrow></mml:mrow></mml:math></inline-formula>; the other is the broker-decrypt-re-encrypt overhead, of which the broker <italic toggle="yes">B</italic>, for each MQTT message, decrypts once and re-encrypts again <italic toggle="yes">n</italic> times, which is a huge overhead. The two critical weaknesses undermine the efficiency strengths of conventional MQTT E2E systems.</p><p>In this study, we point out the weaknesses, propose our solutions, evaluate the performance, and prove the security. The rest of this work is organized as follows. <xref rid="sec2-sensors-25-05308" ref-type="sec">Section 2</xref> discusses the related work. <xref rid="sec3-sensors-25-05308" ref-type="sec">Section 3</xref> introduces our efficiency-enhanced MQTT E2E solutions. <xref rid="sec4-sensors-25-05308" ref-type="sec">Section 4</xref> presents our implementation and evaluates the performance. <xref rid="sec5-sensors-25-05308" ref-type="sec">Section 5</xref> analyzes the security and gives a formal security proof. <xref rid="sec6-sensors-25-05308" ref-type="sec">Section 6</xref> states our conclusions and future work.</p></sec><sec id="sec2-sensors-25-05308"><title>2. Related Work</title><p>Most of the existing MQTT security publications, like [<xref rid="B4-sensors-25-05308" ref-type="bibr">4</xref>,<xref rid="B5-sensors-25-05308" ref-type="bibr">5</xref>,<xref rid="B7-sensors-25-05308" ref-type="bibr">7</xref>,<xref rid="B8-sensors-25-05308" ref-type="bibr">8</xref>], tackle the security of MQTT 3.1 and its earlier versions, and only a few, like [<xref rid="B3-sensors-25-05308" ref-type="bibr">3</xref>,<xref rid="B6-sensors-25-05308" ref-type="bibr">6</xref>], focus on MQTT 5.0. MQTT 5.0 was released in 2019; its main enhancements include enhanced authentication, user property, client&#8211;server interaction, user data, etc., to provide more flexibility in designing customized functions and security supports; therefore, it is much more convenient to design and implement customized functions like authentication, key agreement, publisher&#8211;subscriber interaction, etc.</p><p>Due to MQTT&#8217;s publisher&#8211;broker&#8211;subscriber architecture, a broker acts as a message forwarder between a publisher and its subscribers, which facilitates the broker&#8217;s capacity to peek at the message contents. This would be a serious privacy threat, especially when the clients and the broker do not belong to the same authority. To address this weakness, some works [<xref rid="B3-sensors-25-05308" ref-type="bibr">3</xref>,<xref rid="B4-sensors-25-05308" ref-type="bibr">4</xref>,<xref rid="B5-sensors-25-05308" ref-type="bibr">5</xref>,<xref rid="B6-sensors-25-05308" ref-type="bibr">6</xref>,<xref rid="B7-sensors-25-05308" ref-type="bibr">7</xref>,<xref rid="B8-sensors-25-05308" ref-type="bibr">8</xref>] focus on building a secure E2E channel between publishers and subscribers: the messages from the publisher and its subscribers are encrypted using the E2E channel keys.</p><p>Chien [<xref rid="B3-sensors-25-05308" ref-type="bibr">3</xref>] proposes designing two client-initiated E2E scenarios: one is for the publisher-initiated E2E scenario and the other is the subscriber-initiated E2E scenario. Mektoubi et al.&#8217;s E2E solution [<xref rid="B7-sensors-25-05308" ref-type="bibr">7</xref>] adopts the topic certificate, of which the corresponding public key is used to encrypt the messages for the topic while the private key is used to decrypt the encryptions. This approach demands a huge overhead from the clients, and the private key distribution raises a challenge.</p><p>In the MQTLS scheme [<xref rid="B4-sensors-25-05308" ref-type="bibr">4</xref>], a publisher initiates its E2E key distribution using the publisher&#8217;s&#8211;subscriber&#8217;s ephemeral Diffie&#8211;Hellman session keys, and OpenSSL-based extensions are used to facilitate the E2E topic key distribution. However, their extension implementations do not consider MQTT 5.0 compatibility. Efficiency improvement using a broker-based group key is not applied. Neither the double-encryption issue nor the decrypt-re-encrypt overhead is considered. Their E2E channel establishment is not publisher&#8211;subscriber decoupling, either.</p><p>SEEMQTT&#8217;s E2E scheme [<xref rid="B5-sensors-25-05308" ref-type="bibr">5</xref>], based on the secret sharing mechanism, allows a publisher to delegate its decryption authority to a pool of key stores. Those designated subscribers contact the pool of key stores, get verification, and then recover the decryption key. This solution lets the publisher delegate its authority to verify the subscribers to a pool of key stores, which results in lots of extra overhead.</p><p>Chein et al. [<xref rid="B6-sensors-25-05308" ref-type="bibr">6</xref>] design, implement, and evaluate the performance of their MQTT E2E scheme for MQTT 5.0; The evaluation confirms that building an E2E channel between a publisher and a subscriber only adds non-significant connection latency.</p><p>Wang and Chien [<xref rid="B8-sensors-25-05308" ref-type="bibr">8</xref>], based on the MQTT E2E channel, improve the security and the efficiency of the MQTT over the air (OTA) updating mechanism. However, the double-encryption issue is not addressed.</p><p>In addition to the above schemes, there are some schemes related to our broker-based E2E schemes. Eugster et al. [<xref rid="B9-sensors-25-05308" ref-type="bibr">9</xref>] focus on discussing the decoupling properties in terms of space, time, and synchronization for those publish/subscribe interaction schemes. Regarding the decoupling feature of MQTT, we would like to categorize it into two situations. One is the publisher&#8211;subscriber E2E-connection decoupling which means that, during the publisher&#8211;subscriber E2E channel building process, the two entities need not interact with each other. The other one is message-forwarding decoupling, which means that, when a publisher/subscriber publishes/receives a message, they do not need to be aware or interact with each other. In these senses, the models we discuss and propose in this study satisfy the message-forwarding decoupling but not the publisher&#8211;subscriber E2E-connection decoupling.</p><p>Now we briefly introduce the potentials/supports of facilitating some coupling designs in MQTT 5.0. MQTT 5.0 supports the enhanced authentication framework (EAF) and User properties, where user properties are user-defined meta shared among publishers, brokers, and subscribers. EAF contains CONNECT, DISCONNECT, and AUTH API; in these APIs, the new fields auth_id, auth_data, and User properties facilitate the customized security designs and the conventional client&#8211;server interactions between a publisher and a subscriber in the connection phase. By subscribing to the designated topics and properly setting the fields&#8212;the response topic and the correlation data&#8212;a publisher and a subscriber can perform conventional client&#8211;server interaction between them. The above introduction implies that MQTT 5.0 facilitates the publisher&#8211;subscriber E2E-connection coupling and publisher&#8211;subscriber message coupling. Interested readers are referred to [<xref rid="B2-sensors-25-05308" ref-type="bibr">2</xref>,<xref rid="B10-sensors-25-05308" ref-type="bibr">10</xref>,<xref rid="B11-sensors-25-05308" ref-type="bibr">11</xref>,<xref rid="B12-sensors-25-05308" ref-type="bibr">12</xref>,<xref rid="B13-sensors-25-05308" ref-type="bibr">13</xref>] for detailed introductions and to [<xref rid="B6-sensors-25-05308" ref-type="bibr">6</xref>] for the implementation examples. That is, MQTT 5.0 facilitates the support of both decoupling designs and coupling designs; the choice depends on the application requirements.</p><p>Buccafurri et al. [<xref rid="B14-sensors-25-05308" ref-type="bibr">14</xref>] systematically examine the applicability of existent mechanisms for ensuring the MQTT E2E flow integrity; they discuss the MQTT E2E flow integrity in terms of formally-defined properties like Completeness, Correctness, and Liveness. Their MQTT-I scheme combines the message-digest hashing, multiple-topic Merkle hash tree, and round-based signature/verification to amortize the extra signature/verification cost. However, we notice two critical differences between MQTT-I E2E solutions and the MQTT broker-based E2E schemes we focus on here. First, we are concerned with E2E privacy and data integrity protection against a curious broker, but MQTT-I concerns the flow integrity (the integrity property is different from others), but not the privacy. Many works like [<xref rid="B3-sensors-25-05308" ref-type="bibr">3</xref>,<xref rid="B4-sensors-25-05308" ref-type="bibr">4</xref>,<xref rid="B5-sensors-25-05308" ref-type="bibr">5</xref>,<xref rid="B6-sensors-25-05308" ref-type="bibr">6</xref>,<xref rid="B7-sensors-25-05308" ref-type="bibr">7</xref>,<xref rid="B8-sensors-25-05308" ref-type="bibr">8</xref>] have highlighted the importance of privacy protection against a curious broker. Second, in their simulations and evaluation [<xref rid="B14-sensors-25-05308" ref-type="bibr">14</xref>], they do not consider the performance impact of increasing the number of clients on the performance of publisher/broker/subscriber; however, many existing studies have confirmed that the increasing number of clients really has great impact on the overall performance, especially when the customized broker has some extra overheads.</p><p>MQTT-SN (MQTT for sensor networks) [<xref rid="B15-sensors-25-05308" ref-type="bibr">15</xref>] is a more lightweight variant of MQTT; it adjusts MQTT&#8217;s features to fit those scenarios and environments where the communications are more restricted. Park and Nam [<xref rid="B16-sensors-25-05308" ref-type="bibr">16</xref>] concern the E2E security (privacy and integrity) against a curious broker for MQTT-SN; they employ entity certificates, topic certificates, and public/private keys to facilitate the establishment of the session keys between entities. Their ideas are applicable to the MQTT systems, but they do not concern the double encryption issue and the decrypt then re-encrypt issue.</p><p>Singh et al. [<xref rid="B17-sensors-25-05308" ref-type="bibr">17</xref>] augment existing MQTT protocols with key/ciphertext policy-attribute-based encryption (KP/CP-ABE) [<xref rid="B18-sensors-25-05308" ref-type="bibr">18</xref>,<xref rid="B19-sensors-25-05308" ref-type="bibr">19</xref>] for securing MQTT applications in sensor network environments. This attribute-based, encryption-based (ABE-based) approach can be applied and extended to secure both client&#8211;broker channels and publisher&#8211;subscriber channels; however, this approach has the key weaknesses of poor performance and scalability, especially when the number of attributes increases. This weakness should be seriously tackled as MQTT is targeted for IoT systems where the number of clients and the number of topics are scalable.</p><p>In a short summary, even though there are several MQTT E2E schemes proposed, implemented, and evaluated, we notice that they do not focus on the double-encryption issue and the impact of the broker-decrypt-re-encrypt overhead, and do not systematically explore potential approaches to tackle these challenges while preserving the desirable security properties. Therefore, we will discuss and tackle these challenges.</p><p>While MQTT remains one of the most widely adopted messaging protocols in IoT due to its lightweight publish/subscribe model and TCP-based reliability, several alternative protocols have been developed to address specific deployment scenarios. AMQP (advanced message queuing protocol) [<xref rid="B20-sensors-25-05308" ref-type="bibr">20</xref>] offers robust messaging features such as queuing, routing, and transaction support, making it more suitable for enterprise environments rather than resource-constrained devices. Meanwhile, CoAP over DTLS [<xref rid="B21-sensors-25-05308" ref-type="bibr">21</xref>] provides a RESTful communication model optimized for constrained nodes and networks, using UDP and DTLS to achieve lightweight, secure, request/response messaging. The data distribution service (DDS) [<xref rid="B22-sensors-25-05308" ref-type="bibr">22</xref>] for real-time systems is an object management group (OMG) machine-to-machine middleware standard that aims to enable dependable, high-performance, interoperable, real-time, scalable data exchanges using a publish&#8211;subscribe pattern.</p><p>Some other studies are related in a broader sense. Ciphertext matching like [<xref rid="B23-sensors-25-05308" ref-type="bibr">23</xref>] could be applied to a general sub/subsystem to ensure the event privacy and the subscription privacy against a curious broker; even though MQTT E2E study also concern the privacy of message contents against a curious broker, both the subscribed topics and the topic of a published message are explicitly sent to the broker in MQTT systems.</p><p>Brokerless extensions eliminate the central broker by enabling direct peer-to-peer message routing. One approach is multicast-based MQTT over software-defined networks like Park et al.&#8217;s DM-MQTT [<xref rid="B24-sensors-25-05308" ref-type="bibr">24</xref>]; DM-MQTT reduces data transfer delays by establishing bidirectional SDN (software defined networking) multicast trees between the publishers and the subscribers by bypassing the centralized broker. Shahriet et al. [<xref rid="B25-sensors-25-05308" ref-type="bibr">25</xref>], based on SDN, further apply MQTT 5.0&#8217;s User properties to specify the real-time requirements to instantiate corresponding network reservations to achieve the desirable real-time transmissions. ZeroMQ [<xref rid="B26-sensors-25-05308" ref-type="bibr">26</xref>] is a lightweight, brokerless messaging library offering direct pub/sub, request/reply, and pipeline patterns with low latency. Our approach aims at improving efficiency by adjusting the MQTT broker-based E2E models; while the brokerless approach adopts transmission reservation facilities (like SDN) to improve the transmission latency. These two approaches are complementary to each other; the idea from either approach can be combined with the other to improve efficiency further.</p><p>NIST SP 800-207 &#8220;Zero Trust Architecture (ZTA)&#8221; [<xref rid="B27-sensors-25-05308" ref-type="bibr">27</xref>] enforces a &#8220;never trust, always verify&#8221; approach to minimize the risk of unauthorized access and lateral movement within networks by continuously validating identities, devices, and contextual signals before granting access to resources. The key functions/components include policy decision point (PDP), policy enforcement point (PEP), resource access policies, and identity management. It provides a complete guide for security system designs and implementations.</p><p>The above works are all related to IoT protocols, and this paper focuses on MQTT broker-based E2E systems&#8217; security and efficiency. Therefore, we will only discuss MQTT and MQTT-SN in the rest of this paper. We systematically examine the efficiency of the conventional MQTT broker-based E2E model&#8217;s security properties and efficiencies, and explore potential approaches to enhance the efficiencies while preserving the desirable security properties.</p><p>There exist some popular mechanisms which formally analyze the security properties of security protocols. The first category of these mechanisms is based on some mathematical reduction proof in the specified formal models. The second category includes those mechanisms [<xref rid="B28-sensors-25-05308" ref-type="bibr">28</xref>,<xref rid="B29-sensors-25-05308" ref-type="bibr">29</xref>,<xref rid="B30-sensors-25-05308" ref-type="bibr">30</xref>,<xref rid="B31-sensors-25-05308" ref-type="bibr">31</xref>,<xref rid="B32-sensors-25-05308" ref-type="bibr">32</xref>,<xref rid="B33-sensors-25-05308" ref-type="bibr">33</xref>,<xref rid="B34-sensors-25-05308" ref-type="bibr">34</xref>,<xref rid="B35-sensors-25-05308" ref-type="bibr">35</xref>,<xref rid="B36-sensors-25-05308" ref-type="bibr">36</xref>] that provide software tools that formally execute logic reasoning on formal specifications of security protocols. Both Burrows&#8211;Abadi&#8211;Needham (BAN) logic [<xref rid="B28-sensors-25-05308" ref-type="bibr">28</xref>] and the AVISPA [<xref rid="B29-sensors-25-05308" ref-type="bibr">29</xref>,<xref rid="B30-sensors-25-05308" ref-type="bibr">30</xref>] are two popular formal tools of the second category. The BAN logic is a set of rules for defining and analyzing information exchange protocols, and has been successfully applied to protocol conformance testing; however, there are many reports like [<xref rid="B32-sensors-25-05308" ref-type="bibr">32</xref>,<xref rid="B33-sensors-25-05308" ref-type="bibr">33</xref>] on the limitations, weaknesses, and failures of the BAN logic. On the contrary, the AVISPA is designed to simulate and verify cryptographic protocols formally; it provides the SPAN protocol simulation [<xref rid="B34-sensors-25-05308" ref-type="bibr">34</xref>] to examine the interaction flows formally; it contains various verification tools (like OFMC [<xref rid="B35-sensors-25-05308" ref-type="bibr">35</xref>], ATSE) to validate the security goals formally. The high-level protocol specification language (HLPSL) [<xref rid="B36-sensors-25-05308" ref-type="bibr">36</xref>] is the formal language used to formally define the protocol role, environment, and security goals in AVISPA. Even though the AVISPA and its tools still have some limitations (for example, the limited support of some algebra calculations), they provide formal specifications of the protocols, of the simulated environments, and of the security goals, which can better capture the security semantics. We, therefore, adopt the AVISPA to verify our schemes.</p></sec><sec id="sec3-sensors-25-05308"><title>3. Efficiency-Enhanced MQTT E2E Architecture (Model)</title><p>Before proposing our efficiency-enhanced MQTT E2E architecture (E-MQTT-E2EA), we review the key features of the conventional MQTT broker-based E2E mechanisms, and then introduce the performance metrics for comparisons.</p><sec id="sec3dot1-sensors-25-05308"><title>3.1. Threat Model and Assumptions</title><p>Here, we define the threat model and the assumptions for the rest of this paper. In our model, the broker is honest but curious, and the clients might be compromised. An honest but curious broker would honestly execute the protocol, but would peek at the content for their own benefit. A compromised client could impersonate other entities, and replay/modify/intercept/forge the messages.</p><p>We assume the system has implemented some kind of intrusion detection system to detect and identify a compromised client. We also assume that some proper policy enforcement functions and access controls have been implemented on the broker such that granting the publish/subscribe/connect requests would follow the policies defined for that client.</p></sec><sec id="sec3dot2-sensors-25-05308"><title>3.2. Performance Challenges of Conventional MQTT Broker-Based E2E Mechanisms</title><p>Here, we define the conventional MQTT broker-based E2E schemes, be those MQTT secure-channel building schemes which simultaneously achieve the two functions: (1) the client&#8211;broker channel provides mutual authentication and privacy protection (for example, TLS aims at providing secure client&#8211;broker channels); (2) a publisher builds E2E channels with its subscribers, and the channel provides mutual authentication and privacy protection. Here, the E2E channel building is coupled in the sense that the publisher and the subscriber interact with each other via a broker. Regarding these conventional MQTT broker-based E2E schemes, they inherit the following issues. To simplify the notations, we do not differentiate the terms MQTT broker-based E2E and MQTT E2E for the rest of this paper, when the semantics are clear.</p><list list-type="order"><list-item><p>The double-encryption issue. When a publisher publishes a message, it encrypts the message first using the E2E channel key and then re-encrypts the ciphertext again using the publisher&#8211;broker channel key. The same issue happens at the broker-subscriber channel.</p></list-item><list-item><p>The broker-decrypt-re-encrypt overhead. In the conventional MQTT architectures, a broker needs to decrypt a ciphertext from a publisher using the publisher&#8211;broker-channel key, and then re-encrypts the plaintext using its broker&#8211;subscriber channel key. If there are many subscribers for the message, it demands lots of re-encryption overhead. This overhead might seem unavoidable as the broker needs to protect the privacy on the broker&#8211;subscriber channel. But, it could be improved as the group of subscribers corresponding to the same topic could use the same group key, and, if the MQTT payload in the E2E channel has been encrypted, the re-encryption could be eliminated.</p></list-item></list><p>Regarding the performance of an MQTT E2E mechanism, we are concerned about both the security support and efficiency.</p><list list-type="order"><list-item><p>The E2E channel security, which includes the authentication of the participating entities and the privacy/integrity of the message.</p></list-item><list-item><p>The privacy, authentication, and integrity of the data between a client and a broker.</p></list-item><list-item><p>The publisher&#8211;broker channel overhead.</p></list-item><list-item><p>The broker&#8211;subscriber channel overhead.</p></list-item><list-item><p>The broker overhead.</p></list-item></list></sec><sec id="sec3dot3-sensors-25-05308"><title>3.3. High-Level Designs of MQTT E2E Mechanisms</title><p>Before discussing our ideas, we introduce the notation in <xref rid="sensors-25-05308-t001" ref-type="table">Table 1</xref>.</p><p>Since we are concerned with the performance impact of the MQTT E2E architecture, we explore several ideas for improving the efficiency and evaluate their performance. <xref rid="sensors-25-05308-f002" ref-type="fig">Figure 2</xref> shows the four channel protection models in the MQTT E2E architecture. All four MQTT E2E models support both authentication and integrity protection on the publisher&#8211;subscriber E2E channel, as all MQTT E2E models aim at providing authenticity and integrity for the message transmissions in the E2E channel. But, they differ in the client&#8211;broker channel security designs and the broker&#8211;subscriber channel key selection.</p><p>Because this study focuses on comparing the efficiency improvement by simplifying the client&#8211;broker channels and using a group key in some models, we, therefore, simplify the group key being chosen and distributed by the sender (a publisher in the E2E channel for the same topic or the broker in the broker-subscriber channels for the same topic) to simplify the presentation and the prototype implementations.</p><p>In such a setting, when a publisher P publishes a message for a topic (say <inline-formula><mml:math id="mm22" overflow="scroll"><mml:mrow><mml:mrow><mml:msub><mml:mrow><mml:mi>T</mml:mi><mml:mi>o</mml:mi><mml:mi>p</mml:mi><mml:mi>i</mml:mi><mml:mi>c</mml:mi></mml:mrow><mml:mrow><mml:mi>P</mml:mi></mml:mrow></mml:msub><mml:mo>)</mml:mo></mml:mrow></mml:mrow></mml:math></inline-formula>, P chooses a group key <inline-formula><mml:math id="mm23" overflow="scroll"><mml:mrow><mml:mrow><mml:msub><mml:mrow><mml:mi>G</mml:mi><mml:mi>K</mml:mi></mml:mrow><mml:mrow><mml:mi>P</mml:mi></mml:mrow></mml:msub></mml:mrow></mml:mrow></mml:math></inline-formula> and distributes the key during the E2E channel establishment phase. Because our E2E channel establishment phase does not decouple the publisher and the subscriber (it corresponds to the subscriber connect block in <xref rid="sensors-25-05308-f003" ref-type="fig">Figure 3</xref>), the publisher has the opportunity to distribute the encrypted group key (encrypted by the publisher&#8211;subscriber Diffie&#8211;Hellman session key). Likewise, the broker can choose and distribute the broker&#8211;subscriber group key in the subscriber connect phase.</p><p>Regarding the dynamic membership of publisher/subscriber and the dynamic connect/disconnect, one solution is described here. The publisher could periodically choose a new group key and distribute it during the subscriber E2E connect phase. This applies to the broker&#8217;s choosing and distributing its broker&#8211;subscriber group key. When the broker detects and identifies a compromised subscriber (or publisher), it rejects its connection.</p><p>Another approach to determine and update the group key is borrowing Park-Nam&#8217;s ideas [<xref rid="B16-sensors-25-05308" ref-type="bibr">16</xref>]. In Park-Nam&#8217;s work [<xref rid="B16-sensors-25-05308" ref-type="bibr">16</xref>], two kinds of certificates (entity certificates and topic certificates) and the corresponding private keys are distributed to the corresponding entities. The CDHP-based group keys could be derived using the corresponding public/private keys and some necessary data to differentiate each session. In such a setting, the group key update is by renewing/distributing the corresponding topic certificate and the public/private key to the authorized entities. Interested readers are referred to Park-Nam&#8217;s work [<xref rid="B16-sensors-25-05308" ref-type="bibr">16</xref>].</p><p>Scheme 1-<inline-formula><mml:math id="mm24" overflow="scroll"><mml:mrow><mml:mrow><mml:msub><mml:mrow><mml:mi>C</mml:mi><mml:mi>H</mml:mi><mml:mi>L</mml:mi></mml:mrow><mml:mrow><mml:mi>P</mml:mi><mml:msub><mml:mrow><mml:mi>S</mml:mi></mml:mrow><mml:mrow><mml:mi>i</mml:mi></mml:mrow></mml:msub></mml:mrow></mml:msub><mml:mi>E</mml:mi><mml:mi>I</mml:mi><mml:mo>_</mml:mo><mml:msub><mml:mrow><mml:mi>C</mml:mi><mml:mi>H</mml:mi><mml:mi>L</mml:mi></mml:mrow><mml:mrow><mml:mi>C</mml:mi><mml:mi>B</mml:mi></mml:mrow></mml:msub><mml:mi>N</mml:mi><mml:mi>O</mml:mi><mml:mi>E</mml:mi><mml:mi>I</mml:mi></mml:mrow></mml:mrow></mml:math></inline-formula>: (1) the E2E channel <inline-formula><mml:math id="mm25" overflow="scroll"><mml:mrow><mml:mrow><mml:msub><mml:mrow><mml:mi>C</mml:mi><mml:mi>H</mml:mi><mml:mi>L</mml:mi></mml:mrow><mml:mrow><mml:mi>P</mml:mi><mml:msub><mml:mrow><mml:mi>S</mml:mi></mml:mrow><mml:mrow><mml:mi>i</mml:mi></mml:mrow></mml:msub></mml:mrow></mml:msub></mml:mrow></mml:mrow></mml:math></inline-formula> with encryption and integrity check using <inline-formula><mml:math id="mm26" overflow="scroll"><mml:mrow><mml:mrow><mml:msub><mml:mrow><mml:mi>K</mml:mi><mml:mi>E</mml:mi><mml:mn>2</mml:mn><mml:mi>E</mml:mi></mml:mrow><mml:mrow><mml:mi>P</mml:mi><mml:msub><mml:mrow><mml:mi>S</mml:mi></mml:mrow><mml:mrow><mml:mi>i</mml:mi></mml:mrow></mml:msub></mml:mrow></mml:msub></mml:mrow></mml:mrow></mml:math></inline-formula>, where the <inline-formula><mml:math id="mm27" overflow="scroll"><mml:mrow><mml:mrow><mml:msub><mml:mrow><mml:mi>K</mml:mi><mml:mi>E</mml:mi><mml:mn>2</mml:mn><mml:mi>E</mml:mi></mml:mrow><mml:mrow><mml:mi>P</mml:mi><mml:msub><mml:mrow><mml:mi>S</mml:mi></mml:mrow><mml:mrow><mml:mi>i</mml:mi></mml:mrow></mml:msub></mml:mrow></mml:msub></mml:mrow></mml:mrow></mml:math></inline-formula> key is set as the individual E2E session key between P and <inline-formula><mml:math id="mm28" overflow="scroll"><mml:mrow><mml:mrow><mml:msub><mml:mrow><mml:mi>S</mml:mi></mml:mrow><mml:mrow><mml:mi>i</mml:mi></mml:mrow></mml:msub></mml:mrow></mml:mrow></mml:math></inline-formula>; (2) the channel <inline-formula><mml:math id="mm29" overflow="scroll"><mml:mrow><mml:mrow><mml:msub><mml:mrow><mml:mi>C</mml:mi><mml:mi>H</mml:mi><mml:mi>L</mml:mi></mml:mrow><mml:mrow><mml:mi>P</mml:mi><mml:mi>B</mml:mi></mml:mrow></mml:msub></mml:mrow></mml:mrow></mml:math></inline-formula> without encryption and integrity; (3) the channel <inline-formula><mml:math id="mm30" overflow="scroll"><mml:mrow><mml:mrow><mml:msub><mml:mrow><mml:mi>C</mml:mi><mml:mi>H</mml:mi><mml:mi>L</mml:mi></mml:mrow><mml:mrow><mml:mi>B</mml:mi><mml:msub><mml:mrow><mml:mi>S</mml:mi></mml:mrow><mml:mrow><mml:mi>i</mml:mi></mml:mrow></mml:msub></mml:mrow></mml:msub></mml:mrow></mml:mrow></mml:math></inline-formula> without encryption and integrity. This corresponds to the MQTT E2E model without enabling a secure client-broker channel.</p><p>Scheme 2-<inline-formula><mml:math id="mm31" overflow="scroll"><mml:mrow><mml:mrow><mml:msub><mml:mrow><mml:mi>C</mml:mi><mml:mi>H</mml:mi><mml:mi>L</mml:mi></mml:mrow><mml:mrow><mml:mi>P</mml:mi><mml:msub><mml:mrow><mml:mi>S</mml:mi></mml:mrow><mml:mrow><mml:mi>i</mml:mi></mml:mrow></mml:msub></mml:mrow></mml:msub><mml:mi>E</mml:mi><mml:mi>I</mml:mi><mml:mo>_</mml:mo><mml:msub><mml:mrow><mml:mi>C</mml:mi><mml:mi>H</mml:mi><mml:mi>L</mml:mi></mml:mrow><mml:mrow><mml:mi>C</mml:mi><mml:mi>B</mml:mi></mml:mrow></mml:msub><mml:mi>E</mml:mi><mml:mi>I</mml:mi></mml:mrow></mml:mrow></mml:math></inline-formula>: (1) the E2E channel <inline-formula><mml:math id="mm32" overflow="scroll"><mml:mrow><mml:mrow><mml:msub><mml:mrow><mml:mi>C</mml:mi><mml:mi>H</mml:mi><mml:mi>L</mml:mi></mml:mrow><mml:mrow><mml:mi>P</mml:mi><mml:msub><mml:mrow><mml:mi>S</mml:mi></mml:mrow><mml:mrow><mml:mi>i</mml:mi></mml:mrow></mml:msub></mml:mrow></mml:msub></mml:mrow></mml:mrow></mml:math></inline-formula> with encryption and integrity check using <inline-formula><mml:math id="mm33" overflow="scroll"><mml:mrow><mml:mrow><mml:msub><mml:mrow><mml:mi>K</mml:mi><mml:mi>E</mml:mi><mml:mn>2</mml:mn><mml:mi>E</mml:mi></mml:mrow><mml:mrow><mml:mi>P</mml:mi><mml:msub><mml:mrow><mml:mi>S</mml:mi></mml:mrow><mml:mrow><mml:mi>i</mml:mi></mml:mrow></mml:msub></mml:mrow></mml:msub></mml:mrow></mml:mrow></mml:math></inline-formula>, where the <inline-formula><mml:math id="mm34" overflow="scroll"><mml:mrow><mml:mrow><mml:msub><mml:mrow><mml:mi>K</mml:mi><mml:mi>E</mml:mi><mml:mn>2</mml:mn><mml:mi>E</mml:mi></mml:mrow><mml:mrow><mml:mi>P</mml:mi><mml:msub><mml:mrow><mml:mi>S</mml:mi></mml:mrow><mml:mrow><mml:mi>i</mml:mi></mml:mrow></mml:msub></mml:mrow></mml:msub></mml:mrow></mml:mrow></mml:math></inline-formula> key is set as the individual E2E session key between P and <inline-formula><mml:math id="mm35" overflow="scroll"><mml:mrow><mml:mrow><mml:msub><mml:mrow><mml:mi>S</mml:mi></mml:mrow><mml:mrow><mml:mi>i</mml:mi></mml:mrow></mml:msub></mml:mrow></mml:mrow></mml:math></inline-formula>; (2) the channel <inline-formula><mml:math id="mm36" overflow="scroll"><mml:mrow><mml:mrow><mml:msub><mml:mrow><mml:mi>C</mml:mi><mml:mi>H</mml:mi><mml:mi>L</mml:mi></mml:mrow><mml:mrow><mml:mi>P</mml:mi><mml:mi>B</mml:mi></mml:mrow></mml:msub></mml:mrow></mml:mrow></mml:math></inline-formula> with encryption and integrity using the key <inline-formula><mml:math id="mm37" overflow="scroll"><mml:mrow><mml:mrow><mml:msub><mml:mrow><mml:mi>S</mml:mi><mml:mi>K</mml:mi></mml:mrow><mml:mrow><mml:mi>P</mml:mi><mml:mi>B</mml:mi></mml:mrow></mml:msub></mml:mrow></mml:mrow></mml:math></inline-formula>, where the key is the individual session key; (3) the channel <inline-formula><mml:math id="mm38" overflow="scroll"><mml:mrow><mml:mrow><mml:msub><mml:mrow><mml:mi>C</mml:mi><mml:mi>H</mml:mi><mml:mi>L</mml:mi></mml:mrow><mml:mrow><mml:mi>B</mml:mi><mml:msub><mml:mrow><mml:mi>S</mml:mi></mml:mrow><mml:mrow><mml:mi>i</mml:mi></mml:mrow></mml:msub></mml:mrow></mml:msub></mml:mrow></mml:mrow></mml:math></inline-formula> with encryption and integrity using the key <inline-formula><mml:math id="mm39" overflow="scroll"><mml:mrow><mml:mrow><mml:msub><mml:mrow><mml:mi>S</mml:mi><mml:mi>K</mml:mi></mml:mrow><mml:mrow><mml:mi>B</mml:mi><mml:msub><mml:mrow><mml:mi>S</mml:mi></mml:mrow><mml:mrow><mml:mi>i</mml:mi></mml:mrow></mml:msub></mml:mrow></mml:msub></mml:mrow></mml:mrow></mml:math></inline-formula>, where the key is the individual session key. This corresponds to the conventional MQTT E2E model with a secure client&#8211;broker channel (like MQTT E2E with TLS client-broker channel).</p><p>Scheme 3-<inline-formula><mml:math id="mm40" overflow="scroll"><mml:mrow><mml:mrow><mml:msub><mml:mrow><mml:mi>C</mml:mi><mml:mi>H</mml:mi><mml:mi>L</mml:mi></mml:mrow><mml:mrow><mml:mi>P</mml:mi><mml:msub><mml:mrow><mml:mi>S</mml:mi></mml:mrow><mml:mrow><mml:mi>i</mml:mi></mml:mrow></mml:msub></mml:mrow></mml:msub><mml:mi>E</mml:mi><mml:mi>I</mml:mi><mml:mi>G</mml:mi><mml:mo>_</mml:mo><mml:msub><mml:mrow><mml:mi>C</mml:mi><mml:mi>H</mml:mi><mml:mi>L</mml:mi></mml:mrow><mml:mrow><mml:mi>B</mml:mi><mml:mi>S</mml:mi></mml:mrow></mml:msub><mml:mi>E</mml:mi><mml:mi>I</mml:mi><mml:mi>G</mml:mi></mml:mrow></mml:mrow></mml:math></inline-formula>: (1) the E2E channel <inline-formula><mml:math id="mm41" overflow="scroll"><mml:mrow><mml:mrow><mml:msub><mml:mrow><mml:mi>C</mml:mi><mml:mi>H</mml:mi><mml:mi>L</mml:mi></mml:mrow><mml:mrow><mml:mi>P</mml:mi><mml:msub><mml:mrow><mml:mi>S</mml:mi></mml:mrow><mml:mrow><mml:mi>i</mml:mi></mml:mrow></mml:msub></mml:mrow></mml:msub></mml:mrow></mml:mrow></mml:math></inline-formula> with encryption and integrity check using <inline-formula><mml:math id="mm42" overflow="scroll"><mml:mrow><mml:mrow><mml:msub><mml:mrow><mml:mi>K</mml:mi><mml:mi>E</mml:mi><mml:mn>2</mml:mn><mml:mi>E</mml:mi></mml:mrow><mml:mrow><mml:mi>P</mml:mi><mml:msub><mml:mrow><mml:mi>S</mml:mi></mml:mrow><mml:mrow><mml:mi>i</mml:mi></mml:mrow></mml:msub></mml:mrow></mml:msub><mml:mo>=</mml:mo><mml:msub><mml:mrow><mml:mi>G</mml:mi><mml:mi>K</mml:mi></mml:mrow><mml:mrow><mml:mi>P</mml:mi></mml:mrow></mml:msub></mml:mrow></mml:mrow></mml:math></inline-formula>, where the <inline-formula><mml:math id="mm43" overflow="scroll"><mml:mrow><mml:mrow><mml:msub><mml:mrow><mml:mi>K</mml:mi><mml:mi>E</mml:mi><mml:mn>2</mml:mn><mml:mi>E</mml:mi></mml:mrow><mml:mrow><mml:mi>P</mml:mi><mml:msub><mml:mrow><mml:mi>S</mml:mi></mml:mrow><mml:mrow><mml:mi>i</mml:mi></mml:mrow></mml:msub></mml:mrow></mml:msub></mml:mrow></mml:mrow></mml:math></inline-formula> key is set as the group key chosen and distributed by P; (2) the channel <inline-formula><mml:math id="mm44" overflow="scroll"><mml:mrow><mml:mrow><mml:msub><mml:mrow><mml:mi>C</mml:mi><mml:mi>H</mml:mi><mml:mi>L</mml:mi></mml:mrow><mml:mrow><mml:mi>P</mml:mi><mml:mi>B</mml:mi></mml:mrow></mml:msub></mml:mrow></mml:mrow></mml:math></inline-formula> with encryption and integrity using the key <inline-formula><mml:math id="mm45" overflow="scroll"><mml:mrow><mml:mrow><mml:msub><mml:mrow><mml:mi>S</mml:mi><mml:mi>K</mml:mi></mml:mrow><mml:mrow><mml:mi>P</mml:mi><mml:mi>B</mml:mi></mml:mrow></mml:msub></mml:mrow></mml:mrow></mml:math></inline-formula>, where the key is the individual session key; (3) the channel <inline-formula><mml:math id="mm46" overflow="scroll"><mml:mrow><mml:mrow><mml:msub><mml:mrow><mml:mi>C</mml:mi><mml:mi>H</mml:mi><mml:mi>L</mml:mi></mml:mrow><mml:mrow><mml:mi>B</mml:mi><mml:msub><mml:mrow><mml:mi>S</mml:mi></mml:mrow><mml:mrow><mml:mi>i</mml:mi></mml:mrow></mml:msub></mml:mrow></mml:msub></mml:mrow></mml:mrow></mml:math></inline-formula> with encryption and integrity using the key <inline-formula><mml:math id="mm47" overflow="scroll"><mml:mrow><mml:mrow><mml:msub><mml:mrow><mml:mi>S</mml:mi><mml:mi>K</mml:mi></mml:mrow><mml:mrow><mml:mi>B</mml:mi><mml:msub><mml:mrow><mml:mi>S</mml:mi></mml:mrow><mml:mrow><mml:mi>i</mml:mi></mml:mrow></mml:msub></mml:mrow></mml:msub><mml:mo>=</mml:mo><mml:msub><mml:mrow><mml:mi>G</mml:mi><mml:mi>K</mml:mi></mml:mrow><mml:mrow><mml:mi>B</mml:mi></mml:mrow></mml:msub></mml:mrow></mml:mrow></mml:math></inline-formula>, where the key is the group key chosen and distributed by <italic toggle="yes">B</italic>. This new model tries to improve the conventional MQTT E2E model performance using the mechanism: it replaces the individual broker-subscriber session key with the corresponding group key, such that the broker can encrypt once for all the subscribers for the same topic.</p><p>Scheme 4-<inline-formula><mml:math id="mm48" overflow="scroll"><mml:mrow><mml:mrow><mml:msub><mml:mrow><mml:mi>C</mml:mi><mml:mi>H</mml:mi><mml:mi>L</mml:mi></mml:mrow><mml:mrow><mml:mi>P</mml:mi><mml:msub><mml:mrow><mml:mi>S</mml:mi></mml:mrow><mml:mrow><mml:mi>i</mml:mi></mml:mrow></mml:msub></mml:mrow></mml:msub><mml:mi>E</mml:mi><mml:mi>I</mml:mi><mml:mi>G</mml:mi><mml:mo>_</mml:mo><mml:msub><mml:mrow><mml:mi>C</mml:mi><mml:mi>H</mml:mi><mml:mi>L</mml:mi></mml:mrow><mml:mrow><mml:mi>B</mml:mi><mml:mi>S</mml:mi></mml:mrow></mml:msub><mml:mi>I</mml:mi><mml:mi>G</mml:mi></mml:mrow></mml:mrow></mml:math></inline-formula>: (1) the E2E channel <inline-formula><mml:math id="mm49" overflow="scroll"><mml:mrow><mml:mrow><mml:msub><mml:mrow><mml:mi>C</mml:mi><mml:mi>H</mml:mi><mml:mi>L</mml:mi></mml:mrow><mml:mrow><mml:mi>P</mml:mi><mml:msub><mml:mrow><mml:mi>S</mml:mi></mml:mrow><mml:mrow><mml:mi>i</mml:mi></mml:mrow></mml:msub></mml:mrow></mml:msub></mml:mrow></mml:mrow></mml:math></inline-formula> with encryption and integrity check using <inline-formula><mml:math id="mm50" overflow="scroll"><mml:mrow><mml:mrow><mml:msub><mml:mrow><mml:mi>K</mml:mi><mml:mi>E</mml:mi><mml:mn>2</mml:mn><mml:mi>E</mml:mi></mml:mrow><mml:mrow><mml:mi>P</mml:mi><mml:msub><mml:mrow><mml:mi>S</mml:mi></mml:mrow><mml:mrow><mml:mi>i</mml:mi></mml:mrow></mml:msub></mml:mrow></mml:msub><mml:mo>=</mml:mo><mml:msub><mml:mrow><mml:mi>G</mml:mi><mml:mi>K</mml:mi></mml:mrow><mml:mrow><mml:mi>P</mml:mi></mml:mrow></mml:msub></mml:mrow></mml:mrow></mml:math></inline-formula>, where the <inline-formula><mml:math id="mm51" overflow="scroll"><mml:mrow><mml:mrow><mml:msub><mml:mrow><mml:mi>K</mml:mi><mml:mi>E</mml:mi><mml:mn>2</mml:mn><mml:mi>E</mml:mi></mml:mrow><mml:mrow><mml:mi>P</mml:mi><mml:msub><mml:mrow><mml:mi>S</mml:mi></mml:mrow><mml:mrow><mml:mi>i</mml:mi></mml:mrow></mml:msub></mml:mrow></mml:msub></mml:mrow></mml:mrow></mml:math></inline-formula> key is set as the group key chosen and distributed by P; (2) the channel <inline-formula><mml:math id="mm52" overflow="scroll"><mml:mrow><mml:mrow><mml:msub><mml:mrow><mml:mi>C</mml:mi><mml:mi>H</mml:mi><mml:mi>L</mml:mi></mml:mrow><mml:mrow><mml:mi>P</mml:mi><mml:mi>B</mml:mi></mml:mrow></mml:msub></mml:mrow></mml:mrow></mml:math></inline-formula> with the integrity only using the key <inline-formula><mml:math id="mm53" overflow="scroll"><mml:mrow><mml:mrow><mml:msub><mml:mrow><mml:mi>S</mml:mi><mml:mi>K</mml:mi></mml:mrow><mml:mrow><mml:mi>P</mml:mi><mml:mi>B</mml:mi></mml:mrow></mml:msub></mml:mrow></mml:mrow></mml:math></inline-formula>, where the key is the individual session key; (3) the channel <inline-formula><mml:math id="mm54" overflow="scroll"><mml:mrow><mml:mrow><mml:msub><mml:mrow><mml:mi>C</mml:mi><mml:mi>H</mml:mi><mml:mi>L</mml:mi></mml:mrow><mml:mrow><mml:mi>B</mml:mi><mml:msub><mml:mrow><mml:mi>S</mml:mi></mml:mrow><mml:mrow><mml:mi>i</mml:mi></mml:mrow></mml:msub></mml:mrow></mml:msub></mml:mrow></mml:mrow></mml:math></inline-formula> with the integrity only using the key <inline-formula><mml:math id="mm55" overflow="scroll"><mml:mrow><mml:mrow><mml:msub><mml:mrow><mml:mi>S</mml:mi><mml:mi>K</mml:mi></mml:mrow><mml:mrow><mml:mi>B</mml:mi><mml:msub><mml:mrow><mml:mi>S</mml:mi></mml:mrow><mml:mrow><mml:mi>i</mml:mi></mml:mrow></mml:msub></mml:mrow></mml:msub><mml:mo>=</mml:mo><mml:msub><mml:mrow><mml:mi>G</mml:mi><mml:mi>K</mml:mi></mml:mrow><mml:mrow><mml:mi>B</mml:mi></mml:mrow></mml:msub></mml:mrow></mml:mrow></mml:math></inline-formula>, where the key is the group key chosen and distributed by <italic toggle="yes">B</italic>. This model tries to improve the previous model&#8217;s performance further using the two mechanisms: (a) it eliminates the double-encryption issue on the client&#8211;broker channels by providing only authentication and integrity checks on the client&#8211;broker channel; the rationale for this design is that, as the publisher has encrypted the message using the E2E key, it only needs to ensure the authentication and integrity on the publisher&#8211;broker channel; (b) a similar rationale applied on the broker&#8211;subscriber channel. Here, we note that all the sensitive data in the E2E channel should be encrypted using the E2E key, and only non-sensitive data fields can be assigned to MQTT plaintext fields. This ensures that the receiver can still authenticate the source and the integrity of the received messages.</p><p>The rationale behind the above scheme notations could be explained as follows. <inline-formula><mml:math id="mm56" overflow="scroll"><mml:mrow><mml:mrow><mml:msub><mml:mrow><mml:mi>C</mml:mi><mml:mi>H</mml:mi><mml:mi>L</mml:mi></mml:mrow><mml:mrow><mml:mi>P</mml:mi><mml:msub><mml:mrow><mml:mi>S</mml:mi></mml:mrow><mml:mrow><mml:mi>i</mml:mi></mml:mrow></mml:msub></mml:mrow></mml:msub><mml:mi>E</mml:mi><mml:mi>I</mml:mi><mml:mo>_</mml:mo><mml:msub><mml:mrow><mml:mi>C</mml:mi><mml:mi>H</mml:mi><mml:mi>L</mml:mi></mml:mrow><mml:mrow><mml:mi>C</mml:mi><mml:mi>B</mml:mi></mml:mrow></mml:msub><mml:mi>N</mml:mi><mml:mi>O</mml:mi><mml:mi>E</mml:mi><mml:mi>I</mml:mi></mml:mrow></mml:mrow></mml:math></inline-formula> refers to that (1) the channel <inline-formula><mml:math id="mm57" overflow="scroll"><mml:mrow><mml:mrow><mml:msub><mml:mrow><mml:mi>C</mml:mi><mml:mi>H</mml:mi><mml:mi>L</mml:mi></mml:mrow><mml:mrow><mml:mi>P</mml:mi><mml:msub><mml:mrow><mml:mi>S</mml:mi></mml:mrow><mml:mrow><mml:mi>i</mml:mi></mml:mrow></mml:msub></mml:mrow></mml:msub></mml:mrow></mml:mrow></mml:math></inline-formula> with encryption and integrity using individual session keys&#8212;EI, and (2) the channel <inline-formula><mml:math id="mm58" overflow="scroll"><mml:mrow><mml:mrow><mml:msub><mml:mrow><mml:mi>C</mml:mi><mml:mi>H</mml:mi><mml:mi>L</mml:mi></mml:mrow><mml:mrow><mml:mi>C</mml:mi><mml:mi>B</mml:mi></mml:mrow></mml:msub></mml:mrow></mml:mrow></mml:math></inline-formula> between a Client (<italic toggle="yes">C</italic>) and its Broker (<italic toggle="yes">B</italic>) without (NO) encryption integrity&#8212;NOEI. <inline-formula><mml:math id="mm59" overflow="scroll"><mml:mrow><mml:mrow><mml:msub><mml:mrow><mml:mi>C</mml:mi><mml:mi>H</mml:mi><mml:mi>L</mml:mi></mml:mrow><mml:mrow><mml:mi>P</mml:mi><mml:msub><mml:mrow><mml:mi>S</mml:mi></mml:mrow><mml:mrow><mml:mi>i</mml:mi></mml:mrow></mml:msub></mml:mrow></mml:msub><mml:mi>E</mml:mi><mml:mi>I</mml:mi><mml:mi>G</mml:mi><mml:mo>_</mml:mo><mml:msub><mml:mrow><mml:mi>C</mml:mi><mml:mi>H</mml:mi><mml:mi>L</mml:mi></mml:mrow><mml:mrow><mml:mi>B</mml:mi><mml:mi>S</mml:mi></mml:mrow></mml:msub><mml:mi>I</mml:mi><mml:mi>G</mml:mi></mml:mrow></mml:mrow></mml:math></inline-formula> refers to that (1) the channel <inline-formula><mml:math id="mm60" overflow="scroll"><mml:mrow><mml:mrow><mml:msub><mml:mrow><mml:mi>C</mml:mi><mml:mi>H</mml:mi><mml:mi>L</mml:mi></mml:mrow><mml:mrow><mml:mi>P</mml:mi><mml:msub><mml:mrow><mml:mi>S</mml:mi></mml:mrow><mml:mrow><mml:mi>i</mml:mi></mml:mrow></mml:msub></mml:mrow></mml:msub></mml:mrow></mml:mrow></mml:math></inline-formula> with encryption and integrity using Group key&#8212;EIG, and (2) the channel <inline-formula><mml:math id="mm61" overflow="scroll"><mml:mrow><mml:mrow><mml:msub><mml:mrow><mml:mi>C</mml:mi><mml:mi>H</mml:mi><mml:mi>L</mml:mi></mml:mrow><mml:mrow><mml:mi>B</mml:mi><mml:mi>S</mml:mi></mml:mrow></mml:msub></mml:mrow></mml:mrow></mml:math></inline-formula> between a broker (<italic toggle="yes">B</italic>) with its subscribers (<italic toggle="yes">S</italic>) with integrity using Group key (<italic toggle="yes">G</italic>)&#8212;IG. Other notations could be inferred similarly.</p><p>Scheme 1 (<inline-formula><mml:math id="mm62" overflow="scroll"><mml:mrow><mml:mrow><mml:msub><mml:mrow><mml:mi>C</mml:mi><mml:mi>H</mml:mi><mml:mi>L</mml:mi></mml:mrow><mml:mrow><mml:mi>P</mml:mi><mml:msub><mml:mrow><mml:mi>S</mml:mi></mml:mrow><mml:mrow><mml:mi>i</mml:mi></mml:mrow></mml:msub></mml:mrow></mml:msub><mml:mi>E</mml:mi><mml:mi>I</mml:mi><mml:mo>_</mml:mo><mml:msub><mml:mrow><mml:mi>C</mml:mi><mml:mi>H</mml:mi><mml:mi>L</mml:mi></mml:mrow><mml:mrow><mml:mi>C</mml:mi><mml:mi>B</mml:mi></mml:mrow></mml:msub><mml:mi>N</mml:mi><mml:mi>O</mml:mi><mml:mi>E</mml:mi><mml:mi>I</mml:mi></mml:mrow></mml:mrow></mml:math></inline-formula>) and Scheme 2 act as basic models, and we will compare the performance of other models with that of the basic models.</p></sec><sec id="sec3dot4-sensors-25-05308"><title>3.4. Detailed Designs of MQTT E2E Mechanisms</title><p>The four models in the previous section have a similar structure,, but with different combinations of the security function supports and of the key selections on the <inline-formula><mml:math id="mm63" overflow="scroll"><mml:mrow><mml:mrow><mml:msub><mml:mrow><mml:mi>C</mml:mi><mml:mi>H</mml:mi><mml:mi>L</mml:mi></mml:mrow><mml:mrow><mml:mi>P</mml:mi><mml:msub><mml:mrow><mml:mi>S</mml:mi></mml:mrow><mml:mrow><mml:mi>i</mml:mi></mml:mrow></mml:msub></mml:mrow></mml:msub></mml:mrow></mml:mrow></mml:math></inline-formula> channel and on the <inline-formula><mml:math id="mm64" overflow="scroll"><mml:mrow><mml:mrow><mml:msub><mml:mrow><mml:mi>C</mml:mi><mml:mi>H</mml:mi><mml:mi>L</mml:mi></mml:mrow><mml:mrow><mml:mi>C</mml:mi><mml:mi>B</mml:mi></mml:mrow></mml:msub></mml:mrow></mml:mrow></mml:math></inline-formula> channels; we, therefore, will not describe the details of every schemes; instead, we only detail two of them, and then list the differences for the others.</p><p>All four models share the same protocol flow in <xref rid="sensors-25-05308-f003" ref-type="fig">Figure 3</xref>.</p><p><bold>Publisher&#8211;broker connection block.</bold> The first block, consisting of Steps 1~3, is referred to as the publisher connection block. In Step 1, a publisher randomly chooses a temporary key pair (public key, private key), sends its CONNECT request including its certificate, the temporary public key as a random challenge, and its signature on the temporary public key and on the current timestamp. The broker checks the certificate and the signature in Step 2. The broker returns its certificate and its signature on Step 3, and the publisher validates the message in Step 4. The publisher&#8217;s signature denoted as P.Sig = <inline-formula><mml:math id="mm65" overflow="scroll"><mml:mrow><mml:mrow><mml:msub><mml:mrow><mml:mi>S</mml:mi><mml:mi>i</mml:mi><mml:mi>g</mml:mi></mml:mrow><mml:mrow><mml:msub><mml:mrow><mml:mi>P</mml:mi><mml:mi>r</mml:mi><mml:mi>K</mml:mi></mml:mrow><mml:mrow><mml:mi>P</mml:mi></mml:mrow></mml:msub></mml:mrow></mml:msub><mml:mfenced separators="|"><mml:mrow><mml:msub><mml:mrow><mml:mi>T</mml:mi><mml:mi>P</mml:mi><mml:mi>K</mml:mi><mml:mn>1</mml:mn></mml:mrow><mml:mrow><mml:mi>P</mml:mi></mml:mrow></mml:msub><mml:mo>,</mml:mo><mml:msub><mml:mrow><mml:mi>T</mml:mi></mml:mrow><mml:mrow><mml:mi>P</mml:mi></mml:mrow></mml:msub></mml:mrow></mml:mfenced></mml:mrow></mml:mrow></mml:math></inline-formula>. Likewise, the broker&#8217;s Connack response consists of its certificate, its temporary public key <inline-formula><mml:math id="mm66" overflow="scroll"><mml:mrow><mml:mrow><mml:msub><mml:mrow><mml:mi>T</mml:mi><mml:mi>P</mml:mi><mml:mi>K</mml:mi><mml:mn>1</mml:mn></mml:mrow><mml:mrow><mml:mi>B</mml:mi></mml:mrow></mml:msub></mml:mrow></mml:mrow></mml:math></inline-formula>, its timestamp <inline-formula><mml:math id="mm67" overflow="scroll"><mml:mrow><mml:mrow><mml:msub><mml:mrow><mml:mi>T</mml:mi></mml:mrow><mml:mrow><mml:mi>B</mml:mi></mml:mrow></mml:msub></mml:mrow></mml:mrow></mml:math></inline-formula>, and its signature B.Sig = <inline-formula><mml:math id="mm68" overflow="scroll"><mml:mrow><mml:mrow><mml:msub><mml:mrow><mml:mi>S</mml:mi><mml:mi>i</mml:mi><mml:mi>g</mml:mi></mml:mrow><mml:mrow><mml:msub><mml:mrow><mml:mi>P</mml:mi><mml:mi>r</mml:mi><mml:mi>K</mml:mi></mml:mrow><mml:mrow><mml:mi>B</mml:mi></mml:mrow></mml:msub></mml:mrow></mml:msub><mml:mfenced separators="|"><mml:mrow><mml:msub><mml:mrow><mml:mi>T</mml:mi><mml:mi>P</mml:mi><mml:mi>K</mml:mi><mml:mn>1</mml:mn></mml:mrow><mml:mrow><mml:mi>B</mml:mi></mml:mrow></mml:msub><mml:mo>,</mml:mo><mml:msub><mml:mrow><mml:mi>T</mml:mi></mml:mrow><mml:mrow><mml:mi>B</mml:mi></mml:mrow></mml:msub></mml:mrow></mml:mfenced></mml:mrow></mml:mrow></mml:math></inline-formula>. After validating each other&#8217;s certificate, timestamp, and signatures, they share the Diffie&#8211;Hellman publisher&#8211;broker-channel key <inline-formula><mml:math id="mm69" overflow="scroll"><mml:mrow><mml:mrow><mml:msub><mml:mrow><mml:mi>S</mml:mi><mml:mi>K</mml:mi></mml:mrow><mml:mrow><mml:mi>P</mml:mi><mml:mi>B</mml:mi></mml:mrow></mml:msub><mml:mo>=</mml:mo><mml:msup><mml:mrow><mml:mi>g</mml:mi></mml:mrow><mml:mrow><mml:msub><mml:mrow><mml:mi>T</mml:mi><mml:mi>P</mml:mi><mml:mi>r</mml:mi><mml:mi>K</mml:mi><mml:mn>1</mml:mn></mml:mrow><mml:mrow><mml:mi>P</mml:mi></mml:mrow></mml:msub><mml:mo>&#8727;</mml:mo><mml:msub><mml:mrow><mml:mi>T</mml:mi><mml:mi>P</mml:mi><mml:mi>r</mml:mi><mml:mi>K</mml:mi><mml:mn>1</mml:mn></mml:mrow><mml:mrow><mml:mi>B</mml:mi></mml:mrow></mml:msub></mml:mrow></mml:msup><mml:mi>m</mml:mi><mml:mi>o</mml:mi><mml:mi>d</mml:mi><mml:mo>&#160;</mml:mo><mml:mi>p</mml:mi></mml:mrow></mml:mrow></mml:math></inline-formula>. This channel key <inline-formula><mml:math id="mm70" overflow="scroll"><mml:mrow><mml:mrow><mml:msub><mml:mrow><mml:mi>S</mml:mi><mml:mi>K</mml:mi></mml:mrow><mml:mrow><mml:mi>P</mml:mi><mml:mi>B</mml:mi></mml:mrow></mml:msub></mml:mrow></mml:mrow></mml:math></inline-formula> would be used in authentication, in integrity check, or both in the four models.</p><p><bold>Subscriber&#8211;broker connection E2E building block</bold>. The second block, consisting of Steps 5~15 is referred to as the subscriber&#8211;broker connection E2E building block. In this block, a subscriber initiates its connection (and its E2E connection request) in Step 5 with its broker which processes the request and forwards the E2E request to the publisher (Step 7); Upon receiving the E2E request in Step 7, the publisher publishes its response in Step 13, and the broker processes the message and sends the Connack response to the subscriber in Step 14. If both the responses from the publisher and the broker confirm the connection request from the subscriber, the subscriber would establish one key <inline-formula><mml:math id="mm71" overflow="scroll"><mml:mrow><mml:mrow><mml:msub><mml:mrow><mml:mi>S</mml:mi><mml:mi>K</mml:mi></mml:mrow><mml:mrow><mml:mi>B</mml:mi><mml:msub><mml:mrow><mml:mi>S</mml:mi></mml:mrow><mml:mrow><mml:mi>i</mml:mi></mml:mrow></mml:msub></mml:mrow></mml:msub></mml:mrow></mml:mrow></mml:math></inline-formula> with its broker and another key <inline-formula><mml:math id="mm72" overflow="scroll"><mml:mrow><mml:mrow><mml:msub><mml:mrow><mml:mi>K</mml:mi><mml:mi>E</mml:mi><mml:mn>2</mml:mn><mml:mi>E</mml:mi></mml:mrow><mml:mrow><mml:mi>P</mml:mi><mml:msub><mml:mrow><mml:mi>S</mml:mi></mml:mrow><mml:mrow><mml:mi>i</mml:mi></mml:mrow></mml:msub></mml:mrow></mml:msub></mml:mrow></mml:mrow></mml:math></inline-formula> with its publisher. The differences of the four schemes (Scheme 1~4) in this block exist in the key establishments; In Scheme 1, <inline-formula><mml:math id="mm73" overflow="scroll"><mml:mrow><mml:mrow><mml:msub><mml:mrow><mml:mi>S</mml:mi><mml:mi>K</mml:mi></mml:mrow><mml:mrow><mml:mi>B</mml:mi><mml:msub><mml:mrow><mml:mi>S</mml:mi></mml:mrow><mml:mrow><mml:mi>i</mml:mi></mml:mrow></mml:msub></mml:mrow></mml:msub></mml:mrow></mml:mrow></mml:math></inline-formula> is not set and <inline-formula><mml:math id="mm74" overflow="scroll"><mml:mrow><mml:mrow><mml:msub><mml:mrow><mml:mi>K</mml:mi><mml:mi>E</mml:mi><mml:mn>2</mml:mn><mml:mi>E</mml:mi></mml:mrow><mml:mrow><mml:mi>P</mml:mi><mml:msub><mml:mrow><mml:mi>S</mml:mi></mml:mrow><mml:mrow><mml:mi>i</mml:mi></mml:mrow></mml:msub></mml:mrow></mml:msub></mml:mrow></mml:mrow></mml:math></inline-formula> is set as <inline-formula><mml:math id="mm75" overflow="scroll"><mml:mrow><mml:mrow><mml:msub><mml:mrow><mml:mi>S</mml:mi><mml:mi>K</mml:mi></mml:mrow><mml:mrow><mml:mi>S</mml:mi><mml:mi>P</mml:mi></mml:mrow></mml:msub><mml:mo>=</mml:mo><mml:msup><mml:mrow><mml:mi>g</mml:mi></mml:mrow><mml:mrow><mml:msub><mml:mrow><mml:mi>T</mml:mi><mml:mi>P</mml:mi><mml:mi>r</mml:mi><mml:mi>K</mml:mi><mml:mn>2</mml:mn></mml:mrow><mml:mrow><mml:mi>S</mml:mi></mml:mrow></mml:msub><mml:mo>&#8727;</mml:mo><mml:msub><mml:mrow><mml:mi>T</mml:mi><mml:mi>P</mml:mi><mml:mi>r</mml:mi><mml:mi>K</mml:mi><mml:mn>2</mml:mn></mml:mrow><mml:mrow><mml:mi>P</mml:mi></mml:mrow></mml:msub></mml:mrow></mml:msup><mml:mi mathvariant="normal">m</mml:mi><mml:mi mathvariant="normal">o</mml:mi><mml:mi mathvariant="normal">d</mml:mi><mml:mi mathvariant="normal">p</mml:mi></mml:mrow></mml:mrow></mml:math></inline-formula>. In Scheme 2, <inline-formula><mml:math id="mm76" overflow="scroll"><mml:mrow><mml:mrow><mml:msub><mml:mrow><mml:mi>S</mml:mi><mml:mi>K</mml:mi></mml:mrow><mml:mrow><mml:mi>B</mml:mi><mml:msub><mml:mrow><mml:mi>S</mml:mi></mml:mrow><mml:mrow><mml:mi>i</mml:mi></mml:mrow></mml:msub></mml:mrow></mml:msub></mml:mrow></mml:mrow></mml:math></inline-formula> is set as <inline-formula><mml:math id="mm77" overflow="scroll"><mml:mrow><mml:mrow><mml:msub><mml:mrow><mml:mi>S</mml:mi><mml:mi>K</mml:mi></mml:mrow><mml:mrow><mml:mi>S</mml:mi><mml:mi>B</mml:mi></mml:mrow></mml:msub><mml:mo>=</mml:mo><mml:msup><mml:mrow><mml:mi>g</mml:mi></mml:mrow><mml:mrow><mml:msub><mml:mrow><mml:mi>T</mml:mi><mml:mi>P</mml:mi><mml:mi>r</mml:mi><mml:mi>K</mml:mi><mml:mn>2</mml:mn></mml:mrow><mml:mrow><mml:mi>B</mml:mi></mml:mrow></mml:msub><mml:mo>&#8727;</mml:mo><mml:msub><mml:mrow><mml:mi>T</mml:mi><mml:mi>P</mml:mi><mml:mi>r</mml:mi><mml:mi>K</mml:mi><mml:mn>1</mml:mn></mml:mrow><mml:mrow><mml:mi>S</mml:mi></mml:mrow></mml:msub></mml:mrow></mml:msup><mml:mi mathvariant="normal">m</mml:mi><mml:mi mathvariant="normal">o</mml:mi><mml:mi mathvariant="normal">d</mml:mi><mml:mi mathvariant="normal">p</mml:mi></mml:mrow></mml:mrow></mml:math></inline-formula> and <inline-formula><mml:math id="mm78" overflow="scroll"><mml:mrow><mml:mrow><mml:msub><mml:mrow><mml:mi>K</mml:mi><mml:mi>E</mml:mi><mml:mn>2</mml:mn><mml:mi>E</mml:mi></mml:mrow><mml:mrow><mml:mi>P</mml:mi><mml:msub><mml:mrow><mml:mi>S</mml:mi></mml:mrow><mml:mrow><mml:mi>i</mml:mi></mml:mrow></mml:msub></mml:mrow></mml:msub></mml:mrow></mml:mrow></mml:math></inline-formula> is set as <inline-formula><mml:math id="mm79" overflow="scroll"><mml:mrow><mml:mrow><mml:msub><mml:mrow><mml:mi>S</mml:mi><mml:mi>K</mml:mi></mml:mrow><mml:mrow><mml:mi>S</mml:mi><mml:mi>P</mml:mi></mml:mrow></mml:msub><mml:mo>=</mml:mo><mml:msup><mml:mrow><mml:mi>g</mml:mi></mml:mrow><mml:mrow><mml:msub><mml:mrow><mml:mi>T</mml:mi><mml:mi>P</mml:mi><mml:mi>r</mml:mi><mml:mi>K</mml:mi><mml:mn>2</mml:mn></mml:mrow><mml:mrow><mml:mi>S</mml:mi></mml:mrow></mml:msub><mml:mo>&#8727;</mml:mo><mml:msub><mml:mrow><mml:mi>T</mml:mi><mml:mi>P</mml:mi><mml:mi>r</mml:mi><mml:mi>K</mml:mi><mml:mn>2</mml:mn></mml:mrow><mml:mrow><mml:mi>P</mml:mi></mml:mrow></mml:msub></mml:mrow></mml:msup><mml:mi mathvariant="normal">m</mml:mi><mml:mi mathvariant="normal">o</mml:mi><mml:mi mathvariant="normal">d</mml:mi><mml:mi mathvariant="normal">p</mml:mi></mml:mrow></mml:mrow></mml:math></inline-formula>. In Scheme 3, <inline-formula><mml:math id="mm80" overflow="scroll"><mml:mrow><mml:mrow><mml:msub><mml:mrow><mml:mi>S</mml:mi><mml:mi>K</mml:mi></mml:mrow><mml:mrow><mml:mi>B</mml:mi><mml:msub><mml:mrow><mml:mi>S</mml:mi></mml:mrow><mml:mrow><mml:mi>i</mml:mi></mml:mrow></mml:msub></mml:mrow></mml:msub></mml:mrow></mml:mrow></mml:math></inline-formula> is set as <inline-formula><mml:math id="mm81" overflow="scroll"><mml:mrow><mml:mrow><mml:msub><mml:mrow><mml:mi>S</mml:mi><mml:mi>K</mml:mi></mml:mrow><mml:mrow><mml:mi>S</mml:mi><mml:mi>B</mml:mi></mml:mrow></mml:msub><mml:mo>=</mml:mo><mml:msub><mml:mrow><mml:mi>G</mml:mi><mml:mi>K</mml:mi></mml:mrow><mml:mrow><mml:mi>B</mml:mi></mml:mrow></mml:msub></mml:mrow></mml:mrow></mml:math></inline-formula> and <inline-formula><mml:math id="mm82" overflow="scroll"><mml:mrow><mml:mrow><mml:msub><mml:mrow><mml:mi>K</mml:mi><mml:mi>E</mml:mi><mml:mn>2</mml:mn><mml:mi>E</mml:mi></mml:mrow><mml:mrow><mml:mi>P</mml:mi><mml:msub><mml:mrow><mml:mi>S</mml:mi></mml:mrow><mml:mrow><mml:mi>i</mml:mi></mml:mrow></mml:msub></mml:mrow></mml:msub></mml:mrow></mml:mrow></mml:math></inline-formula> is set as <inline-formula><mml:math id="mm83" overflow="scroll"><mml:mrow><mml:mrow><mml:msub><mml:mrow><mml:mi>K</mml:mi><mml:mi>E</mml:mi><mml:mn>2</mml:mn><mml:mi>E</mml:mi></mml:mrow><mml:mrow><mml:mi>P</mml:mi><mml:msub><mml:mrow><mml:mi>S</mml:mi></mml:mrow><mml:mrow><mml:mi>i</mml:mi></mml:mrow></mml:msub></mml:mrow></mml:msub><mml:mo>=</mml:mo><mml:msub><mml:mrow><mml:mi>G</mml:mi><mml:mi>K</mml:mi></mml:mrow><mml:mrow><mml:mi>P</mml:mi></mml:mrow></mml:msub></mml:mrow></mml:mrow></mml:math></inline-formula>. In Scheme 4, <inline-formula><mml:math id="mm84" overflow="scroll"><mml:mrow><mml:mrow><mml:msub><mml:mrow><mml:mi>S</mml:mi><mml:mi>K</mml:mi></mml:mrow><mml:mrow><mml:mi>B</mml:mi><mml:msub><mml:mrow><mml:mi>S</mml:mi></mml:mrow><mml:mrow><mml:mi>i</mml:mi></mml:mrow></mml:msub></mml:mrow></mml:msub></mml:mrow></mml:mrow></mml:math></inline-formula> is set as <inline-formula><mml:math id="mm85" overflow="scroll"><mml:mrow><mml:mrow><mml:msub><mml:mrow><mml:mi>S</mml:mi><mml:mi>K</mml:mi></mml:mrow><mml:mrow><mml:mi>S</mml:mi><mml:mi>B</mml:mi></mml:mrow></mml:msub><mml:mo>=</mml:mo><mml:msub><mml:mrow><mml:mi>G</mml:mi><mml:mi>K</mml:mi></mml:mrow><mml:mrow><mml:mi>B</mml:mi></mml:mrow></mml:msub></mml:mrow></mml:mrow></mml:math></inline-formula> and <inline-formula><mml:math id="mm86" overflow="scroll"><mml:mrow><mml:mrow><mml:msub><mml:mrow><mml:mi>K</mml:mi><mml:mi>E</mml:mi><mml:mn>2</mml:mn><mml:mi>E</mml:mi></mml:mrow><mml:mrow><mml:mi>P</mml:mi><mml:msub><mml:mrow><mml:mi>S</mml:mi></mml:mrow><mml:mrow><mml:mi>i</mml:mi></mml:mrow></mml:msub></mml:mrow></mml:msub></mml:mrow></mml:mrow></mml:math></inline-formula> is set as <inline-formula><mml:math id="mm87" overflow="scroll"><mml:mrow><mml:mrow><mml:msub><mml:mrow><mml:mi>K</mml:mi><mml:mi>E</mml:mi><mml:mn>2</mml:mn><mml:mi>E</mml:mi></mml:mrow><mml:mrow><mml:mi>P</mml:mi><mml:msub><mml:mrow><mml:mi>S</mml:mi></mml:mrow><mml:mrow><mml:mi>i</mml:mi></mml:mrow></mml:msub></mml:mrow></mml:msub><mml:mo>=</mml:mo><mml:msub><mml:mrow><mml:mi>G</mml:mi><mml:mi>K</mml:mi></mml:mrow><mml:mrow><mml:mi>P</mml:mi></mml:mrow></mml:msub></mml:mrow></mml:mrow></mml:math></inline-formula>.</p><p><bold>Publisher&#8211;Subscriber E2E message block</bold>. This block represents the E2E messaging phase after the E2E channel is built. In Scheme 1, both the channel <inline-formula><mml:math id="mm88" overflow="scroll"><mml:mrow><mml:mrow><mml:msub><mml:mrow><mml:mi>C</mml:mi><mml:mi>H</mml:mi><mml:mi>L</mml:mi></mml:mrow><mml:mrow><mml:mi>P</mml:mi><mml:mi>B</mml:mi></mml:mrow></mml:msub></mml:mrow></mml:mrow></mml:math></inline-formula> and the channel <inline-formula><mml:math id="mm89" overflow="scroll"><mml:mrow><mml:mrow><mml:msub><mml:mrow><mml:mi>C</mml:mi><mml:mi>H</mml:mi><mml:mi>L</mml:mi></mml:mrow><mml:mrow><mml:mi>B</mml:mi><mml:msub><mml:mrow><mml:mi>S</mml:mi></mml:mrow><mml:mrow><mml:mi>i</mml:mi></mml:mrow></mml:msub></mml:mrow></mml:msub></mml:mrow></mml:mrow></mml:math></inline-formula> provide no privacy and no integrity protection while the channel <inline-formula><mml:math id="mm90" overflow="scroll"><mml:mrow><mml:mrow><mml:msub><mml:mrow><mml:mi>C</mml:mi><mml:mi>H</mml:mi><mml:mi>L</mml:mi></mml:mrow><mml:mrow><mml:mi>P</mml:mi><mml:msub><mml:mrow><mml:mi>S</mml:mi></mml:mrow><mml:mrow><mml:mi>i</mml:mi></mml:mrow></mml:msub></mml:mrow></mml:msub></mml:mrow></mml:mrow></mml:math></inline-formula> is encrypted and integrity protected using <inline-formula><mml:math id="mm91" overflow="scroll"><mml:mrow><mml:mrow><mml:msub><mml:mrow><mml:mi>S</mml:mi><mml:mi>K</mml:mi></mml:mrow><mml:mrow><mml:mi>S</mml:mi><mml:mi>P</mml:mi></mml:mrow></mml:msub><mml:mo>=</mml:mo><mml:msup><mml:mrow><mml:mi>g</mml:mi></mml:mrow><mml:mrow><mml:msub><mml:mrow><mml:mi>T</mml:mi><mml:mi>P</mml:mi><mml:mi>r</mml:mi><mml:mi>K</mml:mi><mml:mn>2</mml:mn></mml:mrow><mml:mrow><mml:mi>S</mml:mi></mml:mrow></mml:msub><mml:mo>&#8727;</mml:mo><mml:msub><mml:mrow><mml:mi>T</mml:mi><mml:mi>P</mml:mi><mml:mi>r</mml:mi><mml:mi>K</mml:mi><mml:mn>2</mml:mn></mml:mrow><mml:mrow><mml:mi>P</mml:mi></mml:mrow></mml:msub></mml:mrow></mml:msup><mml:mi mathvariant="normal">m</mml:mi><mml:mi mathvariant="normal">o</mml:mi><mml:mi mathvariant="normal">d</mml:mi><mml:mi mathvariant="normal">p</mml:mi></mml:mrow></mml:mrow></mml:math></inline-formula>. In Scheme 2, the channel <inline-formula><mml:math id="mm92" overflow="scroll"><mml:mrow><mml:mrow><mml:msub><mml:mrow><mml:mi>C</mml:mi><mml:mi>H</mml:mi><mml:mi>L</mml:mi></mml:mrow><mml:mrow><mml:mi>P</mml:mi><mml:mi>B</mml:mi></mml:mrow></mml:msub></mml:mrow></mml:mrow></mml:math></inline-formula> is encrypted and integrity-protected using <inline-formula><mml:math id="mm93" overflow="scroll"><mml:mrow><mml:mrow><mml:msub><mml:mrow><mml:mi>S</mml:mi><mml:mi>K</mml:mi></mml:mrow><mml:mrow><mml:mi>P</mml:mi><mml:mi>B</mml:mi></mml:mrow></mml:msub></mml:mrow></mml:mrow></mml:math></inline-formula>, the channel <inline-formula><mml:math id="mm94" overflow="scroll"><mml:mrow><mml:mrow><mml:msub><mml:mrow><mml:mi>C</mml:mi><mml:mi>H</mml:mi><mml:mi>L</mml:mi></mml:mrow><mml:mrow><mml:mi>B</mml:mi><mml:msub><mml:mrow><mml:mi>S</mml:mi></mml:mrow><mml:mrow><mml:mi>i</mml:mi></mml:mrow></mml:msub></mml:mrow></mml:msub></mml:mrow></mml:mrow></mml:math></inline-formula> is encrypted and integrity-protected using <inline-formula><mml:math id="mm95" overflow="scroll"><mml:mrow><mml:mrow><mml:msub><mml:mrow><mml:mi>S</mml:mi><mml:mi>K</mml:mi></mml:mrow><mml:mrow><mml:mi>B</mml:mi><mml:mi>S</mml:mi></mml:mrow></mml:msub><mml:mo>=</mml:mo><mml:msup><mml:mrow><mml:mi>g</mml:mi></mml:mrow><mml:mrow><mml:msub><mml:mrow><mml:mi>T</mml:mi><mml:mi>P</mml:mi><mml:mi>r</mml:mi><mml:mi>K</mml:mi><mml:mn>2</mml:mn></mml:mrow><mml:mrow><mml:mi>B</mml:mi></mml:mrow></mml:msub><mml:mo>&#8727;</mml:mo><mml:msub><mml:mrow><mml:mi>T</mml:mi><mml:mi>P</mml:mi><mml:mi>r</mml:mi><mml:mi>K</mml:mi><mml:mn>1</mml:mn></mml:mrow><mml:mrow><mml:mi>S</mml:mi></mml:mrow></mml:msub></mml:mrow></mml:msup><mml:mo>=</mml:mo><mml:msup><mml:mrow><mml:mi>g</mml:mi></mml:mrow><mml:mrow><mml:msub><mml:mrow><mml:mi>T</mml:mi><mml:mi>P</mml:mi><mml:mi>r</mml:mi><mml:mi>K</mml:mi><mml:mn>2</mml:mn></mml:mrow><mml:mrow><mml:mi>B</mml:mi></mml:mrow></mml:msub><mml:mo>&#8727;</mml:mo><mml:msub><mml:mrow><mml:mi>T</mml:mi><mml:mi>P</mml:mi><mml:mi>r</mml:mi><mml:mi>K</mml:mi><mml:mn>1</mml:mn></mml:mrow><mml:mrow><mml:mi>S</mml:mi></mml:mrow></mml:msub></mml:mrow></mml:msup></mml:mrow></mml:mrow></mml:math></inline-formula>, and the channel <inline-formula><mml:math id="mm96" overflow="scroll"><mml:mrow><mml:mrow><mml:msub><mml:mrow><mml:mi>C</mml:mi><mml:mi>H</mml:mi><mml:mi>L</mml:mi></mml:mrow><mml:mrow><mml:mi>P</mml:mi><mml:msub><mml:mrow><mml:mi>S</mml:mi></mml:mrow><mml:mrow><mml:mi>i</mml:mi></mml:mrow></mml:msub></mml:mrow></mml:msub></mml:mrow></mml:mrow></mml:math></inline-formula> is encrypted and integrity protected using <inline-formula><mml:math id="mm97" overflow="scroll"><mml:mrow><mml:mrow><mml:msub><mml:mrow><mml:mi>K</mml:mi><mml:mi>E</mml:mi><mml:mn>2</mml:mn><mml:mi>E</mml:mi></mml:mrow><mml:mrow><mml:mi>P</mml:mi><mml:msub><mml:mrow><mml:mi>S</mml:mi></mml:mrow><mml:mrow><mml:mi>i</mml:mi></mml:mrow></mml:msub></mml:mrow></mml:msub><mml:mo>=</mml:mo><mml:msup><mml:mrow><mml:mi>g</mml:mi></mml:mrow><mml:mrow><mml:msub><mml:mrow><mml:mi>T</mml:mi><mml:mi>P</mml:mi><mml:mi>r</mml:mi><mml:mi>K</mml:mi><mml:mn>2</mml:mn></mml:mrow><mml:mrow><mml:mi>S</mml:mi></mml:mrow></mml:msub><mml:mo>&#8727;</mml:mo><mml:msub><mml:mrow><mml:mi>T</mml:mi><mml:mi>P</mml:mi><mml:mi>r</mml:mi><mml:mi>K</mml:mi><mml:mn>2</mml:mn></mml:mrow><mml:mrow><mml:mi>P</mml:mi></mml:mrow></mml:msub></mml:mrow></mml:msup><mml:mi mathvariant="normal">m</mml:mi><mml:mi mathvariant="normal">o</mml:mi><mml:mi mathvariant="normal">d</mml:mi><mml:mi mathvariant="normal">p</mml:mi></mml:mrow></mml:mrow></mml:math></inline-formula>. In Scheme 3, the channel <inline-formula><mml:math id="mm98" overflow="scroll"><mml:mrow><mml:mrow><mml:msub><mml:mrow><mml:mi>C</mml:mi><mml:mi>H</mml:mi><mml:mi>L</mml:mi></mml:mrow><mml:mrow><mml:mi>P</mml:mi><mml:mi>B</mml:mi></mml:mrow></mml:msub></mml:mrow></mml:mrow></mml:math></inline-formula> is encrypted and integrity-protected using <inline-formula><mml:math id="mm99" overflow="scroll"><mml:mrow><mml:mrow><mml:msub><mml:mrow><mml:mi>S</mml:mi><mml:mi>K</mml:mi></mml:mrow><mml:mrow><mml:mi>P</mml:mi><mml:mi>B</mml:mi></mml:mrow></mml:msub></mml:mrow></mml:mrow></mml:math></inline-formula>, the channel <inline-formula><mml:math id="mm100" overflow="scroll"><mml:mrow><mml:mrow><mml:msub><mml:mrow><mml:mi>C</mml:mi><mml:mi>H</mml:mi><mml:mi>L</mml:mi></mml:mrow><mml:mrow><mml:mi>B</mml:mi><mml:msub><mml:mrow><mml:mi>S</mml:mi></mml:mrow><mml:mrow><mml:mi>i</mml:mi></mml:mrow></mml:msub></mml:mrow></mml:msub></mml:mrow></mml:mrow></mml:math></inline-formula> is encrypted and integrity protected using <inline-formula><mml:math id="mm101" overflow="scroll"><mml:mrow><mml:mrow><mml:msub><mml:mrow><mml:mi>S</mml:mi><mml:mi>K</mml:mi></mml:mrow><mml:mrow><mml:mi>B</mml:mi><mml:msub><mml:mrow><mml:mi>S</mml:mi></mml:mrow><mml:mrow><mml:mi>i</mml:mi></mml:mrow></mml:msub></mml:mrow></mml:msub><mml:mo>=</mml:mo><mml:msub><mml:mrow><mml:mi>G</mml:mi><mml:mi>K</mml:mi></mml:mrow><mml:mrow><mml:mi>B</mml:mi></mml:mrow></mml:msub></mml:mrow></mml:mrow></mml:math></inline-formula>, and the channel <inline-formula><mml:math id="mm102" overflow="scroll"><mml:mrow><mml:mrow><mml:msub><mml:mrow><mml:mi>C</mml:mi><mml:mi>H</mml:mi><mml:mi>L</mml:mi></mml:mrow><mml:mrow><mml:mi>P</mml:mi><mml:msub><mml:mrow><mml:mi>S</mml:mi></mml:mrow><mml:mrow><mml:mi>i</mml:mi></mml:mrow></mml:msub></mml:mrow></mml:msub></mml:mrow></mml:mrow></mml:math></inline-formula> is encrypted and integrity protected using <inline-formula><mml:math id="mm103" overflow="scroll"><mml:mrow><mml:mrow><mml:msub><mml:mrow><mml:mi>K</mml:mi><mml:mi>E</mml:mi><mml:mn>2</mml:mn><mml:mi>E</mml:mi></mml:mrow><mml:mrow><mml:mi>P</mml:mi><mml:msub><mml:mrow><mml:mi>S</mml:mi></mml:mrow><mml:mrow><mml:mi>i</mml:mi></mml:mrow></mml:msub></mml:mrow></mml:msub><mml:mo>=</mml:mo><mml:msub><mml:mrow><mml:mi>G</mml:mi><mml:mi>K</mml:mi></mml:mrow><mml:mrow><mml:mi>P</mml:mi></mml:mrow></mml:msub></mml:mrow></mml:mrow></mml:math></inline-formula>. In Scheme 4, the channel <inline-formula><mml:math id="mm104" overflow="scroll"><mml:mrow><mml:mrow><mml:msub><mml:mrow><mml:mi>C</mml:mi><mml:mi>H</mml:mi><mml:mi>L</mml:mi></mml:mrow><mml:mrow><mml:mi>P</mml:mi><mml:mi>B</mml:mi></mml:mrow></mml:msub></mml:mrow></mml:mrow></mml:math></inline-formula> is integrity-protected using <inline-formula><mml:math id="mm105" overflow="scroll"><mml:mrow><mml:mrow><mml:msub><mml:mrow><mml:mi>S</mml:mi><mml:mi>K</mml:mi></mml:mrow><mml:mrow><mml:mi>P</mml:mi><mml:mi>B</mml:mi></mml:mrow></mml:msub></mml:mrow></mml:mrow></mml:math></inline-formula>, the channel <inline-formula><mml:math id="mm106" overflow="scroll"><mml:mrow><mml:mrow><mml:msub><mml:mrow><mml:mi>C</mml:mi><mml:mi>H</mml:mi><mml:mi>L</mml:mi></mml:mrow><mml:mrow><mml:mi>B</mml:mi><mml:msub><mml:mrow><mml:mi>S</mml:mi></mml:mrow><mml:mrow><mml:mi>i</mml:mi></mml:mrow></mml:msub></mml:mrow></mml:msub></mml:mrow></mml:mrow></mml:math></inline-formula> is integrity-protected using <inline-formula><mml:math id="mm107" overflow="scroll"><mml:mrow><mml:mrow><mml:msub><mml:mrow><mml:mi>S</mml:mi><mml:mi>K</mml:mi></mml:mrow><mml:mrow><mml:mi>B</mml:mi><mml:msub><mml:mrow><mml:mi>S</mml:mi></mml:mrow><mml:mrow><mml:mi>i</mml:mi></mml:mrow></mml:msub></mml:mrow></mml:msub><mml:mo>=</mml:mo><mml:msub><mml:mrow><mml:mi>G</mml:mi><mml:mi>K</mml:mi></mml:mrow><mml:mrow><mml:mi>B</mml:mi></mml:mrow></mml:msub></mml:mrow></mml:mrow></mml:math></inline-formula>, and the channel <inline-formula><mml:math id="mm108" overflow="scroll"><mml:mrow><mml:mrow><mml:msub><mml:mrow><mml:mi>C</mml:mi><mml:mi>H</mml:mi><mml:mi>L</mml:mi></mml:mrow><mml:mrow><mml:mi>P</mml:mi><mml:msub><mml:mrow><mml:mi>S</mml:mi></mml:mrow><mml:mrow><mml:mi>i</mml:mi></mml:mrow></mml:msub></mml:mrow></mml:msub></mml:mrow></mml:mrow></mml:math></inline-formula> is encrypted and integrity protected using <inline-formula><mml:math id="mm109" overflow="scroll"><mml:mrow><mml:mrow><mml:msub><mml:mrow><mml:mi>K</mml:mi><mml:mi>E</mml:mi><mml:mn>2</mml:mn><mml:mi>E</mml:mi></mml:mrow><mml:mrow><mml:mi>P</mml:mi><mml:msub><mml:mrow><mml:mi>S</mml:mi></mml:mrow><mml:mrow><mml:mi>i</mml:mi></mml:mrow></mml:msub></mml:mrow></mml:msub><mml:mo>=</mml:mo><mml:msub><mml:mrow><mml:mi>G</mml:mi><mml:mi>K</mml:mi></mml:mrow><mml:mrow><mml:mi>P</mml:mi></mml:mrow></mml:msub></mml:mrow></mml:mrow></mml:math></inline-formula>.</p><sec id="sec3dot4dot1-sensors-25-05308"><title>3.4.1. The Details of Scheme 1</title><p>In this section, we detail every step of Scheme 1.</p><list list-type="simple"><list-item><p><bold>Block 1</bold>.</p></list-item></list><list list-type="simple"><list-item><p>Step 1. The publisher selects a random number <inline-formula><mml:math id="mm110" overflow="scroll"><mml:mrow><mml:mrow><mml:msub><mml:mrow><mml:mi>T</mml:mi><mml:mi>P</mml:mi><mml:mi>r</mml:mi><mml:mi>K</mml:mi><mml:mn>1</mml:mn></mml:mrow><mml:mrow><mml:mi>P</mml:mi></mml:mrow></mml:msub></mml:mrow></mml:mrow></mml:math></inline-formula>, computes <inline-formula><mml:math id="mm111" overflow="scroll"><mml:mrow><mml:mrow><mml:msub><mml:mrow><mml:mi>T</mml:mi><mml:mi>P</mml:mi><mml:mi>K</mml:mi><mml:mn>1</mml:mn></mml:mrow><mml:mrow><mml:mi>P</mml:mi></mml:mrow></mml:msub><mml:mo>=</mml:mo><mml:msup><mml:mrow><mml:mi>g</mml:mi></mml:mrow><mml:mrow><mml:mo>&#160;</mml:mo><mml:msub><mml:mrow><mml:mi>T</mml:mi><mml:mi>P</mml:mi><mml:mi>r</mml:mi><mml:mi>K</mml:mi><mml:mn>1</mml:mn></mml:mrow><mml:mrow><mml:mi>P</mml:mi></mml:mrow></mml:msub></mml:mrow></mml:msup><mml:mi>m</mml:mi><mml:mi>o</mml:mi><mml:mi>d</mml:mi><mml:mi>p</mml:mi></mml:mrow></mml:mrow></mml:math></inline-formula>, and sends its CONNECT request, which contains <inline-formula><mml:math id="mm112" overflow="scroll"><mml:mrow><mml:mrow><mml:msub><mml:mrow><mml:mi>T</mml:mi><mml:mi>P</mml:mi><mml:mi>K</mml:mi><mml:mn>1</mml:mn></mml:mrow><mml:mrow><mml:mi>P</mml:mi></mml:mrow></mml:msub></mml:mrow></mml:mrow></mml:math></inline-formula> (as a challenge), timestamp <inline-formula><mml:math id="mm113" overflow="scroll"><mml:mrow><mml:mrow><mml:msub><mml:mrow><mml:mi>T</mml:mi></mml:mrow><mml:mrow><mml:mi>P</mml:mi></mml:mrow></mml:msub></mml:mrow></mml:mrow></mml:math></inline-formula>, its signature on <inline-formula><mml:math id="mm114" overflow="scroll"><mml:mrow><mml:mrow><mml:msub><mml:mrow><mml:mi>T</mml:mi><mml:mi>P</mml:mi><mml:mi>K</mml:mi><mml:mn>1</mml:mn></mml:mrow><mml:mrow><mml:mi>P</mml:mi></mml:mrow></mml:msub></mml:mrow></mml:mrow></mml:math></inline-formula> and <inline-formula><mml:math id="mm115" overflow="scroll"><mml:mrow><mml:mrow><mml:msub><mml:mrow><mml:mi>T</mml:mi></mml:mrow><mml:mrow><mml:mi>P</mml:mi></mml:mrow></mml:msub></mml:mrow></mml:mrow></mml:math></inline-formula>, and its long-term certificate.</p><p>Step 2. Upon receiving the connection request, broker B stores the data in its database.</p><p>Step 3. B selects a random number <inline-formula><mml:math id="mm116" overflow="scroll"><mml:mrow><mml:mrow><mml:msub><mml:mrow><mml:mi>T</mml:mi><mml:mi>P</mml:mi><mml:mi>r</mml:mi><mml:mi>K</mml:mi><mml:mn>1</mml:mn></mml:mrow><mml:mrow><mml:mi>B</mml:mi></mml:mrow></mml:msub></mml:mrow></mml:mrow></mml:math></inline-formula>, computes <inline-formula><mml:math id="mm117" overflow="scroll"><mml:mrow><mml:mrow><mml:msub><mml:mrow><mml:mi>T</mml:mi><mml:mi>P</mml:mi><mml:mi>K</mml:mi><mml:mn>1</mml:mn></mml:mrow><mml:mrow><mml:mi>B</mml:mi></mml:mrow></mml:msub><mml:mo>=</mml:mo><mml:msup><mml:mrow><mml:mi>g</mml:mi></mml:mrow><mml:mrow><mml:mo>&#160;</mml:mo><mml:msub><mml:mrow><mml:mi>T</mml:mi><mml:mi>P</mml:mi><mml:mi>r</mml:mi><mml:mi>K</mml:mi><mml:mn>1</mml:mn></mml:mrow><mml:mrow><mml:mi>B</mml:mi></mml:mrow></mml:msub></mml:mrow></mml:msup><mml:mi>m</mml:mi><mml:mi>o</mml:mi><mml:mi>d</mml:mi><mml:mi>p</mml:mi></mml:mrow></mml:mrow></mml:math></inline-formula>, and sends back its connect response (Connack), which contains <inline-formula><mml:math id="mm118" overflow="scroll"><mml:mrow><mml:mrow><mml:msub><mml:mrow><mml:mi>T</mml:mi><mml:mi>P</mml:mi><mml:mi>K</mml:mi><mml:mn>1</mml:mn></mml:mrow><mml:mrow><mml:mi>B</mml:mi></mml:mrow></mml:msub></mml:mrow></mml:mrow></mml:math></inline-formula> (as a challenge), timestamp <inline-formula><mml:math id="mm119" overflow="scroll"><mml:mrow><mml:mrow><mml:msub><mml:mrow><mml:mi>T</mml:mi></mml:mrow><mml:mrow><mml:mi>B</mml:mi></mml:mrow></mml:msub></mml:mrow></mml:mrow></mml:math></inline-formula>, its signature on <inline-formula><mml:math id="mm120" overflow="scroll"><mml:mrow><mml:mrow><mml:msub><mml:mrow><mml:mi>T</mml:mi><mml:mi>P</mml:mi><mml:mi>K</mml:mi><mml:mn>1</mml:mn></mml:mrow><mml:mrow><mml:mi>P</mml:mi></mml:mrow></mml:msub></mml:mrow></mml:mrow></mml:math></inline-formula>, <inline-formula><mml:math id="mm121" overflow="scroll"><mml:mrow><mml:mrow><mml:msub><mml:mrow><mml:mi>T</mml:mi><mml:mi>P</mml:mi><mml:mi>K</mml:mi><mml:mn>1</mml:mn></mml:mrow><mml:mrow><mml:mi>B</mml:mi></mml:mrow></mml:msub><mml:mo>,</mml:mo><mml:mo>&#160;</mml:mo><mml:msub><mml:mrow><mml:mi>T</mml:mi></mml:mrow><mml:mrow><mml:mi>P</mml:mi></mml:mrow></mml:msub></mml:mrow></mml:mrow></mml:math></inline-formula>, <inline-formula><mml:math id="mm122" overflow="scroll"><mml:mrow><mml:mrow><mml:msub><mml:mrow><mml:mi>T</mml:mi></mml:mrow><mml:mrow><mml:mi>B</mml:mi></mml:mrow></mml:msub></mml:mrow></mml:mrow></mml:math></inline-formula> and its long-term certificate. B also computes the key <inline-formula><mml:math id="mm123" overflow="scroll"><mml:mrow><mml:mrow><mml:msub><mml:mrow><mml:mi>S</mml:mi><mml:mi>K</mml:mi></mml:mrow><mml:mrow><mml:mi>P</mml:mi><mml:mi>B</mml:mi></mml:mrow></mml:msub><mml:mo>=</mml:mo><mml:msup><mml:mrow><mml:mi>g</mml:mi></mml:mrow><mml:mrow><mml:msub><mml:mrow><mml:mi>T</mml:mi><mml:mi>P</mml:mi><mml:mi>r</mml:mi><mml:mi>K</mml:mi><mml:mn>1</mml:mn></mml:mrow><mml:mrow><mml:mi>B</mml:mi></mml:mrow></mml:msub><mml:mo>&#8727;</mml:mo><mml:msub><mml:mrow><mml:mi>T</mml:mi><mml:mi>P</mml:mi><mml:mi>r</mml:mi><mml:mi>K</mml:mi><mml:mn>1</mml:mn></mml:mrow><mml:mrow><mml:mi>P</mml:mi></mml:mrow></mml:msub></mml:mrow></mml:msup><mml:mi mathvariant="normal">m</mml:mi><mml:mi mathvariant="normal">o</mml:mi><mml:mi mathvariant="normal">d</mml:mi><mml:mi mathvariant="normal">p</mml:mi></mml:mrow></mml:mrow></mml:math></inline-formula>. This session key <inline-formula><mml:math id="mm124" overflow="scroll"><mml:mrow><mml:mrow><mml:msub><mml:mrow><mml:mi>S</mml:mi><mml:mi>K</mml:mi></mml:mrow><mml:mrow><mml:mi>P</mml:mi><mml:mi>B</mml:mi></mml:mrow></mml:msub></mml:mrow></mml:mrow></mml:math></inline-formula> would be used as the encryption key and the hash key in the publisher&#8211;broker channel.</p><p>Step 4. P receives and verifies the response, and computes the key <inline-formula><mml:math id="mm125" overflow="scroll"><mml:mrow><mml:mrow><mml:msub><mml:mrow><mml:mi>S</mml:mi><mml:mi>K</mml:mi></mml:mrow><mml:mrow><mml:mi>P</mml:mi><mml:mi>B</mml:mi></mml:mrow></mml:msub></mml:mrow></mml:mrow></mml:math></inline-formula>.</p></list-item></list><list list-type="simple"><list-item><p>
<bold>Block 2.</bold>
</p></list-item></list><list list-type="simple"><list-item><p>Step 5. The subscriber selects two random numbers <inline-formula><mml:math id="mm126" overflow="scroll"><mml:mrow><mml:mrow><mml:msub><mml:mrow><mml:mi>T</mml:mi><mml:mi>P</mml:mi><mml:mi>r</mml:mi><mml:mi>K</mml:mi><mml:mn>1</mml:mn></mml:mrow><mml:mrow><mml:mi>S</mml:mi></mml:mrow></mml:msub></mml:mrow></mml:mrow></mml:math></inline-formula> and <inline-formula><mml:math id="mm127" overflow="scroll"><mml:mrow><mml:mrow><mml:msub><mml:mrow><mml:mi>T</mml:mi><mml:mi>P</mml:mi><mml:mi>r</mml:mi><mml:mi>K</mml:mi><mml:mn>2</mml:mn></mml:mrow><mml:mrow><mml:mi>S</mml:mi></mml:mrow></mml:msub></mml:mrow></mml:mrow></mml:math></inline-formula>, computes <inline-formula><mml:math id="mm128" overflow="scroll"><mml:mrow><mml:mrow><mml:msub><mml:mrow><mml:mi>T</mml:mi><mml:mi>P</mml:mi><mml:mi>K</mml:mi><mml:mn>1</mml:mn></mml:mrow><mml:mrow><mml:mi>S</mml:mi></mml:mrow></mml:msub><mml:mo>=</mml:mo><mml:msup><mml:mrow><mml:mi>g</mml:mi></mml:mrow><mml:mrow><mml:mo>&#160;</mml:mo><mml:msub><mml:mrow><mml:mi>T</mml:mi><mml:mi>P</mml:mi><mml:mi>r</mml:mi><mml:mi>K</mml:mi><mml:mn>1</mml:mn></mml:mrow><mml:mrow><mml:mi>S</mml:mi></mml:mrow></mml:msub></mml:mrow></mml:msup><mml:mi>m</mml:mi><mml:mi>o</mml:mi><mml:mi>d</mml:mi><mml:mi>p</mml:mi></mml:mrow></mml:mrow></mml:math></inline-formula> and <inline-formula><mml:math id="mm129" overflow="scroll"><mml:mrow><mml:mrow><mml:msub><mml:mrow><mml:mi>T</mml:mi><mml:mi>P</mml:mi><mml:mi>K</mml:mi><mml:mn>2</mml:mn></mml:mrow><mml:mrow><mml:mi>S</mml:mi></mml:mrow></mml:msub><mml:mo>=</mml:mo><mml:msup><mml:mrow><mml:mi>g</mml:mi></mml:mrow><mml:mrow><mml:mo>&#160;</mml:mo><mml:msub><mml:mrow><mml:mi>T</mml:mi><mml:mi>P</mml:mi><mml:mi>r</mml:mi><mml:mi>K</mml:mi><mml:mn>2</mml:mn></mml:mrow><mml:mrow><mml:mi>S</mml:mi></mml:mrow></mml:msub></mml:mrow></mml:msup><mml:mi>m</mml:mi><mml:mi>o</mml:mi><mml:mi>d</mml:mi><mml:mi>p</mml:mi></mml:mrow></mml:mrow></mml:math></inline-formula>, and sends its connection request (Connect) to its broker. This connect packet contains <inline-formula><mml:math id="mm130" overflow="scroll"><mml:mrow><mml:mrow><mml:msub><mml:mrow><mml:mi>T</mml:mi><mml:mi>P</mml:mi><mml:mi>K</mml:mi><mml:mn>1</mml:mn></mml:mrow><mml:mrow><mml:mi>S</mml:mi></mml:mrow></mml:msub></mml:mrow></mml:mrow></mml:math></inline-formula>, <inline-formula><mml:math id="mm131" overflow="scroll"><mml:mrow><mml:mrow><mml:msub><mml:mrow><mml:mi>T</mml:mi><mml:mi>P</mml:mi><mml:mi>K</mml:mi><mml:mn>2</mml:mn></mml:mrow><mml:mrow><mml:mi>S</mml:mi></mml:mrow></mml:msub></mml:mrow></mml:mrow></mml:math></inline-formula>, timestamp <inline-formula><mml:math id="mm132" overflow="scroll"><mml:mrow><mml:mrow><mml:msub><mml:mrow><mml:mi>T</mml:mi></mml:mrow><mml:mrow><mml:mi>S</mml:mi></mml:mrow></mml:msub></mml:mrow></mml:mrow></mml:math></inline-formula>, its signature on the previous data, its certificate, and <italic toggle="yes">its intention for building an E2E channel.</italic></p><p>Step 6. B receives the request, verifies the signature, and stores <inline-formula><mml:math id="mm133" overflow="scroll"><mml:mrow><mml:mrow><mml:msub><mml:mrow><mml:mi>T</mml:mi><mml:mi>P</mml:mi><mml:mi>K</mml:mi><mml:mn>1</mml:mn></mml:mrow><mml:mrow><mml:mi>S</mml:mi></mml:mrow></mml:msub></mml:mrow></mml:mrow></mml:math></inline-formula>, and the certificate.</p><p>Step 7. B forwards the rest of the connect request to the publisher.</p><p>Step 8. Upon receiving the E2E connect request, P verifies the signatures and stores <inline-formula><mml:math id="mm134" overflow="scroll"><mml:mrow><mml:mrow><mml:msub><mml:mrow><mml:mi>T</mml:mi><mml:mi>P</mml:mi><mml:mi>K</mml:mi><mml:mn>2</mml:mn></mml:mrow><mml:mrow><mml:mi>S</mml:mi></mml:mrow></mml:msub></mml:mrow></mml:mrow></mml:math></inline-formula> and the certificate.</p><p>Step 9. Broker B sends its &#8220;Auth Continue&#8221; back to the subscriber. This &#8220;Auth Continue&#8221; aims to notify the subscriber that the previous connection request is still processing and please keep waiting.</p><p>Step 10~12. Broker B and the subscriber S keep on the notification and waiting state.</p><p>Step 13. P randomly selects <inline-formula><mml:math id="mm135" overflow="scroll"><mml:mrow><mml:mrow><mml:msub><mml:mrow><mml:mi>T</mml:mi><mml:mi>P</mml:mi><mml:mi>r</mml:mi><mml:mi>K</mml:mi><mml:mn>2</mml:mn></mml:mrow><mml:mrow><mml:mi>P</mml:mi></mml:mrow></mml:msub></mml:mrow></mml:mrow></mml:math></inline-formula>, computes <inline-formula><mml:math id="mm136" overflow="scroll"><mml:mrow><mml:mrow><mml:msub><mml:mrow><mml:mi>T</mml:mi><mml:mi>P</mml:mi><mml:mi>K</mml:mi><mml:mn>2</mml:mn></mml:mrow><mml:mrow><mml:mi>P</mml:mi></mml:mrow></mml:msub><mml:mo>=</mml:mo><mml:msup><mml:mrow><mml:mi>g</mml:mi></mml:mrow><mml:mrow><mml:mo>&#160;</mml:mo><mml:msub><mml:mrow><mml:mi>T</mml:mi><mml:mi>P</mml:mi><mml:mi>r</mml:mi><mml:mi>K</mml:mi><mml:mn>2</mml:mn></mml:mrow><mml:mrow><mml:mi>P</mml:mi></mml:mrow></mml:msub></mml:mrow></mml:msup><mml:mi>m</mml:mi><mml:mi>o</mml:mi><mml:mi>d</mml:mi><mml:mi>p</mml:mi></mml:mrow></mml:mrow></mml:math></inline-formula>, and calculates the E2E key <inline-formula><mml:math id="mm137" overflow="scroll"><mml:mrow><mml:mrow><mml:msub><mml:mrow><mml:mi>K</mml:mi><mml:mi>E</mml:mi><mml:mn>2</mml:mn><mml:mi>E</mml:mi></mml:mrow><mml:mrow><mml:mi>P</mml:mi><mml:mi>S</mml:mi></mml:mrow></mml:msub><mml:mo>=</mml:mo><mml:msup><mml:mrow><mml:mi>g</mml:mi></mml:mrow><mml:mrow><mml:msub><mml:mrow><mml:mi>T</mml:mi><mml:mi>P</mml:mi><mml:mi>r</mml:mi><mml:mi>K</mml:mi><mml:mn>2</mml:mn></mml:mrow><mml:mrow><mml:mi>P</mml:mi></mml:mrow></mml:msub><mml:mo>&#8727;</mml:mo><mml:msub><mml:mrow><mml:mi>T</mml:mi><mml:mi>P</mml:mi><mml:mi>r</mml:mi><mml:mi>K</mml:mi><mml:mn>2</mml:mn></mml:mrow><mml:mrow><mml:mi>S</mml:mi></mml:mrow></mml:msub></mml:mrow></mml:msup><mml:mi mathvariant="normal">m</mml:mi><mml:mi mathvariant="normal">o</mml:mi><mml:mi mathvariant="normal">d</mml:mi><mml:mi mathvariant="normal">p</mml:mi></mml:mrow></mml:mrow></mml:math></inline-formula>. It sends back its response, which contains its timestamp, <inline-formula><mml:math id="mm138" overflow="scroll"><mml:mrow><mml:mrow><mml:msub><mml:mrow><mml:mi>T</mml:mi><mml:mi>P</mml:mi><mml:mi>K</mml:mi><mml:mn>2</mml:mn></mml:mrow><mml:mrow><mml:mi>P</mml:mi></mml:mrow></mml:msub></mml:mrow></mml:mrow></mml:math></inline-formula>, its signature, and its certificate.</p><p>Step 14. B checks the content and computes <inline-formula><mml:math id="mm139" overflow="scroll"><mml:mrow><mml:mrow><mml:msub><mml:mrow><mml:mi>S</mml:mi><mml:mi>K</mml:mi></mml:mrow><mml:mrow><mml:mi>B</mml:mi><mml:mi>S</mml:mi></mml:mrow></mml:msub><mml:mo>=</mml:mo><mml:msup><mml:mrow><mml:mi>g</mml:mi></mml:mrow><mml:mrow><mml:msub><mml:mrow><mml:mi>T</mml:mi><mml:mi>P</mml:mi><mml:mi>r</mml:mi><mml:mi>K</mml:mi><mml:mn>2</mml:mn></mml:mrow><mml:mrow><mml:mi>B</mml:mi></mml:mrow></mml:msub><mml:mo>&#8727;</mml:mo><mml:msub><mml:mrow><mml:mi>T</mml:mi><mml:mi>P</mml:mi><mml:mi>r</mml:mi><mml:mi>K</mml:mi><mml:mn>1</mml:mn></mml:mrow><mml:mrow><mml:mi>S</mml:mi></mml:mrow></mml:msub></mml:mrow></mml:msup><mml:mi mathvariant="normal">m</mml:mi><mml:mi mathvariant="normal">o</mml:mi><mml:mi mathvariant="normal">d</mml:mi><mml:mi mathvariant="normal">p</mml:mi></mml:mrow></mml:mrow></mml:math></inline-formula>. It then forwards P&#8217;s response back to the subscriber.</p><p>Step 15. S receives the response, verifies the signature, and computes two keys: <inline-formula><mml:math id="mm140" overflow="scroll"><mml:mrow><mml:mrow><mml:msub><mml:mrow><mml:mi>K</mml:mi><mml:mi>E</mml:mi><mml:mn>2</mml:mn><mml:mi>E</mml:mi></mml:mrow><mml:mrow><mml:mi>P</mml:mi><mml:mi>S</mml:mi></mml:mrow></mml:msub><mml:mo>=</mml:mo><mml:msup><mml:mrow><mml:mi>g</mml:mi></mml:mrow><mml:mrow><mml:msub><mml:mrow><mml:mi>T</mml:mi><mml:mi>P</mml:mi><mml:mi>r</mml:mi><mml:mi>K</mml:mi><mml:mn>2</mml:mn></mml:mrow><mml:mrow><mml:mi>P</mml:mi></mml:mrow></mml:msub><mml:mo>&#8727;</mml:mo><mml:msub><mml:mrow><mml:mi>T</mml:mi><mml:mi>P</mml:mi><mml:mi>r</mml:mi><mml:mi>K</mml:mi><mml:mn>2</mml:mn></mml:mrow><mml:mrow><mml:mi>S</mml:mi></mml:mrow></mml:msub></mml:mrow></mml:msup><mml:mi mathvariant="normal">m</mml:mi><mml:mi mathvariant="normal">o</mml:mi><mml:mi mathvariant="normal">d</mml:mi><mml:mi mathvariant="normal">p</mml:mi></mml:mrow></mml:mrow></mml:math></inline-formula> and <inline-formula><mml:math id="mm141" overflow="scroll"><mml:mrow><mml:mrow><mml:msub><mml:mrow><mml:mi>S</mml:mi><mml:mi>K</mml:mi></mml:mrow><mml:mrow><mml:mi>B</mml:mi><mml:mi>S</mml:mi></mml:mrow></mml:msub><mml:mo>=</mml:mo><mml:msup><mml:mrow><mml:mi>g</mml:mi></mml:mrow><mml:mrow><mml:msub><mml:mrow><mml:mi>T</mml:mi><mml:mi>P</mml:mi><mml:mi>r</mml:mi><mml:mi>K</mml:mi><mml:mn>2</mml:mn></mml:mrow><mml:mrow><mml:mi>B</mml:mi></mml:mrow></mml:msub><mml:mo>&#8727;</mml:mo><mml:msub><mml:mrow><mml:mi>T</mml:mi><mml:mi>P</mml:mi><mml:mi>r</mml:mi><mml:mi>K</mml:mi><mml:mn>1</mml:mn></mml:mrow><mml:mrow><mml:mi>S</mml:mi></mml:mrow></mml:msub></mml:mrow></mml:msup><mml:mi mathvariant="normal">m</mml:mi><mml:mi mathvariant="normal">o</mml:mi><mml:mi mathvariant="normal">d</mml:mi><mml:mi mathvariant="normal">p</mml:mi></mml:mrow></mml:mrow></mml:math></inline-formula>.</p></list-item></list><list list-type="simple"><list-item><p>
<bold>Block 3</bold>
</p></list-item></list><list list-type="simple"><list-item><p>In Scheme 1, only the E2E channel <inline-formula><mml:math id="mm142" overflow="scroll"><mml:mrow><mml:mrow><mml:msub><mml:mrow><mml:mi>C</mml:mi><mml:mi>H</mml:mi><mml:mi>L</mml:mi></mml:mrow><mml:mrow><mml:mi>P</mml:mi><mml:msub><mml:mrow><mml:mi>S</mml:mi></mml:mrow><mml:mrow><mml:mi>i</mml:mi></mml:mrow></mml:msub></mml:mrow></mml:msub></mml:mrow></mml:mrow></mml:math></inline-formula> enables encryption and integrity, but the channel <inline-formula><mml:math id="mm143" overflow="scroll"><mml:mrow><mml:mrow><mml:msub><mml:mrow><mml:mi>C</mml:mi><mml:mi>H</mml:mi><mml:mi>L</mml:mi></mml:mrow><mml:mrow><mml:mi>P</mml:mi><mml:mi>B</mml:mi></mml:mrow></mml:msub></mml:mrow></mml:mrow></mml:math></inline-formula> and the channel <inline-formula><mml:math id="mm144" overflow="scroll"><mml:mrow><mml:mrow><mml:msub><mml:mrow><mml:mi>C</mml:mi><mml:mi>H</mml:mi><mml:mi>L</mml:mi></mml:mrow><mml:mrow><mml:mi>B</mml:mi><mml:msub><mml:mrow><mml:mi>S</mml:mi></mml:mrow><mml:mrow><mml:mi>i</mml:mi></mml:mrow></mml:msub></mml:mrow></mml:msub></mml:mrow></mml:mrow></mml:math></inline-formula> do not enable encryption/integrity. So, when the publisher P publisher a message Mtxt, it encrypts Mtxt as Ctxt = <inline-formula><mml:math id="mm145" overflow="scroll"><mml:mrow><mml:mrow><mml:msub><mml:mrow><mml:mi mathvariant="normal">E</mml:mi></mml:mrow><mml:mrow><mml:msub><mml:mrow><mml:mi>K</mml:mi><mml:mi>E</mml:mi><mml:mn>2</mml:mn><mml:mi>E</mml:mi></mml:mrow><mml:mrow><mml:mi>P</mml:mi><mml:mi>S</mml:mi></mml:mrow></mml:msub></mml:mrow></mml:msub></mml:mrow></mml:mrow></mml:math></inline-formula>(Mtxt), and generates the corresponding <inline-formula><mml:math id="mm146" overflow="scroll"><mml:mrow><mml:mrow><mml:msub><mml:mrow><mml:mi>H</mml:mi><mml:mi>v</mml:mi><mml:mi>a</mml:mi><mml:mi>l</mml:mi><mml:mo>=</mml:mo><mml:mi>H</mml:mi><mml:mi>M</mml:mi><mml:mi>A</mml:mi><mml:mi>C</mml:mi></mml:mrow><mml:mrow><mml:msub><mml:mrow><mml:mi>K</mml:mi><mml:mi>E</mml:mi><mml:mn>2</mml:mn><mml:mi>E</mml:mi></mml:mrow><mml:mrow><mml:mi>P</mml:mi><mml:mi>S</mml:mi></mml:mrow></mml:msub></mml:mrow></mml:msub></mml:mrow></mml:mrow></mml:math></inline-formula>(Ctxt). It specifies the topic, Ctxt, <inline-formula><mml:math id="mm147" overflow="scroll"><mml:mrow><mml:mrow><mml:mi>H</mml:mi><mml:mi>v</mml:mi><mml:mi>a</mml:mi><mml:mi>l</mml:mi></mml:mrow></mml:mrow></mml:math></inline-formula>, etc., as an MQTT message. The broker checks the topic and forwards it to the subscriber, who uses the key <inline-formula><mml:math id="mm148" overflow="scroll"><mml:mrow><mml:mrow><mml:msub><mml:mrow><mml:mi>K</mml:mi><mml:mi>E</mml:mi><mml:mn>2</mml:mn><mml:mi>E</mml:mi></mml:mrow><mml:mrow><mml:mi>P</mml:mi><mml:mi>S</mml:mi></mml:mrow></mml:msub></mml:mrow></mml:mrow></mml:math></inline-formula> to decrypt and verify the content.</p><p>Scheme 1 provides the authentication, encryption, and integrity check on the E2E channel <inline-formula><mml:math id="mm149" overflow="scroll"><mml:mrow><mml:mrow><mml:msub><mml:mrow><mml:mi>C</mml:mi><mml:mi>H</mml:mi><mml:mi>L</mml:mi></mml:mrow><mml:mrow><mml:mi>P</mml:mi><mml:msub><mml:mrow><mml:mi>S</mml:mi></mml:mrow><mml:mrow><mml:mi>i</mml:mi></mml:mrow></mml:msub></mml:mrow></mml:msub></mml:mrow></mml:mrow></mml:math></inline-formula>, and provides mutual authentication between clients (publisher/subscriber) and the broker. But it does not provide message authentication and an integrity check for the message between clients and the broker.</p></list-item></list></sec><sec id="sec3dot4dot2-sensors-25-05308"><title>3.4.2. The Details of Scheme 2</title><p>The steps 1~15 of Scheme 2 are the same as those of Scheme 1, but they differ in the steps of Block 3. When the publisher P publishes a message Mtxt, it encrypts Mtxt as Ctxt = <inline-formula><mml:math id="mm150" overflow="scroll"><mml:mrow><mml:mrow><mml:msub><mml:mrow><mml:mi mathvariant="normal">E</mml:mi></mml:mrow><mml:mrow><mml:msub><mml:mrow><mml:mi>K</mml:mi><mml:mi>E</mml:mi><mml:mn>2</mml:mn><mml:mi>E</mml:mi></mml:mrow><mml:mrow><mml:mi>P</mml:mi><mml:mi>S</mml:mi></mml:mrow></mml:msub></mml:mrow></mml:msub></mml:mrow></mml:mrow></mml:math></inline-formula>(Mtxt), and generates the corresponding <inline-formula><mml:math id="mm151" overflow="scroll"><mml:mrow><mml:mrow><mml:msub><mml:mrow><mml:mi>H</mml:mi><mml:mi>v</mml:mi><mml:mi>a</mml:mi><mml:mi>l</mml:mi><mml:mo>=</mml:mo><mml:mi>H</mml:mi><mml:mi>M</mml:mi><mml:mi>A</mml:mi><mml:mi>C</mml:mi></mml:mrow><mml:mrow><mml:msub><mml:mrow><mml:mi>K</mml:mi><mml:mi>E</mml:mi><mml:mn>2</mml:mn><mml:mi>E</mml:mi></mml:mrow><mml:mrow><mml:mi>P</mml:mi><mml:mi>S</mml:mi></mml:mrow></mml:msub></mml:mrow></mml:msub></mml:mrow></mml:mrow></mml:math></inline-formula>(Ctxt). This process is for securing the content on the E2E channel <inline-formula><mml:math id="mm152" overflow="scroll"><mml:mrow><mml:mrow><mml:msub><mml:mrow><mml:mi>C</mml:mi><mml:mi>H</mml:mi><mml:mi>L</mml:mi></mml:mrow><mml:mrow><mml:mi>P</mml:mi><mml:msub><mml:mrow><mml:mi>S</mml:mi></mml:mrow><mml:mrow><mml:mi>i</mml:mi></mml:mrow></mml:msub></mml:mrow></mml:msub></mml:mrow></mml:mrow></mml:math></inline-formula>. P further encrypts Ctxt as <inline-formula><mml:math id="mm153" overflow="scroll"><mml:mrow><mml:mrow><mml:msup><mml:mi>Ctxt</mml:mi><mml:mo>&#8242;</mml:mo></mml:msup><mml:mo>=</mml:mo><mml:msub><mml:mrow><mml:mi mathvariant="normal">E</mml:mi></mml:mrow><mml:mrow><mml:msub><mml:mrow><mml:mi>S</mml:mi><mml:mi>K</mml:mi></mml:mrow><mml:mrow><mml:mi>P</mml:mi><mml:mi>B</mml:mi></mml:mrow></mml:msub></mml:mrow></mml:msub></mml:mrow></mml:mrow></mml:math></inline-formula>(Ctxt), appends it with the corresponding <inline-formula><mml:math id="mm154" overflow="scroll"><mml:mrow><mml:mrow><mml:msup><mml:mi>HAMC</mml:mi><mml:mo>&#8242;</mml:mo></mml:msup></mml:mrow></mml:mrow></mml:math></inline-formula>, and finally specifies the topic, <inline-formula><mml:math id="mm155" overflow="scroll"><mml:mrow><mml:mrow><mml:msup><mml:mi>Ctxt</mml:mi><mml:mo>&#8242;</mml:mo></mml:msup></mml:mrow></mml:mrow></mml:math></inline-formula>, and <inline-formula><mml:math id="mm156" overflow="scroll"><mml:mrow><mml:mrow><mml:msup><mml:mi>HAMC</mml:mi><mml:mo>&#8242;</mml:mo></mml:msup></mml:mrow></mml:mrow></mml:math></inline-formula> in an MQTT message to the broker.</p><p>The broker decrypts <inline-formula><mml:math id="mm157" overflow="scroll"><mml:mrow><mml:mrow><mml:msup><mml:mrow><mml:mi mathvariant="normal">C</mml:mi><mml:mi mathvariant="normal">t</mml:mi><mml:mi mathvariant="normal">x</mml:mi><mml:mi mathvariant="normal">t</mml:mi></mml:mrow><mml:mrow><mml:mo>&#8242;</mml:mo></mml:mrow></mml:msup></mml:mrow></mml:mrow></mml:math></inline-formula> to get Ctxt, and verifies <inline-formula><mml:math id="mm158" overflow="scroll"><mml:mrow><mml:mrow><mml:msup><mml:mrow><mml:mi mathvariant="normal">H</mml:mi><mml:mi mathvariant="normal">A</mml:mi><mml:mi mathvariant="normal">M</mml:mi><mml:mi mathvariant="normal">C</mml:mi></mml:mrow><mml:mrow><mml:mo>&#8242;</mml:mo></mml:mrow></mml:msup></mml:mrow></mml:mrow></mml:math></inline-formula>, using <inline-formula><mml:math id="mm159" overflow="scroll"><mml:mrow><mml:mrow><mml:msub><mml:mrow><mml:mi>S</mml:mi><mml:mi>K</mml:mi></mml:mrow><mml:mrow><mml:mi>P</mml:mi><mml:mi>B</mml:mi></mml:mrow></mml:msub></mml:mrow></mml:mrow></mml:math></inline-formula>. If they succeed, B further re-encrypts Ctxt as <inline-formula><mml:math id="mm160" overflow="scroll"><mml:mrow><mml:mrow><mml:mi mathvariant="normal">C</mml:mi><mml:mi mathvariant="normal">t</mml:mi><mml:mi mathvariant="normal">x</mml:mi><mml:mi mathvariant="normal">t</mml:mi><mml:mi mathvariant="normal">&#8221;</mml:mi><mml:mo>=</mml:mo><mml:msub><mml:mrow><mml:mi mathvariant="normal">E</mml:mi></mml:mrow><mml:mrow><mml:msub><mml:mrow><mml:mi>S</mml:mi><mml:mi>K</mml:mi></mml:mrow><mml:mrow><mml:mi>P</mml:mi><mml:mi>B</mml:mi></mml:mrow></mml:msub></mml:mrow></mml:msub></mml:mrow></mml:mrow></mml:math></inline-formula>(Ctxt), appends a new <inline-formula><mml:math id="mm161" overflow="scroll"><mml:mrow><mml:mrow><mml:mi mathvariant="normal">H</mml:mi><mml:mi mathvariant="normal">M</mml:mi><mml:mi mathvariant="normal">A</mml:mi><mml:mi mathvariant="normal">C</mml:mi><mml:mi mathvariant="normal">&#8221;</mml:mi></mml:mrow></mml:mrow></mml:math></inline-formula>, and then forwards the MQTT message to the subscriber.</p><p>The subscriber S first decrypts and verifies the message, using the key <inline-formula><mml:math id="mm162" overflow="scroll"><mml:mrow><mml:mrow><mml:msub><mml:mrow><mml:mi>S</mml:mi><mml:mi>K</mml:mi></mml:mrow><mml:mrow><mml:mi>B</mml:mi><mml:mi>S</mml:mi></mml:mrow></mml:msub><mml:mo>=</mml:mo><mml:msup><mml:mrow><mml:mi>g</mml:mi></mml:mrow><mml:mrow><mml:msub><mml:mrow><mml:mi>T</mml:mi><mml:mi>P</mml:mi><mml:mi>r</mml:mi><mml:mi>K</mml:mi><mml:mn>2</mml:mn></mml:mrow><mml:mrow><mml:mi>B</mml:mi></mml:mrow></mml:msub><mml:mo>&#8727;</mml:mo><mml:msub><mml:mrow><mml:mi>T</mml:mi><mml:mi>P</mml:mi><mml:mi>r</mml:mi><mml:mi>K</mml:mi><mml:mn>1</mml:mn></mml:mrow><mml:mrow><mml:mi>S</mml:mi></mml:mrow></mml:msub></mml:mrow></mml:msup><mml:mi mathvariant="normal">m</mml:mi><mml:mi mathvariant="normal">o</mml:mi><mml:mi mathvariant="normal">d</mml:mi><mml:mi mathvariant="normal">p</mml:mi></mml:mrow></mml:mrow></mml:math></inline-formula>. It gets the content Ctxt and <inline-formula><mml:math id="mm163" overflow="scroll"><mml:mrow><mml:mrow><mml:mi>H</mml:mi><mml:mi>v</mml:mi><mml:mi>a</mml:mi><mml:mi>l</mml:mi></mml:mrow></mml:mrow></mml:math></inline-formula>, and then further decrypts it and verifies it, using the key <inline-formula><mml:math id="mm164" overflow="scroll"><mml:mrow><mml:mrow><mml:msub><mml:mrow><mml:mi>K</mml:mi><mml:mi>E</mml:mi><mml:mn>2</mml:mn><mml:mi>E</mml:mi></mml:mrow><mml:mrow><mml:mi>P</mml:mi><mml:mi>S</mml:mi></mml:mrow></mml:msub><mml:mo>=</mml:mo><mml:msup><mml:mrow><mml:mi>g</mml:mi></mml:mrow><mml:mrow><mml:msub><mml:mrow><mml:mi>T</mml:mi><mml:mi>P</mml:mi><mml:mi>r</mml:mi><mml:mi>K</mml:mi><mml:mn>2</mml:mn></mml:mrow><mml:mrow><mml:mi>P</mml:mi></mml:mrow></mml:msub><mml:mo>&#8727;</mml:mo><mml:msub><mml:mrow><mml:mi>T</mml:mi><mml:mi>P</mml:mi><mml:mi>r</mml:mi><mml:mi>K</mml:mi><mml:mn>2</mml:mn></mml:mrow><mml:mrow><mml:mi>S</mml:mi></mml:mrow></mml:msub></mml:mrow></mml:msup><mml:mi mathvariant="normal">m</mml:mi><mml:mi mathvariant="normal">o</mml:mi><mml:mi mathvariant="normal">d</mml:mi><mml:mi mathvariant="normal">p</mml:mi></mml:mrow></mml:mrow></mml:math></inline-formula>.</p><p>Scheme 2 provides mutual authentication, message authentication, and message integrity check on both the E2E channel and the client-broker channels. The encryption on the client&#8211;broker channels is based on the individual session key.</p></sec><sec id="sec3dot4dot3-sensors-25-05308"><title>3.4.3. The Details of Scheme 3</title><p>Steps 1~15 of Scheme 3 are similar to those of Scheme 1, but they differ in the selections of the channel keys and the steps of Block 3. The E2E channel <inline-formula><mml:math id="mm165" overflow="scroll"><mml:mrow><mml:mrow><mml:msub><mml:mrow><mml:mi>C</mml:mi><mml:mi>H</mml:mi><mml:mi>L</mml:mi></mml:mrow><mml:mrow><mml:mi>P</mml:mi><mml:msub><mml:mrow><mml:mi>S</mml:mi></mml:mrow><mml:mrow><mml:mi>i</mml:mi></mml:mrow></mml:msub></mml:mrow></mml:msub></mml:mrow></mml:mrow></mml:math></inline-formula> uses <inline-formula><mml:math id="mm166" overflow="scroll"><mml:mrow><mml:mrow><mml:msub><mml:mrow><mml:mi>K</mml:mi><mml:mi>E</mml:mi><mml:mn>2</mml:mn><mml:mi>E</mml:mi></mml:mrow><mml:mrow><mml:mi>P</mml:mi><mml:msub><mml:mrow><mml:mi>S</mml:mi></mml:mrow><mml:mrow><mml:mi>i</mml:mi></mml:mrow></mml:msub></mml:mrow></mml:msub><mml:mo>=</mml:mo><mml:msub><mml:mrow><mml:mi>G</mml:mi><mml:mi>K</mml:mi></mml:mrow><mml:mrow><mml:mi>P</mml:mi></mml:mrow></mml:msub></mml:mrow></mml:mrow></mml:math></inline-formula>, where the <inline-formula><mml:math id="mm167" overflow="scroll"><mml:mrow><mml:mrow><mml:msub><mml:mrow><mml:mi>G</mml:mi><mml:mi>K</mml:mi></mml:mrow><mml:mrow><mml:mi>P</mml:mi></mml:mrow></mml:msub></mml:mrow></mml:mrow></mml:math></inline-formula> key is set as the group key distributed by P; the channel <inline-formula><mml:math id="mm168" overflow="scroll"><mml:mrow><mml:mrow><mml:msub><mml:mrow><mml:mi>C</mml:mi><mml:mi>H</mml:mi><mml:mi>L</mml:mi></mml:mrow><mml:mrow><mml:mi>B</mml:mi><mml:msub><mml:mrow><mml:mi>S</mml:mi></mml:mrow><mml:mrow><mml:mi>i</mml:mi></mml:mrow></mml:msub></mml:mrow></mml:msub></mml:mrow></mml:mrow></mml:math></inline-formula> uses the key <inline-formula><mml:math id="mm169" overflow="scroll"><mml:mrow><mml:mrow><mml:msub><mml:mrow><mml:mi>S</mml:mi><mml:mi>K</mml:mi></mml:mrow><mml:mrow><mml:mi>B</mml:mi><mml:msub><mml:mrow><mml:mi>S</mml:mi></mml:mrow><mml:mrow><mml:mi>i</mml:mi></mml:mrow></mml:msub></mml:mrow></mml:msub><mml:mo>=</mml:mo><mml:msub><mml:mrow><mml:mi>G</mml:mi><mml:mi>K</mml:mi></mml:mrow><mml:mrow><mml:mi>B</mml:mi></mml:mrow></mml:msub></mml:mrow></mml:mrow></mml:math></inline-formula>, where <inline-formula><mml:math id="mm170" overflow="scroll"><mml:mrow><mml:mrow><mml:msub><mml:mrow><mml:mi>G</mml:mi><mml:mi>K</mml:mi></mml:mrow><mml:mrow><mml:mi>B</mml:mi></mml:mrow></mml:msub></mml:mrow></mml:mrow></mml:math></inline-formula> is the group key distributed by <italic toggle="yes">B.</italic></p><p>When the publisher P publishes a message Mtxt, it encrypts Mtxt as Ctxt = <inline-formula><mml:math id="mm171" overflow="scroll"><mml:mrow><mml:mrow><mml:msub><mml:mrow><mml:mi mathvariant="normal">E</mml:mi></mml:mrow><mml:mrow><mml:msub><mml:mrow><mml:mi>G</mml:mi><mml:mi>K</mml:mi></mml:mrow><mml:mrow><mml:mi>P</mml:mi></mml:mrow></mml:msub></mml:mrow></mml:msub></mml:mrow></mml:mrow></mml:math></inline-formula>(Mtxt), and generates the corresponding <inline-formula><mml:math id="mm172" overflow="scroll"><mml:mrow><mml:mrow><mml:msub><mml:mrow><mml:mi>H</mml:mi><mml:mi>v</mml:mi><mml:mi>a</mml:mi><mml:mi>l</mml:mi><mml:mo>=</mml:mo><mml:mi>H</mml:mi><mml:mi>M</mml:mi><mml:mi>A</mml:mi><mml:mi>C</mml:mi></mml:mrow><mml:mrow><mml:msub><mml:mrow><mml:mi>G</mml:mi><mml:mi>K</mml:mi></mml:mrow><mml:mrow><mml:mi>P</mml:mi></mml:mrow></mml:msub></mml:mrow></mml:msub></mml:mrow></mml:mrow></mml:math></inline-formula>(Ctxt). This process is for securing the content on the E2E channel <inline-formula><mml:math id="mm173" overflow="scroll"><mml:mrow><mml:mrow><mml:msub><mml:mrow><mml:mi>C</mml:mi><mml:mi>H</mml:mi><mml:mi>L</mml:mi></mml:mrow><mml:mrow><mml:mi>P</mml:mi><mml:msub><mml:mrow><mml:mi>S</mml:mi></mml:mrow><mml:mrow><mml:mi>i</mml:mi></mml:mrow></mml:msub></mml:mrow></mml:msub></mml:mrow></mml:mrow></mml:math></inline-formula>. P further encrypts Ctxt as <inline-formula><mml:math id="mm174" overflow="scroll"><mml:mrow><mml:mrow><mml:msup><mml:mi>Ctxt</mml:mi><mml:mo>&#8242;</mml:mo></mml:msup><mml:mo>=</mml:mo><mml:msub><mml:mrow><mml:mi mathvariant="normal">E</mml:mi></mml:mrow><mml:mrow><mml:msub><mml:mrow><mml:mi>S</mml:mi><mml:mi>K</mml:mi></mml:mrow><mml:mrow><mml:mi>P</mml:mi><mml:mi>B</mml:mi></mml:mrow></mml:msub></mml:mrow></mml:msub></mml:mrow></mml:mrow></mml:math></inline-formula>(Ctxt), appends it with the corresponding <inline-formula><mml:math id="mm175" overflow="scroll"><mml:mrow><mml:mrow><mml:msup><mml:mi>HAMC</mml:mi><mml:mo>&#8242;</mml:mo></mml:msup></mml:mrow></mml:mrow></mml:math></inline-formula>, and finally specifies the topic, <inline-formula><mml:math id="mm176" overflow="scroll"><mml:mrow><mml:mrow><mml:msup><mml:mi>Ctxt</mml:mi><mml:mo>&#8242;</mml:mo></mml:msup></mml:mrow></mml:mrow></mml:math></inline-formula>, and <inline-formula><mml:math id="mm177" overflow="scroll"><mml:mrow><mml:mrow><mml:msup><mml:mi>HAMC</mml:mi><mml:mo>&#8242;</mml:mo></mml:msup></mml:mrow></mml:mrow></mml:math></inline-formula> in an MQTT message to the broker.</p><p>The broker decrypts <inline-formula><mml:math id="mm178" overflow="scroll"><mml:mrow><mml:mrow><mml:msup><mml:mrow><mml:mi mathvariant="normal">C</mml:mi><mml:mi mathvariant="normal">t</mml:mi><mml:mi mathvariant="normal">x</mml:mi><mml:mi mathvariant="normal">t</mml:mi></mml:mrow><mml:mrow><mml:mo>&#8242;</mml:mo></mml:mrow></mml:msup></mml:mrow></mml:mrow></mml:math></inline-formula> and verifies <inline-formula><mml:math id="mm179" overflow="scroll"><mml:mrow><mml:mrow><mml:msup><mml:mrow><mml:mi mathvariant="normal">H</mml:mi><mml:mi mathvariant="normal">A</mml:mi><mml:mi mathvariant="normal">M</mml:mi><mml:mi mathvariant="normal">C</mml:mi></mml:mrow><mml:mrow><mml:mo>&#8242;</mml:mo></mml:mrow></mml:msup></mml:mrow></mml:mrow></mml:math></inline-formula>, using <inline-formula><mml:math id="mm180" overflow="scroll"><mml:mrow><mml:mrow><mml:msub><mml:mrow><mml:mi>S</mml:mi><mml:mi>K</mml:mi></mml:mrow><mml:mrow><mml:mi>P</mml:mi><mml:mi>B</mml:mi></mml:mrow></mml:msub></mml:mrow></mml:mrow></mml:math></inline-formula>. If they succeed, B further re-encrypts Ctxt as <inline-formula><mml:math id="mm181" overflow="scroll"><mml:mrow><mml:mrow><mml:mi mathvariant="normal">C</mml:mi><mml:mi mathvariant="normal">t</mml:mi><mml:mi mathvariant="normal">x</mml:mi><mml:mi mathvariant="normal">t</mml:mi><mml:mi mathvariant="normal">&#8221;</mml:mi><mml:mo>=</mml:mo><mml:msub><mml:mrow><mml:mi mathvariant="normal">E</mml:mi></mml:mrow><mml:mrow><mml:msub><mml:mrow><mml:mi>G</mml:mi><mml:mi>K</mml:mi></mml:mrow><mml:mrow><mml:mi>B</mml:mi></mml:mrow></mml:msub></mml:mrow></mml:msub></mml:mrow></mml:mrow></mml:math></inline-formula>(Ctxt), appends a new <inline-formula><mml:math id="mm182" overflow="scroll"><mml:mrow><mml:mrow><mml:mi mathvariant="normal">H</mml:mi><mml:mi mathvariant="normal">M</mml:mi><mml:mi mathvariant="normal">A</mml:mi><mml:mi mathvariant="normal">C</mml:mi><mml:mi mathvariant="normal">&#8221;</mml:mi></mml:mrow></mml:mrow></mml:math></inline-formula>, and then forwards the MQTT message to the subscriber.</p><p>The subscriber S first decrypts and verifies the message, using the key <inline-formula><mml:math id="mm183" overflow="scroll"><mml:mrow><mml:mrow><mml:msub><mml:mrow><mml:mi>G</mml:mi><mml:mi>K</mml:mi></mml:mrow><mml:mrow><mml:mi>B</mml:mi></mml:mrow></mml:msub></mml:mrow></mml:mrow></mml:math></inline-formula>. It gets the content Ctxt and <inline-formula><mml:math id="mm184" overflow="scroll"><mml:mrow><mml:mrow><mml:mi>H</mml:mi><mml:mi>v</mml:mi><mml:mi>a</mml:mi><mml:mi>l</mml:mi></mml:mrow></mml:mrow></mml:math></inline-formula>, and then further decrypts it and verifies it, using the key <inline-formula><mml:math id="mm185" overflow="scroll"><mml:mrow><mml:mrow><mml:msub><mml:mrow><mml:mi>G</mml:mi><mml:mi>K</mml:mi></mml:mrow><mml:mrow><mml:mi>P</mml:mi></mml:mrow></mml:msub></mml:mrow></mml:mrow></mml:math></inline-formula>.</p><p>Scheme 3 provides mutual authentication, message authentication, and message integrity check on both the E2E channel and the client&#8211;broker channels. The operations on the client&#8211;broker channels are based on the group key. Note that both the E2E channel and the channel <inline-formula><mml:math id="mm186" overflow="scroll"><mml:mrow><mml:mrow><mml:msub><mml:mrow><mml:mi mathvariant="normal">C</mml:mi><mml:mi mathvariant="normal">H</mml:mi><mml:mi mathvariant="normal">L</mml:mi></mml:mrow><mml:mrow><mml:mi mathvariant="normal">B</mml:mi><mml:msub><mml:mrow><mml:mi mathvariant="normal">S</mml:mi></mml:mrow><mml:mrow><mml:mi mathvariant="normal">i</mml:mi></mml:mrow></mml:msub></mml:mrow></mml:msub></mml:mrow></mml:mrow></mml:math></inline-formula> use the corresponding group keys: this can reduce some overhead, as the publisher can do the encryption/integrity protection once for all subscribers of the same message; it applies to the broker&#8217;s operations too.</p></sec><sec id="sec3dot4dot4-sensors-25-05308"><title>3.4.4. The Details of Scheme 4</title><p>Steps 1~15 of Scheme 4 are similar to those of Scheme 1, but they differ in the selections of the channel keys and the steps of Block 3. The E2E channel <inline-formula><mml:math id="mm187" overflow="scroll"><mml:mrow><mml:mrow><mml:msub><mml:mrow><mml:mi>C</mml:mi><mml:mi>H</mml:mi><mml:mi>L</mml:mi></mml:mrow><mml:mrow><mml:mi>P</mml:mi><mml:msub><mml:mrow><mml:mi>S</mml:mi></mml:mrow><mml:mrow><mml:mi>i</mml:mi></mml:mrow></mml:msub></mml:mrow></mml:msub></mml:mrow></mml:mrow></mml:math></inline-formula> uses <inline-formula><mml:math id="mm188" overflow="scroll"><mml:mrow><mml:mrow><mml:msub><mml:mrow><mml:mi>K</mml:mi><mml:mi>E</mml:mi><mml:mn>2</mml:mn><mml:mi>E</mml:mi></mml:mrow><mml:mrow><mml:mi>P</mml:mi><mml:msub><mml:mrow><mml:mi>S</mml:mi></mml:mrow><mml:mrow><mml:mi>i</mml:mi></mml:mrow></mml:msub></mml:mrow></mml:msub><mml:mo>=</mml:mo><mml:msub><mml:mrow><mml:mi>G</mml:mi><mml:mi>K</mml:mi></mml:mrow><mml:mrow><mml:mi>P</mml:mi></mml:mrow></mml:msub></mml:mrow></mml:mrow></mml:math></inline-formula>, where the <inline-formula><mml:math id="mm189" overflow="scroll"><mml:mrow><mml:mrow><mml:msub><mml:mrow><mml:mi>G</mml:mi><mml:mi>K</mml:mi></mml:mrow><mml:mrow><mml:mi>P</mml:mi></mml:mrow></mml:msub></mml:mrow></mml:mrow></mml:math></inline-formula> key is set as the group key chosen and distributed by P; the channel <inline-formula><mml:math id="mm190" overflow="scroll"><mml:mrow><mml:mrow><mml:msub><mml:mrow><mml:mi>C</mml:mi><mml:mi>H</mml:mi><mml:mi>L</mml:mi></mml:mrow><mml:mrow><mml:mi>B</mml:mi><mml:msub><mml:mrow><mml:mi>S</mml:mi></mml:mrow><mml:mrow><mml:mi>i</mml:mi></mml:mrow></mml:msub></mml:mrow></mml:msub></mml:mrow></mml:mrow></mml:math></inline-formula> uses the key <inline-formula><mml:math id="mm191" overflow="scroll"><mml:mrow><mml:mrow><mml:msub><mml:mrow><mml:mi>S</mml:mi><mml:mi>K</mml:mi></mml:mrow><mml:mrow><mml:mi>B</mml:mi><mml:msub><mml:mrow><mml:mi>S</mml:mi></mml:mrow><mml:mrow><mml:mi>i</mml:mi></mml:mrow></mml:msub></mml:mrow></mml:msub><mml:mo>=</mml:mo><mml:msub><mml:mrow><mml:mi>G</mml:mi><mml:mi>K</mml:mi></mml:mrow><mml:mrow><mml:mi>B</mml:mi></mml:mrow></mml:msub></mml:mrow></mml:mrow></mml:math></inline-formula>, where <inline-formula><mml:math id="mm192" overflow="scroll"><mml:mrow><mml:mrow><mml:msub><mml:mrow><mml:mi>G</mml:mi><mml:mi>K</mml:mi></mml:mrow><mml:mrow><mml:mi>B</mml:mi></mml:mrow></mml:msub></mml:mrow></mml:mrow></mml:math></inline-formula> is the group key chosen and distributed by <italic toggle="yes">B.</italic></p><p>When the publisher P publishes a message Mtxt, it encrypts Mtxt as Ctxt = <inline-formula><mml:math id="mm193" overflow="scroll"><mml:mrow><mml:mrow><mml:msub><mml:mrow><mml:mi mathvariant="normal">E</mml:mi></mml:mrow><mml:mrow><mml:msub><mml:mrow><mml:mi>G</mml:mi><mml:mi>K</mml:mi></mml:mrow><mml:mrow><mml:mi>P</mml:mi></mml:mrow></mml:msub></mml:mrow></mml:msub></mml:mrow></mml:mrow></mml:math></inline-formula>(Mtxt), and generates the corresponding <inline-formula><mml:math id="mm194" overflow="scroll"><mml:mrow><mml:mrow><mml:msub><mml:mrow><mml:mi>H</mml:mi><mml:mi>v</mml:mi><mml:mi>a</mml:mi><mml:mi>l</mml:mi><mml:mo>=</mml:mo><mml:mi>H</mml:mi><mml:mi>M</mml:mi><mml:mi>A</mml:mi><mml:mi>C</mml:mi></mml:mrow><mml:mrow><mml:msub><mml:mrow><mml:mi>G</mml:mi><mml:mi>K</mml:mi></mml:mrow><mml:mrow><mml:mi>P</mml:mi></mml:mrow></mml:msub></mml:mrow></mml:msub></mml:mrow></mml:mrow></mml:math></inline-formula>(Ctxt). This process is for securing the content on the E2E channel <inline-formula><mml:math id="mm195" overflow="scroll"><mml:mrow><mml:mrow><mml:msub><mml:mrow><mml:mi>C</mml:mi><mml:mi>H</mml:mi><mml:mi>L</mml:mi></mml:mrow><mml:mrow><mml:mi>P</mml:mi><mml:msub><mml:mrow><mml:mi>S</mml:mi></mml:mrow><mml:mrow><mml:mi>i</mml:mi></mml:mrow></mml:msub></mml:mrow></mml:msub></mml:mrow></mml:mrow></mml:math></inline-formula>. Please note that P <italic toggle="yes">does not</italic> further encrypt Ctxt but only appends it with the corresponding <inline-formula><mml:math id="mm196" overflow="scroll"><mml:mrow><mml:mrow><mml:msup><mml:mi>HAMC</mml:mi><mml:mo>&#8242;</mml:mo></mml:msup></mml:mrow></mml:mrow></mml:math></inline-formula>, and finally specifies the topic, <inline-formula><mml:math id="mm197" overflow="scroll"><mml:mrow><mml:mrow><mml:mi mathvariant="normal">C</mml:mi><mml:mi mathvariant="normal">t</mml:mi><mml:mi mathvariant="normal">x</mml:mi><mml:mi mathvariant="normal">t</mml:mi></mml:mrow></mml:mrow></mml:math></inline-formula>, and <inline-formula><mml:math id="mm198" overflow="scroll"><mml:mrow><mml:mrow><mml:msup><mml:mi>HAMC</mml:mi><mml:mo>&#8242;</mml:mo></mml:msup></mml:mrow></mml:mrow></mml:math></inline-formula> in an MQTT message to the broker.</p><p>The broker verifies <inline-formula><mml:math id="mm199" overflow="scroll"><mml:mrow><mml:mrow><mml:msup><mml:mrow><mml:mi mathvariant="normal">H</mml:mi><mml:mi mathvariant="normal">A</mml:mi><mml:mi mathvariant="normal">M</mml:mi><mml:mi mathvariant="normal">C</mml:mi></mml:mrow><mml:mrow><mml:mo>&#8242;</mml:mo></mml:mrow></mml:msup></mml:mrow></mml:mrow></mml:math></inline-formula>, using <inline-formula><mml:math id="mm200" overflow="scroll"><mml:mrow><mml:mrow><mml:msub><mml:mrow><mml:mi>S</mml:mi><mml:mi>K</mml:mi></mml:mrow><mml:mrow><mml:mi>P</mml:mi><mml:mi>B</mml:mi></mml:mrow></mml:msub></mml:mrow></mml:mrow></mml:math></inline-formula>. If they succeed, B <italic toggle="yes">does not</italic> re-encrypt Ctxt but appends a new <inline-formula><mml:math id="mm201" overflow="scroll"><mml:mrow><mml:mrow><mml:mi mathvariant="normal">H</mml:mi><mml:mi mathvariant="normal">M</mml:mi><mml:mi mathvariant="normal">A</mml:mi><mml:mi mathvariant="normal">C</mml:mi><mml:mi mathvariant="normal">&#8221;</mml:mi></mml:mrow></mml:mrow></mml:math></inline-formula>, and then forwards the MQTT message to the subscriber.</p><p>The subscriber S first verifies the message, using the key <inline-formula><mml:math id="mm202" overflow="scroll"><mml:mrow><mml:mrow><mml:msub><mml:mrow><mml:mi>G</mml:mi><mml:mi>K</mml:mi></mml:mrow><mml:mrow><mml:mi>B</mml:mi></mml:mrow></mml:msub></mml:mrow></mml:mrow></mml:math></inline-formula>. It gets the content Ctxt and <inline-formula><mml:math id="mm203" overflow="scroll"><mml:mrow><mml:mrow><mml:mi>H</mml:mi><mml:mi>v</mml:mi><mml:mi>a</mml:mi><mml:mi>l</mml:mi></mml:mrow></mml:mrow></mml:math></inline-formula>, and then further decrypts it and verifies it, using the key <inline-formula><mml:math id="mm204" overflow="scroll"><mml:mrow><mml:mrow><mml:msub><mml:mrow><mml:mi>G</mml:mi><mml:mi>K</mml:mi></mml:mrow><mml:mrow><mml:mi>P</mml:mi></mml:mrow></mml:msub></mml:mrow></mml:mrow></mml:math></inline-formula>.</p><p>Scheme 4 provides mutual authentication, message authentication, and message integrity check on both the E2E channel; but it provides only message authentication and integrity checks on the client&#8211;broker channels. The operations on the client&#8211;broker channels are based on the group key. Note that both the E2E channel and the channel <inline-formula><mml:math id="mm205" overflow="scroll"><mml:mrow><mml:mrow><mml:msub><mml:mrow><mml:mi mathvariant="normal">C</mml:mi><mml:mi mathvariant="normal">H</mml:mi><mml:mi mathvariant="normal">L</mml:mi></mml:mrow><mml:mrow><mml:mi mathvariant="normal">B</mml:mi><mml:msub><mml:mrow><mml:mi mathvariant="normal">S</mml:mi></mml:mrow><mml:mrow><mml:mi mathvariant="normal">i</mml:mi></mml:mrow></mml:msub></mml:mrow></mml:msub></mml:mrow></mml:mrow></mml:math></inline-formula> use the corresponding group keys: this can reduce some overhead, as the publisher can perform the integrity protection once for all subscribers of the same message; it applies to the broker&#8217;s operations too. Please note that Scheme 4, compared to Scheme 3, further eliminates the double-encryption issue on the client&#8211;broker channels.</p></sec></sec></sec><sec id="sec4-sensors-25-05308"><title>4. Performance Analysis, Implementations, and Evaluations</title><p>To evaluate the performance of the schemes, we first analyze the performance in <xref rid="sec4dot1-sensors-25-05308" ref-type="sec">Section 4.1</xref>, and then introduce our implementations and simulation evaluations in <xref rid="sec4dot2-sensors-25-05308" ref-type="sec">Section 4.2</xref>.</p><sec id="sec4dot1-sensors-25-05308"><title>4.1. The Performance Analysis</title><p><xref rid="sensors-25-05308-t002" ref-type="table">Table 2</xref> sorts out the performances in terms of the security supports, the computational performance, and the latency performance. Assume there are <italic toggle="yes">n</italic> subscribers for one MQTT message from a publisher. Let <inline-formula><mml:math id="mm206" overflow="scroll"><mml:mrow><mml:mrow><mml:msub><mml:mrow><mml:mi>T</mml:mi></mml:mrow><mml:mrow><mml:mi>E</mml:mi></mml:mrow></mml:msub></mml:mrow></mml:mrow></mml:math></inline-formula> denote the computational cost for one MQTT message encryption; <inline-formula><mml:math id="mm207" overflow="scroll"><mml:mrow><mml:mrow><mml:msub><mml:mrow><mml:mi>T</mml:mi></mml:mrow><mml:mrow><mml:mi>H</mml:mi></mml:mrow></mml:msub></mml:mrow></mml:mrow></mml:math></inline-formula> denotes the computational cost for one MQTT message HAMC calculation.</p><p>From <xref rid="sensors-25-05308-t002" ref-type="table">Table 2</xref>, we can see that Scheme 2 demands the most expensive computational cost, due to the usage of individual keys. Scheme 4, compared to Scheme 3, slightly improves the computational overhead while keeping the necessary security supports. Even though Scheme 1 is the most efficient one in the above four schemes, Scheme 1 does not provide message authentication on the client-broker channels; therefore, Scheme 4 is the one that can achieve efficiency performance while providing the desirable security.</p></sec><sec id="sec4dot2-sensors-25-05308"><title>4.2. The Implementations, Simulations, and Evaluations</title><p>We implement the four schemes, using Mosquitto [<xref rid="B37-sensors-25-05308" ref-type="bibr">37</xref>] APIs, OpenSSL [<xref rid="B38-sensors-25-05308" ref-type="bibr">38</xref>], json-c library [<xref rid="B39-sensors-25-05308" ref-type="bibr">39</xref>] and VMware [<xref rid="B40-sensors-25-05308" ref-type="bibr">40</xref>]. Mosquitto is a popular open-source MQTT package, and the newest versions support MQTT 5.0. Mosquitto&#8217;s plugins facilitate developers to implement customized programs. The clients from the Paho [<xref rid="B41-sensors-25-05308" ref-type="bibr">41</xref>] package have been adopted.</p><p>We first design and deploy two scenarios in <xref rid="sensors-25-05308-f004" ref-type="fig">Figure 4</xref>. In <xref rid="sensors-25-05308-f004" ref-type="fig">Figure 4</xref>a (Scenario 1), there is one NoteBook (NB) with two VMs: VM1 is for the broker, and VM2 is for one publisher with 10/20/50/100/200 subscribers. In <xref rid="sensors-25-05308-f004" ref-type="fig">Figure 4</xref>b (Scenario 2), there is one NB with three VMs: VM1 is for the broker, and VM2 is for one publisher with 50 subscribers, VM 3 is for 50 subscribers. The hardware and software used are summarized in <xref rid="sensors-25-05308-t003" ref-type="table">Table 3</xref>.</p><p>The experiments are conducted as follows. First, the broker starts up, the publisher connects, and then the subscriber connects. Second, the publisher publishes 1000 MQTT messages, and all the subscribers receive the messages. Here, we are concerned about two metrics: one is the connection latencies, and the others are the latencies between a MQTT message travels from the publisher to a subscriber.</p><list list-type="simple"><list-item><p>
<bold>Connection latency</bold>
</p></list-item></list><p>Regarding the connection latencies, we design two scenarios: one is only five subscribers (<xref rid="sensors-25-05308-t004" ref-type="table">Table 4</xref>), and the other is for a varying number of subscribers.</p><p><xref rid="sensors-25-05308-t005" ref-type="table">Table 5</xref> shows the connection latencies for a varying number of subscribers. <xref rid="sensors-25-05308-f005" ref-type="fig">Figure 5</xref> shows the connection latencies for a varying number of subscribers. From the figure, we can see that the proposed E2E connection is quite stable, and the latency for subscribers is slightly larger than that for the publisher, as it takes more steps for the subscriber. We also notice that, even when there are 200 subscribers, the subscribers&#8217; connection latency is still quite small (less than 300 ms). It confirms that the proposed E2E connection is quite efficient.</p><list list-type="simple"><list-item><p>
<bold>Publishing&#8211;receiving latency</bold>
</p></list-item></list><p>The publishing&#8211;receiving latencies in Scenario 1 are summarized in <xref rid="sensors-25-05308-t006" ref-type="table">Table 6</xref>. <xref rid="sensors-25-05308-f006" ref-type="fig">Figure 6</xref> shows the latencies of the four schemes for different subscribers in Scenario 1. Here, we can see that, as the number of subscribers increases, the latencies increase in the four schemes. Comparing the latencies of the four schemes, Scheme 1 &lt; Scheme 4 &lt; Scheme 3 &lt; Scheme 2, which confirms our analysis that more overhead on the client&#8211;broker channel would have an impact on the latency performance. Obviously, Scheme 2 demands the most cost (shown in <xref rid="sensors-25-05308-t002" ref-type="table">Table 2</xref>) and demands the longest latency (shown in <xref rid="sensors-25-05308-f006" ref-type="fig">Figure 6</xref>).</p><p>Next, we focus on comparing Scheme 1, Scheme 3, and Scheme 4 for Scenario 2. Here, the results (<xref rid="sensors-25-05308-t007" ref-type="table">Table 7</xref>) again confirm that the latency order is Scheme 1 &lt; Scheme 3 &lt; Scheme 3 &lt; Scheme 2. In these scenarios, we find that the average latency of Scheme 4 is the smallest, and both Scheme 3 and 4 can improve the latency performance while preserving the desirable security. That is, both the group-key-based approach can improve the efficiency and the client&#8211;broker channel integrity-only approach can further reduce the average latency.</p><p>Next, we focus on Scenario 3 (<xref rid="sensors-25-05308-f007" ref-type="fig">Figure 7</xref>), where subscribers are deployed in two different sub-nets (domains) to evaluate the inter-networking impact on the latencies.</p><p>The results (<xref rid="sensors-25-05308-t008" ref-type="table">Table 8</xref>) indicate that both Scheme 3 and Scheme 4 could improve the latency performance, compared to Scheme 2 (the conventional MQTT E2E model); that is, the group-key-based approach apparently reduces the latency. In both the 100/200-subscriber simulations, the latency of Scheme 3 &gt; the latency of Scheme 4. This indicates that the client&#8211;broker channel integrity-only approach further improves the latency.</p><p><xref rid="sensors-25-05308-f008" ref-type="fig">Figure 8</xref> shows the memory/CPU utilization in broker VM, the publisher-100subscriber VM2, and the 100subscriber VM3. We can see that the CPU/memory utilization for all three VMs increases after the subscribers become active: it means that the broker, the publisher, and the subscribers need to process more computations and communications.</p><p>Summarizing the above analysis and the simulations, we confirm that the proposed Scheme 4 (<inline-formula><mml:math id="mm208" overflow="scroll"><mml:mrow><mml:mrow><mml:msub><mml:mrow><mml:mi>C</mml:mi><mml:mi>H</mml:mi><mml:mi>L</mml:mi></mml:mrow><mml:mrow><mml:mi>P</mml:mi><mml:msub><mml:mrow><mml:mi>S</mml:mi></mml:mrow><mml:mrow><mml:mi>i</mml:mi></mml:mrow></mml:msub></mml:mrow></mml:msub><mml:mi>E</mml:mi><mml:mi>I</mml:mi><mml:mi>G</mml:mi><mml:mo>_</mml:mo><mml:msub><mml:mrow><mml:mi>C</mml:mi><mml:mi>H</mml:mi><mml:mi>L</mml:mi></mml:mrow><mml:mrow><mml:mi>B</mml:mi><mml:mi>S</mml:mi></mml:mrow></mml:msub><mml:mi>I</mml:mi><mml:mi>G</mml:mi></mml:mrow></mml:mrow></mml:math></inline-formula>) can significantly improve the latency while preserving the desirable security.</p></sec><sec id="sec4dot3-sensors-25-05308"><title>4.3. Comparison</title><p>Here, we make a comparison among some studies which are related in a broader sense; some of them are MQTT related and some are just general pub/sub systems. <xref rid="sensors-25-05308-t009" ref-type="table">Table 9</xref> briefly summarizes the qualitative features of these schemes.</p><p>Here, we have some observations from the table. Regarding the MQTT broker-based E2E models, our work confirms that both the group key-based approach and the client&#8211;broker channel integrity-only approach can improve the efficiency while preserving the desirable security properties. When we extend the scope to include brokerless MQTT and SDN communication support, they both have the potential to improve the efficiency, too; these approaches can complement each other and combining the ideas from these approaches might further improve the overall performance; however, further investigations are required.</p></sec></sec><sec id="sec5-sensors-25-05308"><title>5. Security Analysis and Proof</title><p>This section will examine the security of the proposed scheme. Here, we will focus on the security analysis of Scheme 4 in <xref rid="sec5dot1-sensors-25-05308" ref-type="sec">Section 5.1</xref> and the security proof in <xref rid="sec5dot2-sensors-25-05308" ref-type="sec">Section 5.2</xref>. Here, we focus on Scheme 4 as it satisfies the security goals and greatly improves the latency performance (as shown in <xref rid="sec4-sensors-25-05308" ref-type="sec">Section 4</xref>).</p><sec id="sec5dot1-sensors-25-05308"><title>5.1. Security Analysis</title><p>Here, we analyze each security goal of Scheme 4.</p><list list-type="simple"><list-item><p><bold>The mutual authentication of the publisher&#8211;broker channel <inline-formula><mml:math id="mm209" overflow="scroll"><mml:mrow><mml:mrow><mml:msub><mml:mrow><mml:mi>C</mml:mi><mml:mi>H</mml:mi><mml:mi>L</mml:mi></mml:mrow><mml:mrow><mml:mi>P</mml:mi><mml:mi>B</mml:mi></mml:mrow></mml:msub></mml:mrow></mml:mrow></mml:math></inline-formula></bold>. In the channel building <inline-formula><mml:math id="mm210" overflow="scroll"><mml:mrow><mml:mrow><mml:msub><mml:mrow><mml:mi>C</mml:mi><mml:mi>H</mml:mi><mml:mi>L</mml:mi></mml:mrow><mml:mrow><mml:mi>P</mml:mi><mml:mi>B</mml:mi></mml:mrow></mml:msub></mml:mrow></mml:mrow></mml:math></inline-formula> phase (Block 1), the publisher and the broker exchange their certificates, their ephemeral public keys <inline-formula><mml:math id="mm211" overflow="scroll"><mml:mrow><mml:mrow><mml:mo>(</mml:mo><mml:msub><mml:mrow><mml:mi>T</mml:mi><mml:mi>P</mml:mi><mml:mi>K</mml:mi><mml:mn>1</mml:mn></mml:mrow><mml:mrow><mml:mi>P</mml:mi></mml:mrow></mml:msub></mml:mrow></mml:mrow></mml:math></inline-formula>,<inline-formula><mml:math id="mm212" overflow="scroll"><mml:mrow><mml:mrow><mml:msub><mml:mrow><mml:mi>T</mml:mi><mml:mi>P</mml:mi><mml:mi>K</mml:mi><mml:mn>1</mml:mn></mml:mrow><mml:mrow><mml:mi>S</mml:mi></mml:mrow></mml:msub><mml:mo>)</mml:mo></mml:mrow></mml:mrow></mml:math></inline-formula>, timestamps, and their digital signatures on the transmitted data, which enable them to authenticate the participating entities. During the authentication, they establish their Diffie&#8211;Hellman key <inline-formula><mml:math id="mm213" overflow="scroll"><mml:mrow><mml:mrow><mml:msub><mml:mrow><mml:mi>S</mml:mi><mml:mi>K</mml:mi></mml:mrow><mml:mrow><mml:mi>P</mml:mi><mml:mi>B</mml:mi></mml:mrow></mml:msub><mml:mo>=</mml:mo><mml:msup><mml:mrow><mml:mi>g</mml:mi></mml:mrow><mml:mrow><mml:msub><mml:mrow><mml:mi>T</mml:mi><mml:mi>P</mml:mi><mml:mi>r</mml:mi><mml:mi>K</mml:mi><mml:mn>1</mml:mn></mml:mrow><mml:mrow><mml:mi>P</mml:mi></mml:mrow></mml:msub><mml:mo>&#8727;</mml:mo><mml:msub><mml:mrow><mml:mi>T</mml:mi><mml:mi>P</mml:mi><mml:mi>r</mml:mi><mml:mi>K</mml:mi><mml:mn>1</mml:mn></mml:mrow><mml:mrow><mml:mi>B</mml:mi></mml:mrow></mml:msub></mml:mrow></mml:msup><mml:mi>modp</mml:mi></mml:mrow></mml:mrow></mml:math></inline-formula>.</p><p>
<bold>The privacy and integrity of the MQTT payload in the <inline-formula><mml:math id="mm214" overflow="scroll"><mml:mrow><mml:mrow><mml:msub><mml:mrow><mml:mi mathvariant="bold-italic">C</mml:mi><mml:mi mathvariant="bold-italic">H</mml:mi><mml:mi mathvariant="bold-italic">L</mml:mi></mml:mrow><mml:mrow><mml:mi mathvariant="bold-italic">P</mml:mi><mml:mi mathvariant="bold-italic">B</mml:mi></mml:mrow></mml:msub></mml:mrow></mml:mrow></mml:math></inline-formula></bold>
</p><p><bold>channel.</bold> After the channel building, the MQTT payload would be encrypted using the Diffie&#8211;Hellman key <inline-formula><mml:math id="mm215" overflow="scroll"><mml:mrow><mml:mrow><mml:msub><mml:mrow><mml:mi>S</mml:mi><mml:mi>K</mml:mi></mml:mrow><mml:mrow><mml:mi>P</mml:mi><mml:mi>B</mml:mi></mml:mrow></mml:msub></mml:mrow></mml:mrow></mml:math></inline-formula> in Schemes 2,3, which ensures the privacy of the MQTT payload in the <inline-formula><mml:math id="mm216" overflow="scroll"><mml:mrow><mml:mrow><mml:msub><mml:mrow><mml:mi>C</mml:mi><mml:mi>H</mml:mi><mml:mi>L</mml:mi></mml:mrow><mml:mrow><mml:mi>P</mml:mi><mml:mi>B</mml:mi></mml:mrow></mml:msub></mml:mrow></mml:mrow></mml:math></inline-formula> channel in Schemess 2,3. The MQTT payload would be integrity protected in Schemes 2,3,4.</p><p><bold>The mutual authentication of the broker&#8211;subscriber channel <inline-formula><mml:math id="mm217" overflow="scroll"><mml:mrow><mml:mrow><mml:msub><mml:mrow><mml:mi>C</mml:mi><mml:mi>H</mml:mi><mml:mi>L</mml:mi></mml:mrow><mml:mrow><mml:mi>B</mml:mi><mml:mi>S</mml:mi></mml:mrow></mml:msub></mml:mrow></mml:mrow></mml:math></inline-formula></bold>. In the channel building <inline-formula><mml:math id="mm218" overflow="scroll"><mml:mrow><mml:mrow><mml:msub><mml:mrow><mml:mi>C</mml:mi><mml:mi>H</mml:mi><mml:mi>L</mml:mi></mml:mrow><mml:mrow><mml:mi>B</mml:mi><mml:mi>S</mml:mi></mml:mrow></mml:msub></mml:mrow></mml:mrow></mml:math></inline-formula> phase (Block 2), the broker and the subscriber exchange their certificates, their ephemeral public keys <inline-formula><mml:math id="mm219" overflow="scroll"><mml:mrow><mml:mrow><mml:mo>(</mml:mo><mml:msub><mml:mrow><mml:mi>T</mml:mi><mml:mi>P</mml:mi><mml:mi>K</mml:mi><mml:mn>2</mml:mn></mml:mrow><mml:mrow><mml:mi>B</mml:mi></mml:mrow></mml:msub></mml:mrow></mml:mrow></mml:math></inline-formula>,<inline-formula><mml:math id="mm220" overflow="scroll"><mml:mrow><mml:mrow><mml:msub><mml:mrow><mml:mi>T</mml:mi><mml:mi>P</mml:mi><mml:mi>K</mml:mi><mml:mn>1</mml:mn></mml:mrow><mml:mrow><mml:mi>S</mml:mi></mml:mrow></mml:msub><mml:mo>)</mml:mo></mml:mrow></mml:mrow></mml:math></inline-formula>, timestamps, and their digital signatures on the transmitted data, which enable them to authenticate the participating entities. During the authentication, they establish their Diffie-Hellman key <inline-formula><mml:math id="mm221" overflow="scroll"><mml:mrow><mml:mrow><mml:msub><mml:mrow><mml:mi>S</mml:mi><mml:mi>K</mml:mi></mml:mrow><mml:mrow><mml:mi>S</mml:mi><mml:mi>B</mml:mi></mml:mrow></mml:msub><mml:mo>=</mml:mo><mml:msup><mml:mrow><mml:mi>g</mml:mi></mml:mrow><mml:mrow><mml:msub><mml:mrow><mml:mi>T</mml:mi><mml:mi>P</mml:mi><mml:mi>r</mml:mi><mml:mi>K</mml:mi><mml:mn>2</mml:mn></mml:mrow><mml:mrow><mml:mi>B</mml:mi><mml:mi>R</mml:mi></mml:mrow></mml:msub><mml:mo>&#8727;</mml:mo><mml:msub><mml:mrow><mml:mi>T</mml:mi><mml:mi>P</mml:mi><mml:mi>r</mml:mi><mml:mi>K</mml:mi><mml:mn>1</mml:mn></mml:mrow><mml:mrow><mml:mi>S</mml:mi></mml:mrow></mml:msub></mml:mrow></mml:msup><mml:mi mathvariant="normal">m</mml:mi><mml:mi mathvariant="normal">o</mml:mi><mml:mi mathvariant="normal">d</mml:mi><mml:mi mathvariant="normal">p</mml:mi></mml:mrow></mml:mrow></mml:math></inline-formula>, and the broker&#8217;s group key <inline-formula><mml:math id="mm222" overflow="scroll"><mml:mrow><mml:mrow><mml:msub><mml:mrow><mml:mi>G</mml:mi><mml:mi>K</mml:mi></mml:mrow><mml:mrow><mml:mi>B</mml:mi></mml:mrow></mml:msub></mml:mrow></mml:mrow></mml:math></inline-formula> is securely distributed in Schemes 3,4.</p><p>
<bold>The privacy and integrity of the MQTT payload in the <inline-formula><mml:math id="mm223" overflow="scroll"><mml:mrow><mml:mrow><mml:msub><mml:mrow><mml:mi mathvariant="bold-italic">C</mml:mi><mml:mi mathvariant="bold-italic">H</mml:mi><mml:mi mathvariant="bold-italic">L</mml:mi></mml:mrow><mml:mrow><mml:mi mathvariant="bold-italic">B</mml:mi><mml:mi mathvariant="bold-italic">S</mml:mi></mml:mrow></mml:msub></mml:mrow></mml:mrow></mml:math></inline-formula></bold>
</p><p><bold>channel.</bold> After the channel building, the MQTT payload would be encrypted using the Diffie&#8211;Hellman key <inline-formula><mml:math id="mm224" overflow="scroll"><mml:mrow><mml:mrow><mml:msub><mml:mrow><mml:mi>S</mml:mi><mml:mi>K</mml:mi></mml:mrow><mml:mrow><mml:mi>P</mml:mi><mml:mi>B</mml:mi></mml:mrow></mml:msub></mml:mrow></mml:mrow></mml:math></inline-formula> in Scheme 2 and using the group key <inline-formula><mml:math id="mm225" overflow="scroll"><mml:mrow><mml:mrow><mml:msub><mml:mrow><mml:mi>G</mml:mi><mml:mi>K</mml:mi></mml:mrow><mml:mrow><mml:mi>B</mml:mi></mml:mrow></mml:msub></mml:mrow></mml:mrow></mml:math></inline-formula> in Scheme 3, which ensures the privacy of the MQTT payload in the <inline-formula><mml:math id="mm226" overflow="scroll"><mml:mrow><mml:mrow><mml:msub><mml:mrow><mml:mi>C</mml:mi><mml:mi>H</mml:mi><mml:mi>L</mml:mi></mml:mrow><mml:mrow><mml:mi>B</mml:mi><mml:mi>S</mml:mi></mml:mrow></mml:msub></mml:mrow></mml:mrow></mml:math></inline-formula> in Schemes 2,3. The payload would be integrity protected in Schemes 2,3,4.</p><p><bold>The mutual authentication of the publisher and the subscriber in an E2E channel</bold>. In the E2E channel building phase, the publisher and the subscriber exchange their certificates, their ephemeral public keys <inline-formula><mml:math id="mm227" overflow="scroll"><mml:mrow><mml:mrow><mml:mo>(</mml:mo><mml:msub><mml:mrow><mml:mi>T</mml:mi><mml:mi>P</mml:mi><mml:mi>K</mml:mi><mml:mn>2</mml:mn></mml:mrow><mml:mrow><mml:mi>P</mml:mi></mml:mrow></mml:msub></mml:mrow></mml:mrow></mml:math></inline-formula>,<inline-formula><mml:math id="mm228" overflow="scroll"><mml:mrow><mml:mrow><mml:msub><mml:mrow><mml:mi>T</mml:mi><mml:mi>P</mml:mi><mml:mi>K</mml:mi><mml:mn>2</mml:mn></mml:mrow><mml:mrow><mml:mi>S</mml:mi></mml:mrow></mml:msub><mml:mo>)</mml:mo></mml:mrow></mml:mrow></mml:math></inline-formula>, timestamps, and their digital signatures on the transmitted data, which enable them to authenticate the participating entities. After that, they can establish their E2E keys (<inline-formula><mml:math id="mm229" overflow="scroll"><mml:mrow><mml:mrow><mml:msub><mml:mrow><mml:mi>K</mml:mi><mml:mi>E</mml:mi><mml:mn>2</mml:mn><mml:mi>E</mml:mi></mml:mrow><mml:mrow><mml:mi>P</mml:mi><mml:msub><mml:mrow><mml:mi>S</mml:mi></mml:mrow><mml:mrow><mml:mi>i</mml:mi></mml:mrow></mml:msub></mml:mrow></mml:msub><mml:mo>=</mml:mo><mml:msup><mml:mrow><mml:mi>g</mml:mi></mml:mrow><mml:mrow><mml:msub><mml:mrow><mml:mi>T</mml:mi><mml:mi>P</mml:mi><mml:mi>r</mml:mi><mml:mi>K</mml:mi><mml:mn>2</mml:mn></mml:mrow><mml:mrow><mml:mi>S</mml:mi></mml:mrow></mml:msub><mml:mo>&#8727;</mml:mo><mml:msub><mml:mrow><mml:mi>T</mml:mi><mml:mi>P</mml:mi><mml:mi>r</mml:mi><mml:mi>K</mml:mi><mml:mn>2</mml:mn></mml:mrow><mml:mrow><mml:mi>P</mml:mi></mml:mrow></mml:msub></mml:mrow></mml:msup><mml:mi mathvariant="normal">m</mml:mi><mml:mi mathvariant="normal">o</mml:mi><mml:mi mathvariant="normal">d</mml:mi><mml:mi mathvariant="normal">p</mml:mi></mml:mrow></mml:mrow></mml:math></inline-formula> in Schemes 1,2,3,4, and <inline-formula><mml:math id="mm230" overflow="scroll"><mml:mrow><mml:mrow><mml:msub><mml:mrow><mml:mi>G</mml:mi><mml:mi>K</mml:mi></mml:mrow><mml:mrow><mml:mi>P</mml:mi></mml:mrow></mml:msub></mml:mrow></mml:mrow></mml:math></inline-formula> securely distributed and protected using the session key <inline-formula><mml:math id="mm231" overflow="scroll"><mml:mrow><mml:mrow><mml:msub><mml:mrow><mml:mi>K</mml:mi><mml:mi>E</mml:mi><mml:mn>2</mml:mn><mml:mi>E</mml:mi></mml:mrow><mml:mrow><mml:mi>P</mml:mi><mml:msub><mml:mrow><mml:mi>S</mml:mi></mml:mrow><mml:mrow><mml:mi>i</mml:mi></mml:mrow></mml:msub></mml:mrow></mml:msub></mml:mrow></mml:mrow></mml:math></inline-formula> in Schemes 3,4).</p><p>
<bold>The privacy and integrity of the MQTT payload in the <inline-formula><mml:math id="mm232" overflow="scroll"><mml:mrow><mml:mrow><mml:msub><mml:mrow><mml:mi mathvariant="bold-italic">C</mml:mi><mml:mi mathvariant="bold-italic">H</mml:mi><mml:mi mathvariant="bold-italic">L</mml:mi></mml:mrow><mml:mrow><mml:mi mathvariant="bold-italic">P</mml:mi><mml:mi mathvariant="bold-italic">S</mml:mi></mml:mrow></mml:msub></mml:mrow></mml:mrow></mml:math></inline-formula></bold>
</p><p><bold>channel.</bold> After the channel building, the MQTT payload in the <inline-formula><mml:math id="mm233" overflow="scroll"><mml:mrow><mml:mrow><mml:msub><mml:mrow><mml:mi mathvariant="bold-italic">C</mml:mi><mml:mi mathvariant="bold-italic">H</mml:mi><mml:mi mathvariant="bold-italic">L</mml:mi></mml:mrow><mml:mrow><mml:mi mathvariant="bold-italic">P</mml:mi><mml:mi mathvariant="bold-italic">S</mml:mi></mml:mrow></mml:msub></mml:mrow></mml:mrow></mml:math></inline-formula>
<bold>channel</bold> would be encrypted using the Diffie&#8211;Hellman key <inline-formula><mml:math id="mm234" overflow="scroll"><mml:mrow><mml:mrow><mml:msub><mml:mrow><mml:mi>S</mml:mi><mml:mi>K</mml:mi></mml:mrow><mml:mrow><mml:mi>P</mml:mi><mml:mi>S</mml:mi></mml:mrow></mml:msub></mml:mrow></mml:mrow></mml:math></inline-formula> in Schemes 1,2 and using the group key <inline-formula><mml:math id="mm235" overflow="scroll"><mml:mrow><mml:mrow><mml:msub><mml:mrow><mml:mi>G</mml:mi><mml:mi>K</mml:mi></mml:mrow><mml:mrow><mml:mi>B</mml:mi></mml:mrow></mml:msub></mml:mrow></mml:mrow></mml:math></inline-formula> in Schemes 3,4, which ensures the privacy of the MQTT payload in the <inline-formula><mml:math id="mm236" overflow="scroll"><mml:mrow><mml:mrow><mml:msub><mml:mrow><mml:mi>C</mml:mi><mml:mi>H</mml:mi><mml:mi>L</mml:mi></mml:mrow><mml:mrow><mml:mi>P</mml:mi><mml:mi>S</mml:mi></mml:mrow></mml:msub></mml:mrow></mml:mrow></mml:math></inline-formula> in Schemes 1,2,3,4.</p></list-item></list><p>Summarizing all the above security analysis, we can note that Scheme 4 achieves the security functions: (1) mutual authentication in the <inline-formula><mml:math id="mm237" overflow="scroll"><mml:mrow><mml:mrow><mml:msub><mml:mrow><mml:mi>C</mml:mi><mml:mi>H</mml:mi><mml:mi>L</mml:mi></mml:mrow><mml:mrow><mml:mi>P</mml:mi><mml:mi>S</mml:mi></mml:mrow></mml:msub><mml:mo>,</mml:mo><mml:msub><mml:mrow><mml:mi>C</mml:mi><mml:mi>H</mml:mi><mml:mi>L</mml:mi></mml:mrow><mml:mrow><mml:mi>P</mml:mi><mml:mi>B</mml:mi></mml:mrow></mml:msub><mml:mo>,</mml:mo><mml:msub><mml:mrow><mml:mi>C</mml:mi><mml:mi>H</mml:mi><mml:mi>L</mml:mi></mml:mrow><mml:mrow><mml:mi>B</mml:mi><mml:mi>S</mml:mi></mml:mrow></mml:msub></mml:mrow></mml:mrow></mml:math></inline-formula> channels; (2) authenticity and integrity of the MQTT messages in the <inline-formula><mml:math id="mm238" overflow="scroll"><mml:mrow><mml:mrow><mml:msub><mml:mrow><mml:mi>C</mml:mi><mml:mi>H</mml:mi><mml:mi>L</mml:mi></mml:mrow><mml:mrow><mml:mi>P</mml:mi><mml:mi>B</mml:mi></mml:mrow></mml:msub><mml:mo>,</mml:mo><mml:msub><mml:mrow><mml:mi>C</mml:mi><mml:mi>H</mml:mi><mml:mi>L</mml:mi></mml:mrow><mml:mrow><mml:mi>B</mml:mi><mml:mi>S</mml:mi></mml:mrow></mml:msub></mml:mrow></mml:mrow></mml:math></inline-formula> channels; (3) privacy of the MQTT payload in the <inline-formula><mml:math id="mm239" overflow="scroll"><mml:mrow><mml:mrow><mml:msub><mml:mrow><mml:mi>C</mml:mi><mml:mi>H</mml:mi><mml:mi>L</mml:mi></mml:mrow><mml:mrow><mml:mi>P</mml:mi><mml:mi>S</mml:mi></mml:mrow></mml:msub></mml:mrow></mml:mrow></mml:math></inline-formula> channel.</p></sec><sec id="sec5dot2-sensors-25-05308"><title>5.2. Security Proofs</title><p>We specify the protocol using the HLPSL language, prove the security goals using the AVISPA, and evaluate the security performance.</p><list list-type="simple"><list-item><p><bold>Security goals.</bold> The security goals of the proposed scheme include: (1) the mutual authentication between a client (publisher or subscriber) and the broker, (2) and the privacy of the shared keys of the channels (<inline-formula><mml:math id="mm240" overflow="scroll"><mml:mrow><mml:mrow><mml:msub><mml:mrow><mml:mi>C</mml:mi><mml:mi>H</mml:mi><mml:mi>L</mml:mi></mml:mrow><mml:mrow><mml:mi>P</mml:mi><mml:mi>B</mml:mi></mml:mrow></mml:msub><mml:mo>,</mml:mo><mml:mo>&#160;</mml:mo><mml:msub><mml:mrow><mml:mi>C</mml:mi><mml:mi>H</mml:mi><mml:mi>L</mml:mi></mml:mrow><mml:mrow><mml:mi>B</mml:mi><mml:mi>S</mml:mi></mml:mrow></mml:msub></mml:mrow></mml:mrow></mml:math></inline-formula>), (3) the mutual authentication between a publisher and a subscriber and the privacy of the E2E key.</p></list-item></list><p>We formally specify the protocol and its goals using the HLPSL language. The SPAN protocol simulation validates its correctness. We use both the OMFC verifier and the ATSE verifier to prove the security goals. In HLPSL, each entity is modeled as a role which interacts with other roles.</p><list list-type="simple"><list-item><p>
<bold>The HLPSL modeling of MQTT E2E scheme</bold>
</p></list-item></list><p>In the conventional client&#8211;server architecture, both server and client can be viewed as independent finite-state machines which interact with their communicating party through messages, which is easy and intuitive to model each entity as an independent role using HLPSL. However, it is a challenge to model a single role for a broker of MQTT, because MQTT is based on the publisher&#8211;broker&#8211;subscriber architecture, where the broker independently authenticates each client, but it also handles the associations of all clients which involve the same topic. To solve this challenge, we proposed the two-broker-HLPSL model where a broker is separated into two roles, but the two roles (broker1 and broker2) securely share their information through symmetric-key-based encryptions (<xref rid="sensors-25-05308-f009" ref-type="fig">Figure 9</xref>). In this setting, each broker can independently handle the interactions with its client, and the two brokers can share the topic-bounded messages. There are a total of four roles&#8212;subscriber, broker1, broker2, publisher&#8212;in our MQTT HLPSL modeling. We note that, due to the limited support of exponentiation in the verifiers, we pass symmetric keys as inputs to assign the calculated CDHP keys in the specifications.</p><list list-type="simple"><list-item><p>
<bold>The SPAN-OMFC simulation/verification</bold>
</p></list-item></list><p><xref rid="sensors-25-05308-f010" ref-type="fig">Figure 10</xref> shows the message sequences of the SPAN protocol simulation of our MQTT-E2E HLPSL specification.</p><p>The first two dashline blocks (Blocks 1, 2) show two pairs of device-broker1 performing the authentications, in which a device refers to a client. Blocks 3 and 4 show two pairs of publisher-broker2 performing the authentications. Block 5 shows broker1 and broker 2 forwarding the E2E request to the publisher, which is followed by block 6 in which the publisher sends back its E2E response with the temporary DH public key <inline-formula><mml:math id="mm241" overflow="scroll"><mml:mrow><mml:mrow><mml:msub><mml:mrow><mml:mi>T</mml:mi><mml:mi>P</mml:mi><mml:mi>K</mml:mi><mml:mn>2</mml:mn></mml:mrow><mml:mrow><mml:mi>p</mml:mi></mml:mrow></mml:msub></mml:mrow></mml:mrow></mml:math></inline-formula> to the subscriber. Block 7 shows the subscriber sending the confirmation back to the publisher. The SPAN simulation confirms that the roles successfully execute the specified protocol flow.</p><p>The security goals of the specification include the mutual authentication for device&#8211;broker1 and for publisher&#8211;broker2, the publisher&#8211;subscriber authentication, and the privacy of the session keys for device&#8211;broker1/publisher&#8211;broker2/the end2end session key. We use both the OMFC verifier and the ATSE verifier to validate the security goals. <xref rid="sensors-25-05308-f011" ref-type="fig">Figure 11</xref> shows both the OMFC verifier and the ATSE verifier verification results&#8212;SAFE.</p></sec></sec><sec sec-type="conclusions" id="sec6-sensors-25-05308"><title>6. Conclusions</title><p>In this paper, we have discussed the performance weaknesses of the conventional MQTT broker-based E2E model&#8212;the double-encryption issue on the client&#8211;broker channel and the heavy broker-decrypt-re-encrypt burden issue. These two issues downgrade the MQTT efficiency advantage. To tackle the challenges and to improve the efficiency of the conventional MQTT broker-based E2E model, we propose two approaches- the group-key-based approach and the client-broker-channel-integrity-only approach. To verify the efficiency performance, we have implemented the schemes and experimented with them in three scenarios. The results confirm that the two approaches could improve the efficiency while preserving the desirable security properties. The security analysis ensures Scheme 4 meets the security requirements, and the formal AVISPA toolsets formally confirm the security goals of the MQTT-E2E HLPSL specification. Some interesting future studies include the integration of the approaches we propose here and ideas like brokerless MQTT or SDN to improve the overall performance further.</p></sec></body><back><fn-group><fn><p><bold>Disclaimer/Publisher&#8217;s Note:</bold> The statements, opinions and data contained in all publications are solely those of the individual author(s) and contributor(s) and not of MDPI and/or the editor(s). MDPI and/or the editor(s) disclaim responsibility for any injury to people or property resulting from any ideas, methods, instructions or products referred to in the content.</p></fn></fn-group><notes><title>Author Contributions</title><p>Conceptualization, H.-Y.C.; methodology, H.-Y.C. and A.-T.S.; software, A.-T.S.; validation, H.-Y.C., A.-T.S. and Y.-M.H.; formal analysis, H.-Y.C.; investigation, H.-Y.C. and A.-T.S.; re-sources, H.-Y.C.; data curation, A.-T.S.; writing&#8212;H.-Y.C. and A.-T.S.; writing&#8212;review and editing, H.-Y.C.; visu-alization, A.-T.S.; supervision, H.-Y.C.; project administration, H.-Y.C.; funding acquisition, H.-Y.C. All authors have read and agreed to the published version of the manuscript.</p></notes><notes><title>Institutional Review Board Statement</title><p>Not applicable.</p></notes><notes><title>Informed Consent Statement</title><p>Not applicable.</p></notes><notes notes-type="data-availability"><title>Data Availability Statement</title><p>The raw data supporting the conclusions of this article will be made available by the authors on request.</p></notes><notes notes-type="COI-statement"><title>Conflicts of Interest</title><p>The authors declare no conflict of interest.</p></notes><ref-list><title>References</title><ref id="B1-sensors-25-05308"><label>1.</label><element-citation publication-type="book"><std>ISO/IEC 20922:2016</std><source>Information Technology--Message Queuing Telemetry Transport (MQTT) v31.1.</source><publisher-name>ISO</publisher-name><publisher-loc>Geneva, Switzerland</publisher-loc><year>2016</year><comment>Available online: <ext-link xmlns:xlink="http://www.w3.org/1999/xlink" xlink:href="https://www.iso.org/standard/69466.html" ext-link-type="uri">https://www.iso.org/standard/69466.html</ext-link></comment><date-in-citation content-type="access-date" iso-8601-date="2024-01-25">(accessed on 25 January 2024)</date-in-citation></element-citation></ref><ref id="B2-sensors-25-05308"><label>2.</label><element-citation publication-type="webpage"><person-group person-group-type="author"><collab>OASIS</collab></person-group><article-title>MQTT Version 5.0</article-title><day>7</day><month>March</month><year>2019</year><comment>Available online: <ext-link xmlns:xlink="http://www.w3.org/1999/xlink" xlink:href="https://docs.oasis-open.org/mqtt/mqtt/v5.0/mqtt-v5.0.html" ext-link-type="uri">https://docs.oasis-open.org/mqtt/mqtt/v5.0/mqtt-v5.0.html</ext-link></comment><date-in-citation content-type="access-date" iso-8601-date="2024-03-01">(accessed on 1 March 2024)</date-in-citation></element-citation></ref><ref id="B3-sensors-25-05308"><label>3.</label><element-citation publication-type="confproc"><person-group person-group-type="author"><name name-style="western"><surname>Chien</surname><given-names>H.Y.</given-names></name></person-group><article-title>Design of End-to-End Security for MQTT 5</article-title><source>Proceedings of the 4th International Conference on Science of Cyber Security-SciSec 2022</source><conf-loc>Matsue City, Japan</conf-loc><conf-date>10&#8211;12 August 2022</conf-date></element-citation></ref><ref id="B4-sensors-25-05308"><label>4.</label><element-citation publication-type="confproc"><person-group person-group-type="author"><name name-style="western"><surname>Lee</surname><given-names>H.</given-names></name><name name-style="western"><surname>Lim</surname><given-names>J.</given-names></name><name name-style="western"><surname>Kwon</surname><given-names>T.</given-names></name></person-group><article-title>MQTLS: Toward Secure MQTT Communication with an Untrusted Broker</article-title><source>Proceedings of the 2019 International Conference on Information and Communication Technology Convergence (ICTC)</source><conf-loc>Jeju Island, Republic of Korea</conf-loc><conf-date>16&#8211;19 October 2019</conf-date><fpage>53</fpage><lpage>58</lpage></element-citation></ref><ref id="B5-sensors-25-05308"><label>5.</label><element-citation publication-type="journal"><person-group person-group-type="author"><name name-style="western"><surname>Hamad</surname><given-names>M.</given-names></name><name name-style="western"><surname>Finkenzeller</surname><given-names>A.</given-names></name><name name-style="western"><surname>Liu</surname><given-names>H.</given-names></name><name name-style="western"><surname>Lauinger</surname><given-names>J.</given-names></name><name name-style="western"><surname>Prevelakis</surname><given-names>V.</given-names></name><name name-style="western"><surname>Steinhorst</surname><given-names>S.</given-names></name></person-group><article-title>SEEMQTT: Secure End-to-End MQTT-Based Communication for Mobile IoT Systems Using Secret Sharing and Trust Delegation</article-title><source>IEEE Internet Things J.</source><year>2022</year><volume>10</volume><fpage>3384</fpage><lpage>3406</lpage><pub-id pub-id-type="doi">10.1109/JIOT.2022.3221857</pub-id></element-citation></ref><ref id="B6-sensors-25-05308"><label>6.</label><element-citation publication-type="journal"><person-group person-group-type="author"><name name-style="western"><surname>Chien</surname><given-names>H.-Y.</given-names></name><name name-style="western"><surname>Shih</surname><given-names>A.-T.</given-names></name><name name-style="western"><surname>Huang</surname><given-names>Y.-M.</given-names></name></person-group><article-title>Design, Implementation, and Evaluation of MQTT5.0-Based End-to-End Security</article-title><source>J. Internet Technol.</source><year>2025</year><comment><italic toggle="yes">accept and to be published</italic></comment></element-citation></ref><ref id="B7-sensors-25-05308"><label>7.</label><element-citation publication-type="confproc"><person-group person-group-type="author"><name name-style="western"><surname>Mektoubi</surname><given-names>A.</given-names></name><name name-style="western"><surname>Lalaoui</surname><given-names>H.</given-names></name><name name-style="western"><surname>Belhadaoui</surname><given-names>H.</given-names></name><name name-style="western"><surname>Rifi</surname><given-names>M.</given-names></name><name name-style="western"><surname>Zakari</surname><given-names>A.</given-names></name></person-group><article-title>New approach for securing communication over MQTT protocol A comparison between RSA and Elliptic Curve</article-title><source>Proceedings of the 2016 Third International Conference on Systems of Collaboration (SysCo)</source><conf-loc>Casablanca, Morocco</conf-loc><conf-date>28&#8211;29 November 2016</conf-date><fpage>1</fpage><lpage>6</lpage></element-citation></ref><ref id="B8-sensors-25-05308"><label>8.</label><element-citation publication-type="journal"><person-group person-group-type="author"><name name-style="western"><surname>Wang</surname><given-names>N.Z.</given-names></name><name name-style="western"><surname>Chien</surname><given-names>H.Y.</given-names></name></person-group><article-title>Design and Implementation of MQTT-based Over The Air Updating Against Curious Brokers</article-title><source>IEEE Internet Things J.</source><year>2023</year><volume>11</volume><fpage>10768</fpage><lpage>10777</lpage><pub-id pub-id-type="doi">10.1109/JIOT.2023.3327447</pub-id></element-citation></ref><ref id="B9-sensors-25-05308"><label>9.</label><element-citation publication-type="journal"><person-group person-group-type="author"><name name-style="western"><surname>Eugster</surname><given-names>P.T.</given-names></name><name name-style="western"><surname>Felber</surname><given-names>P.A.</given-names></name><name name-style="western"><surname>Guerraoui</surname><given-names>R.</given-names></name><name name-style="western"><surname>Kermarrec</surname><given-names>A.-M.</given-names></name></person-group><article-title>The many faces of publish/subscribe</article-title><source>ACM Comput. Surv. CSUR</source><year>2003</year><volume>35</volume><fpage>114</fpage><lpage>131</lpage><pub-id pub-id-type="doi">10.1145/857076.857078</pub-id></element-citation></ref><ref id="B10-sensors-25-05308"><label>10.</label><element-citation publication-type="webpage"><person-group person-group-type="author"><collab>Steve</collab></person-group><article-title>MQTT v 5.0 New Features Overview Steve Guide</article-title><comment>Available online: <ext-link xmlns:xlink="http://www.w3.org/1999/xlink" xlink:href="http://www.steves-internet-guide.com/mqttv5" ext-link-type="uri">http://www.steves-internet-guide.com/mqttv5</ext-link></comment><date-in-citation content-type="access-date" iso-8601-date="2025-07-31">(accessed on 31 July 2025)</date-in-citation></element-citation></ref><ref id="B11-sensors-25-05308"><label>11.</label><element-citation publication-type="webpage"><person-group person-group-type="author"><collab>Steve</collab></person-group><article-title>Examining MQTTv5 User Properties Steve guide to MQTT</article-title><comment>Available online: <ext-link xmlns:xlink="http://www.w3.org/1999/xlink" xlink:href="http://www.steves-internet-guide.com/examining-mqttv5-user-properties" ext-link-type="uri">http://www.steves-internet-guide.com/examining-mqttv5-user-properties</ext-link></comment><date-in-citation content-type="access-date" iso-8601-date="2025-07-31">(accessed on 31 July 2025)</date-in-citation></element-citation></ref><ref id="B12-sensors-25-05308"><label>12.</label><element-citation publication-type="webpage"><person-group person-group-type="author"><collab>HiveMQ</collab></person-group><article-title>User Properties-MQTT 5 Essentials Part 6</article-title><comment>Available online: <ext-link xmlns:xlink="http://www.w3.org/1999/xlink" xlink:href="https://www.hivemq.com/blog/mqtt5-essentials-part6-user-properties" ext-link-type="uri">https://www.hivemq.com/blog/mqtt5-essentials-part6-user-properties</ext-link></comment><date-in-citation content-type="access-date" iso-8601-date="2025-07-31">(accessed on 31 July 2025)</date-in-citation></element-citation></ref><ref id="B13-sensors-25-05308"><label>13.</label><element-citation publication-type="webpage"><person-group person-group-type="author"><collab>Steve</collab></person-group><article-title>Understanding And Using MQTT v5 Request Response Steve Guide</article-title><comment>Available online: <ext-link xmlns:xlink="http://www.w3.org/1999/xlink" xlink:href="http://www.steves-internet-guide.com/mqttv5-request-response" ext-link-type="uri">http://www.steves-internet-guide.com/mqttv5-request-response</ext-link></comment><date-in-citation content-type="access-date" iso-8601-date="2025-07-31">(accessed on 31 July 2025)</date-in-citation></element-citation></ref><ref id="B14-sensors-25-05308"><label>14.</label><element-citation publication-type="journal"><person-group person-group-type="author"><name name-style="western"><surname>Buccafurri</surname><given-names>F.</given-names></name><name name-style="western"><surname>Angelis</surname><given-names>V.D.</given-names></name><name name-style="western"><surname>Lazzaro</surname><given-names>S.</given-names></name></person-group><article-title>MQTT-I: Achieving End-to-End Data Flow Integrity in MQTT</article-title><source>IEEE Trans. Dependable Secur. Comput.</source><year>2024</year><volume>21</volume><fpage>4717</fpage><lpage>4734</lpage><pub-id pub-id-type="doi">10.1109/TDSC.2024.3358630</pub-id></element-citation></ref><ref id="B15-sensors-25-05308"><label>15.</label><element-citation publication-type="journal"><person-group person-group-type="author"><name name-style="western"><surname>Stanford-Clark</surname><given-names>A.</given-names></name><name name-style="western"><surname>Truong</surname><given-names>H.L.</given-names></name></person-group><article-title>MQTT for sensor networks (MQTT-SN) protocol specification version 1.2.IBM</article-title><source>Int. Bus. Mach. (IBM) Corp. Version</source><year>2013</year><volume>1</volume><fpage>1</fpage><lpage>28</lpage></element-citation></ref><ref id="B16-sensors-25-05308"><label>16.</label><element-citation publication-type="journal"><person-group person-group-type="author"><name name-style="western"><surname>Park</surname><given-names>C.-S.</given-names></name><name name-style="western"><surname>Nam</surname><given-names>H.-M.</given-names></name></person-group><article-title>Security Architecture and Protocols for Secure MQTT-SN</article-title><source>IEEE Access</source><year>2020</year><volume>8</volume><fpage>226422</fpage><lpage>226436</lpage><pub-id pub-id-type="doi">10.1109/ACCESS.2020.3045441</pub-id></element-citation></ref><ref id="B17-sensors-25-05308"><label>17.</label><element-citation publication-type="confproc"><person-group person-group-type="author"><name name-style="western"><surname>Singh</surname><given-names>M.</given-names></name><name name-style="western"><surname>Rajan</surname><given-names>M.</given-names></name><name name-style="western"><surname>Shivraj</surname><given-names>V.</given-names></name><name name-style="western"><surname>Balamuralidhar</surname><given-names>P.</given-names></name></person-group><article-title>Secure MQTT for internet of things (iot)</article-title><source>Proceedings of the 2015 Fifth International Conference on Communication Systems and Network Technologies</source><conf-loc>Gwalior, India</conf-loc><conf-date>4&#8211;6 April 2015</conf-date><publisher-name>IEEE</publisher-name><publisher-loc>Piscataway, NJ, USA</publisher-loc><fpage>746</fpage><lpage>751</lpage></element-citation></ref><ref id="B18-sensors-25-05308"><label>18.</label><element-citation publication-type="confproc"><person-group person-group-type="author"><name name-style="western"><surname>Goyal</surname><given-names>V.</given-names></name><name name-style="western"><surname>Pandey</surname><given-names>O.</given-names></name><name name-style="western"><surname>Sahai</surname><given-names>A.</given-names></name><name name-style="western"><surname>Waters</surname><given-names>B.</given-names></name></person-group><article-title>Attribute-based Encryption for Fine-grained Access Control of Encrypted Data</article-title><source>Proceedings of the 13th ACM Conference on Computer and Communications Security, Ser. CCS &#8217;06</source><conf-loc>Alexandria, VA, USA</conf-loc><conf-date>30 October&#8211;3 November 2006</conf-date><fpage>89</fpage><lpage>98</lpage></element-citation></ref><ref id="B19-sensors-25-05308"><label>19.</label><element-citation publication-type="confproc"><person-group person-group-type="author"><name name-style="western"><surname>Bethencourt</surname><given-names>J.</given-names></name><name name-style="western"><surname>Sahai</surname><given-names>A.</given-names></name><name name-style="western"><surname>Waters</surname><given-names>B.</given-names></name></person-group><article-title>Ciphertext-Policy Attribute-Based Encryption</article-title><source>Proceedings of the 2007 IEEE Symposium on Security and Privacy, Ser. SP &#8217;07</source><conf-loc>Washington, DC, USA</conf-loc><conf-date>20&#8211;23 May 2007</conf-date><fpage>321</fpage><lpage>334</lpage></element-citation></ref><ref id="B20-sensors-25-05308"><label>20.</label><element-citation publication-type="webpage"><article-title>OASIS Advanced Message Queuing Protocol (AMQP) Version 1.0. OASIS Standard. October 2012</article-title><comment>Available online: <ext-link xmlns:xlink="http://www.w3.org/1999/xlink" xlink:href="https://docs.oasis-open.org/amqp/core/v1.0/amqp-core-overview-v1.0.html" ext-link-type="uri">https://docs.oasis-open.org/amqp/core/v1.0/amqp-core-overview-v1.0.html</ext-link></comment><date-in-citation content-type="access-date" iso-8601-date="2025-07-31">(accessed on 31 July 2025)</date-in-citation></element-citation></ref><ref id="B21-sensors-25-05308"><label>21.</label><element-citation publication-type="webpage"><person-group person-group-type="author"><name name-style="western"><surname>Tschofenig</surname><given-names>H.</given-names></name><name name-style="western"><surname>Hartke</surname><given-names>K.</given-names></name><name name-style="western"><surname>Bormann</surname><given-names>C.</given-names></name></person-group><article-title>DTLS Profile for CoAP, RFC 9147, IETF. April 2022</article-title><comment>Available online: <ext-link xmlns:xlink="http://www.w3.org/1999/xlink" xlink:href="https://datatracker.ietf.org/doc/rfc9147/" ext-link-type="uri">https://datatracker.ietf.org/doc/rfc9147/</ext-link></comment><date-in-citation content-type="access-date" iso-8601-date="2025-07-31">(accessed on 31 July 2025)</date-in-citation></element-citation></ref><ref id="B22-sensors-25-05308"><label>22.</label><element-citation publication-type="webpage"><article-title>Object Management Group. Data Distribution Service (DDS), Version 1.4</article-title><comment>Available online: <ext-link xmlns:xlink="http://www.w3.org/1999/xlink" xlink:href="https://www.omg.org/spec/DDS/1.4" ext-link-type="uri">https://www.omg.org/spec/DDS/1.4</ext-link></comment><date-in-citation content-type="access-date" iso-8601-date="2024-12-05">(accessed on 5 December 2024)</date-in-citation></element-citation></ref><ref id="B23-sensors-25-05308"><label>23.</label><element-citation publication-type="journal"><person-group person-group-type="author"><name name-style="western"><surname>Pei</surname><given-names>J.</given-names></name><name name-style="western"><surname>Shi</surname><given-names>Y.</given-names></name><name name-style="western"><surname>Feng</surname><given-names>Q.</given-names></name><name name-style="western"><surname>Shi</surname><given-names>R.</given-names></name><name name-style="western"><surname>Lan</surname><given-names>L.</given-names></name><name name-style="western"><surname>Yu</surname><given-names>S.</given-names></name><name name-style="western"><surname>Shi</surname><given-names>J.</given-names></name><name name-style="western"><surname>Ma</surname><given-names>Z.</given-names></name></person-group><article-title>An efficient confidentiality protection solution for pub/sub system</article-title><source>Cybersecurity</source><year>2023</year><volume>6</volume><fpage>34</fpage><pub-id pub-id-type="doi">10.1186/s42400-023-00165-w</pub-id></element-citation></ref><ref id="B24-sensors-25-05308"><label>24.</label><element-citation publication-type="journal"><person-group person-group-type="author"><name name-style="western"><surname>Pei</surname><given-names>J.</given-names></name><name name-style="western"><surname>Shi</surname><given-names>Y.</given-names></name><name name-style="western"><surname>Feng</surname><given-names>Q.</given-names></name><name name-style="western"><surname>Shi</surname><given-names>R.</given-names></name><name name-style="western"><surname>Lan</surname><given-names>L.</given-names></name><name name-style="western"><surname>Yu</surname><given-names>S.</given-names></name><name name-style="western"><surname>Shi</surname><given-names>J.</given-names></name><name name-style="western"><surname>Ma</surname><given-names>Z.</given-names></name></person-group><article-title>DM-MQTT: An Efficient MQTT Based on SDN Multicast for Massive IoT Communications</article-title><source>Sensors</source><year>2018</year><volume>18</volume><fpage>3071</fpage><pub-id pub-id-type="pmid">30213137</pub-id><pub-id pub-id-type="doi" assigning-authority="pmc">10.3390/s18093071</pub-id><pub-id pub-id-type="pmcid">PMC6163627</pub-id></element-citation></ref><ref id="B25-sensors-25-05308"><label>25.</label><element-citation publication-type="journal"><person-group person-group-type="author"><name name-style="western"><surname>Shahri</surname><given-names>E.</given-names></name><name name-style="western"><surname>Pedreiras</surname><given-names>P.</given-names></name><name name-style="western"><surname>Almeida</surname><given-names>L.</given-names></name></person-group><article-title>Extending MQTT with Real-Time Communication Services Based on SDN</article-title><source>Sensors</source><year>2022</year><volume>22</volume><elocation-id>3162</elocation-id><pub-id pub-id-type="doi">10.3390/s22093162</pub-id><pub-id pub-id-type="pmid">35590852</pub-id><pub-id pub-id-type="pmcid">PMC9103019</pub-id></element-citation></ref><ref id="B26-sensors-25-05308"><label>26.</label><element-citation publication-type="webpage"><person-group person-group-type="author"><collab>IRMOS TechBlog</collab></person-group><article-title>Data from IoT to Cloud&#8211;A Modern Approach</article-title><comment>Available online: <ext-link xmlns:xlink="http://www.w3.org/1999/xlink" xlink:href="https://www.irmo.de/2024/01/12/data-from-iot-to-cloud-a-modern-approach/?utm_source=chatgpt.com" ext-link-type="uri">https://www.irmo.de/2024/01/12/data-from-iot-to-cloud-a-modern-approach/?utm_source=chatgpt.com</ext-link></comment><date-in-citation content-type="access-date" iso-8601-date="2025-07-20">(accessed on 20 July 2025)</date-in-citation></element-citation></ref><ref id="B27-sensors-25-05308"><label>27.</label><element-citation publication-type="journal"><person-group person-group-type="author"><name name-style="western"><surname>Rose</surname><given-names>S.</given-names></name><name name-style="western"><surname>Borchert</surname><given-names>O.</given-names></name><name name-style="western"><surname>Mitchell</surname><given-names>S.</given-names></name><name name-style="western"><surname>Connelly</surname><given-names>S.</given-names></name></person-group><article-title>Zero Trust Architecture (NIST Special Publication 800-207)</article-title><source>Natl. Inst. Stand. Technol.</source><year>2020</year><pub-id pub-id-type="doi">10.6028/NIST.SP.800-207</pub-id></element-citation></ref><ref id="B28-sensors-25-05308"><label>28.</label><element-citation publication-type="confproc"><person-group person-group-type="author"><name name-style="western"><surname>Burrows</surname><given-names>M.</given-names></name><name name-style="western"><surname>Abadi</surname><given-names>M.</given-names></name><name name-style="western"><surname>Needham</surname><given-names>R.</given-names></name></person-group><article-title>A logic of authentication</article-title><source>Proceedings of the 12th ACM Symposium on Operating Systems Principles</source><conf-loc>Litchfield Park, AZ, USA</conf-loc><conf-date>1&#8211;13 November 1989</conf-date></element-citation></ref><ref id="B29-sensors-25-05308"><label>29.</label><element-citation publication-type="webpage"><person-group person-group-type="author"><name name-style="western"><surname>Armando</surname><given-names>A.</given-names></name><name name-style="western"><surname>Basin</surname><given-names>D.</given-names></name><name name-style="western"><surname>Cuellar</surname><given-names>J.</given-names></name><name name-style="western"><surname>Rusinowitch</surname><given-names>M.</given-names></name><name name-style="western"><surname>Vigan&#242;</surname><given-names>L.</given-names></name></person-group><article-title>Avispa&#8211;A Tool for Automated Validation of Internet Security Protocols</article-title><comment>Available online: <ext-link xmlns:xlink="http://www.w3.org/1999/xlink" xlink:href="https://www.ercim.eu/publication/Ercim_News/enw64/armando.html" ext-link-type="uri">https://www.ercim.eu/publication/Ercim_News/enw64/armando.html</ext-link></comment><date-in-citation content-type="access-date" iso-8601-date="2024-05-01">(accessed on 1 May 2024)</date-in-citation></element-citation></ref><ref id="B30-sensors-25-05308"><label>30.</label><element-citation publication-type="confproc"><person-group person-group-type="author"><name name-style="western"><surname>Armando</surname><given-names>A.</given-names></name><name name-style="western"><surname>Basin</surname><given-names>D.</given-names></name><name name-style="western"><surname>Boichut</surname><given-names>Y.</given-names></name><name name-style="western"><surname>Chevalier</surname><given-names>Y.</given-names></name><name name-style="western"><surname>Compagna</surname><given-names>L.</given-names></name><name name-style="western"><surname>Cuellar</surname><given-names>J.</given-names></name><name name-style="western"><surname>Drielsma</surname><given-names>P.</given-names></name><name name-style="western"><surname>Drielsma</surname><given-names>P.H.</given-names></name><name name-style="western"><surname>H&#233;am</surname><given-names>P.-C.</given-names></name><name name-style="western"><surname>Kouchnarenko</surname><given-names>O.</given-names></name><etal/></person-group><article-title>The AVISPA Tool for the automated validation of internet security protocols and applications</article-title><source>Proceedings of the 17th International Conference on Computer Aided Verification, CAV&#8217;2005, LNCS3576</source><conf-loc>Edinburgh, Scotland</conf-loc><conf-date>6&#8211;10 July 2005</conf-date><person-group person-group-type="editor"><name name-style="western"><surname>Etessami</surname><given-names>K.</given-names></name><name name-style="western"><surname>Rajamani</surname><given-names>S.</given-names></name></person-group><publisher-name>Springer</publisher-name><publisher-loc>Edinburgh, UK</publisher-loc><year>2005</year><fpage>281</fpage><lpage>285</lpage></element-citation></ref><ref id="B31-sensors-25-05308"><label>31.</label><element-citation publication-type="confproc"><person-group person-group-type="author"><name name-style="western"><surname>Gligor</surname><given-names>V.</given-names></name><name name-style="western"><surname>Kailar</surname><given-names>R.</given-names></name><name name-style="western"><surname>Stubblebine</surname><given-names>S.</given-names></name><name name-style="western"><surname>Gong</surname><given-names>L.</given-names></name></person-group><article-title>Logics for cryptographic protocols&#8212;Virtues and limitations</article-title><source>Proceedings of the IEEE 1991 Computer Security Foundations Workshop</source><conf-loc>Franconia, NH, USA</conf-loc><conf-date>18&#8211;20 June 1991</conf-date><fpage>219</fpage><lpage>226</lpage></element-citation></ref><ref id="B32-sensors-25-05308"><label>32.</label><element-citation publication-type="confproc"><person-group person-group-type="author"><name name-style="western"><surname>Boyd</surname><given-names>C.</given-names></name><name name-style="western"><surname>Mao</surname><given-names>W.</given-names></name></person-group><article-title>On a Limitation of BAN Logic</article-title><source>Presented at the Eurocrypt&#8217;93</source><conf-loc>Lofthus, Norway</conf-loc><conf-date>24&#8211;26 May 1993</conf-date></element-citation></ref><ref id="B33-sensors-25-05308"><label>33.</label><element-citation publication-type="confproc"><person-group person-group-type="author"><name name-style="western"><surname>van Oorschot</surname><given-names>P.C.</given-names></name></person-group><article-title>An alternate explanation of two BAN-logic &#8216;failures&#8217;</article-title><source>Proceedings of the Eurocrypt&#8217;93</source><conf-loc>Lofthus, Norway</conf-loc><conf-date>24&#8211;26 May 1993</conf-date><publisher-name>Springer LNCS</publisher-name><publisher-loc>Berlin/Heidelberg, Germany</publisher-loc><year>1994</year><volume>Volume 765</volume><fpage>443</fpage><lpage>447</lpage></element-citation></ref><ref id="B34-sensors-25-05308"><label>34.</label><element-citation publication-type="webpage"><article-title>SPAN: A Security Protocol ANimator for AVISPA</article-title><comment>Available online: <ext-link xmlns:xlink="http://www.w3.org/1999/xlink" xlink:href="http://people.irisa.fr/Thomas.Genet/span" ext-link-type="uri">http://people.irisa.fr/Thomas.Genet/span</ext-link></comment><date-in-citation content-type="access-date" iso-8601-date="2024-05-15">(accessed on 15 May 2024)</date-in-citation></element-citation></ref><ref id="B35-sensors-25-05308"><label>35.</label><element-citation publication-type="journal"><person-group person-group-type="author"><name name-style="western"><surname>Basin</surname><given-names>D.</given-names></name><name name-style="western"><surname>M&#246;dersheim</surname><given-names>S.</given-names></name><name name-style="western"><surname>Vigano</surname><given-names>L.</given-names></name></person-group><article-title>OFMC: A Symbolic Model-Checker for Security Protocols</article-title><source>Int. J. Inf. Secur.</source><year>2005</year><volume>4</volume><fpage>181</fpage><lpage>208</lpage><pub-id pub-id-type="doi">10.1007/s10207-004-0055-7</pub-id></element-citation></ref><ref id="B36-sensors-25-05308"><label>36.</label><element-citation publication-type="confproc"><person-group person-group-type="author"><name name-style="western"><surname>Von Oheimb</surname><given-names>D.</given-names></name></person-group><article-title>Specification language hlpsl developed in the eu project Avispa</article-title><source>Proceedings of the APPSEM 2005 Workshop</source><conf-loc>Frauenchiemsee, Germany</conf-loc><conf-date>12&#8211;15 September 2005</conf-date></element-citation></ref><ref id="B37-sensors-25-05308"><label>37.</label><element-citation publication-type="webpage"><person-group person-group-type="author"><collab>Eclipse</collab></person-group><article-title>Mosquitto: Eclipse Mosquitto-An Open Source MQTT Broker</article-title><comment>Available online: <ext-link xmlns:xlink="http://www.w3.org/1999/xlink" xlink:href="https://github.com/eclipse-mosquitto/mosquitto" ext-link-type="uri">https://github.com/eclipse-mosquitto/mosquitto</ext-link></comment><date-in-citation content-type="access-date" iso-8601-date="2025-02-11">(accessed on 11 February 2025)</date-in-citation></element-citation></ref><ref id="B38-sensors-25-05308"><label>38.</label><element-citation publication-type="webpage"><article-title>OpenSSL</article-title><comment>Available online: <ext-link xmlns:xlink="http://www.w3.org/1999/xlink" xlink:href="https://www.openssl.org/" ext-link-type="uri">https://www.openssl.org/</ext-link></comment><date-in-citation content-type="access-date" iso-8601-date="2025-03-01">(accessed on 1 March 2025)</date-in-citation></element-citation></ref><ref id="B39-sensors-25-05308"><label>39.</label><element-citation publication-type="webpage"><article-title>GitHub, GitHub-Json-c/Json-c</article-title><comment>Available online: <ext-link xmlns:xlink="http://www.w3.org/1999/xlink" xlink:href="https://github.com/json-c/json-c" ext-link-type="uri">https://github.com/json-c/json-c</ext-link></comment><date-in-citation content-type="access-date" iso-8601-date="2025-03-01">(accessed on 1 March 2025)</date-in-citation></element-citation></ref><ref id="B40-sensors-25-05308"><label>40.</label><element-citation publication-type="webpage"><article-title>VMware</article-title><comment>Available online: <ext-link xmlns:xlink="http://www.w3.org/1999/xlink" xlink:href="https://www.vmware.com/" ext-link-type="uri">https://www.vmware.com/</ext-link></comment><date-in-citation content-type="access-date" iso-8601-date="2024-08-18">(accessed on 18 August 2024)</date-in-citation></element-citation></ref><ref id="B41-sensors-25-05308"><label>41.</label><element-citation publication-type="webpage"><article-title>Eclipse, An Eclipse Paho C Client Library for MQTT for Windows, Linux and MacOS</article-title><comment>Available online: <ext-link xmlns:xlink="http://www.w3.org/1999/xlink" xlink:href="https://github.com/eclipse/paho.mqtt.c" ext-link-type="uri">https://github.com/eclipse/paho.mqtt.c</ext-link></comment><date-in-citation content-type="access-date" iso-8601-date="2025-03-01">(accessed on 1 March 2025)</date-in-citation></element-citation></ref></ref-list></back><floats-group><fig position="float" id="sensors-25-05308-f001" orientation="portrait"><label>Figure 1</label><caption><p>The MQTT-SSL model.</p></caption><graphic xmlns:xlink="http://www.w3.org/1999/xlink" position="float" orientation="portrait" xlink:href="sensors-25-05308-g001.jpg"/></fig><fig position="float" id="sensors-25-05308-f002" orientation="portrait"><label>Figure 2</label><caption><p>The four MQTT E2E models, where E denotes Encryption, and I denotes Integrity.</p></caption><graphic xmlns:xlink="http://www.w3.org/1999/xlink" position="float" orientation="portrait" xlink:href="sensors-25-05308-g002.jpg"/></fig><fig position="float" id="sensors-25-05308-f003" orientation="portrait"><label>Figure 3</label><caption><p>The protocol flows of the four models.</p></caption><graphic xmlns:xlink="http://www.w3.org/1999/xlink" position="float" orientation="portrait" xlink:href="sensors-25-05308-g003.jpg"/></fig><fig position="float" id="sensors-25-05308-f004" orientation="portrait"><label>Figure 4</label><caption><p>Simulation scenarios (<bold>a</bold>) 1 NB with 2 VMs, (<bold>b</bold>) 1 NB with 3 VMs.</p></caption><graphic xmlns:xlink="http://www.w3.org/1999/xlink" position="float" orientation="portrait" xlink:href="sensors-25-05308-g004.jpg"/></fig><fig position="float" id="sensors-25-05308-f005" orientation="portrait"><label>Figure 5</label><caption><p>The latencies of pub/sub connections with varying number of subscribers.</p></caption><graphic xmlns:xlink="http://www.w3.org/1999/xlink" position="float" orientation="portrait" xlink:href="sensors-25-05308-g005.jpg"/></fig><fig position="float" id="sensors-25-05308-f006" orientation="portrait"><label>Figure 6</label><caption><p>The latencies of the four schemes for different subscribers in Scenario 1.</p></caption><graphic xmlns:xlink="http://www.w3.org/1999/xlink" position="float" orientation="portrait" xlink:href="sensors-25-05308-g006.jpg"/></fig><fig position="float" id="sensors-25-05308-f007" orientation="portrait"><label>Figure 7</label><caption><p>Simulation scenario: six PCs each hosting one VM (total six VMs).</p></caption><graphic xmlns:xlink="http://www.w3.org/1999/xlink" position="float" orientation="portrait" xlink:href="sensors-25-05308-g007.jpg"/></fig><fig position="float" id="sensors-25-05308-f008" orientation="portrait"><label>Figure 8</label><caption><p>(<bold>a</bold>) The CPU/memory utilization of the broker VM1 before/after subscriber subscribers; (<bold>b</bold>) the CPU/memory utilization of the publisher-100subscriber VM2 before/after subscriber active subscribers; (<bold>c</bold>) the CPU/memory utilization of the100subscriber VM3 before/after subscriber/active subscribers.</p></caption><graphic xmlns:xlink="http://www.w3.org/1999/xlink" position="float" orientation="portrait" xlink:href="sensors-25-05308-g008.jpg"/></fig><fig position="float" id="sensors-25-05308-f009" orientation="portrait"><label>Figure 9</label><caption><p>The 2-broker-HLPSL model.</p></caption><graphic xmlns:xlink="http://www.w3.org/1999/xlink" position="float" orientation="portrait" xlink:href="sensors-25-05308-g009.jpg"/></fig><fig position="float" id="sensors-25-05308-f010" orientation="portrait"><label>Figure 10</label><caption><p>The SPAN simulation of our MQTT-E2E HLPSL specification.</p></caption><graphic xmlns:xlink="http://www.w3.org/1999/xlink" position="float" orientation="portrait" xlink:href="sensors-25-05308-g010.jpg"/></fig><fig position="float" id="sensors-25-05308-f011" orientation="portrait"><label>Figure 11</label><caption><p>Both OFMC and ATSE confirm SAFE of our HLPSL specification.</p></caption><graphic xmlns:xlink="http://www.w3.org/1999/xlink" position="float" orientation="portrait" xlink:href="sensors-25-05308-g011.jpg"/></fig><table-wrap position="float" id="sensors-25-05308-t001" orientation="portrait"><object-id pub-id-type="pii">sensors-25-05308-t001_Table 1</object-id><label>Table 1</label><caption><p>The Notation.</p></caption><table frame="hsides" rules="groups"><tbody><tr><td align="left" valign="middle" style="border-top:solid thin;border-bottom:solid thin" rowspan="1" colspan="1">P: Publisher; S: Subscriber; B: Broker.<break/><inline-formula><mml:math id="mm242" overflow="scroll"><mml:mrow><mml:mrow><mml:msub><mml:mrow><mml:mi>S</mml:mi></mml:mrow><mml:mrow><mml:mi>i</mml:mi></mml:mrow></mml:msub></mml:mrow></mml:mrow></mml:math></inline-formula>: <italic toggle="yes">it</italic>h subscriber</td><td align="left" valign="middle" style="border-top:solid thin;border-bottom:solid thin" rowspan="1" colspan="1"><inline-formula><mml:math id="mm243" overflow="scroll"><mml:mrow><mml:mrow><mml:msub><mml:mrow><mml:mi>P</mml:mi><mml:mi>K</mml:mi></mml:mrow><mml:mrow><mml:mi>P</mml:mi></mml:mrow></mml:msub><mml:mo>/</mml:mo><mml:msub><mml:mrow><mml:mi>P</mml:mi><mml:mi>r</mml:mi><mml:mi>K</mml:mi></mml:mrow><mml:mrow><mml:mi>P</mml:mi></mml:mrow></mml:msub></mml:mrow></mml:mrow></mml:math></inline-formula>: long-term public/private key of <italic toggle="yes">P</italic>. Similar notations apply for <italic toggle="yes">S</italic> and <italic toggle="yes">B</italic>.</td></tr><tr><td align="left" valign="middle" style="border-bottom:solid thin" rowspan="1" colspan="1"><italic toggle="yes">E</italic>()/<italic toggle="yes">D</italic>(): symmetric key encryption/decryption</td><td align="left" valign="middle" style="border-bottom:solid thin" rowspan="1" colspan="1"><inline-formula><mml:math id="mm244" overflow="scroll"><mml:mrow><mml:mrow><mml:msub><mml:mrow><mml:mi>T</mml:mi><mml:mi>P</mml:mi><mml:mi>K</mml:mi><mml:mn>1</mml:mn></mml:mrow><mml:mrow><mml:mi>P</mml:mi></mml:mrow></mml:msub><mml:mo>/</mml:mo><mml:msub><mml:mrow><mml:mi>T</mml:mi><mml:mi>P</mml:mi><mml:mi>r</mml:mi><mml:mi>K</mml:mi><mml:mn>1</mml:mn></mml:mrow><mml:mrow><mml:mi>P</mml:mi></mml:mrow></mml:msub></mml:mrow></mml:mrow></mml:math></inline-formula>, <inline-formula><mml:math id="mm245" overflow="scroll"><mml:mrow><mml:mrow><mml:msub><mml:mrow><mml:mi>T</mml:mi><mml:mi>P</mml:mi><mml:mi>K</mml:mi><mml:mn>2</mml:mn></mml:mrow><mml:mrow><mml:mi>P</mml:mi></mml:mrow></mml:msub><mml:mo>/</mml:mo><mml:msub><mml:mrow><mml:mi>T</mml:mi><mml:mi>P</mml:mi><mml:mi>r</mml:mi><mml:mi>K</mml:mi><mml:mn>2</mml:mn></mml:mrow><mml:mrow><mml:mi>P</mml:mi></mml:mrow></mml:msub></mml:mrow></mml:mrow></mml:math></inline-formula>: temporary public/private key of <italic toggle="yes">P</italic>. Similar notations apply for <italic toggle="yes">S</italic> and <italic toggle="yes">B</italic>. For example, <inline-formula><mml:math id="mm246" overflow="scroll"><mml:mrow><mml:mrow><mml:msub><mml:mrow><mml:mi>T</mml:mi><mml:mi>P</mml:mi><mml:mi>K</mml:mi><mml:mn>1</mml:mn></mml:mrow><mml:mrow><mml:mi>B</mml:mi></mml:mrow></mml:msub><mml:mo>=</mml:mo><mml:msup><mml:mrow><mml:mi>g</mml:mi></mml:mrow><mml:mrow><mml:msub><mml:mrow><mml:mi>T</mml:mi><mml:mi>P</mml:mi><mml:mi>r</mml:mi><mml:mi>K</mml:mi><mml:mn>1</mml:mn></mml:mrow><mml:mrow><mml:mi>B</mml:mi></mml:mrow></mml:msub></mml:mrow></mml:msup><mml:mi mathvariant="normal">m</mml:mi><mml:mi mathvariant="normal">o</mml:mi><mml:mi mathvariant="normal">d</mml:mi><mml:mi mathvariant="normal">p</mml:mi></mml:mrow></mml:mrow></mml:math></inline-formula> is a temporary private key for <italic toggle="yes">B</italic>.</td></tr><tr><td align="left" valign="middle" style="border-bottom:solid thin" rowspan="1" colspan="1"><inline-formula><mml:math id="mm247" overflow="scroll"><mml:mrow><mml:mrow><mml:msub><mml:mrow><mml:mi>T</mml:mi></mml:mrow><mml:mrow><mml:mi>P</mml:mi></mml:mrow></mml:msub></mml:mrow></mml:mrow></mml:math></inline-formula>: Timestamp of P; <italic toggle="yes">HMAC</italic>(): message authentication code</td><td align="left" valign="middle" style="border-bottom:solid thin" rowspan="1" colspan="1">
<inline-formula>
<mml:math id="mm248" overflow="scroll"><mml:mrow><mml:mrow><mml:msub><mml:mrow><mml:mi>G</mml:mi><mml:mi>K</mml:mi></mml:mrow><mml:mrow><mml:mi>P</mml:mi></mml:mrow></mml:msub><mml:mo>:</mml:mo><mml:mo>&#160;</mml:mo><mml:mi>t</mml:mi><mml:mi>h</mml:mi><mml:mi>e</mml:mi><mml:mo>&#160;</mml:mo><mml:mi>g</mml:mi><mml:mi>r</mml:mi><mml:mi>o</mml:mi><mml:mi>u</mml:mi><mml:mi>p</mml:mi><mml:mo>&#160;</mml:mo><mml:mi>k</mml:mi><mml:mi>e</mml:mi><mml:mi>y</mml:mi><mml:mo>&#160;</mml:mo><mml:mi>d</mml:mi><mml:mi>i</mml:mi><mml:mi>s</mml:mi><mml:mi>t</mml:mi><mml:mi>r</mml:mi><mml:mi>i</mml:mi><mml:mi>b</mml:mi><mml:mi>u</mml:mi><mml:mi>t</mml:mi><mml:mi>e</mml:mi><mml:mi>d</mml:mi><mml:mo>&#160;</mml:mo><mml:mi>b</mml:mi><mml:mi>y</mml:mi><mml:mo>&#160;</mml:mo><mml:mi>P</mml:mi><mml:mo>;</mml:mo><mml:mo>&#160;</mml:mo><mml:msub><mml:mrow><mml:mi>G</mml:mi><mml:mi>K</mml:mi></mml:mrow><mml:mrow><mml:mi>B</mml:mi></mml:mrow></mml:msub></mml:mrow></mml:mrow></mml:math>
</inline-formula>
<italic toggle="yes">: the group key distributed by B;</italic>
</td></tr><tr><td colspan="2" align="left" valign="middle" style="border-bottom:solid thin" rowspan="1"><inline-formula><mml:math id="mm249" overflow="scroll"><mml:mrow><mml:mrow><mml:msub><mml:mrow><mml:mi>S</mml:mi><mml:mi>K</mml:mi></mml:mrow><mml:mrow><mml:mi>P</mml:mi><mml:mi>B</mml:mi></mml:mrow></mml:msub></mml:mrow></mml:mrow></mml:math></inline-formula>/<inline-formula><mml:math id="mm250" overflow="scroll"><mml:mrow><mml:mrow><mml:msub><mml:mrow><mml:mi>S</mml:mi><mml:mi>K</mml:mi></mml:mrow><mml:mrow><mml:mi>B</mml:mi><mml:msub><mml:mrow><mml:mi>S</mml:mi></mml:mrow><mml:mrow><mml:mi>i</mml:mi></mml:mrow></mml:msub></mml:mrow></mml:msub><mml:mo>/</mml:mo><mml:msub><mml:mrow><mml:mi>S</mml:mi><mml:mi>K</mml:mi></mml:mrow><mml:mrow><mml:mi>S</mml:mi><mml:mi>P</mml:mi></mml:mrow></mml:msub></mml:mrow></mml:mrow></mml:math></inline-formula>: the session key between <italic toggle="yes">P</italic> and <italic toggle="yes">B</italic>/between <italic toggle="yes">S<sub>i</sub></italic> and <italic toggle="yes">B</italic>/between <italic toggle="yes">S</italic> and <italic toggle="yes">P.</italic>
<inline-formula><mml:math id="mm251" overflow="scroll"><mml:mrow><mml:mrow><mml:msub><mml:mrow><mml:mi>S</mml:mi><mml:mi>K</mml:mi></mml:mrow><mml:mrow><mml:mi>P</mml:mi><mml:mi>B</mml:mi></mml:mrow></mml:msub><mml:mo>=</mml:mo><mml:msup><mml:mrow><mml:mi>g</mml:mi></mml:mrow><mml:mrow><mml:msub><mml:mrow><mml:mi>T</mml:mi><mml:mi>P</mml:mi><mml:mi>r</mml:mi><mml:mi>K</mml:mi><mml:mn>1</mml:mn></mml:mrow><mml:mrow><mml:mi>B</mml:mi></mml:mrow></mml:msub><mml:mo>&#8727;</mml:mo><mml:msub><mml:mrow><mml:mi>T</mml:mi><mml:mi>P</mml:mi><mml:mi>r</mml:mi><mml:mi>K</mml:mi><mml:mn>1</mml:mn></mml:mrow><mml:mrow><mml:mi>P</mml:mi></mml:mrow></mml:msub></mml:mrow></mml:msup><mml:mi mathvariant="normal">m</mml:mi><mml:mi mathvariant="normal">o</mml:mi><mml:mi mathvariant="normal">d</mml:mi><mml:mi mathvariant="normal">p</mml:mi></mml:mrow></mml:mrow></mml:math></inline-formula>. <inline-formula><mml:math id="mm252" overflow="scroll"><mml:mrow><mml:mrow><mml:msub><mml:mrow><mml:mi>S</mml:mi><mml:mi>K</mml:mi></mml:mrow><mml:mrow><mml:mi>S</mml:mi><mml:mi>B</mml:mi></mml:mrow></mml:msub><mml:mo>=</mml:mo><mml:msup><mml:mrow><mml:mi>g</mml:mi></mml:mrow><mml:mrow><mml:msub><mml:mrow><mml:mi>T</mml:mi><mml:mi>P</mml:mi><mml:mi>r</mml:mi><mml:mi>K</mml:mi><mml:mn>2</mml:mn></mml:mrow><mml:mrow><mml:mi>B</mml:mi></mml:mrow></mml:msub><mml:mo>&#8727;</mml:mo><mml:msub><mml:mrow><mml:mi>T</mml:mi><mml:mi>P</mml:mi><mml:mi>r</mml:mi><mml:mi>K</mml:mi><mml:mn>1</mml:mn></mml:mrow><mml:mrow><mml:mi>S</mml:mi></mml:mrow></mml:msub></mml:mrow></mml:msup><mml:mi mathvariant="normal">m</mml:mi><mml:mi mathvariant="normal">o</mml:mi><mml:mi mathvariant="normal">d</mml:mi><mml:mi mathvariant="normal">p</mml:mi></mml:mrow></mml:mrow></mml:math></inline-formula>. <inline-formula><mml:math id="mm253" overflow="scroll"><mml:mrow><mml:mrow><mml:msub><mml:mrow><mml:mi>S</mml:mi><mml:mi>K</mml:mi></mml:mrow><mml:mrow><mml:mi>S</mml:mi><mml:mi>P</mml:mi></mml:mrow></mml:msub><mml:mo>=</mml:mo><mml:msup><mml:mrow><mml:mi>g</mml:mi></mml:mrow><mml:mrow><mml:msub><mml:mrow><mml:mi>T</mml:mi><mml:mi>P</mml:mi><mml:mi>r</mml:mi><mml:mi>K</mml:mi><mml:mn>2</mml:mn></mml:mrow><mml:mrow><mml:mi>S</mml:mi></mml:mrow></mml:msub><mml:mo>&#8727;</mml:mo><mml:msub><mml:mrow><mml:mi>T</mml:mi><mml:mi>P</mml:mi><mml:mi>r</mml:mi><mml:mi>K</mml:mi><mml:mn>2</mml:mn></mml:mrow><mml:mrow><mml:mi>P</mml:mi></mml:mrow></mml:msub></mml:mrow></mml:msup><mml:mi mathvariant="normal">m</mml:mi><mml:mi mathvariant="normal">o</mml:mi><mml:mi mathvariant="normal">d</mml:mi><mml:mi mathvariant="normal">p</mml:mi></mml:mrow></mml:mrow></mml:math></inline-formula>.</td></tr><tr><td align="left" valign="middle" style="border-bottom:solid thin" rowspan="1" colspan="1">G: the generator for the Elliptic Curve field</td><td align="left" valign="middle" style="border-bottom:solid thin" rowspan="1" colspan="1"><inline-formula><mml:math id="mm254" overflow="scroll"><mml:mrow><mml:mrow><mml:msub><mml:mrow><mml:mi>K</mml:mi><mml:mi>E</mml:mi><mml:mn>2</mml:mn><mml:mi>E</mml:mi></mml:mrow><mml:mrow><mml:mi>P</mml:mi><mml:msub><mml:mrow><mml:mi>S</mml:mi></mml:mrow><mml:mrow><mml:mi>i</mml:mi></mml:mrow></mml:msub></mml:mrow></mml:msub></mml:mrow></mml:mrow></mml:math></inline-formula>: the E2E-channel key between P and <inline-formula><mml:math id="mm255" overflow="scroll"><mml:mrow><mml:mrow><mml:msub><mml:mrow><mml:mi>S</mml:mi></mml:mrow><mml:mrow><mml:mi>i</mml:mi></mml:mrow></mml:msub></mml:mrow></mml:mrow></mml:math></inline-formula></td></tr><tr><td align="left" valign="middle" style="border-bottom:solid thin" rowspan="1" colspan="1"><inline-formula><mml:math id="mm256" overflow="scroll"><mml:mrow><mml:mrow><mml:msub><mml:mrow><mml:mi>S</mml:mi><mml:mi>i</mml:mi><mml:mi>g</mml:mi></mml:mrow><mml:mrow><mml:msub><mml:mrow><mml:mi>P</mml:mi><mml:mi>r</mml:mi><mml:mi>K</mml:mi></mml:mrow><mml:mrow><mml:mi>P</mml:mi></mml:mrow></mml:msub></mml:mrow></mml:msub><mml:mfenced separators="|"><mml:mrow/></mml:mfenced><mml:mo>:</mml:mo></mml:mrow></mml:mrow></mml:math></inline-formula> signature by <italic toggle="yes">P</italic>.</td><td align="left" valign="middle" style="border-bottom:solid thin" rowspan="1" colspan="1"><inline-formula><mml:math id="mm257" overflow="scroll"><mml:mrow><mml:mrow><mml:msub><mml:mrow><mml:mi>C</mml:mi><mml:mi>H</mml:mi><mml:mi>L</mml:mi></mml:mrow><mml:mrow><mml:mi>P</mml:mi><mml:mi>B</mml:mi></mml:mrow></mml:msub><mml:mo>/</mml:mo><mml:msub><mml:mrow><mml:mi>C</mml:mi><mml:mi>H</mml:mi><mml:mi>L</mml:mi></mml:mrow><mml:mrow><mml:mi>B</mml:mi><mml:msub><mml:mrow><mml:mi>S</mml:mi></mml:mrow><mml:mrow><mml:mi>i</mml:mi></mml:mrow></mml:msub></mml:mrow></mml:msub></mml:mrow></mml:mrow></mml:math></inline-formula>: the channel between P and <inline-formula><mml:math id="mm258" overflow="scroll"><mml:mrow><mml:mrow><mml:mi mathvariant="normal">B</mml:mi></mml:mrow></mml:mrow></mml:math></inline-formula>/between B and <inline-formula><mml:math id="mm259" overflow="scroll"><mml:mrow><mml:mrow><mml:msub><mml:mrow><mml:mi>S</mml:mi></mml:mrow><mml:mrow><mml:mi>i</mml:mi></mml:mrow></mml:msub></mml:mrow></mml:mrow></mml:math></inline-formula>. <inline-formula><mml:math id="mm260" overflow="scroll"><mml:mrow><mml:mrow><mml:msub><mml:mrow><mml:mi>C</mml:mi><mml:mi>H</mml:mi><mml:mi>L</mml:mi></mml:mrow><mml:mrow><mml:mi>P</mml:mi><mml:msub><mml:mrow><mml:mi>S</mml:mi></mml:mrow><mml:mrow><mml:mi>i</mml:mi></mml:mrow></mml:msub></mml:mrow></mml:msub></mml:mrow></mml:mrow></mml:math></inline-formula>: the E2E channel between P and <inline-formula><mml:math id="mm261" overflow="scroll"><mml:mrow><mml:mrow><mml:msub><mml:mrow><mml:mi>S</mml:mi></mml:mrow><mml:mrow><mml:mi>i</mml:mi></mml:mrow></mml:msub></mml:mrow></mml:mrow></mml:math></inline-formula>.</td></tr><tr><td colspan="2" align="left" valign="middle" style="border-bottom:solid thin" rowspan="1">EI: Encryption with Integrity; NOEI: No Encryption and NO Integrity; E: Encryption only; I: Integrity only. </td></tr></tbody></table></table-wrap><table-wrap position="float" id="sensors-25-05308-t002" orientation="portrait"><object-id pub-id-type="pii">sensors-25-05308-t002_Table 2</object-id><label>Table 2</label><caption><p>Functional performances of the four schemes.</p></caption><table frame="hsides" rules="groups"><thead><tr><th align="left" valign="middle" style="border-top:solid thin;border-bottom:solid thin" rowspan="1" colspan="1">Schemes</th><th align="left" valign="middle" style="border-top:solid thin;border-bottom:solid thin" rowspan="1" colspan="1">Scheme 1</th><th align="left" valign="middle" style="border-top:solid thin;border-bottom:solid thin" rowspan="1" colspan="1">Scheme 2</th><th align="left" valign="middle" style="border-top:solid thin;border-bottom:solid thin" rowspan="1" colspan="1">Scheme 3</th><th align="left" valign="middle" style="border-top:solid thin;border-bottom:solid thin" rowspan="1" colspan="1">Scheme 4</th></tr></thead><tbody><tr><td align="left" valign="middle" style="border-bottom:solid thin" rowspan="1" colspan="1">P-B channel security</td><td align="left" valign="middle" style="border-bottom:solid thin" rowspan="1" colspan="1">NoEI</td><td align="left" valign="middle" style="border-bottom:solid thin" rowspan="1" colspan="1">EI with individual key</td><td align="left" valign="middle" style="border-bottom:solid thin" rowspan="1" colspan="1">EI with individual key</td><td align="left" valign="middle" style="border-bottom:solid thin" rowspan="1" colspan="1">I with individual key</td></tr><tr><td align="left" valign="middle" style="border-bottom:solid thin" rowspan="1" colspan="1">B-S channel security</td><td align="left" valign="middle" style="border-bottom:solid thin" rowspan="1" colspan="1">NoEI</td><td align="left" valign="middle" style="border-bottom:solid thin" rowspan="1" colspan="1">EI with individual key</td><td align="left" valign="middle" style="border-bottom:solid thin" rowspan="1" colspan="1">EI with group key</td><td align="left" valign="middle" style="border-bottom:solid thin" rowspan="1" colspan="1">I with group key</td></tr><tr><td align="left" valign="middle" style="border-bottom:solid thin" rowspan="1" colspan="1">P-S channel security</td><td align="left" valign="middle" style="border-bottom:solid thin" rowspan="1" colspan="1">EI with individual key</td><td align="left" valign="middle" style="border-bottom:solid thin" rowspan="1" colspan="1">EI with individual key</td><td align="left" valign="middle" style="border-bottom:solid thin" rowspan="1" colspan="1">EI with group key</td><td align="left" valign="middle" style="border-bottom:solid thin" rowspan="1" colspan="1">EI with group key</td></tr><tr><td align="left" valign="middle" style="border-bottom:solid thin" rowspan="1" colspan="1">P&#8217;s computational complexity for 1 MQTT msg.</td><td align="center" valign="middle" style="border-bottom:solid thin" rowspan="1" colspan="1">
<inline-formula>
<mml:math id="mm262" overflow="scroll"><mml:mrow><mml:mrow><mml:mi>n</mml:mi><mml:mo>&#8727;</mml:mo><mml:mo>(</mml:mo><mml:msub><mml:mrow><mml:mi>T</mml:mi></mml:mrow><mml:mrow><mml:mi>E</mml:mi></mml:mrow></mml:msub><mml:mo>+</mml:mo><mml:msub><mml:mrow><mml:mi>T</mml:mi></mml:mrow><mml:mrow><mml:mi>H</mml:mi></mml:mrow></mml:msub><mml:mo>)</mml:mo></mml:mrow></mml:mrow></mml:math>
</inline-formula>
</td><td align="center" valign="middle" style="border-bottom:solid thin" rowspan="1" colspan="1">
<inline-formula>
<mml:math id="mm263" overflow="scroll"><mml:mrow><mml:mrow><mml:mo>(</mml:mo><mml:mi>n</mml:mi><mml:mo>+</mml:mo><mml:mn>1</mml:mn><mml:mo>)</mml:mo><mml:mo>&#8727;</mml:mo><mml:mo>(</mml:mo><mml:msub><mml:mrow><mml:mi>T</mml:mi></mml:mrow><mml:mrow><mml:mi>E</mml:mi></mml:mrow></mml:msub><mml:mo>+</mml:mo><mml:msub><mml:mrow><mml:mi>T</mml:mi></mml:mrow><mml:mrow><mml:mi>H</mml:mi></mml:mrow></mml:msub><mml:mo>)</mml:mo></mml:mrow></mml:mrow></mml:math>
</inline-formula>
</td><td align="center" valign="middle" style="border-bottom:solid thin" rowspan="1" colspan="1">
<inline-formula>
<mml:math id="mm264" overflow="scroll"><mml:mrow><mml:mrow><mml:mn>2</mml:mn><mml:msub><mml:mrow><mml:mi>T</mml:mi></mml:mrow><mml:mrow><mml:mi>E</mml:mi></mml:mrow></mml:msub><mml:mo>+</mml:mo><mml:mn>2</mml:mn><mml:msub><mml:mrow><mml:mi>T</mml:mi></mml:mrow><mml:mrow><mml:mi>H</mml:mi></mml:mrow></mml:msub></mml:mrow></mml:mrow></mml:math>
</inline-formula>
</td><td align="center" valign="middle" style="border-bottom:solid thin" rowspan="1" colspan="1">
<inline-formula>
<mml:math id="mm265" overflow="scroll"><mml:mrow><mml:mrow><mml:mn>1</mml:mn><mml:msub><mml:mrow><mml:mi>T</mml:mi></mml:mrow><mml:mrow><mml:mi>E</mml:mi></mml:mrow></mml:msub><mml:mo>+</mml:mo><mml:msub><mml:mrow><mml:mn>2</mml:mn><mml:mi>T</mml:mi></mml:mrow><mml:mrow><mml:mi>H</mml:mi></mml:mrow></mml:msub></mml:mrow></mml:mrow></mml:math>
</inline-formula>
</td></tr><tr><td align="left" valign="middle" style="border-bottom:solid thin" rowspan="1" colspan="1">B&#8217;s computational complexity for 1 MQTT msg.</td><td align="center" valign="middle" style="border-bottom:solid thin" rowspan="1" colspan="1">
<inline-formula>
<mml:math id="mm266" overflow="scroll"><mml:mrow><mml:mrow><mml:mn>1</mml:mn><mml:msub><mml:mrow><mml:mi>T</mml:mi></mml:mrow><mml:mrow><mml:mi>E</mml:mi></mml:mrow></mml:msub><mml:mo>+</mml:mo><mml:mn>1</mml:mn><mml:msub><mml:mrow><mml:mi>T</mml:mi></mml:mrow><mml:mrow><mml:mi>H</mml:mi></mml:mrow></mml:msub></mml:mrow></mml:mrow></mml:math>
</inline-formula>
</td><td align="center" valign="middle" style="border-bottom:solid thin" rowspan="1" colspan="1">
<inline-formula>
<mml:math id="mm267" overflow="scroll"><mml:mrow><mml:mrow><mml:mo>(</mml:mo><mml:mi>n</mml:mi><mml:mo>+</mml:mo><mml:mn>1</mml:mn><mml:mo>)</mml:mo><mml:mo>&#8727;</mml:mo><mml:mo>(</mml:mo><mml:msub><mml:mrow><mml:mi>T</mml:mi></mml:mrow><mml:mrow><mml:mi>E</mml:mi></mml:mrow></mml:msub><mml:mo>+</mml:mo><mml:msub><mml:mrow><mml:mi>T</mml:mi></mml:mrow><mml:mrow><mml:mi>H</mml:mi></mml:mrow></mml:msub><mml:mo>)</mml:mo></mml:mrow></mml:mrow></mml:math>
</inline-formula>
</td><td align="center" valign="middle" style="border-bottom:solid thin" rowspan="1" colspan="1">
<inline-formula>
<mml:math id="mm268" overflow="scroll"><mml:mrow><mml:mrow><mml:mn>2</mml:mn><mml:msub><mml:mrow><mml:mi>T</mml:mi></mml:mrow><mml:mrow><mml:mi>E</mml:mi></mml:mrow></mml:msub><mml:mo>+</mml:mo><mml:mn>2</mml:mn><mml:msub><mml:mrow><mml:mi>T</mml:mi></mml:mrow><mml:mrow><mml:mi>H</mml:mi></mml:mrow></mml:msub></mml:mrow></mml:mrow></mml:math>
</inline-formula>
</td><td align="center" valign="middle" style="border-bottom:solid thin" rowspan="1" colspan="1">
<inline-formula>
<mml:math id="mm269" overflow="scroll"><mml:mrow><mml:mrow><mml:msub><mml:mrow><mml:mn>2</mml:mn><mml:mi>T</mml:mi></mml:mrow><mml:mrow><mml:mi>H</mml:mi></mml:mrow></mml:msub></mml:mrow></mml:mrow></mml:math>
</inline-formula>
</td></tr><tr><td align="left" valign="middle" style="border-bottom:solid thin" rowspan="1" colspan="1">S&#8217;s computational complexity for 1 MQTT msg.</td><td align="center" valign="middle" style="border-bottom:solid thin" rowspan="1" colspan="1">
<inline-formula>
<mml:math id="mm270" overflow="scroll"><mml:mrow><mml:mrow><mml:mn>1</mml:mn><mml:msub><mml:mrow><mml:mi>T</mml:mi></mml:mrow><mml:mrow><mml:mi>E</mml:mi></mml:mrow></mml:msub><mml:mo>+</mml:mo><mml:mn>1</mml:mn><mml:msub><mml:mrow><mml:mi>T</mml:mi></mml:mrow><mml:mrow><mml:mi>H</mml:mi></mml:mrow></mml:msub></mml:mrow></mml:mrow></mml:math>
</inline-formula>
</td><td align="center" valign="middle" style="border-bottom:solid thin" rowspan="1" colspan="1">
<inline-formula>
<mml:math id="mm271" overflow="scroll"><mml:mrow><mml:mrow><mml:mn>2</mml:mn><mml:msub><mml:mrow><mml:mi>T</mml:mi></mml:mrow><mml:mrow><mml:mi>E</mml:mi></mml:mrow></mml:msub><mml:mo>+</mml:mo><mml:msub><mml:mrow><mml:mn>2</mml:mn><mml:mi>T</mml:mi></mml:mrow><mml:mrow><mml:mi>H</mml:mi></mml:mrow></mml:msub></mml:mrow></mml:mrow></mml:math>
</inline-formula>
</td><td align="center" valign="middle" style="border-bottom:solid thin" rowspan="1" colspan="1">
<inline-formula>
<mml:math id="mm272" overflow="scroll"><mml:mrow><mml:mrow><mml:mn>2</mml:mn><mml:msub><mml:mrow><mml:mi>T</mml:mi></mml:mrow><mml:mrow><mml:mi>E</mml:mi></mml:mrow></mml:msub><mml:mo>+</mml:mo><mml:mn>2</mml:mn><mml:msub><mml:mrow><mml:mi>T</mml:mi></mml:mrow><mml:mrow><mml:mi>H</mml:mi></mml:mrow></mml:msub></mml:mrow></mml:mrow></mml:math>
</inline-formula>
</td><td align="center" valign="middle" style="border-bottom:solid thin" rowspan="1" colspan="1">
<inline-formula>
<mml:math id="mm273" overflow="scroll"><mml:mrow><mml:mrow><mml:mn>1</mml:mn><mml:msub><mml:mrow><mml:mi>T</mml:mi></mml:mrow><mml:mrow><mml:mi>E</mml:mi></mml:mrow></mml:msub><mml:mo>+</mml:mo><mml:msub><mml:mrow><mml:mn>2</mml:mn><mml:mi>T</mml:mi></mml:mrow><mml:mrow><mml:mi>H</mml:mi></mml:mrow></mml:msub></mml:mrow></mml:mrow></mml:math>
</inline-formula>
</td></tr></tbody></table><table-wrap-foot><fn><p>P: Publisher; B: Broker; S: Subscriber; NoEI: No Encryption and Integrity; E: Encryption; I: Integrity; Msg: message.</p></fn></table-wrap-foot></table-wrap><table-wrap position="float" id="sensors-25-05308-t003" orientation="portrait"><object-id pub-id-type="pii">sensors-25-05308-t003_Table 3</object-id><label>Table 3</label><caption><p>The hardware and the software used in the simulations.</p></caption><table frame="hsides" rules="groups"><tbody><tr><td align="left" valign="middle" style="border-top:solid thin" rowspan="1" colspan="1">host machine</td><td align="left" valign="middle" style="border-top:solid thin" rowspan="1" colspan="1">CPU: Intel<sup>&#174;</sup> Core&#8482; i7-8700 CPU @ 3.20 GHz, 6 cores, 12 threads<break/>Motherboard: Dell 0PXWHK; RAM: 64 GB; GPU: NVIDIA GeForce GTX 1070</td></tr><tr><td align="left" valign="middle" rowspan="1" colspan="1">VM</td><td align="left" valign="middle" rowspan="1" colspan="1">2 vCPUs &amp; 4 GB RAM</td></tr><tr><td align="left" valign="middle" style="border-bottom:solid thin" rowspan="1" colspan="1">Software</td><td align="left" valign="middle" style="border-bottom:solid thin" rowspan="1" colspan="1">Ubuntu 22.04.5 LTS, VMware&#174; Workstation 17 Pro 17.6.3, Paho-mqtt 1.6.1, Mosquitto 2.0.15, Openssl 3.0.2, json-c 0.16.99</td></tr></tbody></table></table-wrap><table-wrap position="float" id="sensors-25-05308-t004" orientation="portrait"><object-id pub-id-type="pii">sensors-25-05308-t004_Table 4</object-id><label>Table 4</label><caption><p>Summary of 50 connection latencies of publishers and five subscribers (ms).</p></caption><table frame="hsides" rules="groups"><thead><tr><th align="center" valign="middle" style="border-top:solid thin;border-bottom:solid thin" rowspan="1" colspan="1">
</th><th align="center" valign="middle" style="border-top:solid thin;border-bottom:solid thin" rowspan="1" colspan="1">Pub</th><th align="center" valign="middle" style="border-top:solid thin;border-bottom:solid thin" rowspan="1" colspan="1">Sub 1</th><th align="center" valign="middle" style="border-top:solid thin;border-bottom:solid thin" rowspan="1" colspan="1">Sub 2</th><th align="center" valign="middle" style="border-top:solid thin;border-bottom:solid thin" rowspan="1" colspan="1">Sub 3</th><th align="center" valign="middle" style="border-top:solid thin;border-bottom:solid thin" rowspan="1" colspan="1">Sub 4</th><th align="center" valign="middle" style="border-top:solid thin;border-bottom:solid thin" rowspan="1" colspan="1">Sub 5</th><th align="center" valign="middle" style="border-top:solid thin;border-bottom:solid thin" rowspan="1" colspan="1">
</th></tr></thead><tbody><tr><td align="center" valign="middle" style="border-bottom:solid thin" rowspan="1" colspan="1">
<bold>AVERAGE</bold>
</td><td align="center" valign="middle" style="border-bottom:solid thin" rowspan="1" colspan="1">135</td><td align="center" valign="middle" style="border-bottom:solid thin" rowspan="1" colspan="1">163</td><td align="center" valign="middle" style="border-bottom:solid thin" rowspan="1" colspan="1">142</td><td align="center" valign="middle" style="border-bottom:solid thin" rowspan="1" colspan="1">155</td><td align="center" valign="middle" style="border-bottom:solid thin" rowspan="1" colspan="1">150</td><td align="center" valign="middle" style="border-bottom:solid thin" rowspan="1" colspan="1">159</td><td align="center" valign="middle" style="border-bottom:solid thin" rowspan="1" colspan="1">AVG(Sub1~5) = 153.8</td></tr><tr><td align="center" valign="middle" style="border-bottom:solid thin" rowspan="1" colspan="1">
<bold>MAX</bold>
</td><td align="center" valign="middle" style="border-bottom:solid thin" rowspan="1" colspan="1">191</td><td align="center" valign="middle" style="border-bottom:solid thin" rowspan="1" colspan="1">282</td><td align="center" valign="middle" style="border-bottom:solid thin" rowspan="1" colspan="1">149</td><td align="center" valign="middle" style="border-bottom:solid thin" rowspan="1" colspan="1">186</td><td align="center" valign="middle" style="border-bottom:solid thin" rowspan="1" colspan="1">186</td><td align="center" valign="middle" style="border-bottom:solid thin" rowspan="1" colspan="1">193</td><td align="center" valign="middle" style="border-bottom:solid thin" rowspan="1" colspan="1">MAX(Sub1~5) = 282</td></tr><tr><td align="center" valign="middle" style="border-bottom:solid thin" rowspan="1" colspan="1">
<bold>MIN</bold>
</td><td align="center" valign="middle" style="border-bottom:solid thin" rowspan="1" colspan="1">39</td><td align="center" valign="middle" style="border-bottom:solid thin" rowspan="1" colspan="1">57</td><td align="center" valign="middle" style="border-bottom:solid thin" rowspan="1" colspan="1">52</td><td align="center" valign="middle" style="border-bottom:solid thin" rowspan="1" colspan="1">74</td><td align="center" valign="middle" style="border-bottom:solid thin" rowspan="1" colspan="1">50</td><td align="center" valign="middle" style="border-bottom:solid thin" rowspan="1" colspan="1">47</td><td align="center" valign="middle" style="border-bottom:solid thin" rowspan="1" colspan="1">MIN(Sub1~5) = 47</td></tr><tr><td align="center" valign="middle" style="border-bottom:solid thin" rowspan="1" colspan="1">
<bold>MAX(w)</bold>
</td><td align="center" valign="middle" style="border-bottom:solid thin" rowspan="1" colspan="1">
</td><td align="center" valign="middle" style="border-bottom:solid thin" rowspan="1" colspan="1">4</td><td align="center" valign="middle" style="border-bottom:solid thin" rowspan="1" colspan="1">1</td><td align="center" valign="middle" style="border-bottom:solid thin" rowspan="1" colspan="1">1</td><td align="center" valign="middle" style="border-bottom:solid thin" rowspan="1" colspan="1">1</td><td align="center" valign="middle" style="border-bottom:solid thin" rowspan="1" colspan="1">1</td><td align="center" valign="middle" style="border-bottom:solid thin" rowspan="1" colspan="1">
</td></tr></tbody></table><table-wrap-foot><fn><p>w = Wait count, w = 1(+25 ms), w = 2(+50 ms); Pub: publisher, Sub: subscriber.</p></fn></table-wrap-foot></table-wrap><table-wrap position="float" id="sensors-25-05308-t005" orientation="portrait"><object-id pub-id-type="pii">sensors-25-05308-t005_Table 5</object-id><label>Table 5</label><caption><p>The latencies of pub/sub connections with a varying number of subscribers.</p></caption><table frame="hsides" rules="groups"><thead><tr><th align="center" valign="middle" style="border-top:solid thin;border-bottom:solid thin" rowspan="1" colspan="1">Number of Subs</th><th align="center" valign="middle" style="border-top:solid thin;border-bottom:solid thin" rowspan="1" colspan="1">10</th><th align="center" valign="middle" style="border-top:solid thin;border-bottom:solid thin" rowspan="1" colspan="1">20</th><th align="center" valign="middle" style="border-top:solid thin;border-bottom:solid thin" rowspan="1" colspan="1">50</th><th align="center" valign="middle" style="border-top:solid thin;border-bottom:solid thin" rowspan="1" colspan="1">100</th><th align="center" valign="middle" style="border-top:solid thin;border-bottom:solid thin" rowspan="1" colspan="1">200</th></tr></thead><tbody><tr><td align="center" valign="middle" style="border-bottom:solid thin" rowspan="1" colspan="1">Latencies of pub/sub </td><td align="center" valign="middle" style="border-bottom:solid thin" rowspan="1" colspan="1">151/239</td><td align="center" valign="middle" style="border-bottom:solid thin" rowspan="1" colspan="1">137/259</td><td align="center" valign="middle" style="border-bottom:solid thin" rowspan="1" colspan="1">177/260</td><td align="center" valign="middle" style="border-bottom:solid thin" rowspan="1" colspan="1">189/261</td><td align="center" valign="middle" style="border-bottom:solid thin" rowspan="1" colspan="1">157/277</td></tr></tbody></table></table-wrap><table-wrap position="float" id="sensors-25-05308-t006" orientation="portrait"><object-id pub-id-type="pii">sensors-25-05308-t006_Table 6</object-id><label>Table 6</label><caption><p>The publishing&#8211;receiving latencies in Scenario 1.</p></caption><table frame="hsides" rules="groups"><thead><tr><td align="center" valign="middle" style="border-top:solid thin;border-bottom:solid thin" rowspan="1" colspan="1">Publish&#8211;Receive Delay</td><td align="center" valign="middle" style="border-top:solid thin;border-bottom:solid thin" rowspan="1" colspan="1">Average</td><td align="center" valign="middle" style="border-top:solid thin;border-bottom:solid thin" rowspan="1" colspan="1">Max</td><td align="center" valign="middle" style="border-top:solid thin;border-bottom:solid thin" rowspan="1" colspan="1">Min</td><td align="center" valign="middle" style="border-top:solid thin;border-bottom:solid thin" rowspan="1" colspan="1">Median</td><td align="center" valign="middle" style="border-top:solid thin;border-bottom:solid thin" rowspan="1" colspan="1">StdDev</td><td align="center" valign="middle" style="border-top:solid thin;border-bottom:solid thin" rowspan="1" colspan="1">Variance</td></tr></thead><tbody><tr><td align="center" valign="middle" style="border-bottom:solid thin" rowspan="1" colspan="1">
Scheme 1
</td><td align="center" valign="middle" style="border-bottom:solid thin" rowspan="1" colspan="1">21.44</td><td align="center" valign="middle" style="border-bottom:solid thin" rowspan="1" colspan="1">115.50</td><td align="center" valign="middle" style="border-bottom:solid thin" rowspan="1" colspan="1">0.67</td><td align="center" valign="middle" style="border-bottom:solid thin" rowspan="1" colspan="1">21.82</td><td align="center" valign="middle" style="border-bottom:solid thin" rowspan="1" colspan="1">9.14</td><td align="center" valign="middle" style="border-bottom:solid thin" rowspan="1" colspan="1">83.61</td></tr><tr><td align="center" valign="middle" style="border-bottom:solid thin" rowspan="1" colspan="1">
Scheme 4
</td><td align="center" valign="middle" style="border-bottom:solid thin" rowspan="1" colspan="1">23.30</td><td align="center" valign="middle" style="border-bottom:solid thin" rowspan="1" colspan="1">169.94</td><td align="center" valign="middle" style="border-bottom:solid thin" rowspan="1" colspan="1">0.74</td><td align="center" valign="middle" style="border-bottom:solid thin" rowspan="1" colspan="1">23.40</td><td align="center" valign="middle" style="border-bottom:solid thin" rowspan="1" colspan="1">10.30</td><td align="center" valign="middle" style="border-bottom:solid thin" rowspan="1" colspan="1">106.03</td></tr><tr><td align="center" valign="middle" style="border-bottom:solid thin" rowspan="1" colspan="1">
Scheme 3
</td><td align="center" valign="middle" style="border-bottom:solid thin" rowspan="1" colspan="1">34.42</td><td align="center" valign="middle" style="border-bottom:solid thin" rowspan="1" colspan="1">154.49</td><td align="center" valign="middle" style="border-bottom:solid thin" rowspan="1" colspan="1">0.88</td><td align="center" valign="middle" style="border-bottom:solid thin" rowspan="1" colspan="1">36.82</td><td align="center" valign="middle" style="border-bottom:solid thin" rowspan="1" colspan="1">14.35</td><td align="center" valign="middle" style="border-bottom:solid thin" rowspan="1" colspan="1">205.88</td></tr><tr><td align="center" valign="middle" style="border-bottom:solid thin" rowspan="1" colspan="1">
Scheme 2
</td><td align="center" valign="middle" style="border-bottom:solid thin" rowspan="1" colspan="1">36.51</td><td align="center" valign="middle" style="border-bottom:solid thin" rowspan="1" colspan="1">153.63</td><td align="center" valign="middle" style="border-bottom:solid thin" rowspan="1" colspan="1">7.46</td><td align="center" valign="middle" style="border-bottom:solid thin" rowspan="1" colspan="1">36.58</td><td align="center" valign="middle" style="border-bottom:solid thin" rowspan="1" colspan="1">12.54</td><td align="center" valign="middle" style="border-bottom:solid thin" rowspan="1" colspan="1">157.33</td></tr></tbody></table></table-wrap><table-wrap position="float" id="sensors-25-05308-t007" orientation="portrait"><object-id pub-id-type="pii">sensors-25-05308-t007_Table 7</object-id><label>Table 7</label><caption><p>Publish&#8211;receive latencies in Scenario 2.</p></caption><table frame="hsides" rules="groups"><thead><tr><th align="center" valign="middle" style="border-top:solid thin;border-bottom:solid thin" rowspan="1" colspan="1">
</th><th align="center" valign="middle" style="border-top:solid thin;border-bottom:solid thin" rowspan="1" colspan="1">Scheme</th><th align="center" valign="middle" style="border-top:solid thin;border-bottom:solid thin" rowspan="1" colspan="1">Average</th><th align="center" valign="middle" style="border-top:solid thin;border-bottom:solid thin" rowspan="1" colspan="1">Max</th><th align="center" valign="middle" style="border-top:solid thin;border-bottom:solid thin" rowspan="1" colspan="1">Min</th></tr></thead><tbody><tr><td rowspan="4" align="center" valign="middle" style="border-bottom:solid thin" colspan="1">sub 100</td><td align="center" valign="middle" style="border-bottom:solid thin" rowspan="1" colspan="1">
Scheme 1
</td><td align="center" valign="middle" style="border-bottom:solid thin" rowspan="1" colspan="1">9.856</td><td align="center" valign="middle" style="border-bottom:solid thin" rowspan="1" colspan="1">84.174</td><td align="center" valign="middle" style="border-bottom:solid thin" rowspan="1" colspan="1">0.627</td></tr><tr><td align="center" valign="middle" style="border-bottom:solid thin" rowspan="1" colspan="1">
Scheme 4
</td><td align="center" valign="middle" style="border-bottom:solid thin" rowspan="1" colspan="1">10.399</td><td align="center" valign="middle" style="border-bottom:solid thin" rowspan="1" colspan="1">96.933</td><td align="center" valign="middle" style="border-bottom:solid thin" rowspan="1" colspan="1">0.809</td></tr><tr><td align="center" valign="middle" style="border-bottom:solid thin" rowspan="1" colspan="1">
Scheme 3
</td><td align="center" valign="middle" style="border-bottom:solid thin" rowspan="1" colspan="1">12.587</td><td align="center" valign="middle" style="border-bottom:solid thin" rowspan="1" colspan="1">88.264</td><td align="center" valign="middle" style="border-bottom:solid thin" rowspan="1" colspan="1">0.861</td></tr><tr><td align="center" valign="middle" style="border-bottom:solid thin" rowspan="1" colspan="1">
Scheme 2
</td><td align="center" valign="middle" style="border-bottom:solid thin" rowspan="1" colspan="1">17.239</td><td align="center" valign="middle" style="border-bottom:solid thin" rowspan="1" colspan="1">111.122</td><td align="center" valign="middle" style="border-bottom:solid thin" rowspan="1" colspan="1">3.669</td></tr><tr><td rowspan="4" align="center" valign="middle" style="border-bottom:solid thin" colspan="1">sub 200</td><td align="center" valign="middle" style="border-bottom:solid thin" rowspan="1" colspan="1">
Scheme 1
</td><td align="center" valign="middle" style="border-bottom:solid thin" rowspan="1" colspan="1">15.939</td><td align="center" valign="middle" style="border-bottom:solid thin" rowspan="1" colspan="1">100.076</td><td align="center" valign="middle" style="border-bottom:solid thin" rowspan="1" colspan="1">0.663</td></tr><tr><td align="center" valign="middle" style="border-bottom:solid thin" rowspan="1" colspan="1">
Scheme 4
</td><td align="center" valign="middle" style="border-bottom:solid thin" rowspan="1" colspan="1">17.299</td><td align="center" valign="middle" style="border-bottom:solid thin" rowspan="1" colspan="1">204.405</td><td align="center" valign="middle" style="border-bottom:solid thin" rowspan="1" colspan="1">0.727</td></tr><tr><td align="center" valign="middle" style="border-bottom:solid thin" rowspan="1" colspan="1">
Scheme 3
</td><td align="center" valign="middle" style="border-bottom:solid thin" rowspan="1" colspan="1">21.728</td><td align="center" valign="middle" style="border-bottom:solid thin" rowspan="1" colspan="1">100.141</td><td align="center" valign="middle" style="border-bottom:solid thin" rowspan="1" colspan="1">0.929</td></tr><tr><td align="center" valign="middle" style="border-bottom:solid thin" rowspan="1" colspan="1">
Scheme 2
</td><td align="center" valign="middle" style="border-bottom:solid thin" rowspan="1" colspan="1">30.418</td><td align="center" valign="middle" style="border-bottom:solid thin" rowspan="1" colspan="1">109.806</td><td align="center" valign="middle" style="border-bottom:solid thin" rowspan="1" colspan="1">7.597</td></tr></tbody></table></table-wrap><table-wrap position="float" id="sensors-25-05308-t008" orientation="portrait"><object-id pub-id-type="pii">sensors-25-05308-t008_Table 8</object-id><label>Table 8</label><caption><p>Publish&#8211;receive latencies in Scenario 3.</p></caption><table frame="hsides" rules="groups"><thead><tr><th align="center" valign="middle" style="border-top:solid thin;border-bottom:solid thin" rowspan="1" colspan="1">
</th><th align="center" valign="middle" style="border-top:solid thin;border-bottom:solid thin" rowspan="1" colspan="1">Scheme</th><th align="center" valign="middle" style="border-top:solid thin;border-bottom:solid thin" rowspan="1" colspan="1">Average</th><th align="center" valign="middle" style="border-top:solid thin;border-bottom:solid thin" rowspan="1" colspan="1">Max</th><th align="center" valign="middle" style="border-top:solid thin;border-bottom:solid thin" rowspan="1" colspan="1">Min</th></tr></thead><tbody><tr><td rowspan="4" align="center" valign="middle" style="border-bottom:solid thin" colspan="1">sub 100</td><td align="center" valign="middle" style="border-bottom:solid thin" rowspan="1" colspan="1">Scheme1</td><td align="center" valign="middle" style="border-bottom:solid thin" rowspan="1" colspan="1">15.079</td><td align="center" valign="middle" style="border-bottom:solid thin" rowspan="1" colspan="1">440.975</td><td align="center" valign="middle" style="border-bottom:solid thin" rowspan="1" colspan="1">1.671</td></tr><tr><td align="center" valign="middle" style="border-bottom:solid thin" rowspan="1" colspan="1">Scheme4</td><td align="center" valign="middle" style="border-bottom:solid thin" rowspan="1" colspan="1">15.013</td><td align="center" valign="middle" style="border-bottom:solid thin" rowspan="1" colspan="1">433.278</td><td align="center" valign="middle" style="border-bottom:solid thin" rowspan="1" colspan="1">2.129</td></tr><tr><td align="center" valign="middle" style="border-bottom:solid thin" rowspan="1" colspan="1">Scheme3</td><td align="center" valign="middle" style="border-bottom:solid thin" rowspan="1" colspan="1">16.763</td><td align="center" valign="middle" style="border-bottom:solid thin" rowspan="1" colspan="1">242.792</td><td align="center" valign="middle" style="border-bottom:solid thin" rowspan="1" colspan="1">2.395</td></tr><tr><td align="center" valign="middle" style="border-bottom:solid thin" rowspan="1" colspan="1">Scheme2</td><td align="center" valign="middle" style="border-bottom:solid thin" rowspan="1" colspan="1">26.798</td><td align="center" valign="middle" style="border-bottom:solid thin" rowspan="1" colspan="1">274.494</td><td align="center" valign="middle" style="border-bottom:solid thin" rowspan="1" colspan="1">6.899</td></tr><tr><td rowspan="4" align="center" valign="middle" style="border-bottom:solid thin" colspan="1">sub 200</td><td align="center" valign="middle" style="border-bottom:solid thin" rowspan="1" colspan="1">Scheme1</td><td align="center" valign="middle" style="border-bottom:solid thin" rowspan="1" colspan="1">24.839</td><td align="center" valign="middle" style="border-bottom:solid thin" rowspan="1" colspan="1">278.347</td><td align="center" valign="middle" style="border-bottom:solid thin" rowspan="1" colspan="1">1.705</td></tr><tr><td align="center" valign="middle" style="border-bottom:solid thin" rowspan="1" colspan="1">Scheme4</td><td align="center" valign="middle" style="border-bottom:solid thin" rowspan="1" colspan="1">26.407</td><td align="center" valign="middle" style="border-bottom:solid thin" rowspan="1" colspan="1">279.038</td><td align="center" valign="middle" style="border-bottom:solid thin" rowspan="1" colspan="1">2.111</td></tr><tr><td align="center" valign="middle" style="border-bottom:solid thin" rowspan="1" colspan="1">Scheme3</td><td align="center" valign="middle" style="border-bottom:solid thin" rowspan="1" colspan="1">28.783</td><td align="center" valign="middle" style="border-bottom:solid thin" rowspan="1" colspan="1">406.476</td><td align="center" valign="middle" style="border-bottom:solid thin" rowspan="1" colspan="1">2.16</td></tr><tr><td align="center" valign="middle" style="border-bottom:solid thin" rowspan="1" colspan="1">Scheme2</td><td align="center" valign="middle" style="border-bottom:solid thin" rowspan="1" colspan="1">57.255</td><td align="center" valign="middle" style="border-bottom:solid thin" rowspan="1" colspan="1">360.384</td><td align="center" valign="middle" style="border-bottom:solid thin" rowspan="1" colspan="1">13.643</td></tr></tbody></table></table-wrap><table-wrap position="float" id="sensors-25-05308-t009" orientation="portrait"><object-id pub-id-type="pii">sensors-25-05308-t009_Table 9</object-id><label>Table 9</label><caption><p>Qualitative comparison among pub/sub systems and MQTT mechanisms.</p></caption><table frame="hsides" rules="groups"><thead><tr><th align="left" valign="middle" style="border-top:solid thin;border-bottom:solid thin" rowspan="1" colspan="1">Scheme/Approach</th><th align="left" valign="middle" style="border-top:solid thin;border-bottom:solid thin" rowspan="1" colspan="1">E2E Key Establishment</th><th align="left" valign="middle" style="border-top:solid thin;border-bottom:solid thin" rowspan="1" colspan="1">Main Challenges/Limitations</th></tr></thead><tbody><tr><td align="left" valign="middle" style="border-bottom:solid thin" rowspan="1" colspan="1">Mektoubi et al. [<xref rid="B7-sensors-25-05308" ref-type="bibr">7</xref>]</td><td align="left" valign="middle" style="border-bottom:solid thin" rowspan="1" colspan="1">Topic certificate&#8217;s public/private key to encrypt/decrypt topic messages</td><td align="left" valign="middle" style="border-bottom:solid thin" rowspan="1" colspan="1">Very huge overhead from the clients; the challenges of private key distribution</td></tr><tr><td align="left" valign="middle" style="border-bottom:solid thin" rowspan="1" colspan="1">MQTLS [<xref rid="B4-sensors-25-05308" ref-type="bibr">4</xref>]</td><td align="left" valign="middle" style="border-bottom:solid thin" rowspan="1" colspan="1">OpenSSL-based extensions are adopted to support D-H E2E key negotiated between publisher/subscriber.</td><td align="left" valign="middle" style="border-bottom:solid thin" rowspan="1" colspan="1">MQTT 5.0 compatibility is not considered. Broker-based group key is not considered. Double-encryption issue is not considered.</td></tr><tr><td align="left" valign="middle" style="border-bottom:solid thin" rowspan="1" colspan="1">SEEMQTT [<xref rid="B5-sensors-25-05308" ref-type="bibr">5</xref>]</td><td align="left" valign="middle" style="border-bottom:solid thin" rowspan="1" colspan="1">A publisher delegates the message decryption key to a pool of key stores. Subscribers contact the key pools; they get verified and get the decryption key, via the secret sharing mechanism.</td><td align="left" valign="middle" style="border-bottom:solid thin" rowspan="1" colspan="1">A lot of extra overhead of verification and key derivation might compromise the efficiency of MQTT.</td></tr><tr><td align="left" valign="middle" style="border-bottom:solid thin" rowspan="1" colspan="1">Eugster et al. [<xref rid="B9-sensors-25-05308" ref-type="bibr">9</xref>]</td><td align="left" valign="middle" style="border-bottom:solid thin" rowspan="1" colspan="1">Discussion the decoupling properties of the publish/subscribe systems.</td><td align="left" valign="middle" style="border-bottom:solid thin" rowspan="1" colspan="1">No specific schemes or approaches are proposed or suggested.</td></tr><tr><td align="left" valign="middle" style="border-bottom:solid thin" rowspan="1" colspan="1">MQTT-I [<xref rid="B14-sensors-25-05308" ref-type="bibr">14</xref>]</td><td align="left" valign="middle" style="border-bottom:solid thin" rowspan="1" colspan="1">Combining digest hashing, multiple-topic Merkle hash tree, and round-based signature/verification to amortize the overhead and to ensure the message flow integrity of MQTT E2E channel.</td><td align="left" valign="middle" style="border-bottom:solid thin" rowspan="1" colspan="1">E2E privacy against a curious broker is not considered.<break/>The impact of the increasing number of clients on MQTT systems is not considered.</td></tr><tr><td align="left" valign="middle" style="border-bottom:solid thin" rowspan="1" colspan="1">Park-Nam [<xref rid="B16-sensors-25-05308" ref-type="bibr">16</xref>] </td><td align="left" valign="middle" style="border-bottom:solid thin" rowspan="1" colspan="1">The E2E key (topic key) is derived from the secret D-H key calculation of the topic public key and the publisher&#8217;s secret key (or of the topic private key and the publisher&#8217;s public key.</td><td align="left" valign="middle" style="border-bottom:solid thin" rowspan="1" colspan="1">A publisher can only publish one topic. The group-key-based approach is not applicable to enhance efficiency, as all the session keys are tightly dependent on each client&#8217;s private key.</td></tr><tr><td align="left" valign="middle" style="border-bottom:solid thin" rowspan="1" colspan="1">Ciphertext-matching like [<xref rid="B23-sensors-25-05308" ref-type="bibr">23</xref>]</td><td align="left" valign="middle" style="border-bottom:solid thin" rowspan="1" colspan="1">Concern the event privacy and the subscription privacy against a curious broker for a general pub/sub system.<break/>Encrypted subscription matching is applied for matching and routing.</td><td align="left" valign="middle" style="border-bottom:solid thin" rowspan="1" colspan="1">Even though MQTT E2E also concern the message privacy against a curious broker, both the subscribed topics and the topic of a published message are explicitly sent to the broker in MQTT systems.</td></tr><tr><td align="left" valign="middle" style="border-bottom:solid thin" rowspan="1" colspan="1">Brokerless approach like [<xref rid="B24-sensors-25-05308" ref-type="bibr">24</xref>,<xref rid="B25-sensors-25-05308" ref-type="bibr">25</xref>,<xref rid="B26-sensors-25-05308" ref-type="bibr">26</xref>]</td><td align="left" valign="middle" style="border-bottom:solid thin" rowspan="1" colspan="1">The brokerless approach utilizes SDN and/or/User properties to bypass brokers and reserve network bandwidth to improve latency performance.</td><td align="left" valign="middle" style="border-bottom:solid thin" rowspan="1" colspan="1">Our approach aims to improve efficiency by adjusting the MQTT broker-based E2E models, while the broker-less approach adopts transmission reservation facilities like SDN to improve transmission latency. These two approaches are complementary; the ideas from either approach can be combined to improve efficiency further.</td></tr><tr><td align="left" valign="middle" style="border-bottom:solid thin" rowspan="1" colspan="1">Attribute-based encryption [<xref rid="B17-sensors-25-05308" ref-type="bibr">17</xref>,<xref rid="B18-sensors-25-05308" ref-type="bibr">18</xref>,<xref rid="B19-sensors-25-05308" ref-type="bibr">19</xref>]</td><td align="left" valign="middle" style="border-bottom:solid thin" rowspan="1" colspan="1">Key/Ciphertext Policy-Attribute Based Encryption (KP/CP-ABE) is adopted to design the session key.</td><td align="left" valign="middle" style="border-bottom:solid thin" rowspan="1" colspan="1">This approach has a key weakness of poor performance and scalability, especially when the number of attributes increases; this weakness should be seriously tackled, as MQTT is designed for IoT systems where the number of clients and the number of topics are scalable.</td></tr><tr><td align="left" valign="middle" style="border-bottom:solid thin" rowspan="1" colspan="1">Our work</td><td align="left" valign="middle" style="border-bottom:solid thin" rowspan="1" colspan="1">Focus on the double-encryption issue and the broker-decrypt-re-encrypt issue on the MQTT broker-based E2E models. Both the group-key-based approach and the client&#8211;broker channel, integrity-only approach can improve efficiency while preserving the desirable security properties.</td><td align="left" valign="middle" style="border-bottom:solid thin" rowspan="1" colspan="1">Brokerless MQTT approach is not considered.<break/>SDN extension is not considered.<break/>No specific group key management is proposed. </td></tr></tbody></table></table-wrap></floats-group></article></pmc-articleset>