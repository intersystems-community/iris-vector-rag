<?xml version="1.0"  ?><!DOCTYPE pmc-articleset PUBLIC "-//NLM//DTD ARTICLE SET 2.0//EN" "https://dtd.nlm.nih.gov/ncbi/pmc/articleset/nlm-articleset-2.0.dtd"><pmc-articleset><article xmlns:mml="http://www.w3.org/1998/Math/MathML" xmlns:ali="http://www.niso.org/schemas/ali/1.0/" xml:lang="en" article-type="research-article" dtd-version="1.4"><processing-meta base-tagset="archiving" mathml-version="3.0" table-model="xhtml" tagset-family="jats"><restricted-by>pmc</restricted-by></processing-meta><front><journal-meta><journal-id journal-id-type="nlm-ta">Sensors (Basel)</journal-id><journal-id journal-id-type="iso-abbrev">Sensors (Basel)</journal-id><journal-id journal-id-type="pmc-domain-id">1660</journal-id><journal-id journal-id-type="pmc-domain">sensors</journal-id><journal-id journal-id-type="publisher-id">sensors</journal-id><journal-title-group><journal-title>Sensors (Basel, Switzerland)</journal-title></journal-title-group><issn pub-type="epub">1424-8220</issn><publisher><publisher-name>Multidisciplinary Digital Publishing Institute  (MDPI)</publisher-name></publisher></journal-meta><article-meta><article-id pub-id-type="pmcid">PMC12430893</article-id><article-id pub-id-type="pmcid-ver">PMC12430893.1</article-id><article-id pub-id-type="pmcaid">12430893</article-id><article-id pub-id-type="pmcaiid">12430893</article-id><article-id pub-id-type="doi">10.3390/s25175317</article-id><article-id pub-id-type="publisher-id">sensors-25-05317</article-id><article-version article-version-type="pmc-version">1</article-version><article-categories><subj-group subj-group-type="heading"><subject>Article</subject></subj-group></article-categories><title-group><article-title>Development of a Dynamic Path Planning System for Autonomous Mobile Robots Using a Multi-Agent System Approach</article-title></title-group><contrib-group><contrib contrib-type="author"><name name-style="western"><surname>Fourie</surname><given-names initials="B">Bradley</given-names></name><xref rid="af1-sensors-25-05317" ref-type="aff">1</xref></contrib><contrib contrib-type="author"><contrib-id contrib-id-type="orcid" authenticated="true">https://orcid.org/0000-0001-9789-5661</contrib-id><name name-style="western"><surname>Louw</surname><given-names initials="L">Louis</given-names></name><xref rid="af1-sensors-25-05317" ref-type="aff">1</xref><xref rid="c1-sensors-25-05317" ref-type="corresp">*</xref></contrib><contrib contrib-type="author"><name name-style="western"><surname>Bitsch</surname><given-names initials="G">G&#252;nter</given-names></name><xref rid="af2-sensors-25-05317" ref-type="aff">2</xref></contrib></contrib-group><contrib-group><contrib contrib-type="editor"><name name-style="western"><surname>Savkin</surname><given-names initials="AV">Andrey V.</given-names></name><role>Academic Editor</role></contrib></contrib-group><aff id="af1-sensors-25-05317"><label>1</label>Department of Industrial Engineering, Stellenbosch University, Stellenbosch 7600, South Africa</aff><aff id="af2-sensors-25-05317"><label>2</label>NXT Nachhaltigkeit und Technologie, Reutlingen University, 72762 Reutlingen, Germany; <email>guenter.bitsch@reutlingen-university.de</email></aff><author-notes><corresp id="c1-sensors-25-05317"><label>*</label>Correspondence: <email>louisl@sun.ac.za</email></corresp></author-notes><pub-date pub-type="epub"><day>27</day><month>8</month><year>2025</year></pub-date><pub-date pub-type="collection"><month>9</month><year>2025</year></pub-date><volume>25</volume><issue>17</issue><issue-id pub-id-type="pmc-issue-id">496815</issue-id><elocation-id>5317</elocation-id><history><date date-type="received"><day>09</day><month>6</month><year>2025</year></date><date date-type="rev-recd"><day>11</day><month>8</month><year>2025</year></date><date date-type="accepted"><day>18</day><month>8</month><year>2025</year></date></history><pub-history><event event-type="pmc-release"><date><day>27</day><month>08</month><year>2025</year></date></event><event event-type="pmc-live"><date><day>13</day><month>09</month><year>2025</year></date></event><event event-type="pmc-last-change"><date iso-8601-date="2025-09-13 11:25:14.803"><day>13</day><month>09</month><year>2025</year></date></event></pub-history><permissions><copyright-statement>&#169; 2025 by the authors.</copyright-statement><copyright-year>2025</copyright-year><license><ali:license_ref specific-use="textmining" content-type="ccbylicense">https://creativecommons.org/licenses/by/4.0/</ali:license_ref><license-p>Licensee MDPI, Basel, Switzerland. This article is an open access article distributed under the terms and conditions of the Creative Commons Attribution (CC BY) license (<ext-link xmlns:xlink="http://www.w3.org/1999/xlink" ext-link-type="uri" xlink:href="https://creativecommons.org/licenses/by/4.0/">https://creativecommons.org/licenses/by/4.0/</ext-link>).</license-p></license></permissions><self-uri xmlns:xlink="http://www.w3.org/1999/xlink" content-type="pmc-pdf" xlink:href="sensors-25-05317.pdf"/><abstract><p>Autonomous Mobile Robots (AMRs) are increasingly important in Industry 4.0 intralogistics but creating path planning systems that adapt to dynamic and uncertain Flexible Manufacturing Systems (FMS), especially managing conflicts among multiple AMRs with a need for scalable decentralised solutions, remains a significant challenge. This research introduces a dynamic path planning system for AMRs designed for reactive adaptation to FMS disturbances and generalisation across factory layouts, incorporating support for multiple AMRs with integrated conflict avoidance. The system is built on a Multi-Agent Systems (MAS) architecture, where software AMR agents independently calculate their paths using a hybrid Genetic Algorithm (GA) that employs Cell-Based Decomposition (CBD) and optimises path length, smoothness, and overlap via a multi-objective fitness function. Multi-AMR conflict avoidance is implemented using the Iterative Exclusion Principle (IEP), which facilitates priority-based planning, knowledge sharing through Predictive Collision Avoidance (PCA), and iterative replanning among agents communicating via a blackboard agent. Verification demonstrated the system&#8217;s ability to successfully avoid deadlocks for up to nine AMRs and exhibit good scalability. Validation in a simulated FMS environment confirmed robust adaptation to various disturbances, including static and dynamic obstacles, while maintaining stable run times and consistent path quality. These results affirm the practical feasibility of this hybrid GA and MAS-based approach for dynamic AMR control in complex industrial settings.</p></abstract><kwd-group><kwd>Autonomous Mobile Robots (AMRs)</kwd><kwd>dynamic path planning</kwd><kwd>Multi-Agent Systems (MAS)</kwd><kwd>Flexible Manufacturing Systems (FMS)</kwd></kwd-group><funding-group><funding-statement>This research received no external funding.</funding-statement></funding-group><custom-meta-group><custom-meta><meta-name>pmc-status-qastatus</meta-name><meta-value>0</meta-value></custom-meta><custom-meta><meta-name>pmc-status-live</meta-name><meta-value>yes</meta-value></custom-meta><custom-meta><meta-name>pmc-status-embargo</meta-name><meta-value>no</meta-value></custom-meta><custom-meta><meta-name>pmc-status-released</meta-name><meta-value>yes</meta-value></custom-meta><custom-meta><meta-name>pmc-prop-open-access</meta-name><meta-value>yes</meta-value></custom-meta><custom-meta><meta-name>pmc-prop-olf</meta-name><meta-value>no</meta-value></custom-meta><custom-meta><meta-name>pmc-prop-manuscript</meta-name><meta-value>no</meta-value></custom-meta><custom-meta><meta-name>pmc-prop-legally-suppressed</meta-name><meta-value>no</meta-value></custom-meta><custom-meta><meta-name>pmc-prop-has-pdf</meta-name><meta-value>yes</meta-value></custom-meta><custom-meta><meta-name>pmc-prop-has-supplement</meta-name><meta-value>no</meta-value></custom-meta><custom-meta><meta-name>pmc-prop-pdf-only</meta-name><meta-value>no</meta-value></custom-meta><custom-meta><meta-name>pmc-prop-suppress-copyright</meta-name><meta-value>no</meta-value></custom-meta><custom-meta><meta-name>pmc-prop-is-real-version</meta-name><meta-value>no</meta-value></custom-meta><custom-meta><meta-name>pmc-prop-is-scanned-article</meta-name><meta-value>no</meta-value></custom-meta><custom-meta><meta-name>pmc-prop-preprint</meta-name><meta-value>no</meta-value></custom-meta><custom-meta><meta-name>pmc-prop-in-epmc</meta-name><meta-value>yes</meta-value></custom-meta></custom-meta-group></article-meta></front><body><sec sec-type="intro" id="sec1-sensors-25-05317"><title>1. Introduction</title><p>In the context of Industry 4.0 and the evolution of smart autonomous systems, Autonomous Mobile Robots (AMRs) are attracting significant interest across various industrial applications [<xref rid="B1-sensors-25-05317" ref-type="bibr">1</xref>,<xref rid="B2-sensors-25-05317" ref-type="bibr">2</xref>]. Specifically, AMRs have demonstrated effectiveness in intralogistics tasks such as material handling within production systems, warehouses, hospitals, and intelligent container terminals [<xref rid="B2-sensors-25-05317" ref-type="bibr">2</xref>]. These autonomously controlled robots, which include types like automated forklifts and mobile platforms, enhance manufacturing flexibility, contribute to process stability, and improve economic efficiency by minimising human errors and injuries.</p><p>However, a significant challenge in implementing autonomous AMR control systems is the development of path planning systems capable of adapting to the dynamic and uncertain environments characteristic of Flexible Manufacturing Systems (FMS) [<xref rid="B3-sensors-25-05317" ref-type="bibr">3</xref>,<xref rid="B4-sensors-25-05317" ref-type="bibr">4</xref>,<xref rid="B5-sensors-25-05317" ref-type="bibr">5</xref>]. Path planning involves generating optimal paths via waypoints between specified locations for transport orders. FMS environments pose uncertainties stemming from both high-level task scheduling, such as sudden changes in transport order priorities, and low-level factory floor issues like static and dynamic obstacles, machine failures, and alterations to workstation layouts. Developing an adaptive AMR path planning system requires addressing the interrelated challenges of configuration space representation and designing an effective search algorithm. The recent literature frames path search as a multi-objective optimisation problem, incorporating factors like path length, smoothness, and safety [<xref rid="B6-sensors-25-05317" ref-type="bibr">6</xref>].</p><p>When deploying a fleet of AMRs, conflicts such as deadlocks and collisions become inevitable. Unlike guided systems, AMRs move freely, making pre-defined traffic rules insufficient for conflict avoidance. Multi-AMR conflict avoidance focuses on adapting individual AMR paths to ensure the entire set of paths is conflict-free. While the most efficient methods involve pre-adaptation of paths during path planning, current centralised implementations of conflict avoidance systems often struggle to scale effectively to larger AMR fleets [<xref rid="B4-sensors-25-05317" ref-type="bibr">4</xref>,<xref rid="B7-sensors-25-05317" ref-type="bibr">7</xref>]. There remains a lack of consensus regarding the most appropriate path planning algorithms for AMRs and, crucially, on how to implement decentralised multi-AMR conflict avoidance mechanisms that scale effectively [<xref rid="B8-sensors-25-05317" ref-type="bibr">8</xref>], which forms a fundamental rationale for this research.</p><p>Current path planning techniques for dynamic obstacles face several critical gaps that limit their effectiveness in real-world applications [<xref rid="B4-sensors-25-05317" ref-type="bibr">4</xref>]. A major issue is the inability to perform real-time path replanning efficiently; many algorithms struggle to balance computational speed with the quality of the generated paths, especially in rapidly changing environments. Additionally, the modelling of dynamic obstacle behaviour remains inadequate, as existing probabilistic or stochastic approaches are computationally expensive and fail to fully capture complex, context-driven behaviours [<xref rid="B9-sensors-25-05317" ref-type="bibr">9</xref>]. Scalability is another major concern, particularly in multi-robot systems, where increased numbers of agents lead to exponential growth in coordination and computation challenges, often resulting in performance degradation or system failure [<xref rid="B10-sensors-25-05317" ref-type="bibr">10</xref>]. Finally, current methods often falter in complex environments with dense, irregular, or overlapping obstacles, and in areas with limited manoeuvrability, where finding feasible paths becomes computationally intensive and unreliable. These limitations restrict the applicability of current path-planning approaches in dynamic, unstructured, or densely populated scenarios [<xref rid="B11-sensors-25-05317" ref-type="bibr">11</xref>].</p><p>Beyond industrial intralogistics, the complexities of dynamic path planning and conflict resolution extend to and present significant challenges in other multi-agent autonomous systems. For instance, the coordination of drone swarms requires highly efficient path planning and collision avoidance mechanisms to operate effectively in complex, often three-dimensional, dynamic environments. Research in this area, such as that highlighted in [<xref rid="B12-sensors-25-05317" ref-type="bibr">12</xref>], demonstrate how decentralised control and inter-agent communication strategies enable collision avoidance and scalability in highly dynamic 3D environments. These principles are directly transferable to AMR fleets, where similar coordination and adaptability are needed in complex factory layouts. Furthermore, novel algorithmic approaches, including chaos-based path planning, are being explored to enhance adaptive and robust navigation in unpredictable scenarios. Works like [<xref rid="B13-sensors-25-05317" ref-type="bibr">13</xref>] exemplify how unconventional computational paradigms can be applied to achieve resilient movement in uncertain settings. These diverse applications underscore the broad relevance and ongoing advancements in developing robust, scalable, and adaptive path planning solutions for autonomous systems across various domains.</p><p>This paper presents a dynamic path planning system for AMRs designed for reactive adaptation to disturbances in an FMS and generalisation across various factory layouts. The core purpose of this work is to extend the capabilities of dynamic path planning to support multiple AMRs through integrated multi-AMR conflict avoidance techniques, aiming to unify state-of-the-art intelligent path planning algorithms with recent advancements in multi-AMR conflict avoidance. The system utilises a Multi-Agent Systems (MAS) architecture where software AMR agents independently calculate their paths. A hybrid Genetic Algorithm (GA) formulation, employing Cell-Based Decomposition (CBD), is used for path planning, optimising path length, smoothness, and overlap. Multi-AMR conflict avoidance is implemented using the Iterative Exclusion Principle (IEP) [<xref rid="B14-sensors-25-05317" ref-type="bibr">14</xref>], enabling priority-based planning, knowledge sharing via Predictive Collision Avoidance (PCA), and iterative replanning among communicating agents.</p><p>The main aim is to verify and validate the practical feasibility and performance of this hybrid GA and MAS-based dynamic path planning system in complex industrial scenarios. Verification experiments demonstrated the system&#8217;s ability to successfully avoid deadlocks for up to nine AMRs in a confined environment and exhibit good scalability. Validation in a simulated FMS environment confirmed robust adaptation to various disturbances, including static and dynamic obstacles and changes in transport orders, while maintaining stable run times and consistent path quality. These findings affirm the practical applicability of this approach for dynamic AMR control in challenging FMS environments.</p><p>The remainder of this paper is organised as follows: <xref rid="sec2-sensors-25-05317" ref-type="sec">Section 2</xref> reviews the related literature on mobile robot path planning and conflict avoidance. <xref rid="sec3-sensors-25-05317" ref-type="sec">Section 3</xref> details the formulation and design of the proposed path planning system and conflict avoidance mechanism. <xref rid="sec4-sensors-25-05317" ref-type="sec">Section 4</xref> describes the experiments verifying the system&#8217;s design and validation of the selected path planning algorithm in a simulated FMS environment. Finally, <xref rid="sec5-sensors-25-05317" ref-type="sec">Section 5</xref> provides the conclusions of this paper.</p></sec><sec id="sec2-sensors-25-05317"><title>2. Related Literature</title><p>Due to the increased interest in the FMS concept, more research efforts are being directed at increasing the efficiency of the AMR path planning system to enable flexible intralogistics in these new manufacturing systems [<xref rid="B15-sensors-25-05317" ref-type="bibr">15</xref>,<xref rid="B16-sensors-25-05317" ref-type="bibr">16</xref>,<xref rid="B17-sensors-25-05317" ref-type="bibr">17</xref>]. Two active fields of research exist that are paramount for the path planning of AMRs in FMSs, namely mobile robot path planning and multi-robot conflict resolution.</p><sec id="sec2dot1-sensors-25-05317"><title>2.1. Mobile Robot Path Planning</title><p>Traditional mobile robot path planning is typically divided into static and dynamic approaches. Static path planning focuses on finding the shortest path between two nodes using global information, but it ignores dynamic obstacles and traffic conditions [<xref rid="B6-sensors-25-05317" ref-type="bibr">6</xref>]. This makes it less suitable for modern manufacturing systems where environments are dynamic. On the other hand, dynamic path planning accounts for real-time system information and adapts to dynamic obstacles, making it more applicable to flexible manufacturing systems (FMS) [<xref rid="B6-sensors-25-05317" ref-type="bibr">6</xref>]. Thus, path planning algorithms for autonomous mobile robots (AMRs) in FMS environments must be responsive and flexible, adapting to specific transport orders.</p><p>Early research on AMR path planning often used exact approaches. For instance, Dijkstra&#8217;s algorithm, a graph theory method, was applied to single mobile robots [<xref rid="B18-sensors-25-05317" ref-type="bibr">18</xref>]. This research showed that Dijkstra&#8217;s algorithm could effectively handle global path planning in static environments, though the algorithm required recalculating when encountering new obstacles. Although being applied in numerous short-path planning problems, with different variations and improvements made to the algorithm, approaches using Dijkstra&#8217;s algorithm perform slowly in dynamically changing environments [<xref rid="B5-sensors-25-05317" ref-type="bibr">5</xref>].</p><p>Despite the effectiveness of Dijkstra&#8217;s algorithm, improvements like the A&#8727; algorithm have become more prevalent for static path planning in AMRs [<xref rid="B16-sensors-25-05317" ref-type="bibr">16</xref>]. The A&#8727; algorithm constructs a weighted environment graph and works towards the goal node by visiting neighbouring nodes, but it requires significant memory, especially for larger graphs This makes it less viable for dynamic and time-sensitive tasks [<xref rid="B11-sensors-25-05317" ref-type="bibr">11</xref>]. Other exact approaches, like dynamic programming and dynamic time-window methods, have also been applied to AMR path planning but often struggle with problem-specific constraints and fail to perform well in dynamic, congested environments [<xref rid="B16-sensors-25-05317" ref-type="bibr">16</xref>,<xref rid="B17-sensors-25-05317" ref-type="bibr">17</xref>].</p><p>To address these challenges, meta-heuristic approaches have been explored for AMR dynamic path planning. Given the large solution space, exact methods can be slow to converge, posing a problem for real-time path planning. Meta-heuristic approaches like Genetic Algorithms (GAs), Particle Swarm Optimisation (PSO), and Ant Colony Optimisation (ACO) have been suggested as alternatives [<xref rid="B15-sensors-25-05317" ref-type="bibr">15</xref>,<xref rid="B19-sensors-25-05317" ref-type="bibr">19</xref>,<xref rid="B20-sensors-25-05317" ref-type="bibr">20</xref>,<xref rid="B21-sensors-25-05317" ref-type="bibr">21</xref>]. For example, a PSO implementation aimed at minimising energy consumption rather than travel distance has shown success, especially in heterogeneous AMR systems [<xref rid="B22-sensors-25-05317" ref-type="bibr">22</xref>].</p><p>GAs have also proven effective in multi-objective AMR path planning, where objectives like minimising travel distance and avoiding obstacles are prioritised [<xref rid="B19-sensors-25-05317" ref-type="bibr">19</xref>]. Unlike other approaches, GAs have introduced new genetic operators to improve path quality. Furthermore, comparative studies have shown that GAs tend to produce more consistent and optimal paths than PSO for complex and highly nonlinear path planning problems [<xref rid="B23-sensors-25-05317" ref-type="bibr">23</xref>,<xref rid="B24-sensors-25-05317" ref-type="bibr">24</xref>].</p></sec><sec id="sec2dot2-sensors-25-05317"><title>2.2. Mobile Robot Conflict Resolution</title><p>The integration of multiple Autonomous Mobile Robots (AMRs) within an environment introduces non-stationarity and increases the likelihood of conflicts among AMRs. Consequently, the shortest computed path may not always correspond to the fastest travel time [<xref rid="B16-sensors-25-05317" ref-type="bibr">16</xref>]. Conflicts arise when each AMR pursues its shortest path independently, leading to system failures and significant delays. In confined spaces like Flexible Manufacturing Systems (FMSs), multiple AMRs attempting to access the same zone can cause congestion, escalating the probability of collisions and deadlocks.</p><p>AMRs can encounter various obstacle types during operation. Dynamic obstacles include other AMRs, workers moving nearby, or non-autonomous vehicles crossing planned paths. Static obstacles comprise entities like movable workstations or malfunctioning AMRs obstructing movement. Deadlocks occur when two AMRs cannot proceed along their pre-planned paths without risking collision, resulting in both remaining in a blocking state that hampers overall system efficiency [<xref rid="B16-sensors-25-05317" ref-type="bibr">16</xref>].</p><p>Addressing these conflicts necessitates the pre-computation of conflict-free paths, especially in environments dense with static and dynamic obstacles where congestion is unavoidable [<xref rid="B14-sensors-25-05317" ref-type="bibr">14</xref>,<xref rid="B16-sensors-25-05317" ref-type="bibr">16</xref>,<xref rid="B25-sensors-25-05317" ref-type="bibr">25</xref>]. This pre-emptive approach reduces the need for replanning and enhances the algorithm&#8217;s overall runtime efficiency [<xref rid="B25-sensors-25-05317" ref-type="bibr">25</xref>]. Effective conflict resolution relies on appropriately formulating the problem to anticipate and avoid potential conflicts during path planning.</p><p>Decentralised conflict avoidance techniques in multi-robot systems typically follow a two-stage approach. First, each AMR independently computes its optimal path without considering others. Second, a coordination mechanism resolves conflicts, assigning responsibility to specific AMRs for conflict resolution [<xref rid="B25-sensors-25-05317" ref-type="bibr">25</xref>]. The Priority-based Planning (PP) algorithm exemplifies this strategy by decomposing the complex multi-agent problem into several single-agent path planning tasks, significantly improving computational efficiency over centralised methods [<xref rid="B25-sensors-25-05317" ref-type="bibr">25</xref>]. Although PP approaches yield sound solutions efficiently, they may not always achieve the globally optimal joint solution [<xref rid="B25-sensors-25-05317" ref-type="bibr">25</xref>].</p><p>In [<xref rid="B26-sensors-25-05317" ref-type="bibr">26</xref>], a PP implementation for mobile robots is presented where each robot initially plans its path individually in a dynamic environment. Robots are then assigned priorities, and conflicts are resolved sequentially based on descending priority levels, treating higher-priority robots as dynamic obstacles during resolution. This method effectively incorporates both static and dynamic obstacles and demonstrates superior scalability compared to coordinated approaches.</p><p>Further contributions to decentralised conflict avoidance include the Multi-Party Cooperative Avoidance (MPCA) algorithm proposed by [<xref rid="B27-sensors-25-05317" ref-type="bibr">27</xref>]. This approach treats each robot as an individual agent and employs a multi-party coordinator to resolve conflicts, offering effective coordination mechanisms for collision avoidance in a decentralised framework. The MPCA algorithm has been shown to outperform previous implementations in efficiency and effectiveness [<xref rid="B27-sensors-25-05317" ref-type="bibr">27</xref>].</p><p>Building upon these foundations, ref. [<xref rid="B14-sensors-25-05317" ref-type="bibr">14</xref>] introduces the Iterative Exclusion Principle (IEP) for enhanced multi-AMR conflict avoidance. The IEP combines the initial path planning and priority strategies from [<xref rid="B26-sensors-25-05317" ref-type="bibr">26</xref>] with the agent-based coordination concepts from MPCA [<xref rid="B27-sensors-25-05317" ref-type="bibr">27</xref>]. In this framework, each mobile robot agent calculates its path and resolves its assigned conflicts while sharing knowledge with other agents, culminating in a comprehensive multi-agent architecture for effective conflict resolution in multi-robot systems [<xref rid="B10-sensors-25-05317" ref-type="bibr">10</xref>].</p></sec></sec><sec id="sec3-sensors-25-05317"><title>3. Design of the Path Planning System</title><p>The FMS environment contains various static and dynamic obstacles that can obstruct the planned path of the AMRs. Due to the restricted moving space, high probability of disturbances affecting the AMRs, and time-critical nature of the delivery tasks, it is necessary that the AMRs plan their paths efficiently and in a short amount of time. The path planning algorithm applied in this study uses an updated configuration space of the environment and employs a GA search algorithm to find the most efficient path based on several metrics. Thereafter, the mobile robots have to collaboratively adapt their paths to avoid any conflicts, while prioritising the important tasks.</p><sec id="sec3dot1-sensors-25-05317"><title>3.1. Environmental Modelling</title><p>For the environmental modelling in this study, only Cell-Based (or Grid-Based) Decomposition (CBD) methods were considered for global path planning due to its simplicity and ease of implementation [<xref rid="B6-sensors-25-05317" ref-type="bibr">6</xref>,<xref rid="B16-sensors-25-05317" ref-type="bibr">16</xref>,<xref rid="B28-sensors-25-05317" ref-type="bibr">28</xref>]. The most important advantage of the CBD technique is that it is possible to automate the process by using simple computer vision techniques, as demonstrated by [<xref rid="B29-sensors-25-05317" ref-type="bibr">29</xref>]. For the CBD approach, the environment is divided into a grid of cells, and the configuration space is constructed by identifying which cells contain obstacles and which cells contain free space [<xref rid="B16-sensors-25-05317" ref-type="bibr">16</xref>,<xref rid="B28-sensors-25-05317" ref-type="bibr">28</xref>]. The cells that contain full obstacles or pieces of obstacles are represented as occupied, and the robot cannot reach these states.</p></sec><sec id="sec3dot2-sensors-25-05317"><title>3.2. Hybrid GA Formulation</title><p>The design of the GA for this work is inspired by the work performed by [<xref rid="B19-sensors-25-05317" ref-type="bibr">19</xref>,<xref rid="B21-sensors-25-05317" ref-type="bibr">21</xref>,<xref rid="B30-sensors-25-05317" ref-type="bibr">30</xref>,<xref rid="B31-sensors-25-05317" ref-type="bibr">31</xref>]. A flow diagram representing the design of the hybrid GA for the mobile robot path planning of this paper is presented in <xref rid="sensors-25-05317-f001" ref-type="fig">Figure 1</xref>. This approach utilises an improved initialisation function, three mutation operators, and a multi-objective fitness function. The path planning literature review performed by [<xref rid="B15-sensors-25-05317" ref-type="bibr">15</xref>] states that GAs can successfully be combined with other algorithms to produce hybrid approaches. The hybrid GA approaches can efficiently produce valid offspring and effectively search the solution space while preserving the best solutions that have previously been found. The investigation of these hybrid GA implementations remains an active field of research in the mobile robot path planning literature, and this work aims to further contribute to this aspect.</p><p>The GA is a population-based meta-heuristic inspired by the biological phenomenon of natural evolution [<xref rid="B32-sensors-25-05317" ref-type="bibr">32</xref>]. A starting population of solutions is initialised and through an iterative process, new solutions are generated. The new solutions are constructed using parts of the solutions from the previous generation and replacing some of the previous solutions in the population to form the new generation [<xref rid="B32-sensors-25-05317" ref-type="bibr">32</xref>,<xref rid="B33-sensors-25-05317" ref-type="bibr">33</xref>]. Each individual represents a solution and is encoded by a set of genes that encode the information. Each solution is evaluated using an objective function that quantifies how suitable the solution is. For the GA formulation, the objective function is called the fitness function, quantifying how well it is adapted to its environment, where fitter individuals are more likely to survive and reproduce.</p><p>For the path planning problem, the potential solutions are required to connect a starting point with an ending point through a set of neighbouring intermediary points [<xref rid="B19-sensors-25-05317" ref-type="bibr">19</xref>,<xref rid="B21-sensors-25-05317" ref-type="bibr">21</xref>]. These intermediary points should obey the geometric and kinematic constraints of the mobile robot and should, therefore, not include any obstacles or ragged movements. For this work, the genetic representation is designed to complement the nature of the environment, and the chromosomes are represented as a set of neighbouring coordinates that connect the starting coordinate <italic toggle="yes">s</italic> to the goal coordinate <italic toggle="yes">g</italic>. Here, each of the chromosomes contains a set of neighbouring coordinate points that the mobile robot should traverse.</p><p>Traditional methods of randomly initialising the environment produce a large amount of non-feasible solutions that, in return, slow down the convergence process. Therefore, inspiration is taken from the work performed by [<xref rid="B21-sensors-25-05317" ref-type="bibr">21</xref>,<xref rid="B34-sensors-25-05317" ref-type="bibr">34</xref>], and the initial population is generated using a combination of a random generation process combined with a constructive process. The collision-free paths are generated with random initial lengths through a random walk process, and these paths are then repaired by representing the environment as a directed acyclic graph and using Dijkstra&#8217;s algorithm. The corresponding population size parameter is selected based on the environment&#8217;s size to strike a balance between maintaining diversity in the solution generation process and minimising convergence time [<xref rid="B30-sensors-25-05317" ref-type="bibr">30</xref>].</p><p>To evaluate the suitability of the individuals in the population, both the criteria associated with the efficiency of the AMR&#8217;s path and the criteria associated with the AMR&#8217;s path in relation to the other AMRs paths have to be considered. Therefore, important evaluation metrics such as path length, path smoothness, and path overlap are used to quantify the quality of the generated paths. The distance travelled is the most important consideration as it both increases the delivery time and the energy usage of the AMR [<xref rid="B35-sensors-25-05317" ref-type="bibr">35</xref>]. Using the notation that the k&#8217;th AMR&#8217;s path is a set of coordinates denoted as <inline-formula><mml:math id="mm1" overflow="scroll"><mml:mrow><mml:mrow><mml:msup><mml:mrow><mml:mi>P</mml:mi></mml:mrow><mml:mrow><mml:mi>k</mml:mi></mml:mrow></mml:msup></mml:mrow></mml:mrow></mml:math></inline-formula>, <inline-formula><mml:math id="mm2" overflow="scroll"><mml:mrow><mml:mrow><mml:msubsup><mml:mrow><mml:mi>P</mml:mi></mml:mrow><mml:mrow><mml:mn>1</mml:mn></mml:mrow><mml:mrow><mml:mi>k</mml:mi></mml:mrow></mml:msubsup></mml:mrow></mml:mrow></mml:math></inline-formula> is the starting coordinates of the AMR, and <inline-formula><mml:math id="mm3" overflow="scroll"><mml:mrow><mml:mrow><mml:msubsup><mml:mrow><mml:mi>P</mml:mi></mml:mrow><mml:mrow><mml:mi>G</mml:mi></mml:mrow><mml:mrow><mml:mi>k</mml:mi></mml:mrow></mml:msubsup></mml:mrow></mml:mrow></mml:math></inline-formula> is the coordinates of the AMR&#8217;s goal coordinates. The total path length <inline-formula><mml:math id="mm4" overflow="scroll"><mml:mrow><mml:mrow><mml:mi>L</mml:mi></mml:mrow></mml:mrow></mml:math></inline-formula> of the AMR can be calculated as shown in Equation (1). Here, the ||.|| operator denotes the distance metric between the two successive coordinate sets, which can either be calculated using the Euclidean or Manhattan distance formulae.<disp-formula id="FD1-sensors-25-05317"><label>(1)</label><mml:math id="mm5" display="block" overflow="scroll"><mml:mrow><mml:mrow><mml:mi>L</mml:mi><mml:mfenced separators="|"><mml:mrow><mml:msup><mml:mrow><mml:mi>P</mml:mi></mml:mrow><mml:mrow><mml:mi>k</mml:mi></mml:mrow></mml:msup></mml:mrow></mml:mfenced><mml:mo>=</mml:mo><mml:mrow><mml:munderover><mml:mo stretchy="false">&#8721;</mml:mo><mml:mrow><mml:mi>i</mml:mi><mml:mo>=</mml:mo><mml:mn>1</mml:mn></mml:mrow><mml:mrow><mml:mi>G</mml:mi><mml:mo>&#8722;</mml:mo><mml:mn>1</mml:mn></mml:mrow></mml:munderover><mml:mrow><mml:mo stretchy="false">|</mml:mo><mml:mo stretchy="false">|</mml:mo><mml:msubsup><mml:mrow><mml:mi>P</mml:mi></mml:mrow><mml:mrow><mml:mi>i</mml:mi><mml:mo>+</mml:mo><mml:mn>1</mml:mn></mml:mrow><mml:mrow><mml:mi>k</mml:mi></mml:mrow></mml:msubsup></mml:mrow></mml:mrow><mml:mo>&#8722;</mml:mo><mml:msubsup><mml:mrow><mml:mi>P</mml:mi></mml:mrow><mml:mrow><mml:mi>i</mml:mi></mml:mrow><mml:mrow><mml:mi>k</mml:mi></mml:mrow></mml:msubsup><mml:mo stretchy="false">|</mml:mo><mml:mo stretchy="false">|</mml:mo></mml:mrow></mml:mrow></mml:math></disp-formula></p><p>The more turns the AMR has in its trajectory, the more it is required to supply power to accelerate and decelerate its motors, resulting in a further increase in the energy usage of the AMR. Therefore, inspiration is taken from [<xref rid="B35-sensors-25-05317" ref-type="bibr">35</xref>,<xref rid="B36-sensors-25-05317" ref-type="bibr">36</xref>] to calculate the deflection angle between any three waypoints in the trajectory. The energy score calculation related to the smoothness of the path is given in Equation (2), which calculates the angle between the two line segments created by three waypoints.<disp-formula id="FD2-sensors-25-05317"><label>(2)</label><mml:math id="mm6" display="block" overflow="scroll"><mml:mrow><mml:mrow><mml:mi>E</mml:mi><mml:mfenced separators="|"><mml:mrow><mml:msup><mml:mrow><mml:mi>P</mml:mi></mml:mrow><mml:mrow><mml:mi>k</mml:mi></mml:mrow></mml:msup></mml:mrow></mml:mfenced><mml:mo>=</mml:mo><mml:mrow><mml:munderover><mml:mo stretchy="false">&#8721;</mml:mo><mml:mrow><mml:mi>i</mml:mi><mml:mo>=</mml:mo><mml:mn>2</mml:mn></mml:mrow><mml:mrow><mml:mi>D</mml:mi><mml:mo>&#8722;</mml:mo><mml:mn>1</mml:mn></mml:mrow></mml:munderover><mml:mrow><mml:mi>a</mml:mi><mml:mi>c</mml:mi><mml:mi>o</mml:mi><mml:mi>s</mml:mi><mml:mo>&#160;</mml:mo><mml:mo stretchy="false">(</mml:mo><mml:mstyle scriptlevel="0" displaystyle="true"><mml:mfrac><mml:mrow><mml:mo>(</mml:mo><mml:msubsup><mml:mrow><mml:mi>P</mml:mi></mml:mrow><mml:mrow><mml:mi>i</mml:mi></mml:mrow><mml:mrow><mml:mi>k</mml:mi></mml:mrow></mml:msubsup><mml:mo>&#8722;</mml:mo><mml:msubsup><mml:mrow><mml:mi>P</mml:mi></mml:mrow><mml:mrow><mml:mi>i</mml:mi><mml:mo>&#8722;</mml:mo><mml:mn>1</mml:mn></mml:mrow><mml:mrow><mml:mi>k</mml:mi></mml:mrow></mml:msubsup><mml:mo>)</mml:mo><mml:mo>(</mml:mo><mml:msubsup><mml:mrow><mml:mi>P</mml:mi></mml:mrow><mml:mrow><mml:mi>i</mml:mi><mml:mo>+</mml:mo><mml:mn>1</mml:mn></mml:mrow><mml:mrow><mml:mi>k</mml:mi></mml:mrow></mml:msubsup><mml:mo>&#8722;</mml:mo><mml:msubsup><mml:mrow><mml:mi>P</mml:mi></mml:mrow><mml:mrow><mml:mi>i</mml:mi></mml:mrow><mml:mrow><mml:mi>k</mml:mi></mml:mrow></mml:msubsup><mml:mo>)</mml:mo></mml:mrow><mml:mrow><mml:mfenced separators="|"><mml:mrow><mml:msubsup><mml:mrow><mml:mi>P</mml:mi></mml:mrow><mml:mrow><mml:mi>i</mml:mi></mml:mrow><mml:mrow><mml:mi>k</mml:mi></mml:mrow></mml:msubsup><mml:mo>&#8722;</mml:mo><mml:msubsup><mml:mrow><mml:mi>P</mml:mi></mml:mrow><mml:mrow><mml:mi>i</mml:mi><mml:mo>&#8722;</mml:mo><mml:mn>1</mml:mn></mml:mrow><mml:mrow><mml:mi>k</mml:mi></mml:mrow></mml:msubsup></mml:mrow></mml:mfenced><mml:mi>x</mml:mi><mml:mfenced separators="|"><mml:mrow><mml:msubsup><mml:mrow><mml:mi>P</mml:mi></mml:mrow><mml:mrow><mml:mi>i</mml:mi><mml:mo>+</mml:mo><mml:mn>1</mml:mn></mml:mrow><mml:mrow><mml:mi>k</mml:mi></mml:mrow></mml:msubsup><mml:mo>&#8722;</mml:mo><mml:msubsup><mml:mrow><mml:mi>P</mml:mi></mml:mrow><mml:mrow><mml:mi>i</mml:mi></mml:mrow><mml:mrow><mml:mi>k</mml:mi></mml:mrow></mml:msubsup></mml:mrow></mml:mfenced><mml:mo>&#215;</mml:mo><mml:mn>180</mml:mn></mml:mrow></mml:mfrac></mml:mstyle><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:mrow></mml:mrow></mml:mrow></mml:math></disp-formula></p><p>The proposed path overlap evaluation metric is calculated using Equation (3), which evaluates the suitability of the planned path based on the fraction of the total intersection of the AMR&#8217;s path with the paths of the other AMRs. This calculation captures the idea that as the fraction of the overlap between the robot paths increases, the risk of a possible deadlock or collision in the system is also increased. The IEP algorithm from [<xref rid="B14-sensors-25-05317" ref-type="bibr">14</xref>] is utilised, which requires that the lower-priority AMRs plan their paths after the higher-priority AMRs, and use the knowledge about the higher-priority AMR paths to plan their own paths. Therefore, the AMRs are encouraged to plan their paths in the environment&#8217;s free space or reuse their previously planned path segments instead of traversing path segments previously occupied by the other AMRs.<disp-formula id="FD3-sensors-25-05317"><label>(3)</label><mml:math id="mm7" display="block" overflow="scroll"><mml:mrow><mml:mrow><mml:mi>S</mml:mi><mml:mfenced separators="|"><mml:mrow><mml:msub><mml:mrow><mml:mi>P</mml:mi></mml:mrow><mml:mrow><mml:mi>k</mml:mi></mml:mrow></mml:msub></mml:mrow></mml:mfenced><mml:mo>=</mml:mo><mml:mstyle scriptlevel="0" displaystyle="true"><mml:mfrac><mml:mrow><mml:mrow><mml:msubsup><mml:mo stretchy="false">&#8721;</mml:mo><mml:mrow><mml:mi>j</mml:mi><mml:mo>&#8800;</mml:mo><mml:mi>k</mml:mi></mml:mrow><mml:mrow><mml:mi>n</mml:mi></mml:mrow></mml:msubsup><mml:mrow><mml:mi>L</mml:mi><mml:mo>(</mml:mo><mml:msup><mml:mrow><mml:mi>P</mml:mi></mml:mrow><mml:mrow><mml:mi>k</mml:mi></mml:mrow></mml:msup><mml:mo>)</mml:mo><mml:mo>&#8745;</mml:mo><mml:mi>L</mml:mi><mml:mo>(</mml:mo><mml:msup><mml:mrow><mml:mi>P</mml:mi></mml:mrow><mml:mrow><mml:mi>j</mml:mi></mml:mrow></mml:msup><mml:mo>)</mml:mo></mml:mrow></mml:mrow></mml:mrow><mml:mrow><mml:mi>L</mml:mi><mml:mo>(</mml:mo><mml:msup><mml:mrow><mml:mi>P</mml:mi></mml:mrow><mml:mrow><mml:mi>k</mml:mi></mml:mrow></mml:msup><mml:mo>)</mml:mo></mml:mrow></mml:mfrac></mml:mstyle></mml:mrow></mml:mrow></mml:math></disp-formula></p><p>The final fitness function design is, therefore, calculated using Equation (4). Here, weights are provided for each of the three criteria discussed above (Equations (1)&#8211;(3)) to evaluate the individuals in the population. It is important to assign the weights <inline-formula><mml:math id="mm8" overflow="scroll"><mml:mrow><mml:mrow><mml:mfenced separators="|"><mml:mrow><mml:mi>&#969;</mml:mi></mml:mrow></mml:mfenced></mml:mrow></mml:mrow></mml:math></inline-formula> to each of these criteria correctly, as some of the criteria are inversely proportional. For example, adding a large weight to the path overlap score might cause paths that are not the shortest path and have significant energy scores to be chosen and vice versa.<disp-formula id="FD4-sensors-25-05317"><label>(4)</label><mml:math id="mm9" display="block" overflow="scroll"><mml:mrow><mml:mrow><mml:mi>F</mml:mi><mml:mfenced separators="|"><mml:mrow><mml:msub><mml:mrow><mml:mi>P</mml:mi></mml:mrow><mml:mrow><mml:mi>k</mml:mi></mml:mrow></mml:msub></mml:mrow></mml:mfenced><mml:mo>=</mml:mo><mml:msub><mml:mrow><mml:mi>&#969;</mml:mi></mml:mrow><mml:mrow><mml:mn>1</mml:mn></mml:mrow></mml:msub><mml:mi>L</mml:mi><mml:mfenced separators="|"><mml:mrow><mml:msup><mml:mrow><mml:mi>P</mml:mi></mml:mrow><mml:mrow><mml:mi>k</mml:mi></mml:mrow></mml:msup></mml:mrow></mml:mfenced><mml:mo>+</mml:mo><mml:msub><mml:mrow><mml:mi>&#969;</mml:mi></mml:mrow><mml:mrow><mml:mn>2</mml:mn></mml:mrow></mml:msub><mml:mi>E</mml:mi><mml:mfenced separators="|"><mml:mrow><mml:msup><mml:mrow><mml:mi>P</mml:mi></mml:mrow><mml:mrow><mml:mi>k</mml:mi></mml:mrow></mml:msup></mml:mrow></mml:mfenced><mml:mo>+</mml:mo><mml:msub><mml:mrow><mml:mi>&#969;</mml:mi></mml:mrow><mml:mrow><mml:mn>3</mml:mn></mml:mrow></mml:msub><mml:mi>S</mml:mi><mml:mo>(</mml:mo><mml:msup><mml:mrow><mml:mi>P</mml:mi></mml:mrow><mml:mrow><mml:mi>k</mml:mi></mml:mrow></mml:msup><mml:mo>)</mml:mo></mml:mrow></mml:mrow></mml:math></disp-formula></p><p>After the population has been initialised and the individuals in the population have been assigned their fitness scores, the individuals that will contribute to the next generation is selected. The selection operator is implemented in two stages to preserve the best solutions from the previous generation and is inspired by the works performed by [<xref rid="B30-sensors-25-05317" ref-type="bibr">30</xref>,<xref rid="B37-sensors-25-05317" ref-type="bibr">37</xref>,<xref rid="B38-sensors-25-05317" ref-type="bibr">38</xref>]. The current population is first ordered by their fitness, and the top individuals from the current population are placed in a group to be preserved to perform the elitist and truncation selection. A roulette wheel selection operator is then employed to ensure that a diverse set of individuals reproduce and generate new solutions. The roulette wheel selection method is chosen as it has shown good results in mobile robot path planning [<xref rid="B19-sensors-25-05317" ref-type="bibr">19</xref>,<xref rid="B36-sensors-25-05317" ref-type="bibr">36</xref>,<xref rid="B38-sensors-25-05317" ref-type="bibr">38</xref>,<xref rid="B39-sensors-25-05317" ref-type="bibr">39</xref>]. A fixed population size is chosen and the selection operation results in the population being carried over having the same size as the previous generation.</p><p>The crossover operator is employed to generate new, more optimal paths by combining the genes of the two chosen parents. For this work, the genes represent the coordinate points to visit, and the swapping of genes by the crossover operator thus implies that the neighbouring coordinates to visit are then replaced and swapped between the parents to form new offspring that form part of the second group. However, the implementation of traditional crossover operators cannot be applied to the mobile robot path planning problem because randomly choosing genes to swap will lead to a large amount of non-feasible solutions being carried over to the new generation [<xref rid="B36-sensors-25-05317" ref-type="bibr">36</xref>]. Therefore, the crossover operator needs to be carefully designed to increase the convergence rate of the modified GA.</p><p>The chosen operator for this work is based on the crossover operator employed by [<xref rid="B30-sensors-25-05317" ref-type="bibr">30</xref>]. This operator is a domain-specific implementation of the traditional single-point crossover operator. The mechanism of this operator can be explained as follows. At the start of the crossover, both chromosomes are scanned, and a list of feasible crossover points between the two parents is generated. It is important to note that for the generation of this list, the starting and ending points of the parents are excluded, as both paths have the same starting and ending points. If the list of feasible crossover points is empty, then the two parents are deemed to be incompatible, and the selection process is repeated. However, if the list of feasible crossover points is not empty, then a random point from this list is chosen, and the single-point crossover is executed, generating two new offspring.</p><p>After the offspring are generated through the use of the crossover operator, the search space is increased by performing a random mutation on the solutions. For this work, three domain-knowledge-based operators are implemented, namely the circuit removal, the subsection replacement, and the adjacent neighbour operators. The circuit removal operator is based on the shortest operator used by [<xref rid="B37-sensors-25-05317" ref-type="bibr">37</xref>], or the so-called circuit removal operator used by [<xref rid="B30-sensors-25-05317" ref-type="bibr">30</xref>], or the deletion operator used by [<xref rid="B19-sensors-25-05317" ref-type="bibr">19</xref>]. The redundant genes in the individual are removed using a list of stored repetitions, and effectively, the planned path is shortened whilst maintaining its feasibility. The subsection replacement operator further extends this idea and removes circuits that cannot be detected by seeking explicit repetitions of coordinates. The operator chooses two random genes in an individual and replans the shortest path between these two points using Dijkstra&#8217;s algorithm.</p><p>However, the result of these operators is that the search space is reduced, resulting in the risk of the GA converging to bad optima. Therefore, inspiration is taken from the insertion&#8211;deletion operator in the work performed by [<xref rid="B30-sensors-25-05317" ref-type="bibr">30</xref>], and an operator is introduced to increase the variation in the offspring. The idea behind this variation-inducing operator is that a random coordinate point in the individual is selected, and from the surrounding coordinates a random valid adjacent coordinate is then chosen. Next, the operator selects one of the two variants of this operation with equal probability. In the first variation, the operator replans the path from the chosen adjacent neighbouring point to the end of the path. Moreover, in this operator&#8217;s second variation, another random coordinate, after the chosen adjacent coordinate, is selected in the chromosome (individual), and a second valid neighbouring coordinate is then found. The path between these two adjacent coordinate points is then replanned, resulting in new, more diverse routes.</p><p>In summary, the modified GA mechanism operation first requires the generation of initial paths using a random walk process, and these initial paths are then repaired using a directed acyclic graph. The evolutionary learning process is then initiated, where two groups of individuals are sampled from the first population. The first group of individuals is selected based on their fitness, and these are the individuals who will be transferred to the new population without any changes. The second group of individuals is selected using a roulette wheel selection process, and these are the parents that will be used to produce the offspring.</p><p>The second groups of individuals then undergo a crossover and mutation process to produce new valid solutions, which then replace their parents in forming the second group of individuals. After the reproduction has been completed, the first and second groups of individuals are then merged to form a new generation of individuals, and the breeding process is repeated. The reproduction process is terminated when the algorithm completes a certain number of iterations, and the population is then sorted according to fitness. Finally, the best solution is output by the GA by choosing the solution with the highest fitness.</p></sec><sec id="sec3dot3-sensors-25-05317"><title>3.3. Multi-Agent System Design</title><p>For this work, the MAS design is inspired both by the MAS review performed by [<xref rid="B40-sensors-25-05317" ref-type="bibr">40</xref>] and similar research, such as the work performed by [<xref rid="B41-sensors-25-05317" ref-type="bibr">41</xref>], who designed a MAS for the application of AMRs in a manufacturing environment. Moreover, the MAS literature and theory are also used to define the guidelines and definitions that the MAS design for this work follows. This work builds on top of the work performed on collaborative mobile robots by [<xref rid="B41-sensors-25-05317" ref-type="bibr">41</xref>] and uses the surveys on MASs of [<xref rid="B40-sensors-25-05317" ref-type="bibr">40</xref>,<xref rid="B42-sensors-25-05317" ref-type="bibr">42</xref>] to define two types of software agents that are designed for the MAS, namely the blackboard agent and the software AMR agent. The overall MAS architecture for this work is shown in <xref rid="sensors-25-05317-f002" ref-type="fig">Figure 2</xref>, and the subsequent discussion of the fulfilment of the parameters set out by [<xref rid="B43-sensors-25-05317" ref-type="bibr">43</xref>] follows.</p><p>Firstly, the software AMR agents are present in the simulation environment and include individual intelligent decision-making algorithms to navigate through the virtual environment autonomously. For this work, the software AMR agents are both reactive, deliberative, and communicate with each other to resolve conflicts (they are &#8220;social&#8221;). The software AMR agents are reactive as they receive their transport orders from the blackboard agent, triggering the path planning request [<xref rid="B41-sensors-25-05317" ref-type="bibr">41</xref>]. Here, the software AMR agents receive inputs from the blackboard agent on changes in the transport orders during execution, such as reordering priorities or changes in workstation locations. Additionally, the AMR software agents are able to observe the environment that they reside in and are able to react to any changes in these observations. Here, the observations within the environment include both the surrounding static obstacles, as well as the dynamic obstacles, such as humans and other AMRs.</p><p>The agents also fulfil the deliberative aspect of MASs defined by [<xref rid="B43-sensors-25-05317" ref-type="bibr">43</xref>] as they are not limited to only reacting to changes in the environment. Here, the AMR agents use their knowledge about the environment and their own internal intelligent algorithms to plan the subsequent paths to complete the path planning request. Here, the environment provides feedback regarding the suitability of its intelligent decision-making algorithm and allows for the crucial improvement of the agent&#8217;s behaviour. Moreover, from <xref rid="sensors-25-05317-f002" ref-type="fig">Figure 2</xref>, it can be seen that each of the AMRs has knowledge about its own transport order and its location in the simulated environment. Here, the internal knowledge, such as the location of transport order, the AMR priority, and the current and historical location information of the current AMR is used as input to the intelligent decision-making algorithm.</p><p>Finally, the software AMR agents also exhibit &#8220;social&#8221; behaviour as they use communication techniques with the blackboard agent to share their internal knowledge. Here, each software AMR agent, therefore, has access to knowledge about external factors, such as the locations of the dynamic and static obstacles, the locations of the other AMRs, and the planned routes and priorities of the other AMRs.</p><p>Once the software AMR agents have shared their knowledge, these external factors can also be used to improve the quality of the intelligent decision-making systems that the agents use to define their deliberative behaviour. The &#8220;social&#8221; behaviour of the agents is a crucial component that allows for communication during the coordination mechanism that is used to avoid conflicts in the multi-robot system [<xref rid="B14-sensors-25-05317" ref-type="bibr">14</xref>].</p><p>To ensure that this social behaviour is appropriately facilitated in the MAS, the blackboard communication strategy is utilised for this work, as inspired by [<xref rid="B41-sensors-25-05317" ref-type="bibr">41</xref>,<xref rid="B42-sensors-25-05317" ref-type="bibr">42</xref>]. For this approach, the blackboard agent is created that each agent shares their knowledge with and receives their shared knowledge from. The blackboard agent is not physically present in the simulation and is instead manifested as an abstract entity in the software environment which the software AMR agents receive their instructions from. Unlike the software AMR agents, the blackboard agent is purely reactive and sends requests and information triggered by specific events, such as with an input transport order file being received. The advantage of the blackboard agent and the blackboard communication strategy is that it reduces the communication overheads required in finding a particular agent during the information sharing process.</p></sec><sec id="sec3dot4-sensors-25-05317"><title>3.4. Multi-Robot Conflict-Resolution Mechanism</title><p>The communication strategy is an essential requirement for resolving the conflicts inherent to multi-robot systems and the interaction between these robots in a confined environment. By using a communication strategy, each of the AMRs is able to acknowledge the priority of the AMRs and appropriately adapt their paths, so as to avoid all of the conflicts in the system while also ensuring that the overall efficiency of the system does not decrease. The multi-robot path planning mechanism of this work is inspired by the IEP proposed by [<xref rid="B14-sensors-25-05317" ref-type="bibr">14</xref>], which is an improvement of both the Priority-based Planning (PP) and MPCA algorithms from prior multi-robot conflict avoidance work. The following sub-sections describe the IEP implementation for the MAS agent communication and conflict-resolution mechanism of the dynamic path planning system (refer also to <xref rid="sensors-25-05317-f003" ref-type="fig">Figure 3</xref>).</p><sec id="sec3dot4dot1-sensors-25-05317"><title>3.4.1. Receiving and Assigning Transport Orders</title><p>For the dynamic path planning system in this work, the algorithm starts when the blackboard agent receives an input containing information about the simulation environment and the software AMR agents. Using this information, the blackboard agent creates the software AMR agents and instantiates the simulation environment using the knowledge about the environmental layout, the number of AMRs, and the home location of these AMRs. Once these parameters have been instantiated, the blackboard agent then waits for transport order inputs. As soon as information about the full, partial, or empty transport orders is received, the blackboard agent then parses the information and creates the objects for the transport orders. The objects for the full, partial, or empty transport orders are then sent to individual software AMR agents for further processing.</p></sec><sec id="sec3dot4dot2-sensors-25-05317"><title>3.4.2. Path Generation and Priority Assignment</title><p>Each AMR then breaks down the transport order request into requests for the individual paths that must be planned. The individual paths can include the path from the starting location of the AMR to the pickup location, the path from the pickup location to the delivery location, and the path from the delivery location to the home location. The transport orders can also be partial to allow for replanning situations or be empty, where the AMR does not need to plan any paths. Each transport order object sent to the AMRs also includes an associated priority.</p><p>For this work, two types of initial path planning requests are experimented with. For the first request type, the AMRs plan their paths independently and rectify all problems during the cyclical conflict avoidance mechanism. For the second, the AMRs plan their initial paths in order of their priority, and lower-priority AMRs contain knowledge about the initial paths planned by the higher-priority AMRs [<xref rid="B14-sensors-25-05317" ref-type="bibr">14</xref>]. The approach aims to reduce the number of cycles of the conflict avoidance mechanism, improving the robustness and convergence of the algorithm in heavy-traffic situations.</p><p>The software AMR agent then individually plans its paths using its intelligent path planning algorithm, where the knowledge about the higher priority AMRs can be included depending on the path planning logic and algorithm decided on. Each of the AMRs then gathers information about its individually planned paths and transport order priority and uses this as a base for the conflict-resolution system in the following step.</p></sec><sec id="sec3dot4dot3-sensors-25-05317"><title>3.4.3. Knowledge Sharing of the Joint Paths</title><p>Each AMR then compares its path to the other AMRs&#8217; planned paths for deadlocks and collisions using a Predictive Collision Avoidance (PCA) approach. It is important to note that all software AMR agents with no transport orders assigned to them are excluded from the following process. First, the software AMR agent ranks all of the other AMRs according to their assigned priorities, and then it analyses the joint paths in order to construct a list of coordinates and timesteps at which the deadlocks and collisions with other AMRs occur.</p><p>The PCA approach can result in two unique cases that define the rules for if the current AMR is required to replan its path when taking the priority system into account. The first case arises when the other software AMR agent has a lower priority than the current software AMR agent. The second case arises if the other software AMR agent has a lower priority than the current software AMR agent; however, the collision occurs at one of the significant locations of the lower-priority software AMR agent. If neither of these cases are present, then the current software AMR agent is excluded for the IEP process.</p></sec><sec id="sec3dot4dot4-sensors-25-05317"><title>3.4.4. Inclusion and Replanning Process</title><p>For this work, the replanning is completed using a cyclical collaborative conflict avoidance planning mechanism. At the start of each cycle, each software AMR agent receives the most recent planned paths of the software AMR agents that are included in the IEP. Using this knowledge, the software AMR agent then uses the PCA approach to construct an updated list of conflicts that it is responsible for. The software AMR agent then iterates through this list of conflicts and breaks the conflicts into sub-groups consisting of either individual conflicts or consecutive conflicts that it can solve in one replanning attempt.</p><p>Each of the conflict locations is marked as a time-dependent obstacle, and the software AMR agent is not allowed to occupy this area during the replanning process. Once the replanning is completed, the software AMR agent compares the newly planned path segment with the other AMR paths in the specific time window using the PCA approach. If the newly planned path segment results in another conflict, then the path segment is discarded, and the AMR is instructed to wait to avoid the conflict. If the waiting results in another conflict, the AMR priority is updated, and the conflict-resolution responsibility is transferred to another software AMR agent in the subsequent cycle of the IEP.</p><p>The blackboard agent waits for each of the software AMR agents to complete their conflict avoidance tasks and receives information from the software AMR agent about either the success or failure of this request. If the software AMR agent succeeds in resolving all of the conflicts that it is responsible for, then the blackboard agent excludes it from the following cycle of the IEP algorithm. However, if the software AMR agent is the subject of a conflict avoidance transfer or if it has failed to resolve a conflict, then it is included in the following cycle of the IEP. This iterative process is then repeated until all mobile robots have been excluded from the IEP algorithm, and no conflicts occur in the system, or the algorithm times out due to extreme congestion [<xref rid="B14-sensors-25-05317" ref-type="bibr">14</xref>].</p></sec></sec></sec><sec id="sec4-sensors-25-05317"><title>4. Evaluation and Results</title><p>Three different evaluation experiments were conducted to evaluate the performance of the developed dynamic path planning system for autonomous mobile robots using a multi-agent system approach. The first experiment evaluated the performance of the modified GA path planning algorithm against an implementation of D&#307;kstra&#8217;s algorithm, as well as a reinforcement learning (RL)-based path planning algorithm. The second experiment evaluated the scaling ability of the developed path planning system under an increasing number of autonomous mobile robots, and the third experiment evaluated the performance of the system under different disturbance scenarios. For this research, the focus was on small-to-medium-sized manufacturing environments with medium-level computer hardware affordable enough to be installed as an on-premise infrastructure in most SMEs. Here, the idea was that dynamic path planning should not be trumped by the costs of purchasing and operating a costly dedicated computer. For this approach, it was envisaged that edge devices, including the onboard AMR computing hardware and localisation sensors, send the data for path planning requests directly to a decentralised device on the FMS premises that are dedicated to computing the conflict-free paths for the AMRs. Therefore, all experiments were conducted on a machine with a 3.8 GHz i7 processor with 16 GB of RAM and a GTX1050Ti GPU utilising 4 GB of VRAM. For the AMR, the Neobotix MP700 AMR platform was chosen due to its versatility in use cases and the availability of the model file for the Matlab R2022a RobotScenario simulation environment. For this work, the cell size for the CBD was selected as 1 m &#215; 1 m according to the size of the MP700 platform and to allow for slight deviations when the AMR executes turns.</p><p>The following sub-sections briefly explain the experiments and discuss the results of each.</p><sec id="sec4dot1-sensors-25-05317"><title>4.1. Evaluation Against Other Path Planning Algorithms</title><p>The first evaluation was conducted in a 30 m &#215; 30 m simulated environment using only two AMRs. This environment represents an indoor scene with walls and scattered obstacles. A visualisation of the environment used for this experiment is shown in <xref rid="sensors-25-05317-f004" ref-type="fig">Figure 4</xref>, depicting two configurations of different points of interest (two random test trials). The dotted lines denote the planned coordinate trajectory of the AMR, and the yellow dots denote the coordinates of interest for this trial. For this experiment, twelve coordinates of interest were generated prior to the experiment, and during each trial, six random coordinates were sampled and assigned to either AMRs to generate a set of unique transport orders. The first three coordinates were assigned to the first mobile robot, where the first coordinate denotes the starting point of the first mobile robot, the second coordinate denotes the pickup location coordinate, and the third coordinate denotes the drop-off location coordinate. Finally, the transport order was created by combining these three coordinates such that the first mobile robot is instructed to return to its starting locations after visiting the pickup and drop-off locations. The last three coordinates that were sampled from the set were then similarly assigned to the second mobile robot. For this experiment, 100 trials were conducted.</p><p>The developed GA-based path planning algorithm was compared against two other classes of algorithms: (1) Dijkstra&#8217;s algorithm, which is a well-established graph-theory approach, and (2) a Reinforcement Learning (RL)-based approach. D&#307;kstra&#8217;s Algorithm was implemented to use as a baseline for comparing. RL is a recent AI-based approach that has received a lot of attention in its application to the global path planning problem. Recently, RL has been combined with deep learning to allow for processing complex inputs using value function approximation. A promising architecture for improving the learning of RLs includes the Double Deep Q-Network algorithm (DDQN), a reinforcement learning algorithm that builds upon the Deep Q-Network (DQN) by addressing the issue of Q-value overestimation. In essence, DDQN uses one network to select the best action and another to evaluate its value, rather than relying on the same network for both [<xref rid="B44-sensors-25-05317" ref-type="bibr">44</xref>]. Other improvements to the learning capability of RLs as derived from the literature include Convolutional Neural Networks (CNNs) [<xref rid="B45-sensors-25-05317" ref-type="bibr">45</xref>] and Gated Recurrent Units (GRUs) [<xref rid="B46-sensors-25-05317" ref-type="bibr">46</xref>,<xref rid="B47-sensors-25-05317" ref-type="bibr">47</xref>]. GRUs are a type of neural network that efficiently captures patterns in sequential data by using gates to control the flow of information and maintain memory over time and therefore provides a powerful approach for handling spatio-temporal data. For this research, an RL algorithm based on a DDQN GRU&#8211;CNN architecture was therefore used to compare with the developed GA approach for path planning.</p><p>This work aimed to design a dynamic path planning system that exhibits good performance in terms of the path quality generated by intelligent path planning algorithms while maintaining reasonable execution times. Therefore, for this work, several individual criteria have been identified to provide quantifiable measures for comparison. The selected evaluation criteria and their reasons for inclusion are presented in <xref rid="sensors-25-05317-t001" ref-type="table">Table 1</xref>, together with descriptions of the weighted scoring scheme used for each criterion. A weight was assigned to each criterion denoting its importance, where criteria that are more favourable than others could be prioritised. Therefore, for the final algorithm comparison, a single score could be calculated for each algorithm, and the algorithm with the highest score over all the criteria was identified.</p><p>The results from the algorithm comparison experiment are presented in <xref rid="sensors-25-05317-t002" ref-type="table">Table 2</xref>. A failure occurs if the algorithm is unable to plan any sub-path during the path planning task. Both Dijkstra&#8217;s algorithm and hybrid GA performed optimally in this regard with zero failures in the 100 trials, while the RL algorithm failed to plan a path for 9 out of the 100 trails. The number of collisions should be minimised to avoid system failure. The hybrid GA was the only one to completely avoid collisions, outperforming both Dijkstra and RL. A deadlock is a situation where two AMRs cannot continue their pre-planned paths without colliding. Again, the hybrid GA was superior, eliminating all deadlocks, while RL performed better than Dijkstra but still encountered deadlocks. For the weighted path length performance criteria, Dijkstra&#8217;s algorithm served as the baseline with a score of 1 (indicating the weighted average path length for AMRs divided by Dijkstra&#8217;s path length). A shorter path length indicates a more efficient path. The RL with DDQN GRU&#8211;CNN Architecture had a weighted path length score of 1.09, meaning its paths were slightly longer than Dijkstra&#8217;s. The hybrid GA scored 1.01, indicating its paths were very close to Dijkstra&#8217;s optimal length, making them more efficient than the RL algorithm&#8217;s paths. Path smoothness for mobile robot paths is an important criterion for evaluating the quality of generated paths and determines the energy usage of the AMR, which should be minimised. The smoothness of a generated path was measured by calculating the deflection angle between any three waypoints in the trajectory. Dijkstra&#8217;s algorithm served as the baseline with a path smoothness score of 1. The RL with DDQN GRU&#8211;CNN Architecture had a score of 2.64, suggesting its paths were significantly less smooth than Dijkstra&#8217;s, implying higher energy usage. The hybrid GA achieved a score of 0.95, which means its paths were smoother than Dijkstra&#8217;s. Path overlap score needs to be minimised to reduce the risk of replanning, which increases execution time. For the execution time, Dijkstra&#8217;s algorithm had an execution time score of only a few milli-seconds, which rounded to 0. The hybrid GA showed faster execution times than the RL algorithm, which is important for reactive and fast planning and replanning (although slower than for Dikstra&#8217;s algorithm, it is still acceptable from a practical perspective).</p><p>The results clearly indicate that the hybrid GA significantly outperforms both Dijkstra&#8217;s algorithm and the RL with DDQN GRU&#8211;CNN Architecture across almost all identified evaluation criteria. The hybrid GA excelled in critical areas such as eliminating failures, collisions, and deadlocks, which are crucial for the robustness and reliability of autonomous mobile robots in a manufacturing environment. Its path length was very close to optimal (Dijkstra&#8217;s), and it produced significantly smoother paths with less overlap, contributing to efficiency and reduced replanning. It also demonstrated faster execution times compared to the RL approach. Dijkstra&#8217;s algorithm serves as a baseline and shows optimal path length performance but struggles with multi-agent scenarios, exhibiting collisions and deadlocks. The RL with DDQN GRU&#8211;CNN Architecture, despite being a recent AI-based approach, performed the worst overall, showing a high number of failures, collisions, and deadlocks, as well as longer and less smooth paths with more overlap compared to both Dijkstra and the hybrid GA. While RL combined with deep learning like DDQN, CNNs, and GRUs is promising for handling complex and spatio-temporal data, its implementation in this context did not yield superior results for dynamic path planning for autonomous mobile robots compared to the developed GA approach.</p><p>In summary, the evaluation demonstrates the superiority of the hybrid GA for the developed dynamic path planning system, achieving excellent path quality and maintaining reasonable execution times, particularly in terms of safety and efficiency, by avoiding collisions and deadlocks, and generating efficient and smooth paths. This aligns with the research&#8217;s aim to design a system with good performance while maintaining reasonable execution times [<xref rid="B44-sensors-25-05317" ref-type="bibr">44</xref>,<xref rid="B48-sensors-25-05317" ref-type="bibr">48</xref>].</p></sec><sec id="sec4dot2-sensors-25-05317"><title>4.2. Evaluation Under Increasing Number of AMRs</title><p>The second evaluation experiment was conducted to evaluate how the chosen intelligent GA path planning algorithm scales under an increasing number of AMRs. The environment shown in <xref rid="sensors-25-05317-f005" ref-type="fig">Figure 5</xref> was used as it resembles the confined workspace layout standard in matrix production facilities.</p><p>For each experiment used for the evaluation, fifty coordinates of interest were generated before testing, and three random coordinates were sampled from this set for each AMR during testing. The first coordinate denotes the starting point of the AMR, the second coordinate denotes the pickup location, and the third coordinate denotes the drop-off location. The transport order for each AMR was created by combining these three coordinates such that the mobile robot is instructed to return to its starting locations after visiting the pickup and drop-off locations. Furthermore, this process of assigning transport orders and planning paths was repeated 100 times for each number of AMRs until a failure is recorded. <xref rid="sensors-25-05317-f005" ref-type="fig">Figure 5</xref> illustrates the transport order assignment for the case of eight AMRs concurrently moving in the environment.</p><p>The complexity of the problem and finding optimal paths for each AMR increases exponentially with the increase in the AMRs. The increase in complexity is specifically due to an increase in the number of dynamic obstacles each AMR has to face in finding each of its three paths. <xref rid="sensors-25-05317-f006" ref-type="fig">Figure 6</xref> illustrates the number of collisions as the number of AMRs increases, comparing the proposed dynamic path planning system (blue) with the baseline Dijkstra&#8217;s algorithm (orange). As the number of AMRs grows, the baseline approach shows a steep increase in collisions due to the higher complexity of navigating around an increasing number of dynamic obstacles. In contrast, the proposed GA-based system maintains a near-zero collision rate, with only a single collision occurring at 10 AMRs in one of the 1000 trials, demonstrating superior collision avoidance performance and scalability. <xref rid="sensors-25-05317-f007" ref-type="fig">Figure 7</xref> shows the number of deadlocks as a function of the number of AMRs. The baseline Dijkstra&#8217;s algorithm exhibits a gradual rise in deadlocks as the number of AMRs increases, highlighting its limited ability to handle congestion in dense environments. The proposed GA-based dynamic path planning system completely eliminates deadlocks across all trials, regardless of the number of AMRs, with its performance shown as a flat line on the horizontal axis. This result confirms the effectiveness of the proposed approach in preventing deadlocks even under increasing system complexity.</p><p>Here, the mean number of collisions and deadlocks for the 100 trials per number of AMRs (up to 10 AMRs) are recorded for the chosen modified GA and compared to a baseline Dijkstra&#8217;s algorithm. The findings show that the baseline Dijkstra algorithm has an increasing number of collisions and deadlocks when more AMRs are introduced into the system. The dynamic path planning system implementation can successfully avoid all deadlocks in the system; however, the system was unable to avoid a single collision for 10 AMRs during one of the 1000 trials.</p><p>However, failures in the system are expected for a substantial number of AMRs, because an extreme amount of congestion occurs in the environment, and a particular configuration of transport orders will result in the system failing. Therefore, compared to Dijkstra&#8217;s algorithm for path planning, the proposed path planning system scales exceptionally well, with a guarantee of no deadlocks or collisions for up to nine AMRs in an environment with confined space in the moveable area. The reason for the collision is explained as follows. The IEP collision and conflict avoidance algorithm performs a cyclical procedure where it cycles through each of the AMRs and checks their priorities before deciding to adapt their paths. The adapted paths are then propagated to the other software agents, and the cyclical process is repeated until all paths are conflict-free. Depending on the conflict scenarios, the cyclical process can be repeated many times, resulting in longer run times. Therefore, a design choice was to limit the number of these cyclical processes to 50, where the system then stops and the AMRs follow their paths. To pragmatically resolve the conflict in a timely manner, the AMR that would encounter the conflict should wait upon detecting another AMR, and once the congestion has cleared, the AMRs should collaboratively replan their paths.</p><p>More specifically, a practical implementation of this is that as the number of AMRs increases to a large amount and congestion in the environment reaches an extreme, the dynamic path planning system might not be able to produce conflict-free paths immediately, and the initially planned paths might have to be regenerated several times. As a result, the algorithm&#8217;s run time becomes unstable, and it is not guaranteed that optimal joint paths can be calculated quickly for a substantial number of AMRs. However, this phenomenon regarding the run time is only applicable to the extreme case, and the overall dynamic path planning system robustness performance yields favourable results. The algorithm scalability results further showed that the algorithm could plan conflict-free paths for up to nine AMRs in a highly congested environment.</p><p>Moreover, the algorithm run times also produced favourable results where the system scaled linearly with an increase in AMRs (from &#177;2 s average for 2 AMRS to &#177;17.5 s for 10 AMRs). Once the system reaches an extreme amount of congestion, the run times become much longer. However, such a system with minimal floor space and a considerable number of AMRs does not represent a real-world scenario and merely represents a stress test scenario of the dynamic path planning system.</p><p>In summary, although the proposed GA-based multi-agent path planning system exhibits favourable scalability and robust conflict avoidance performance for small-to-medium-sized AMR fleets, several limitations emerge when the system is subjected to higher robot densities. As the number of AMRs increases, congestion effects escalate nonlinearly, leading to a significantly higher frequency of dynamic conflicts. Under these conditions, the iterative exclusion mechanism must perform repeated replanning cycles, which substantially increases computational demands and, when iteration limits are reached, may result in residual collisions or suboptimal path solutions. Furthermore, while the average computational run time scales approximately linearly up to nine AMRs, highly congested scenarios produce unstable run times as the negotiation process between agents becomes prolonged. This effect is particularly pronounced in environments with continuously changing transport orders, where frequent replanning may delay path generation and negatively impact system throughput. In addition, the coordination overhead associated with a fully distributed, communication-intensive architecture becomes more significant as fleet sizes grow. Without additional hierarchical coordination or clustering strategies, the exchange of path information and priority negotiation among a very large number of agents may impair scalability.</p><p>These findings indicate that the current approach is well suited for small to moderately sized fleets operating in constrained environments but that further algorithmic refinements&#8212;such as hierarchical planning, hybridised optimisation methods, or advanced cooperative control schemes&#8212;will be necessary to maintain robustness and real-time responsiveness in substantially larger or more congested systems.</p></sec><sec id="sec4dot3-sensors-25-05317"><title>4.3. Evaluation Under Various Disturbance Scenarios</title><p>The third experiment evaluated the performance of the developed path planning system under various disturbance scenarios by using a realistic simulation model of an Industry 4.0 production environment. For this work, the system is validated in a simulation model of a logistics learning factory. Learning factories provide safe and industry-oriented production environments where these new technical solutions can be evaluated and verified before being seamlessly transferred into industrial practice. The logistics learning factory environment used is fully equipped for producing multi-variant city scooter models with state-of-the-art planning and control methods. Moreover, all workstations and logistics infrastructure are entirely mobile, allowing for the rapid reconfiguration of the factory layout to accommodate the proposed production processes.</p><p>The workstations at the learning factory are also equipped with tablet PCs and several IoT devices to allow real-time data monitoring and transfer between the intelligent objects in the learning factory. Therefore, the learning factory is selected for the single-case study in this research due to several reasons: (i) it is a realistic representation of an Industry 4.0 production system, (ii) it allows for the safe development of new technologies and prototypes, and (iii) the appropriate enabling technologies are available to support the development of intelligent systems. The current layout of the learning factory facility used for the validation is depicted in <xref rid="sensors-25-05317-f008" ref-type="fig">Figure 8</xref>. A three-dimensional simulation environment of the learning factory has been developed in Matlab R2022a to provide a simulated environment for validating the dynamic path planning system (refer to <xref rid="sensors-25-05317-f009" ref-type="fig">Figure 9</xref>).</p><p>The work performed by [<xref rid="B49-sensors-25-05317" ref-type="bibr">49</xref>,<xref rid="B50-sensors-25-05317" ref-type="bibr">50</xref>] was used to define several flexibility types associated with autonomously controlled intralogistics. The most important flexibility types associated with the practical implementation of the dynamic path planning system are material handling flexibility and control program flexibility. Here, material handling flexibility is defined as the number of allowed paths between the different workstations and the material handling system&#8217;s capacity to transport material between the different workstations effectively. The flexibility parameter for this type of flexibility is thus the number of transport paths. Moreover, control program flexibility is the ability of the dynamic path planning system to operate nearly uninterrupted during the production phase.</p><p>Additionally, ref. [<xref rid="B49-sensors-25-05317" ref-type="bibr">49</xref>] also documents the disturbances common in Industry 4.0 environments that are relevant to the corresponding flexibility parameters. To validate the dynamic path planning system developed in this study, the following validation case scenarios have been defined that are aligned with these disturbances:<list list-type="simple"><list-item><label>(1)</label><p>Scenario 1: Missing part at workstation;</p></list-item><list-item><label>(2)</label><p>Scenario 2: Excess supply at workstation;</p></list-item><list-item><label>(3)</label><p>Scenario 3: Addition of a static obstacle;</p></list-item><list-item><label>(4)</label><p>Scenario 4: Failure of transport system;</p></list-item><list-item><label>(5)</label><p>Scenario 5: Addition of a dynamic obstacle;</p></list-item><list-item><label>(6)</label><p>Scenario 6: Machine breakdown at workstation.</p></list-item></list></p><p>In this research, the run time of the dynamic path planning system was evaluated before and after each of the above disturbances are introduced. The run times are required to be consistent and should not take too long, as one of the practical requirements of the system is that it should be responsive and should not interrupt the execution of the FMS.</p><p>For each disturbance scenario, the path quality of the dynamic path planning system was evaluated for each of the AMRs under the different scenarios. The path quality metrics include the paths&#8217; lengths, the paths&#8217; smoothness, and the total number of overlaps between the AMR paths. The path planning system should be able to consistently optimise its output based on these three metrics and produce paths that are not detrimental to the overall efficiency of the FMS. Finally, an important unit of analysis was investigating the interplay between the robustness and flexibility of the dynamic path planning system to conclude its practicality.</p><list list-type="simple"><list-item><p>
<italic toggle="yes">Scenario 1: Missing part at workstation</italic>
</p></list-item></list><p>For the first scenario, the short-term disturbance of a missing part at a workstation is simulated. The first AMR starts at its home position and receives a transport order to deliver a packaging board to workstation 5. However, while the first AMR executes its transport order, the worker at workstation 2 realises that a smart bin of screws has been depleted. A rushed order is then placed to prioritise the delivery of the batch of ISO screws, as this might delay the overall production time. After the rush order has been triggered, the AMRs collaboratively plan their paths to ensure that the second AMR receives priority. After both AMRs have completed their transport orders, they are then required to return to their home positions. The time the second transport order is triggered is sampled from a uniform random distribution within the range of 1 and 80 s to ensure that the majority of the transport orders include both AMRs.</p><p>The results for 50 simulation runs are summarised in <xref rid="sensors-25-05317-t003" ref-type="table">Table 3</xref> (where the smoothness score was calculated with Equation (2)). Here, the run times remain stable throughout the progression of the simulation, with the mean execution times reported as 1.4941 s and 2.3272 s, respectively. The execution time before the disturbance only includes the path planning time for the first AMR, and this has a standard deviation of only 0.1249 s. After the disturbance, the execution time increases as this includes the path planning of both AMRs. Here, the standard deviation of 0.5480 s is expected as the IEP has to be applied to the robots avoiding collisions at different locations. Finally, the path planning metrics also show stable behaviour, where there is a larger variance in the metrics for the first AMR as it has to give the second AMR priority under different circumstances.</p><list list-type="simple"><list-item><p>
<italic toggle="yes">Scenario 2: Excess supply at workstation</italic>
</p></list-item></list><p>For the second simulation scenario, the short-term disturbance of excess material at a workstation is simulated to investigate how the dynamic path planning system would react to non-conventional transport orders. The first AMR receives a transport order at the start of the simulation to transport a batch of four rear forks for the Flex Blue scooter model to the commissioner workstation. Similarly to the previous experiment, the disturbance time is sampled from a uniform random distribution with a range between 1 and 60 s. However, the worker at workstation 3 realises that, by mistake, two batches of hexagonal nuts had previously been delivered. The task is assigned to the second AMR as the first AMR is still completing its transport order, and the two AMRs collaboratively have to replan their paths. Similarly to the previous scenario, the execution time before the disturbance (1.3013 &#177; 0.2027 s) is much shorter than the execution time after the disturbance (2.1651 &#177; 0.4612 s), as initially, only the first AMR plans its path, and after the disturbance, collaborative planning occurs. Moreover, as the planned paths for this scenario are on average shorter than for the previous scenario, as shown in <xref rid="sensors-25-05317-t004" ref-type="table">Table 4</xref>, the mean execution are also less. However, this scenario also yielded very stable execution times before and after the addition of the disturbance, with the larger standard deviation being attributed to the difference in length of the first AMRs planned path due to the completion of its transport order.</p><list list-type="simple"><list-item><p>
<italic toggle="yes">Scenario 3: Addition of a static obstacle</italic>
</p></list-item></list><p>The third scenario investigated how the proposed dynamic AMR routing system would react to a static obstacle added to the environment during run-time. Both AMRs receive their transport orders simultaneously and collaboratively plan their paths. However, during the traversal of the collaboratively planned paths, one of the AMRs detected an obstacle that was not present during the initial path planning. Both AMRs are then required to replan their paths such that the AMR that is obstructed by the obstacle can reach its target. For this experiment, the location of the static obstacle was the control variable, and the location of the static obstacle was randomly generated during each simulation run such that a collision is guaranteed to occur.</p><p>For this scenario, a good representation of algorithm stability is if the actual simulation result is very similar to the planned paths before the disturbance occurred. Comparing the results in <xref rid="sensors-25-05317-t005" ref-type="table">Table 5</xref>, the result due to the disturbance and the planned paths before the disturbance are very similar. Here, some statistical outliers are present in the distance travelled and the smoothness score, where certain collisions with the static obstacle occurred in such a way that it resulted in a possible conflict between the AMRs. Therefore, the AMRs had to plan paths that were longer to collaboratively avoid conflicts with each other and as a result, the smoothness score of the AMRs were also increased.</p><list list-type="simple"><list-item><p>
<italic toggle="yes">Scenario 4: Failure of transport system</italic>
</p></list-item></list><p>For this scenario, the static obstacle introduced to the environment was one of the AMRs that has broken down during run-time. To further explain this scenario, at the start of the simulation, both AMRs were assigned transport orders, and after a certain amount of time, the first AMR breaks down, resulting in an unexpected obstacle on the production floor. The time the first AMR breaks down is sampled from a uniform random distribution and can be between 10 and 60 s. Furthermore, the transport orders for the first AMR were to deliver five metal footboards to workstation 2, and the second AMR was required to deliver a batch of ten counter screws to workstation 3.</p><p>As with the previous scenario, the dynamic path planning system displays robust behaviour to the second type of static obstacle. The run-times align with what was observed previously, with an acceptable mean and standard deviation for the reactive behaviour of the second AMR (execution time before the disturbance was 2.1184 &#177; 0.0956 s, and 0.8291 &#177; 0.2351 s after the disturbance). Furthermore, the path metrics displayed in <xref rid="sensors-25-05317-t006" ref-type="table">Table 6</xref> also display favourable behaviour for the second AMR. The second AMR does not display a significant variation in the distance or smoothness of the paths it plans after detecting the faulty AMR, which concludes that the system works successfully. Moreover, the path metric results for the first AMR can mainly be ignored as the mean and standard deviation of the travel distance occur as a result of the time of breakdown of the AMR.</p><list list-type="simple"><list-item><p>
<italic toggle="yes">Scenario 5: Addition of a dynamic obstacle</italic>
</p></list-item></list><p>As the dynamic path planning system has shown promising results in successfully adjusting its planned paths in light of both a static obstacle and an AMR breaking down, the next scenario investigated how the dynamic path planning system would react to adding a dynamic obstacle to the environment. Here, a dynamic obstacle in the form of a human worker was added to the environment. The human worker starts in the middle of the warehouse area and carries a workpiece directly to the conveyor&#8217;s hand-off point opposite the Commissioner Workstation. The worker&#8217;s walking path is first planned from the starting point to its ending point using a shortest path approach, and then stochasticity is introduced to model an accurate representation of a person deviating from their initial path. Here, two random points are chosen in the human&#8217;s path, and the worker deviates from the original path between these two points.</p><p>For this experiment, the simulation was also repeated 50 times; however, as the worker follows a different path during each simulation run, it was also necessary to vary the time the human starts walking to ensure a collision would occur. This parameter was sampled from a uniform random distribution with a minimum and maximum time of 0 and 10 s. Before the start of each simulation trial, a number of random time and random path combinations were generated until a combination was found that would result in a collision with an AMR. Furthermore, to increase the complexity of the scenario, the AMRs have to plan around the dynamic obstacle once a possible collision has been detected, where the worker in the simulation is instructed to stand still until the AMR has passed around it.</p><p>From <xref rid="sensors-25-05317-t007" ref-type="table">Table 7</xref>, it can be seen that the dynamic path planning system effectively replans the AMR paths, even for scenarios with multiple collisions, and can robustly react to the addition of a dynamic obstacle to the environment. Furthermore, for this scenario, the AMR path metrics remain relatively stable, with the standard deviation in the path distance and path smoothness being attributed to the AMRs having to replan around the dynamic obstacle.</p><list list-type="simple"><list-item><p>
<italic toggle="yes">Scenario 6: Machine breakdown at workstation</italic>
</p></list-item></list><p>In this scenario, the final validation criteria of reactively adapting previously planned paths to a workstation becoming unavailable during run-time are tested. For this simulation scenario, the first AMR is required to deliver a batch of splash guards to the commissioner workstation. Furthermore, the second AMR is required to deliver a batch of wheels to workstation 2. Additionally, to illustrate that the dynamic path planning system can plan complex paths in this environment, some obstacles in the form of boxes are scattered around the environment, as shown in <xref rid="sensors-25-05317-f010" ref-type="fig">Figure 10</xref>. After the failure at workstation 2 has been detected, the dynamic scheduling system reassigns the transport order to be delivered to Flex workstation 1. Consequently, the AMR updates its planned path during run-time to adjust for this change. Here, the time the worker at workstation 2 signals that the workstation is no longer available was sampled from a uniform random distribution with a range between 1 and 60 s.</p><p>The results for the final scenario are shown in <xref rid="sensors-25-05317-t008" ref-type="table">Table 8</xref>. As with all of the previous scenario results, the dynamic path planning system displayed good reactivity in terms of run times before (1.9909 &#177; 0.0841 s) and after (2.6996 &#177; 0.6962 s) the signal was given that the workstation became unavailable. Additionally, the added complexity in the environment in the form of scattered boxes do not cause the dynamic path planning system&#8217;s planned paths to deteriorate, further showing favourable performance. Furthermore, the smoothness score for the first mobile robot is nearly twice that of the second AMR. However, this is expected as the free-moving space for the first AMR is obstructed by boxes, and it needs to traverse around these obstacles when it moves to the new workstation.</p><list list-type="simple"><list-item><p>
<italic toggle="yes">Summary</italic>
</p></list-item></list><p>The experimental evaluation across six representative disturbance scenarios confirmed that the proposed dynamic path planning system consistently enabled the autonomous mobile robots (AMRs) to generate collision-free and efficient paths under a variety of operational conditions. In all scenarios, the pre-disturbance planning times ranged from 1.3 s to 2.1 s, while post-disturbance times remained below 2.7 s, confirming that the system operates within practical real-time limits. The system consistently adjusted to machine breakdowns, obstacle introduction (static and dynamic), re-prioritised tasks, and human interaction without loss of stability. Across scenarios, travel distances remained between 65 and 100 m, smoothness scores between 24 and 45 rad, and path overlaps below 25 m, ensuring safe, efficient, and non-congested routing. No irregularities, skipped processes, or erratic behaviours were observed during animation and trace validation, confirming the reliability of the approach. Collectively, these results demonstrate that the developed dynamic path planning system maintains robust performance with respect to execution time, path efficiency, and system resilience under a broad spectrum of disturbances. The findings substantiate the practical feasibility of deploying this technology in Industry 4.0-oriented flexible manufacturing systems, where adaptability to uncertainty and responsiveness to disruptions are critical determinants of operational performance.</p></sec></sec><sec sec-type="conclusions" id="sec5-sensors-25-05317"><title>5. Conclusions</title><p>Developing dynamic path planning systems will assist organisations in fully unlocking the capabilities of AMRs in the flexible environments of Industry 4.0 production facilities. Moreover, by presenting a decentralised and fully autonomous design, this work enables Logistics 4.0 by making the AMRs intelligent objects guided by their software agents in the digital model of the environment. Consequently, the intelligent control of AMRs allows for a more widespread and versatile use of the technology, reducing labour costs associated with intralogistics and ensuring that intralogistics activities can be completed with higher consistency.</p><p>The main contribution of this study is a hybrid GA formulation that is deployed in a multi-agent approach for dynamic path planning of AMRs in dynamic production environments. This allows AMRs to reactively adapt to the disturbances in a flexible manufacturing environment and can generalise to different factory layouts. This research builds on, extends, and integrates various previous research studies related to the multi-AMR path planning problem. The dynamic path planning system presented in this paper advances the state of the art by combining a novel hybrid Genetic Algorithm with a decentralised Multi-Agent System based on the Iterative Exclusion Principle. In contrast to conventional hybrid methods that often initialise GA populations randomly or with simplistic heuristics, our approach integrates Dijkstra-informed initialisation and repair, producing feasible, high-quality starting paths that accelerate convergence. Unlike most GA-based multi-robot methods, our fitness function explicitly considers path overlap as a safety metric, rather than focusing solely on path length or clearance, which improves collision avoidance and reduces conflict-resolution overhead. Additionally, the introduction of domain-specific mutation operators distinguishes this work from prior GA approaches that suffer from infeasible solutions due to generic operators. Compared with decentralised MAS approaches such as those of [<xref rid="B14-sensors-25-05317" ref-type="bibr">14</xref>], which rely on simple graph search for path planning, our method integrates advanced GA-based path planning with the IEP mechanism, resulting in superior deadlock and collision avoidance without the computational burden of centralised schemes like Conflict-Based Search (CBS) [<xref rid="B16-sensors-25-05317" ref-type="bibr">16</xref>,<xref rid="B25-sensors-25-05317" ref-type="bibr">25</xref>]. Furthermore, unlike reinforcement learning methods that require time-consuming retraining and struggle with layout changes, the proposed GA-based system generalises immediately to new environments and disturbances without additional training. The combined approach was validated in a realistic flexible manufacturing setting, where it consistently planned conflict-free paths for up to nine AMRs, handling static and dynamic obstacles and responding effectively to disruptions. These findings demonstrate that the proposed framework provides a scalable, adaptive, and practically deployable solution in dynamic, confined industrial environments with small-to-medium-sized mobile robot fleets. More research is required to further improve for application in substantially larger or more congested systems.</p><p>This work was only confined to the implementation in a simulated environment, and as a result, the system could not be evaluated at the hardware level in a physical environment. Since the work did not explore decentralisation at the hardware level, the communication protocol over the shared network was not selected. More research is required in this aspect, where the appropriate network protocol and agent communication language and ontology must be integrated into the FMS environment. Future research could also focus on practically testing the AMRs in the physical environment, mounted with manipulator arms to test the effect of variable loading and unloading times for the dynamic path planning of AMRs. Another limitation is that this work only focused on comparing GA and D&#307;kstra&#8217;s algorithms. Future research could explore other hybrid approaches such as Ant Colony Optimisation, Particle Swarm Optimisation, simulated annealing, tabu search, as well as reinforcement learning.</p></sec></body><back><fn-group><fn><p><bold>Disclaimer/Publisher&#8217;s Note:</bold> The statements, opinions and data contained in all publications are solely those of the individual author(s) and contributor(s) and not of MDPI and/or the editor(s). MDPI and/or the editor(s) disclaim responsibility for any injury to people or property resulting from any ideas, methods, instructions or products referred to in the content.</p></fn></fn-group><notes><title>Author Contributions</title><p>Conceptualization, L.L., B.F. and G.B.; methodology, B.F.; software, B.F.; validation, B.F.; formal analysis, B.F.; investigation, B.F.; resources, L.L. and G.B.; data curation, B.F.; writing&#8212;original draft preparation, B.F.; writing&#8212;review and editing, L.L. and G.B.; visualization, B.F.; supervision, L.L. and G.B.; project administration, B.F.; funding acquisition, Not applicable. All authors have read and agreed to the published version of the manuscript.</p></notes><notes notes-type="COI-statement"><title>Conflicts of Interest</title><p>The authors declare no conflict of interest.</p></notes><glossary><title>Abbreviations</title><p>The following abbreviations are used in this manuscript:
<array orientation="portrait"><tbody><tr><td align="left" valign="middle" rowspan="1" colspan="1">ACO</td><td align="left" valign="middle" rowspan="1" colspan="1">Ant Colony Optimisation</td></tr><tr><td align="left" valign="middle" rowspan="1" colspan="1">AMR</td><td align="left" valign="middle" rowspan="1" colspan="1">Autonomous Mobile Robot</td></tr><tr><td align="left" valign="middle" rowspan="1" colspan="1">CBD</td><td align="left" valign="middle" rowspan="1" colspan="1">Cell-Based Decomposition</td></tr><tr><td align="left" valign="middle" rowspan="1" colspan="1">CNN</td><td align="left" valign="middle" rowspan="1" colspan="1">Convolutional Neural Network</td></tr><tr><td align="left" valign="middle" rowspan="1" colspan="1">DDQN</td><td align="left" valign="middle" rowspan="1" colspan="1">Double Deep Q-Network</td></tr><tr><td align="left" valign="middle" rowspan="1" colspan="1">FMS</td><td align="left" valign="middle" rowspan="1" colspan="1">Flexible Manufacturing System</td></tr><tr><td align="left" valign="middle" rowspan="1" colspan="1">FNN</td><td align="left" valign="middle" rowspan="1" colspan="1">Feedforward Neural Network</td></tr><tr><td align="left" valign="middle" rowspan="1" colspan="1">GA</td><td align="left" valign="middle" rowspan="1" colspan="1">Genetic Algorithm</td></tr><tr><td align="left" valign="middle" rowspan="1" colspan="1">GRU</td><td align="left" valign="middle" rowspan="1" colspan="1">Gated Recurrent Units</td></tr><tr><td align="left" valign="middle" rowspan="1" colspan="1">IEP</td><td align="left" valign="middle" rowspan="1" colspan="1">Iterative Exclusion Principle</td></tr><tr><td align="left" valign="middle" rowspan="1" colspan="1">ISO</td><td align="left" valign="middle" rowspan="1" colspan="1">International Organisation for Standardisation</td></tr><tr><td align="left" valign="middle" rowspan="1" colspan="1">MAS</td><td align="left" valign="middle" rowspan="1" colspan="1">Multi-Agent System</td></tr><tr><td align="left" valign="middle" rowspan="1" colspan="1">MPCA</td><td align="left" valign="middle" rowspan="1" colspan="1">Multi-Party Collision Avoidance</td></tr><tr><td align="left" valign="middle" rowspan="1" colspan="1">RL</td><td align="left" valign="middle" rowspan="1" colspan="1">Reinforcement Learning</td></tr><tr><td align="left" valign="middle" rowspan="1" colspan="1">PCA</td><td align="left" valign="middle" rowspan="1" colspan="1">Predictive Collision Avoidance</td></tr><tr><td align="left" valign="middle" rowspan="1" colspan="1">PP</td><td align="left" valign="middle" rowspan="1" colspan="1">Priority-based Planning</td></tr><tr><td align="left" valign="middle" rowspan="1" colspan="1">PSO</td><td align="left" valign="middle" rowspan="1" colspan="1">Particle Swarm Optimisation</td></tr></tbody></array></p></glossary><ref-list><title>References</title><ref id="B1-sensors-25-05317"><label>1.</label><element-citation publication-type="journal"><person-group person-group-type="author"><name name-style="western"><surname>Demir</surname><given-names>N.</given-names></name><name name-style="western"><surname>Demircioglu</surname><given-names>P.</given-names></name><name name-style="western"><surname>Bogrekci</surname><given-names>I.</given-names></name></person-group><article-title>Advancing Industry 4.0 With ROS: A Case Study On Autonomous Mobile Robot Technological Advancements</article-title><source>Int. J. 3D Print. Technol. Dig. Ind.</source><year>2024</year><volume>8</volume><fpage>130</fpage><lpage>142</lpage><pub-id pub-id-type="doi">10.46519/ij3dptdi.1366132</pub-id></element-citation></ref><ref id="B2-sensors-25-05317"><label>2.</label><element-citation publication-type="journal"><person-group person-group-type="author"><name name-style="western"><surname>Lackner</surname><given-names>T.</given-names></name><name name-style="western"><surname>Hermann</surname><given-names>J.</given-names></name><name name-style="western"><surname>Kuhn</surname><given-names>C.</given-names></name><name name-style="western"><surname>Palm</surname><given-names>D.</given-names></name></person-group><article-title>Review of Autonomous Mobile Robots in Intralogistics: State-of-the-Art, Limitations and Research Gaps</article-title><source>Procedia CIRP</source><year>2024</year><volume>130</volume><fpage>930</fpage><lpage>935</lpage><pub-id pub-id-type="doi">10.1016/j.procir.2024.10.187</pub-id></element-citation></ref><ref id="B3-sensors-25-05317"><label>3.</label><element-citation publication-type="journal"><person-group person-group-type="author"><name name-style="western"><surname>Zhang</surname><given-names>L.</given-names></name><name name-style="western"><surname>Cai</surname><given-names>Z.</given-names></name><name name-style="western"><surname>Yan</surname><given-names>Y.</given-names></name><name name-style="western"><surname>Yang</surname><given-names>C.</given-names></name><name name-style="western"><surname>Hu</surname><given-names>Y.</given-names></name></person-group><article-title>Multi-Agent Policy Learning-Based Path Planning for Autonomous Mobile Robots</article-title><source>Eng. Appl. Artif. Intell.</source><year>2024</year><volume>129</volume><fpage>107631</fpage><pub-id pub-id-type="doi">10.1016/j.engappai.2023.107631</pub-id></element-citation></ref><ref id="B4-sensors-25-05317"><label>4.</label><element-citation publication-type="journal"><person-group person-group-type="author"><name name-style="western"><surname>AbuJabal</surname><given-names>N.</given-names></name><name name-style="western"><surname>Baziyad</surname><given-names>M.</given-names></name><name name-style="western"><surname>Fareh</surname><given-names>R.</given-names></name><name name-style="western"><surname>Brahmi</surname><given-names>B.</given-names></name><name name-style="western"><surname>Rabie</surname><given-names>T.</given-names></name><name name-style="western"><surname>Bettayeb</surname><given-names>M.</given-names></name></person-group><article-title>A Comprehensive Study of Recent Path-Planning Techniques in Dynamic Environments for Autonomous Robots</article-title><source>Sensors</source><year>2024</year><volume>24</volume><elocation-id>8089</elocation-id><pub-id pub-id-type="doi">10.3390/s24248089</pub-id><pub-id pub-id-type="pmid">39771824</pub-id><pub-id pub-id-type="pmcid">PMC11679792</pub-id></element-citation></ref><ref id="B5-sensors-25-05317"><label>5.</label><element-citation publication-type="journal"><person-group person-group-type="author"><name name-style="western"><surname>Tang</surname><given-names>Y.</given-names></name><name name-style="western"><surname>Zakaria</surname><given-names>M.A.</given-names></name><name name-style="western"><surname>Younas</surname><given-names>M.</given-names></name></person-group><article-title>Path Planning Trends for Autonomous Mobile Robot Navigation: A Review</article-title><source>Sensors</source><year>2025</year><volume>25</volume><elocation-id>1206</elocation-id><pub-id pub-id-type="doi">10.3390/s25041206</pub-id><pub-id pub-id-type="pmid">40006435</pub-id><pub-id pub-id-type="pmcid">PMC11861809</pub-id></element-citation></ref><ref id="B6-sensors-25-05317"><label>6.</label><element-citation publication-type="journal"><person-group person-group-type="author"><name name-style="western"><surname>Liu</surname><given-names>L.</given-names></name><name name-style="western"><surname>Wang</surname><given-names>X.</given-names></name><name name-style="western"><surname>Yang</surname><given-names>X.</given-names></name><name name-style="western"><surname>Liu</surname><given-names>H.</given-names></name><name name-style="western"><surname>Li</surname><given-names>J.</given-names></name><name name-style="western"><surname>Wang</surname><given-names>P.</given-names></name></person-group><article-title>Path Planning Techniques for Mobile Robots: Review and Prospect</article-title><source>Expert. Syst. Appl.</source><year>2023</year><volume>227</volume><fpage>120254</fpage><pub-id pub-id-type="doi">10.1016/j.eswa.2023.120254</pub-id></element-citation></ref><ref id="B7-sensors-25-05317"><label>7.</label><element-citation publication-type="journal"><person-group person-group-type="author"><name name-style="western"><surname>Matos</surname><given-names>D.M.</given-names></name><name name-style="western"><surname>Costa</surname><given-names>P.</given-names></name><name name-style="western"><surname>Sobreira</surname><given-names>H.</given-names></name><name name-style="western"><surname>Valente</surname><given-names>A.</given-names></name><name name-style="western"><surname>Lima</surname><given-names>J.</given-names></name></person-group><article-title>Efficient Multi-Robot Path Planning in Real Environments: A Centralized Coordination System</article-title><source>Int. J. Intell. Robot. Appl.</source><year>2024</year><volume>9</volume><fpage>217</fpage><lpage>244</lpage><pub-id pub-id-type="doi">10.1007/s41315-024-00378-3</pub-id></element-citation></ref><ref id="B8-sensors-25-05317"><label>8.</label><element-citation publication-type="journal"><person-group person-group-type="author"><name name-style="western"><surname>Reda</surname><given-names>M.</given-names></name><name name-style="western"><surname>Onsy</surname><given-names>A.</given-names></name><name name-style="western"><surname>Ghanbari</surname><given-names>A.</given-names></name><name name-style="western"><surname>Haikal</surname><given-names>A.Y.</given-names></name></person-group><article-title>Path Planning Algorithms in the Autonomous Driving System: A Comprehensive Review</article-title><source>Rob. Auton. Syst.</source><year>2024</year><volume>174</volume><fpage>104630</fpage><pub-id pub-id-type="doi">10.1016/j.robot.2024.104630</pub-id></element-citation></ref><ref id="B9-sensors-25-05317"><label>9.</label><element-citation publication-type="journal"><person-group person-group-type="author"><name name-style="western"><surname>Loganathan</surname><given-names>A.</given-names></name><name name-style="western"><surname>Ahmad</surname><given-names>N.S.</given-names></name></person-group><article-title>A Systematic Review on Recent Advances in Autonomous Mobile Robot Navigation</article-title><source>Eng. Sci. Technol. Int. J.</source><year>2023</year><volume>40</volume><fpage>101343</fpage><pub-id pub-id-type="doi">10.1016/j.jestch.2023.101343</pub-id></element-citation></ref><ref id="B10-sensors-25-05317"><label>10.</label><element-citation publication-type="journal"><person-group person-group-type="author"><name name-style="western"><surname>Heselden</surname><given-names>J.R.</given-names></name><name name-style="western"><surname>Das</surname><given-names>G.P.</given-names></name></person-group><article-title>Heuristics and Rescheduling in Prioritised Multi-Robot Path Planning: A Literature Review</article-title><source>Machines</source><year>2023</year><volume>11</volume><elocation-id>1033</elocation-id><pub-id pub-id-type="doi">10.3390/machines11111033</pub-id></element-citation></ref><ref id="B11-sensors-25-05317"><label>11.</label><element-citation publication-type="journal"><person-group person-group-type="author"><name name-style="western"><surname>Abujabal</surname><given-names>N.</given-names></name><name name-style="western"><surname>Fareh</surname><given-names>R.</given-names></name><name name-style="western"><surname>Sinan</surname><given-names>S.</given-names></name><name name-style="western"><surname>Baziyad</surname><given-names>M.</given-names></name><name name-style="western"><surname>Bettayeb</surname><given-names>M.</given-names></name></person-group><article-title>A Comprehensive Review of the Latest Path Planning Developments for Multi-Robot Formation Systems</article-title><source>Robotica</source><year>2023</year><volume>41</volume><fpage>2079</fpage><lpage>2104</lpage><pub-id pub-id-type="doi">10.1017/S0263574723000322</pub-id></element-citation></ref><ref id="B12-sensors-25-05317"><label>12.</label><element-citation publication-type="journal"><person-group person-group-type="author"><name name-style="western"><surname>Marek</surname><given-names>D.</given-names></name><name name-style="western"><surname>Paszkuta</surname><given-names>M.</given-names></name><name name-style="western"><surname>Szygu&#322;a</surname><given-names>J.</given-names></name><name name-style="western"><surname>Biernacki</surname><given-names>P.</given-names></name><name name-style="western"><surname>Doma&#324;ski</surname><given-names>A.</given-names></name><name name-style="western"><surname>Szczygie&#322;</surname><given-names>M.</given-names></name><name name-style="western"><surname>Kr&#243;l</surname><given-names>M.</given-names></name><name name-style="western"><surname>Wojciechowski</surname><given-names>K.</given-names></name></person-group><article-title>Swarm of Drones in a Simulation Environment&#8212;Efficiency and Adaptation</article-title><source>Appl. Sci.</source><year>2024</year><volume>14</volume><elocation-id>3703</elocation-id><pub-id pub-id-type="doi">10.3390/app14093703</pub-id></element-citation></ref><ref id="B13-sensors-25-05317"><label>13.</label><element-citation publication-type="journal"><person-group person-group-type="author"><name name-style="western"><surname>Kvitko</surname><given-names>D.</given-names></name><name name-style="western"><surname>Rybin</surname><given-names>V.</given-names></name><name name-style="western"><surname>Bayazitov</surname><given-names>O.</given-names></name><name name-style="western"><surname>Karimov</surname><given-names>A.</given-names></name><name name-style="western"><surname>Karimov</surname><given-names>T.</given-names></name><name name-style="western"><surname>Butusov</surname><given-names>D.</given-names></name></person-group><article-title>Chaotic Path-Planning Algorithm Based on Courbage&#8211;Nekorkin Artificial Neuron Model</article-title><source>Mathematics</source><year>2024</year><volume>12</volume><elocation-id>892</elocation-id><pub-id pub-id-type="doi">10.3390/math12060892</pub-id></element-citation></ref><ref id="B14-sensors-25-05317"><label>14.</label><element-citation publication-type="journal"><person-group person-group-type="author"><name name-style="western"><surname>Rothfu&#223;</surname><given-names>S.</given-names></name><name name-style="western"><surname>Prezdnyakov</surname><given-names>R.</given-names></name><name name-style="western"><surname>Flad</surname><given-names>M.</given-names></name><name name-style="western"><surname>Hohmann</surname><given-names>S.</given-names></name></person-group><article-title>Decentralized Path Planning for Cooperating Autonomous Mobile Units</article-title><source>Forsch. Im Ingenieurwesen/Eng. Res.</source><year>2019</year><volume>83</volume><fpage>137</fpage><lpage>147</lpage><pub-id pub-id-type="doi">10.1007/s10010-019-00339-4</pub-id></element-citation></ref><ref id="B15-sensors-25-05317"><label>15.</label><element-citation publication-type="confproc"><person-group person-group-type="author"><name name-style="western"><surname>Wang</surname><given-names>C.</given-names></name><name name-style="western"><surname>Mao</surname><given-names>J.</given-names></name></person-group><article-title>Summary of AGV Path Planning</article-title><source>Proceedings of the 2019 IEEE 3rd International Conference on Electronic Information Technology and Computer Engineering</source><conf-loc>Xiamen, China</conf-loc><conf-date>18&#8211;20 October 2019</conf-date><fpage>332</fpage><lpage>335</lpage></element-citation></ref><ref id="B16-sensors-25-05317"><label>16.</label><element-citation publication-type="journal"><person-group person-group-type="author"><name name-style="western"><surname>De Ryck</surname><given-names>M.</given-names></name><name name-style="western"><surname>Versteyhe</surname><given-names>M.</given-names></name><name name-style="western"><surname>Debrouwere</surname><given-names>F.</given-names></name></person-group><article-title>Automated Guided Vehicle Systems, State-of-the-Art Control Algorithms and Techniques</article-title><source>J. Manuf. Syst.</source><year>2020</year><volume>54</volume><fpage>152</fpage><lpage>173</lpage><pub-id pub-id-type="doi">10.1016/j.jmsy.2019.12.002</pub-id></element-citation></ref><ref id="B17-sensors-25-05317"><label>17.</label><element-citation publication-type="journal"><person-group person-group-type="author"><name name-style="western"><surname>Fragapane</surname><given-names>G.</given-names></name><name name-style="western"><surname>de Koster</surname><given-names>R.</given-names></name><name name-style="western"><surname>Sgarbossa</surname><given-names>F.</given-names></name><name name-style="western"><surname>Strandhagen</surname><given-names>J.O.</given-names></name></person-group><article-title>Planning and Control of Autonomous Mobile Robots for Intralogistics: Literature Review and Research Agenda</article-title><source>Eur. J. Oper. Res.</source><year>2021</year><volume>294</volume><fpage>405</fpage><lpage>426</lpage><pub-id pub-id-type="doi">10.1016/j.ejor.2021.01.019</pub-id></element-citation></ref><ref id="B18-sensors-25-05317"><label>18.</label><element-citation publication-type="confproc"><person-group person-group-type="author"><name name-style="western"><surname>Dong</surname><given-names>H.</given-names></name><name name-style="western"><surname>Li</surname><given-names>W.</given-names></name><name name-style="western"><surname>Zhu</surname><given-names>J.</given-names></name><name name-style="western"><surname>Duan</surname><given-names>S.</given-names></name></person-group><article-title>The Path Planning for Mobile Robot Based on Voronoi Diagram</article-title><source>Proceedings of the 3rd International Conference on Intelligent Networks and Intelligent Systems</source><conf-loc>Shenyang, China</conf-loc><conf-date>1&#8211;3 November 2010</conf-date><fpage>446</fpage><lpage>449</lpage><pub-id pub-id-type="doi">10.1109/ICINIS.2010.105</pub-id></element-citation></ref><ref id="B19-sensors-25-05317"><label>19.</label><element-citation publication-type="journal"><person-group person-group-type="author"><name name-style="western"><surname>Nazarahari</surname><given-names>M.</given-names></name><name name-style="western"><surname>Khanmirza</surname><given-names>E.</given-names></name><name name-style="western"><surname>Doostie</surname><given-names>S.</given-names></name></person-group><article-title>Multi-Objective Multi-Robot Path Planning in Continuous Environment Using an Enhanced Genetic Algorithm</article-title><source>Expert. Syst. Appl.</source><year>2019</year><volume>115</volume><fpage>106</fpage><lpage>120</lpage><pub-id pub-id-type="doi">10.1016/j.eswa.2018.08.008</pub-id></element-citation></ref><ref id="B20-sensors-25-05317"><label>20.</label><element-citation publication-type="journal"><person-group person-group-type="author"><name name-style="western"><surname>Patle</surname><given-names>B.K.</given-names></name><name name-style="western"><surname>Babu L</surname><given-names>G.</given-names></name><name name-style="western"><surname>Pandey</surname><given-names>A.</given-names></name><name name-style="western"><surname>Parhi</surname><given-names>D.R.K.</given-names></name><name name-style="western"><surname>Jagadeesh</surname><given-names>A.</given-names></name></person-group><article-title>A Review: On Path Planning Strategies for Navigation of Mobile Robot</article-title><source>Def. Technol.</source><year>2019</year><volume>15</volume><fpage>582</fpage><lpage>606</lpage><pub-id pub-id-type="doi">10.1016/j.dt.2019.04.011</pub-id></element-citation></ref><ref id="B21-sensors-25-05317"><label>21.</label><element-citation publication-type="journal"><person-group person-group-type="author"><name name-style="western"><surname>Lamini</surname><given-names>C.</given-names></name><name name-style="western"><surname>Benhlima</surname><given-names>S.</given-names></name><name name-style="western"><surname>Elbekri</surname><given-names>A.</given-names></name></person-group><article-title>Genetic Algorithm Based Approach for Autonomous Mobile Robot Path Planning</article-title><source>Procedia Comput. Sci.</source><year>2018</year><volume>127</volume><fpage>180</fpage><lpage>189</lpage><pub-id pub-id-type="doi">10.1016/j.procs.2018.01.113</pub-id></element-citation></ref><ref id="B22-sensors-25-05317"><label>22.</label><element-citation publication-type="confproc"><person-group person-group-type="author"><name name-style="western"><surname>Qiu</surname><given-names>L.</given-names></name><name name-style="western"><surname>Wang</surname><given-names>J.</given-names></name><name name-style="western"><surname>Chen</surname><given-names>W.</given-names></name><name name-style="western"><surname>Wang</surname><given-names>H.</given-names></name></person-group><article-title>Heterogeneous AGV Routing Problem Considering Energy Consumption</article-title><source>Proceedings of the 2015 IEEE International Conference on Robotics and Biomimetics</source><conf-loc>Zhuhai, China</conf-loc><conf-date>6&#8211;9 December 2015</conf-date><fpage>1894</fpage><lpage>1899</lpage></element-citation></ref><ref id="B23-sensors-25-05317"><label>23.</label><element-citation publication-type="journal"><person-group person-group-type="author"><name name-style="western"><surname>Roberge</surname><given-names>V.</given-names></name><name name-style="western"><surname>Tarbouchi</surname><given-names>M.</given-names></name><name name-style="western"><surname>Labonte</surname><given-names>G.</given-names></name></person-group><article-title>Comparison of Parallel Genetic Algorithm and Particle Swarm Optimization for Real-Time UAV Path Planning</article-title><source>IEEE Trans. Industr Inform.</source><year>2013</year><volume>9</volume><fpage>132</fpage><lpage>141</lpage><pub-id pub-id-type="doi">10.1109/TII.2012.2198665</pub-id></element-citation></ref><ref id="B24-sensors-25-05317"><label>24.</label><element-citation publication-type="book"><person-group person-group-type="author"><name name-style="western"><surname>Liu</surname><given-names>Y.</given-names></name><name name-style="western"><surname>Du</surname><given-names>Y.</given-names></name><name name-style="western"><surname>Dou</surname><given-names>S.</given-names></name><name name-style="western"><surname>Peng</surname><given-names>L.</given-names></name><name name-style="western"><surname>Su</surname><given-names>X.</given-names></name></person-group><article-title>Research Summary of Intelligent Optimization Algorithm for Warehouse AGV Path Planning</article-title><source>LISS 2021: Proceedings of the 11th International Conference on Logistics, Informatics and Service Sciences</source><publisher-name>Springer Nature</publisher-name><publisher-loc>Singapore</publisher-loc><year>2022</year><fpage>96</fpage><lpage>110</lpage><pub-id pub-id-type="doi">10.1007/978-981-16-8656-6_9</pub-id></element-citation></ref><ref id="B25-sensors-25-05317"><label>25.</label><element-citation publication-type="book"><person-group person-group-type="author"><name name-style="western"><surname>Stern</surname><given-names>R.</given-names></name></person-group><source>Multi-Agent Path Finding&#8212;An Overview</source><publisher-name>Springer</publisher-name><publisher-loc>Cham, Switzerland</publisher-loc><year>2019</year><volume>Volume 11866</volume><isbn>978-3-030-33274-7</isbn></element-citation></ref><ref id="B26-sensors-25-05317"><label>26.</label><element-citation publication-type="confproc"><person-group person-group-type="author"><name name-style="western"><surname>Van Den Berg</surname><given-names>J.P.</given-names></name><name name-style="western"><surname>Overmars</surname><given-names>M.H.</given-names></name></person-group><article-title>Prioritized Motion Planning for Multiple Robots</article-title><source>Proceedings of the 2005 IEEE/RSJ International Conference on Intelligent Robots and Systems</source><conf-loc>Edmonton, AB, Canada</conf-loc><conf-date>2&#8211;6 August 2005</conf-date><fpage>430</fpage><lpage>435</lpage><pub-id pub-id-type="doi">10.1109/IROS.2005.1545306</pub-id></element-citation></ref><ref id="B27-sensors-25-05317"><label>27.</label><element-citation publication-type="confproc"><person-group person-group-type="author"><name name-style="western"><surname>Samek</surname><given-names>J.</given-names></name><name name-style="western"><surname>&#352;i&#353;l&#225;k</surname><given-names>D.</given-names></name><name name-style="western"><surname>Volf</surname><given-names>P.</given-names></name><name name-style="western"><surname>P&#464;chou&#269;ek</surname><given-names>M.</given-names></name></person-group><article-title>Multi-Party Collision Avoidance among Unmanned Aerial Vehicles</article-title><source>Proceedings of the IEEE/WIC/ACM International Conference on Intelligent Agent Technology</source><conf-loc>Fremont, CA, USA</conf-loc><conf-date>2&#8211;5 November 2007</conf-date><fpage>403</fpage><lpage>406</lpage><pub-id pub-id-type="doi">10.1109/IAT.2007.58</pub-id></element-citation></ref><ref id="B28-sensors-25-05317"><label>28.</label><element-citation publication-type="journal"><person-group person-group-type="author"><name name-style="western"><surname>Zhang</surname><given-names>H.Y.</given-names></name><name name-style="western"><surname>Lin</surname><given-names>W.M.</given-names></name><name name-style="western"><surname>Chen</surname><given-names>A.X.</given-names></name></person-group><article-title>Path Planning for the Mobile Robot: A Review</article-title><source>Symmetry</source><year>2018</year><volume>10</volume><elocation-id>450</elocation-id><pub-id pub-id-type="doi">10.3390/sym10100450</pub-id></element-citation></ref><ref id="B29-sensors-25-05317"><label>29.</label><element-citation publication-type="confproc"><person-group person-group-type="author"><name name-style="western"><surname>Shojaeipour</surname><given-names>S.</given-names></name><name name-style="western"><surname>Mohamed Haris</surname><given-names>S.</given-names></name><name name-style="western"><surname>Khairir</surname><given-names>M.I.</given-names></name></person-group><article-title>Vision-Based Mobile Robot Navigation Using Image Processing and Cell Decomposition</article-title><source>Proceedings of the First International Visual Informatics Conference</source><conf-loc>Kuala Lumpur, Malaysia</conf-loc><conf-date>11&#8211;13 November 2009</conf-date><volume>Volume 5857</volume><fpage>90</fpage><lpage>96</lpage></element-citation></ref><ref id="B30-sensors-25-05317"><label>30.</label><element-citation publication-type="journal"><person-group person-group-type="author"><name name-style="western"><surname>Sarkar</surname><given-names>R.</given-names></name><name name-style="western"><surname>Barman</surname><given-names>D.</given-names></name><name name-style="western"><surname>Chowdhury</surname><given-names>N.</given-names></name></person-group><article-title>Domain Knowledge Based Genetic Algorithms for Mobile Robot Path Planning Having Single and Multiple Targets</article-title><source>J. King Saud. Univ. Comput. Inf. Sci.</source><year>2022</year><volume>34</volume><fpage>4269</fpage><lpage>4283</lpage><pub-id pub-id-type="doi">10.1016/j.jksuci.2020.10.010</pub-id></element-citation></ref><ref id="B31-sensors-25-05317"><label>31.</label><element-citation publication-type="journal"><person-group person-group-type="author"><name name-style="western"><surname>Lee</surname><given-names>J.</given-names></name><name name-style="western"><surname>Davari</surname><given-names>H.</given-names></name><name name-style="western"><surname>Singh</surname><given-names>J.</given-names></name><name name-style="western"><surname>Pandhare</surname><given-names>V.</given-names></name></person-group><article-title>Industrial Artificial Intelligence for Industry 4.0-Based Manufacturing Systems</article-title><source>Manuf. Lett.</source><year>2018</year><volume>18</volume><fpage>20</fpage><lpage>23</lpage><pub-id pub-id-type="doi">10.1016/j.mfglet.2018.09.002</pub-id></element-citation></ref><ref id="B32-sensors-25-05317"><label>32.</label><element-citation publication-type="book"><person-group person-group-type="author"><name name-style="western"><surname>Talbi</surname><given-names>E.-G.</given-names></name></person-group><source>Metaheuristics: From Desing to Implementation</source><publisher-name>John Wiley &amp; Sons, Inc.</publisher-name><publisher-loc>Hoboken, NJ, USA</publisher-loc><year>2009</year><isbn>978-0-470-27858-1</isbn></element-citation></ref><ref id="B33-sensors-25-05317"><label>33.</label><element-citation publication-type="journal"><person-group person-group-type="author"><name name-style="western"><surname>Katoch</surname><given-names>S.</given-names></name><name name-style="western"><surname>Chauhan</surname><given-names>S.S.</given-names></name><name name-style="western"><surname>Kumar</surname><given-names>V.</given-names></name></person-group><article-title>A Review on Genetic Algorithm: Past, Present, and Future</article-title><source>Multimed. Tools Appl.</source><year>2021</year><volume>80</volume><fpage>8091</fpage><lpage>8126</lpage><pub-id pub-id-type="doi">10.1007/s11042-020-10139-6</pub-id><pub-id pub-id-type="pmid">33162782</pub-id><pub-id pub-id-type="pmcid">PMC7599983</pub-id></element-citation></ref><ref id="B34-sensors-25-05317"><label>34.</label><element-citation publication-type="journal"><person-group person-group-type="author"><name name-style="western"><surname>Lee</surname><given-names>J.</given-names></name><name name-style="western"><surname>Kim</surname><given-names>D.W.</given-names></name></person-group><article-title>An Effective Initialization Method for Genetic Algorithm-Based Robot Path Planning Using a Directed Acyclic Graph</article-title><source>Inf. Sci.</source><year>2016</year><volume>332</volume><fpage>1</fpage><lpage>18</lpage><pub-id pub-id-type="doi">10.1016/j.ins.2015.11.004</pub-id></element-citation></ref><ref id="B35-sensors-25-05317"><label>35.</label><element-citation publication-type="journal"><person-group person-group-type="author"><name name-style="western"><surname>Li</surname><given-names>G.</given-names></name><name name-style="western"><surname>Chou</surname><given-names>W.</given-names></name></person-group><article-title>Path Planning for Mobile Robot Using Self-Adaptive Learning Particle Swarm Optimization</article-title><source>Sci. China Inf. Sci.</source><year>2018</year><volume>61</volume><fpage>052204</fpage><pub-id pub-id-type="doi">10.1007/s11432-016-9115-2</pub-id></element-citation></ref><ref id="B36-sensors-25-05317"><label>36.</label><element-citation publication-type="confproc"><person-group person-group-type="author"><name name-style="western"><surname>Li</surname><given-names>Y.</given-names></name><name name-style="western"><surname>Huang</surname><given-names>Z.</given-names></name><name name-style="western"><surname>Xie</surname><given-names>Y.</given-names></name></person-group><article-title>Path Planning of Mobile Robot Based on Improved Genetic Algorithm</article-title><source>Proceedings of the 2020 3rd International Conference on Electron Device and Mechanical Engineering</source><conf-loc>Suzhou, China</conf-loc><conf-date>1&#8211;3 May 2020</conf-date><fpage>691</fpage><lpage>695</lpage><pub-id pub-id-type="doi">10.1109/ICEDME50972.2020.00163</pub-id></element-citation></ref><ref id="B37-sensors-25-05317"><label>37.</label><element-citation publication-type="journal"><person-group person-group-type="author"><name name-style="western"><surname>Xue</surname><given-names>Y.</given-names></name></person-group><article-title>Mobile Robot Path Planning with a Non-Dominated Sorting Genetic Algorithm</article-title><source>Appl. Sci.</source><year>2018</year><volume>8</volume><elocation-id>2253</elocation-id><pub-id pub-id-type="doi">10.3390/app8112253</pub-id></element-citation></ref><ref id="B38-sensors-25-05317"><label>38.</label><element-citation publication-type="journal"><person-group person-group-type="author"><name name-style="western"><surname>Tuncer</surname><given-names>A.</given-names></name><name name-style="western"><surname>Yildirim</surname><given-names>M.</given-names></name></person-group><article-title>Dynamic Path Planning of Mobile Robots with Improved Genetic Algorithm</article-title><source>Comput. Electr. Eng.</source><year>2012</year><volume>38</volume><fpage>1564</fpage><lpage>1572</lpage><pub-id pub-id-type="doi">10.1016/j.compeleceng.2012.06.016</pub-id></element-citation></ref><ref id="B39-sensors-25-05317"><label>39.</label><element-citation publication-type="confproc"><person-group person-group-type="author"><name name-style="western"><surname>Wu</surname><given-names>M.</given-names></name><name name-style="western"><surname>Chen</surname><given-names>E.</given-names></name><name name-style="western"><surname>Shi</surname><given-names>Q.</given-names></name><name name-style="western"><surname>Zhou</surname><given-names>L.</given-names></name><name name-style="western"><surname>Chen</surname><given-names>Z.</given-names></name><name name-style="western"><surname>Li</surname><given-names>M.</given-names></name></person-group><article-title>Path Planning of Mobile Robot Based on Improved Genetic Algorithm</article-title><source>Proceedings of the 2017 Chinese Automation Congress</source><conf-loc>Jinan, China</conf-loc><conf-date>20&#8211;22 October 2017</conf-date><fpage>6696</fpage><lpage>6700</lpage><pub-id pub-id-type="doi">10.1109/CAC.2017.8243983</pub-id></element-citation></ref><ref id="B40-sensors-25-05317"><label>40.</label><element-citation publication-type="journal"><person-group person-group-type="author"><name name-style="western"><surname>Dorri</surname><given-names>A.</given-names></name><name name-style="western"><surname>Kanhere</surname><given-names>S.S.</given-names></name><name name-style="western"><surname>Jurdak</surname><given-names>R.</given-names></name></person-group><article-title>Multi-Agent Systems: A Survey</article-title><source>IEEE Access</source><year>2018</year><volume>6</volume><fpage>28573</fpage><lpage>28593</lpage><pub-id pub-id-type="doi">10.1109/ACCESS.2018.2831228</pub-id></element-citation></ref><ref id="B41-sensors-25-05317"><label>41.</label><element-citation publication-type="journal"><person-group person-group-type="author"><name name-style="western"><surname>Sousa</surname><given-names>N.</given-names></name><name name-style="western"><surname>Oliveira</surname><given-names>N.</given-names></name><name name-style="western"><surname>Pra&#231;a</surname><given-names>I.</given-names></name></person-group><article-title>A Multi-Agent System for Autonomous Mobile Robot Coordination</article-title><source>arXiv</source><year>2021</year><pub-id pub-id-type="arxiv">2109.12386</pub-id><pub-id pub-id-type="doi">10.48550/arXiv.2109.12386</pub-id></element-citation></ref><ref id="B42-sensors-25-05317"><label>42.</label><element-citation publication-type="book"><person-group person-group-type="author"><name name-style="western"><surname>Balaji</surname><given-names>P.G.</given-names></name><name name-style="western"><surname>Srinivasan</surname><given-names>D.</given-names></name></person-group><source>An Introduction to Multi-Agent Systems</source><publisher-name>Springer</publisher-name><publisher-loc>Berlin/Heidelberg, Germany</publisher-loc><year>2010</year><volume>Volume 310</volume><isbn>9783642144349</isbn></element-citation></ref><ref id="B43-sensors-25-05317"><label>43.</label><element-citation publication-type="book"><person-group person-group-type="editor"><name name-style="western"><surname>Rocha</surname><given-names>J.</given-names></name></person-group><source>Multi-Agent Systems</source><publisher-name>IntechOpen</publisher-name><publisher-loc>London, UK</publisher-loc><year>2017</year><isbn>978-953-51-3536-4</isbn></element-citation></ref><ref id="B44-sensors-25-05317"><label>44.</label><element-citation publication-type="confproc"><person-group person-group-type="author"><name name-style="western"><surname>Van Hasselt</surname><given-names>H.</given-names></name><name name-style="western"><surname>Guez</surname><given-names>A.</given-names></name><name name-style="western"><surname>Silver</surname><given-names>D.</given-names></name></person-group><article-title>Deep Reinforcement Learning with Double Q-Learning</article-title><source>Proceedings of the AAAI Conference on Artificial Intelligence</source><conf-loc>Phoenix, AZ, USA</conf-loc><conf-date>12&#8211;17 February 2016</conf-date><volume>Volume 30</volume></element-citation></ref><ref id="B45-sensors-25-05317"><label>45.</label><element-citation publication-type="journal"><person-group person-group-type="author"><name name-style="western"><surname>Li</surname><given-names>J.</given-names></name><name name-style="western"><surname>Chen</surname><given-names>Y.</given-names></name><name name-style="western"><surname>Zhao</surname><given-names>X.N.</given-names></name><name name-style="western"><surname>Huang</surname><given-names>J.</given-names></name></person-group><article-title>An Improved DQN Path Planning Algorithm</article-title><source>J. Supercomput.</source><year>2022</year><volume>78</volume><fpage>616</fpage><lpage>639</lpage><pub-id pub-id-type="doi">10.1007/s11227-021-03878-2</pub-id></element-citation></ref><ref id="B46-sensors-25-05317"><label>46.</label><element-citation publication-type="journal"><person-group person-group-type="author"><name name-style="western"><surname>Quan</surname><given-names>H.</given-names></name><name name-style="western"><surname>Li</surname><given-names>Y.</given-names></name><name name-style="western"><surname>Zhang</surname><given-names>Y.</given-names></name></person-group><article-title>A Novel Mobile Robot Navigation Method Based on Deep Reinforcement Learning</article-title><source>Int. J. Adv. Robot. Syst.</source><year>2020</year><volume>17</volume><fpage>1729881420921672</fpage><pub-id pub-id-type="doi">10.1177/1729881420921672</pub-id></element-citation></ref><ref id="B47-sensors-25-05317"><label>47.</label><element-citation publication-type="confproc"><person-group person-group-type="author"><name name-style="western"><surname>Chung</surname><given-names>J.</given-names></name><name name-style="western"><surname>Gulcehre</surname><given-names>C.</given-names></name><name name-style="western"><surname>Cho</surname><given-names>K.</given-names></name><name name-style="western"><surname>Bengio</surname><given-names>Y.</given-names></name></person-group><article-title>Gated Feedback Recurrent Neural Networks</article-title><source>Proceedings of the 32nd International Conference on Machine Learning</source><conf-loc>Lille, France</conf-loc><conf-date>6&#8211;11 July 2015</conf-date><volume>Volume 3</volume><fpage>2067</fpage><lpage>2075</lpage></element-citation></ref><ref id="B48-sensors-25-05317"><label>48.</label><element-citation publication-type="journal"><person-group person-group-type="author"><name name-style="western"><surname>Yuan</surname><given-names>J.</given-names></name><name name-style="western"><surname>Wang</surname><given-names>H.</given-names></name><name name-style="western"><surname>Lin</surname><given-names>C.</given-names></name><name name-style="western"><surname>Liu</surname><given-names>D.</given-names></name><name name-style="western"><surname>Yu</surname><given-names>D.</given-names></name></person-group><article-title>A Novel GRU-RNN Network Model for Dynamic Path Planning of Mobile Robot</article-title><source>IEEE Access</source><year>2019</year><volume>7</volume><fpage>15140</fpage><lpage>15151</lpage><pub-id pub-id-type="doi">10.1109/ACCESS.2019.2894626</pub-id></element-citation></ref><ref id="B49-sensors-25-05317"><label>49.</label><element-citation publication-type="confproc"><person-group person-group-type="author"><name name-style="western"><surname>Schuhmacher</surname><given-names>J.</given-names></name><name name-style="western"><surname>Hummel</surname><given-names>V.</given-names></name></person-group><article-title>Development of an Intelligent Warehouse and Autonomously Controlled Intralogistics Scenario to Investigate the Mastering of Short-Term Turbulences at Werk150</article-title><source>Proceedings of the Conference on Learning Factories (CLF) 2021</source><conf-loc>Graz, Austria</conf-loc><conf-date>9 June 2021</conf-date><pub-id pub-id-type="doi">10.2139/SSRN.3861946</pub-id></element-citation></ref><ref id="B50-sensors-25-05317"><label>50.</label><element-citation publication-type="confproc"><person-group person-group-type="author"><name name-style="western"><surname>Sonnenberg</surname><given-names>M.</given-names></name></person-group><article-title>Comprehensive Configuration- and Rating System for a Cyber&#8212;Physical Production System for a Small Batch Production</article-title><source>Proceedings of the 12th Conference on Learning Factories (CLF 2022)</source><conf-loc>Singapore</conf-loc><conf-date>15 April 2022</conf-date><pub-id pub-id-type="doi">10.2139/SSRN.4084488</pub-id></element-citation></ref></ref-list></back><floats-group><fig position="float" id="sensors-25-05317-f001" orientation="portrait"><label>Figure 1</label><caption><p>A flow diagram representation of the design of the hybrid GA for the mobile robot path planning.</p></caption><graphic xmlns:xlink="http://www.w3.org/1999/xlink" position="float" orientation="portrait" xlink:href="sensors-25-05317-g001.jpg"/></fig><fig position="float" id="sensors-25-05317-f002" orientation="portrait"><label>Figure 2</label><caption><p>MAS model of the software AMR agents depicting the communication mechanism using the blackboard agent and the interaction mechanisms of the agents with the environment.</p></caption><graphic xmlns:xlink="http://www.w3.org/1999/xlink" position="float" orientation="portrait" xlink:href="sensors-25-05317-g002.jpg"/></fig><fig position="float" id="sensors-25-05317-f003" orientation="portrait"><label>Figure 3</label><caption><p>Swimlane diagram summarising the IEP implementation for the MAS agent communication and conflict-resolution mechanism of the dynamic path planning system.</p></caption><graphic xmlns:xlink="http://www.w3.org/1999/xlink" position="float" orientation="portrait" xlink:href="sensors-25-05317-g003.jpg"/></fig><fig position="float" id="sensors-25-05317-f004" orientation="portrait"><label>Figure 4</label><caption><p>Visualisation of the first 30 m &#215; 30 m environment used for evaluation. (<bold>a</bold>) An example of a combination of tasks, and (<bold>b</bold>) another example of a combination of tasks. The blue dots and purple lines denote the planned coordinate trajectory of the AMR, and the yellow dots denote the coordinates of interest for this trial.</p></caption><graphic xmlns:xlink="http://www.w3.org/1999/xlink" position="float" orientation="portrait" xlink:href="sensors-25-05317-g004.jpg"/></fig><fig position="float" id="sensors-25-05317-f005" orientation="portrait"><label>Figure 5</label><caption><p>Visualisation of the 30 m &#215; 30 m environment with 8 AMRs concurrently traversing their paths using the multi-AMR collaborative path planning mechanism. The blue dots and purple lines denote the planned coordinate trajectory of the AMR, and the yellow dots denote the coordinates of interest for this trial.</p></caption><graphic xmlns:xlink="http://www.w3.org/1999/xlink" position="float" orientation="portrait" xlink:href="sensors-25-05317-g005.jpg"/></fig><fig position="float" id="sensors-25-05317-f006" orientation="portrait"><label>Figure 6</label><caption><p>The number of collisions as a function of the number of AMRs to evaluate the dynamic path planning scalability, with the baseline shown in orange and the proposed dynamic path planning system shown in blue (mean values). The orange area indicates the standard deviation around the mean values for the baseline Dijkstra&#8217;s algorithm.</p></caption><graphic xmlns:xlink="http://www.w3.org/1999/xlink" position="float" orientation="portrait" xlink:href="sensors-25-05317-g006.jpg"/></fig><fig position="float" id="sensors-25-05317-f007" orientation="portrait"><label>Figure 7</label><caption><p>The number of deadlocks as a function of the number of AMRs to evaluate the dynamic path planning scalability, with the mean values for the baseline shown in orange and the mean values for the proposed dynamic path planning system shown in blue (on the horizontal axis since the number of deadlocks for GA-based path planning system remained zero with increasing number of AMRs). The orange area indicates the standard deviation around the mean values for the baseline Dijkstra&#8217;s algorithm.</p></caption><graphic xmlns:xlink="http://www.w3.org/1999/xlink" position="float" orientation="portrait" xlink:href="sensors-25-05317-g007.jpg"/></fig><fig position="float" id="sensors-25-05317-f008" orientation="portrait"><label>Figure 8</label><caption><p>Current layout of the learning factory production facility, depicting the workstations, the chosen AMR home for this thesis, and the demonstration areas that are off limits.</p></caption><graphic xmlns:xlink="http://www.w3.org/1999/xlink" position="float" orientation="portrait" xlink:href="sensors-25-05317-g008.jpg"/></fig><fig position="float" id="sensors-25-05317-f009" orientation="portrait"><label>Figure 9</label><caption><p>Visualisation of the 3D simulation environment of the learning factory developed in Matlab. The blue dots and purple lines denote the planned coordinate trajectory of the AMR, and the yellow dots denote the coordinates of interest for this trial.</p></caption><graphic xmlns:xlink="http://www.w3.org/1999/xlink" position="float" orientation="portrait" xlink:href="sensors-25-05317-g009.jpg"/></fig><fig position="float" id="sensors-25-05317-f010" orientation="portrait"><label>Figure 10</label><caption><p>Visualisation of the additional static obstacles in the form of boxes introduced into the learning factory simulation environment for disturbance Scenario 6.</p></caption><graphic xmlns:xlink="http://www.w3.org/1999/xlink" position="float" orientation="portrait" xlink:href="sensors-25-05317-g010.jpg"/></fig><table-wrap position="float" id="sensors-25-05317-t001" orientation="portrait"><object-id pub-id-type="pii">sensors-25-05317-t001_Table 1</object-id><label>Table 1</label><caption><p>Evaluation criteria for the comparative evaluation.</p></caption><table frame="hsides" rules="groups"><thead><tr><th align="left" valign="middle" style="border-top:solid thin;border-bottom:solid thin" rowspan="1" colspan="1">Factor</th><th align="left" valign="middle" style="border-top:solid thin;border-bottom:solid thin" rowspan="1" colspan="1">Weight</th><th align="left" valign="middle" style="border-top:solid thin;border-bottom:solid thin" rowspan="1" colspan="1">Reason for Inclusion</th><th align="left" valign="middle" style="border-top:solid thin;border-bottom:solid thin" rowspan="1" colspan="1">Scoring Scheme</th></tr></thead><tbody><tr><td align="left" valign="middle" style="border-bottom:solid thin" rowspan="1" colspan="1">Weighted Path Length</td><td align="left" valign="middle" style="border-bottom:solid thin" rowspan="1" colspan="1">3</td><td align="left" valign="middle" style="border-bottom:solid thin" rowspan="1" colspan="1">A shorter path length indicates a more efficient path.</td><td align="left" valign="middle" style="border-bottom:solid thin" rowspan="1" colspan="1">The score is the weighted average path length of the two AMRs, with a 60% weighting assigned to the prioritised AMR and a 40% weighting assigned to the other AMR. A single normalised score is then obtained by dividing the weighted average path length for the AMRs by the path length obtained by D&#307;kstra&#8217;s algorithm.</td></tr><tr><td align="left" valign="middle" style="border-bottom:solid thin" rowspan="1" colspan="1">Weighted Path Smoothness</td><td align="left" valign="middle" style="border-bottom:solid thin" rowspan="1" colspan="1">3</td><td align="left" valign="middle" style="border-bottom:solid thin" rowspan="1" colspan="1">The path smoothness determines the energy usage, which should be minimised.</td><td align="left" valign="middle" style="border-bottom:solid thin" rowspan="1" colspan="1">The score is the weighted average path smoothness, with a 60% weighting assigned to the prioritised AMR and a 40% weighting assigned to the other AMR. The final path smoothness score is obtained by dividing the weighted average path smoothness of the AMRs by the path smoothness obtained by D&#307;kstra&#8217;s algorithm.</td></tr><tr><td align="left" valign="middle" style="border-bottom:solid thin" rowspan="1" colspan="1">Total Path Overlap</td><td align="left" valign="middle" style="border-bottom:solid thin" rowspan="1" colspan="1">3</td><td align="left" valign="middle" style="border-bottom:solid thin" rowspan="1" colspan="1">The path overlap score is represented by the total overlap between AMR paths and needs to be minimised to reduce the risk of replanning, which also increases the execution time.</td><td align="left" valign="middle" style="border-bottom:solid thin" rowspan="1" colspan="1">The score is the total path overlap score obtained by dividing the total overlap between the AMR paths by the total path length. The final path overlap score value is obtained by dividing the path overlap score by the total path overlap obtained by D&#307;kstra&#8217;s algorithm.</td></tr><tr><td align="left" valign="middle" style="border-bottom:solid thin" rowspan="1" colspan="1">Execution Time</td><td align="left" valign="middle" style="border-bottom:solid thin" rowspan="1" colspan="1">2</td><td align="left" valign="middle" style="border-bottom:solid thin" rowspan="1" colspan="1">The system should be reactive and allow for fast planning and replanning for all of the cases.</td><td align="left" valign="middle" style="border-bottom:solid thin" rowspan="1" colspan="1">The execution time value is the number of seconds of execution time required for the dynamic path planning system during implementation. </td></tr><tr><td align="left" valign="middle" style="border-bottom:solid thin" rowspan="1" colspan="1">Number of Failures</td><td align="left" valign="middle" style="border-bottom:solid thin" rowspan="1" colspan="1">5</td><td align="left" valign="middle" style="border-bottom:solid thin" rowspan="1" colspan="1">The algorithm fails if it not able to plan any sub-path during the path planning task.</td><td align="left" valign="middle" style="border-bottom:solid thin" rowspan="1" colspan="1">The failure score is obtained by using the frequency count of the total failures during the experiment.</td></tr><tr><td align="left" valign="middle" style="border-bottom:solid thin" rowspan="1" colspan="1">Number of Collisions</td><td align="left" valign="middle" style="border-bottom:solid thin" rowspan="1" colspan="1">4</td><td align="left" valign="middle" style="border-bottom:solid thin" rowspan="1" colspan="1">The system should be robust to various scenarios and the number of collisions should be minimised to avoid failure of the system.</td><td align="left" valign="middle" style="border-bottom:solid thin" rowspan="1" colspan="1">The score is the frequency count of the failures due to collisions during implementation.</td></tr><tr><td align="left" valign="middle" style="border-bottom:solid thin" rowspan="1" colspan="1">Number of Deadlocks</td><td align="left" valign="middle" style="border-bottom:solid thin" rowspan="1" colspan="1">4</td><td align="left" valign="middle" style="border-bottom:solid thin" rowspan="1" colspan="1">A deadlock is a situation where two AMRs cannot continue following their pre-planned paths without causing a collision with each other.</td><td align="left" valign="middle" style="border-bottom:solid thin" rowspan="1" colspan="1">The score is the frequency count of the failures due to deadlocks during implementation.</td></tr></tbody></table></table-wrap><table-wrap position="float" id="sensors-25-05317-t002" orientation="portrait"><object-id pub-id-type="pii">sensors-25-05317-t002_Table 2</object-id><label>Table 2</label><caption><p>Algorithm score comparison.</p></caption><table frame="hsides" rules="groups"><thead><tr><th align="left" valign="middle" style="border-top:solid thin;border-bottom:solid thin" rowspan="1" colspan="1">Criteria</th><th align="center" valign="middle" style="border-top:solid thin;border-bottom:solid thin" rowspan="1" colspan="1">Weight</th><th align="center" valign="middle" style="border-top:solid thin;border-bottom:solid thin" rowspan="1" colspan="1">D&#307;kstra</th><th align="center" valign="middle" style="border-top:solid thin;border-bottom:solid thin" rowspan="1" colspan="1">RL with DDQN GRU&#8211;</th><th align="center" valign="middle" style="border-top:solid thin;border-bottom:solid thin" rowspan="1" colspan="1">Hybrid GA</th></tr><tr><th align="center" valign="middle" style="border-bottom:solid thin" rowspan="1" colspan="1">
</th><th align="center" valign="middle" style="border-bottom:solid thin" rowspan="1" colspan="1">
</th><th align="center" valign="middle" style="border-bottom:solid thin" rowspan="1" colspan="1">
</th><th align="center" valign="middle" style="border-bottom:solid thin" rowspan="1" colspan="1">CNN Architecture</th><th align="center" valign="middle" style="border-bottom:solid thin" rowspan="1" colspan="1">
</th></tr></thead><tbody><tr><td align="left" valign="middle" rowspan="1" colspan="1">Number of Failures</td><td align="center" valign="middle" rowspan="1" colspan="1">5</td><td align="center" valign="middle" rowspan="1" colspan="1">0</td><td align="center" valign="middle" rowspan="1" colspan="1">9</td><td align="center" valign="middle" rowspan="1" colspan="1">0</td></tr><tr><td align="left" valign="middle" rowspan="1" colspan="1">Number of Collisions</td><td align="center" valign="middle" rowspan="1" colspan="1">4</td><td align="center" valign="middle" rowspan="1" colspan="1">9</td><td align="center" valign="middle" rowspan="1" colspan="1">6</td><td align="center" valign="middle" rowspan="1" colspan="1">0</td></tr><tr><td align="left" valign="middle" rowspan="1" colspan="1">Number of Deadlocks</td><td align="center" valign="middle" rowspan="1" colspan="1">4</td><td align="center" valign="middle" rowspan="1" colspan="1">5</td><td align="center" valign="middle" rowspan="1" colspan="1">2</td><td align="center" valign="middle" rowspan="1" colspan="1">0</td></tr><tr><td align="left" valign="middle" rowspan="1" colspan="1">Weighted Path Length</td><td align="center" valign="middle" rowspan="1" colspan="1">3</td><td align="center" valign="middle" rowspan="1" colspan="1">1</td><td align="center" valign="middle" rowspan="1" colspan="1">1.09</td><td align="center" valign="middle" rowspan="1" colspan="1">1.01</td></tr><tr><td align="left" valign="middle" rowspan="1" colspan="1">Weighted Path Smoothness</td><td align="center" valign="middle" rowspan="1" colspan="1">3</td><td align="center" valign="middle" rowspan="1" colspan="1">1</td><td align="center" valign="middle" rowspan="1" colspan="1">2.64</td><td align="center" valign="middle" rowspan="1" colspan="1">0.95</td></tr><tr><td align="left" valign="middle" rowspan="1" colspan="1">Total Path Overlap</td><td align="center" valign="middle" rowspan="1" colspan="1">3</td><td align="center" valign="middle" rowspan="1" colspan="1">1</td><td align="center" valign="middle" rowspan="1" colspan="1">1.80</td><td align="center" valign="middle" rowspan="1" colspan="1">0.44</td></tr><tr><td align="left" valign="middle" style="border-bottom:solid thin" rowspan="1" colspan="1">Execution Time (s)</td><td align="center" valign="middle" style="border-bottom:solid thin" rowspan="1" colspan="1">2</td><td align="center" valign="middle" style="border-bottom:solid thin" rowspan="1" colspan="1">0</td><td align="center" valign="middle" style="border-bottom:solid thin" rowspan="1" colspan="1">1.29</td><td align="center" valign="middle" style="border-bottom:solid thin" rowspan="1" colspan="1">0.78</td></tr><tr><td align="left" valign="middle" style="border-bottom:solid thin" rowspan="1" colspan="1">Total</td><td align="center" valign="middle" style="border-bottom:solid thin" rowspan="1" colspan="1">
</td><td align="center" valign="middle" style="border-bottom:solid thin" rowspan="1" colspan="1">65.00</td><td align="center" valign="middle" style="border-bottom:solid thin" rowspan="1" colspan="1">104.09</td><td align="center" valign="middle" style="border-bottom:solid thin" rowspan="1" colspan="1">8.76</td></tr></tbody></table></table-wrap><table-wrap position="float" id="sensors-25-05317-t003" orientation="portrait"><object-id pub-id-type="pii">sensors-25-05317-t003_Table 3</object-id><label>Table 3</label><caption><p>Evaluation of the path quality results for Scenario 1.</p></caption><table frame="hsides" rules="groups"><thead><tr><th align="center" valign="middle" style="border-top:solid thin;border-bottom:solid thin" rowspan="1" colspan="1">Mobile<break/>Robot</th><th align="center" valign="middle" style="border-top:solid thin;border-bottom:solid thin" rowspan="1" colspan="1">Travel <break/>Distance<break/>(m)</th><th align="center" valign="middle" style="border-top:solid thin;border-bottom:solid thin" rowspan="1" colspan="1">Smoothness<break/>Score (rad)</th><th align="center" valign="middle" style="border-top:solid thin;border-bottom:solid thin" rowspan="1" colspan="1">Overlap Score<break/>(m)</th></tr></thead><tbody><tr><td align="center" valign="middle" rowspan="1" colspan="1">Mobile Robot 1</td><td align="center" valign="middle" rowspan="1" colspan="1">86.5600 &#177; 3.1309</td><td align="center" valign="middle" rowspan="1" colspan="1">29.1226 &#177; 5.0598</td><td align="center" valign="middle" rowspan="1" colspan="1">24.4800 &#177; 4.5146</td></tr><tr><td align="center" valign="middle" style="border-bottom:solid thin" rowspan="1" colspan="1">Mobile Robot 2</td><td align="center" valign="middle" style="border-bottom:solid thin" rowspan="1" colspan="1">69.0400 &#177; 2.5632</td><td align="center" valign="middle" style="border-bottom:solid thin" rowspan="1" colspan="1">26.7664 &#177; 5.4410</td><td align="center" valign="middle" style="border-bottom:solid thin" rowspan="1" colspan="1">24.4800 &#177; 4.5146</td></tr></tbody></table></table-wrap><table-wrap position="float" id="sensors-25-05317-t004" orientation="portrait"><object-id pub-id-type="pii">sensors-25-05317-t004_Table 4</object-id><label>Table 4</label><caption><p>Evaluation of the path quality results for Scenario 2.</p></caption><table frame="hsides" rules="groups"><thead><tr><th align="center" valign="middle" style="border-top:solid thin;border-bottom:solid thin" rowspan="1" colspan="1">Factor</th><th align="center" valign="middle" style="border-top:solid thin;border-bottom:solid thin" rowspan="1" colspan="1">Travel Distance (m)</th><th align="center" valign="middle" style="border-top:solid thin;border-bottom:solid thin" rowspan="1" colspan="1">Smoothness Score (rad)</th><th align="center" valign="middle" style="border-top:solid thin;border-bottom:solid thin" rowspan="1" colspan="1">Overlap Score (m)</th></tr></thead><tbody><tr><td align="center" valign="middle" rowspan="1" colspan="1">Mobile Robot 1</td><td align="center" valign="middle" rowspan="1" colspan="1">68.8600 &#177; 5.0242</td><td align="center" valign="middle" rowspan="1" colspan="1">24.8186 &#177; 4.6316</td><td align="center" valign="middle" rowspan="1" colspan="1">15.4000 &#177; 3.0305</td></tr><tr><td align="center" valign="middle" style="border-bottom:solid thin" rowspan="1" colspan="1">Mobile Robot 2</td><td align="center" valign="middle" style="border-bottom:solid thin" rowspan="1" colspan="1">70.8000 &#177; 2.8284</td><td align="center" valign="middle" style="border-bottom:solid thin" rowspan="1" colspan="1">27.2690 &#177; 5.8106</td><td align="center" valign="middle" style="border-bottom:solid thin" rowspan="1" colspan="1">15.4000 &#177; 3.0305</td></tr></tbody></table></table-wrap><table-wrap position="float" id="sensors-25-05317-t005" orientation="portrait"><object-id pub-id-type="pii">sensors-25-05317-t005_Table 5</object-id><label>Table 5</label><caption><p>Evaluation of the path quality results for Scenario 3.</p></caption><table frame="hsides" rules="groups"><thead><tr><th align="center" valign="middle" style="border-top:solid thin;border-bottom:solid thin" rowspan="1" colspan="1">Factor</th><th align="center" valign="middle" style="border-top:solid thin;border-bottom:solid thin" rowspan="1" colspan="1">Travel Distance (m)</th><th align="center" valign="middle" style="border-top:solid thin;border-bottom:solid thin" rowspan="1" colspan="1">Smoothness Score (rad)</th><th align="center" valign="middle" style="border-top:solid thin;border-bottom:solid thin" rowspan="1" colspan="1">Overlap Score (m)</th></tr></thead><tbody><tr><td align="center" valign="middle" rowspan="1" colspan="1">Mobile Robot 1</td><td align="center" valign="middle" rowspan="1" colspan="1">84.8400 &#177; 2.2889</td><td align="center" valign="middle" rowspan="1" colspan="1">28.2920 &#177; 4.3829</td><td align="center" valign="middle" rowspan="1" colspan="1">17.5000 &#177; 2.6049</td></tr><tr><td align="center" valign="middle" style="border-bottom:solid thin" rowspan="1" colspan="1">Mobile Robot 2</td><td align="center" valign="middle" style="border-bottom:solid thin" rowspan="1" colspan="1">48.5200 &#177; 1.7052</td><td align="center" valign="middle" style="border-bottom:solid thin" rowspan="1" colspan="1">16.6640 &#177; 3.1921</td><td align="center" valign="middle" style="border-bottom:solid thin" rowspan="1" colspan="1">17.5000 &#177; 2.6049</td></tr></tbody></table></table-wrap><table-wrap position="float" id="sensors-25-05317-t006" orientation="portrait"><object-id pub-id-type="pii">sensors-25-05317-t006_Table 6</object-id><label>Table 6</label><caption><p>Evaluation of the path quality results for Scenario 4.</p></caption><table frame="hsides" rules="groups"><thead><tr><th align="center" valign="middle" style="border-top:solid thin;border-bottom:solid thin" rowspan="1" colspan="1">Factor</th><th align="center" valign="middle" style="border-top:solid thin;border-bottom:solid thin" rowspan="1" colspan="1">Travel Distance (m)</th><th align="center" valign="middle" style="border-top:solid thin;border-bottom:solid thin" rowspan="1" colspan="1">Smoothness Score (rad)</th><th align="center" valign="middle" style="border-top:solid thin;border-bottom:solid thin" rowspan="1" colspan="1">Overlap Score (m)</th></tr></thead><tbody><tr><td align="center" valign="middle" rowspan="1" colspan="1">Mobile Robot 1</td><td align="center" valign="middle" rowspan="1" colspan="1">22.2400 &#177; 14.4682</td><td align="center" valign="middle" rowspan="1" colspan="1">6.2489 &#177; 3.2426</td><td align="center" valign="middle" rowspan="1" colspan="1">10.8400 &#177; 3.9865</td></tr><tr><td align="center" valign="middle" style="border-bottom:solid thin" rowspan="1" colspan="1">Mobile Robot 2</td><td align="center" valign="middle" style="border-bottom:solid thin" rowspan="1" colspan="1">65.0800 &#177; 6.9424</td><td align="center" valign="middle" style="border-bottom:solid thin" rowspan="1" colspan="1">27.7032 &#177; 7.5232</td><td align="center" valign="middle" style="border-bottom:solid thin" rowspan="1" colspan="1">10.8400 &#177; 3.9865</td></tr></tbody></table></table-wrap><table-wrap position="float" id="sensors-25-05317-t007" orientation="portrait"><object-id pub-id-type="pii">sensors-25-05317-t007_Table 7</object-id><label>Table 7</label><caption><p>Evaluation of the path quality results for Scenario 5.</p></caption><table frame="hsides" rules="groups"><thead><tr><th align="center" valign="middle" style="border-top:solid thin;border-bottom:solid thin" rowspan="1" colspan="1">Factor</th><th align="center" valign="middle" style="border-top:solid thin;border-bottom:solid thin" rowspan="1" colspan="1">Travel Distance (m)</th><th align="center" valign="middle" style="border-top:solid thin;border-bottom:solid thin" rowspan="1" colspan="1">Smoothness Score (rad)</th><th align="center" valign="middle" style="border-top:solid thin;border-bottom:solid thin" rowspan="1" colspan="1">Overlap Score (m)</th></tr></thead><tbody><tr><td align="center" valign="middle" rowspan="1" colspan="1">Mobile Robot 1</td><td align="center" valign="middle" rowspan="1" colspan="1">75.8000 &#177; 19.3116</td><td align="center" valign="middle" rowspan="1" colspan="1">24.5004 &#177; 10.2933</td><td align="center" valign="middle" rowspan="1" colspan="1">14.5800 &#177; 5.1554</td></tr><tr><td align="center" valign="middle" style="border-bottom:solid thin" rowspan="1" colspan="1">Mobile Robot 2</td><td align="center" valign="middle" style="border-bottom:solid thin" rowspan="1" colspan="1">67.7000 &#177; 19.1857</td><td align="center" valign="middle" style="border-bottom:solid thin" rowspan="1" colspan="1">28.2682 &#177; 9.4582</td><td align="center" valign="middle" style="border-bottom:solid thin" rowspan="1" colspan="1">14.5800 &#177; 5.1554</td></tr></tbody></table></table-wrap><table-wrap position="float" id="sensors-25-05317-t008" orientation="portrait"><object-id pub-id-type="pii">sensors-25-05317-t008_Table 8</object-id><label>Table 8</label><caption><p>Evaluation of the path quality results for Scenario 6.</p></caption><table frame="hsides" rules="groups"><thead><tr><th align="center" valign="middle" style="border-top:solid thin;border-bottom:solid thin" rowspan="1" colspan="1">Factor</th><th align="center" valign="middle" style="border-top:solid thin;border-bottom:solid thin" rowspan="1" colspan="1">Travel Distance (m)</th><th align="center" valign="middle" style="border-top:solid thin;border-bottom:solid thin" rowspan="1" colspan="1">Smoothness Score (rad)</th><th align="center" valign="middle" style="border-top:solid thin;border-bottom:solid thin" rowspan="1" colspan="1">Overlap Score (m)</th></tr></thead><tbody><tr><td align="center" valign="middle" rowspan="1" colspan="1">Mobile Robot 1</td><td align="center" valign="middle" rowspan="1" colspan="1">99.4800 &#177; 13.9023</td><td align="center" valign="middle" rowspan="1" colspan="1">44.7806 &#177; 7.4470</td><td align="center" valign="middle" rowspan="1" colspan="1">18.6200 &#177; 4.1151</td></tr><tr><td align="center" valign="middle" style="border-bottom:solid thin" rowspan="1" colspan="1">Mobile Robot 2</td><td align="center" valign="middle" style="border-bottom:solid thin" rowspan="1" colspan="1">69.8000 &#177; 3.6197</td><td align="center" valign="middle" style="border-bottom:solid thin" rowspan="1" colspan="1">23.5491 &#177; 5.4803</td><td align="center" valign="middle" style="border-bottom:solid thin" rowspan="1" colspan="1">18.6200 &#177; 4.1151</td></tr></tbody></table></table-wrap></floats-group></article></pmc-articleset>