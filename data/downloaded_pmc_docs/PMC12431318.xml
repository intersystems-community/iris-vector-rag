<?xml version="1.0"  ?><!DOCTYPE pmc-articleset PUBLIC "-//NLM//DTD ARTICLE SET 2.0//EN" "https://dtd.nlm.nih.gov/ncbi/pmc/articleset/nlm-articleset-2.0.dtd"><pmc-articleset><article xmlns:mml="http://www.w3.org/1998/Math/MathML" xmlns:ali="http://www.niso.org/schemas/ali/1.0/" xml:lang="en" article-type="research-article" dtd-version="1.4"><processing-meta base-tagset="archiving" mathml-version="3.0" table-model="xhtml" tagset-family="jats"><restricted-by>pmc</restricted-by></processing-meta><front><journal-meta><journal-id journal-id-type="nlm-ta">Sensors (Basel)</journal-id><journal-id journal-id-type="iso-abbrev">Sensors (Basel)</journal-id><journal-id journal-id-type="pmc-domain-id">1660</journal-id><journal-id journal-id-type="pmc-domain">sensors</journal-id><journal-id journal-id-type="publisher-id">sensors</journal-id><journal-title-group><journal-title>Sensors (Basel, Switzerland)</journal-title></journal-title-group><issn pub-type="epub">1424-8220</issn><publisher><publisher-name>Multidisciplinary Digital Publishing Institute  (MDPI)</publisher-name></publisher></journal-meta><article-meta><article-id pub-id-type="pmcid">PMC12431318</article-id><article-id pub-id-type="pmcid-ver">PMC12431318.1</article-id><article-id pub-id-type="pmcaid">12431318</article-id><article-id pub-id-type="pmcaiid">12431318</article-id><article-id pub-id-type="doi">10.3390/s25175441</article-id><article-id pub-id-type="publisher-id">sensors-25-05441</article-id><article-version article-version-type="pmc-version">1</article-version><article-categories><subj-group subj-group-type="heading"><subject>Article</subject></subj-group></article-categories><title-group><article-title>ECACS: An Enhanced Certificateless Authentication Scheme for Smart Car Sharing</article-title></title-group><contrib-group><contrib contrib-type="author"><contrib-id contrib-id-type="orcid" authenticated="true">https://orcid.org/0000-0002-0453-5964</contrib-id><name name-style="western"><surname>Shen</surname><given-names initials="Z">Zhuowei</given-names></name><role vocab="credit" vocab-identifier="https://credit.niso.org/" vocab-term="Conceptualization" vocab-term-identifier="https://credit.niso.org/contributor-roles/conceptualization/">Conceptualization</role><role vocab="credit" vocab-identifier="https://credit.niso.org/" vocab-term="Writing &#x2013; review &amp; editing" vocab-term-identifier="https://credit.niso.org/contributor-roles/writing-review-editing/">Writing &#8211; review &amp; editing</role><role vocab="credit" vocab-identifier="https://credit.niso.org/" vocab-term="Supervision" vocab-term-identifier="https://credit.niso.org/contributor-roles/supervision/">Supervision</role><role vocab="credit" vocab-identifier="https://credit.niso.org/" vocab-term="Project administration" vocab-term-identifier="https://credit.niso.org/contributor-roles/project-administration/">Project administration</role><role vocab="credit" vocab-identifier="https://credit.niso.org/" vocab-term="Funding acquisition" vocab-term-identifier="https://credit.niso.org/contributor-roles/funding-acquisition/">Funding acquisition</role><xref rid="af1-sensors-25-05441" ref-type="aff">1</xref><xref rid="af2-sensors-25-05441" ref-type="aff">2</xref><xref rid="c1-sensors-25-05441" ref-type="corresp">*</xref><xref rid="fn1-sensors-25-05441" ref-type="author-notes">&#8224;</xref></contrib><contrib contrib-type="author"><contrib-id contrib-id-type="orcid" authenticated="true">https://orcid.org/0009-0000-7189-0889</contrib-id><name name-style="western"><surname>Kou</surname><given-names initials="X">Xiao</given-names></name><role vocab="credit" vocab-identifier="https://credit.niso.org/" vocab-term="Conceptualization" vocab-term-identifier="https://credit.niso.org/contributor-roles/conceptualization/">Conceptualization</role><role vocab="credit" vocab-identifier="https://credit.niso.org/" vocab-term="Methodology" vocab-term-identifier="https://credit.niso.org/contributor-roles/methodology/">Methodology</role><role vocab="credit" vocab-identifier="https://credit.niso.org/" vocab-term="Validation" vocab-term-identifier="https://credit.niso.org/contributor-roles/validation/">Validation</role><role vocab="credit" vocab-identifier="https://credit.niso.org/" vocab-term="Formal analysis" vocab-term-identifier="https://credit.niso.org/contributor-roles/formal-analysis/">Formal analysis</role><role vocab="credit" vocab-identifier="https://credit.niso.org/" vocab-term="Writing &#x2013; original draft" vocab-term-identifier="https://credit.niso.org/contributor-roles/writing-original-draft/">Writing &#8211; original draft</role><role vocab="credit" vocab-identifier="https://credit.niso.org/" vocab-term="Writing &#x2013; review &amp; editing" vocab-term-identifier="https://credit.niso.org/contributor-roles/writing-review-editing/">Writing &#8211; review &amp; editing</role><role vocab="credit" vocab-identifier="https://credit.niso.org/" vocab-term="Visualization" vocab-term-identifier="https://credit.niso.org/contributor-roles/visualization/">Visualization</role><xref rid="af1-sensors-25-05441" ref-type="aff">1</xref></contrib><contrib contrib-type="author"><contrib-id contrib-id-type="orcid" authenticated="true">https://orcid.org/0009-0006-9602-1296</contrib-id><name name-style="western"><surname>Yang</surname><given-names initials="T">Taiyao</given-names></name><role vocab="credit" vocab-identifier="https://credit.niso.org/" vocab-term="Validation" vocab-term-identifier="https://credit.niso.org/contributor-roles/validation/">Validation</role><role vocab="credit" vocab-identifier="https://credit.niso.org/" vocab-term="Writing &#x2013; review &amp; editing" vocab-term-identifier="https://credit.niso.org/contributor-roles/writing-review-editing/">Writing &#8211; review &amp; editing</role><xref rid="af1-sensors-25-05441" ref-type="aff">1</xref></contrib></contrib-group><contrib-group><contrib contrib-type="editor"><name name-style="western"><surname>Chong</surname><given-names initials="PHJ">Peter Han Joo</given-names></name><role>Academic Editor</role></contrib><contrib contrib-type="editor"><name name-style="western"><surname>Yu</surname><given-names initials="G">Guanding</given-names></name><role>Academic Editor</role></contrib></contrib-group><aff id="af1-sensors-25-05441"><label>1</label>School of Cyberscience and Engineering, Southeast University, Nanjing 211189, China; <email>220235211@seu.edu.cn</email> (X.K.); <email>220235271@seu.edu.cn</email> (T.Y.)</aff><aff id="af2-sensors-25-05441"><label>2</label>Key Laboratory of Computer Network and Information Intergration, Minster of Education, Nanjing 211189, China</aff><author-notes><corresp id="c1-sensors-25-05441"><label>*</label>Correspondence: <email>zwshen@seu.edu.cn</email></corresp><fn id="fn1-sensors-25-05441"><label>&#8224;</label><p>Current address: School of Big Data and Information Engineering, Xinjiang University of Technology, Hetian 848023, China.</p></fn></author-notes><pub-date pub-type="epub"><day>02</day><month>9</month><year>2025</year></pub-date><pub-date pub-type="collection"><month>9</month><year>2025</year></pub-date><volume>25</volume><issue>17</issue><issue-id pub-id-type="pmc-issue-id">496815</issue-id><elocation-id>5441</elocation-id><history><date date-type="received"><day>13</day><month>6</month><year>2025</year></date><date date-type="rev-recd"><day>29</day><month>7</month><year>2025</year></date><date date-type="accepted"><day>28</day><month>8</month><year>2025</year></date></history><pub-history><event event-type="pmc-release"><date><day>02</day><month>09</month><year>2025</year></date></event><event event-type="pmc-live"><date><day>13</day><month>09</month><year>2025</year></date></event><event event-type="pmc-last-change"><date iso-8601-date="2025-09-13 12:25:22.357"><day>13</day><month>09</month><year>2025</year></date></event></pub-history><permissions><copyright-statement>&#169; 2025 by the authors.</copyright-statement><copyright-year>2025</copyright-year><license><ali:license_ref specific-use="textmining" content-type="ccbylicense">https://creativecommons.org/licenses/by/4.0/</ali:license_ref><license-p>Licensee MDPI, Basel, Switzerland. This article is an open access article distributed under the terms and conditions of the Creative Commons Attribution (CC BY) license (<ext-link xmlns:xlink="http://www.w3.org/1999/xlink" ext-link-type="uri" xlink:href="https://creativecommons.org/licenses/by/4.0/">https://creativecommons.org/licenses/by/4.0/</ext-link>).</license-p></license></permissions><self-uri xmlns:xlink="http://www.w3.org/1999/xlink" content-type="pmc-pdf" xlink:href="sensors-25-05441.pdf"/><abstract><p>Driven by the demand for cost-effective vehicle access, enhanced flexibility, and sustainable transportation practices, smart car-sharing has emerged as a prominent alternative to traditional vehicle rental systems. Leveraging the Internet of Vehicles (IoV) and wireless communication, these systems feature dynamic renter-vehicle mappings, enabling users to access any available vehicle rather than being restricted to a specific one pre-assigned by the service provider. However, many existing schemes in the IoV field conflate users and vehicles, complicating the identification and tracking of the vehicle&#8217;s actual driver. Moreover, most current authentication protocols rely on a strict, initial binding between a user and a vehicle, rendering them unsuitable for the dynamic nature of car-sharing environments. To address these challenges, we propose an enhanced certificateless signature scheme tailored for smart car-sharing. By employing a biometric fuzzy extractor and the Chinese Remainder Theorem, our scheme provides a fine-grained authentication mechanism that eliminates the need for local computations on the user&#8217;s side, meaning users do not require a smartphone or other digital device. Furthermore, our scheme introduces category identifiers to facilitate vehicle selection based on specific classes within car-sharing contexts. A formal security analysis demonstrates that our scheme is existentially unforgeable against adversaries under the random oracle model. Finally, a comprehensive evaluation shows that our proposed scheme achieves competitive performance in terms of computational and communication overhead while offering enhanced practical functionalities.</p></abstract><kwd-group><kwd>car-sharing</kwd><kwd>certificateless signature</kwd><kwd>internet of vehicles</kwd><kwd>authentication</kwd></kwd-group><funding-group><award-group><funding-source>National key R&amp;D program of China</funding-source><award-id>2022YFB3104602</award-id></award-group><funding-statement>This research was funded by the National Key R&amp;D Program of China (Grant. 2022YFB3104602).</funding-statement></funding-group><custom-meta-group><custom-meta><meta-name>pmc-status-qastatus</meta-name><meta-value>0</meta-value></custom-meta><custom-meta><meta-name>pmc-status-live</meta-name><meta-value>yes</meta-value></custom-meta><custom-meta><meta-name>pmc-status-embargo</meta-name><meta-value>no</meta-value></custom-meta><custom-meta><meta-name>pmc-status-released</meta-name><meta-value>yes</meta-value></custom-meta><custom-meta><meta-name>pmc-prop-open-access</meta-name><meta-value>yes</meta-value></custom-meta><custom-meta><meta-name>pmc-prop-olf</meta-name><meta-value>no</meta-value></custom-meta><custom-meta><meta-name>pmc-prop-manuscript</meta-name><meta-value>no</meta-value></custom-meta><custom-meta><meta-name>pmc-prop-legally-suppressed</meta-name><meta-value>no</meta-value></custom-meta><custom-meta><meta-name>pmc-prop-has-pdf</meta-name><meta-value>yes</meta-value></custom-meta><custom-meta><meta-name>pmc-prop-has-supplement</meta-name><meta-value>no</meta-value></custom-meta><custom-meta><meta-name>pmc-prop-pdf-only</meta-name><meta-value>no</meta-value></custom-meta><custom-meta><meta-name>pmc-prop-suppress-copyright</meta-name><meta-value>no</meta-value></custom-meta><custom-meta><meta-name>pmc-prop-is-real-version</meta-name><meta-value>no</meta-value></custom-meta><custom-meta><meta-name>pmc-prop-is-scanned-article</meta-name><meta-value>no</meta-value></custom-meta><custom-meta><meta-name>pmc-prop-preprint</meta-name><meta-value>no</meta-value></custom-meta><custom-meta><meta-name>pmc-prop-in-epmc</meta-name><meta-value>yes</meta-value></custom-meta></custom-meta-group></article-meta></front><body><sec sec-type="intro" id="sec1-sensors-25-05441"><title>1. Introduction</title><p>The widespread adoption of digital technologies and the development of the Internet of Vehicles (IoV) are driving the transformation of the automotive sector toward intelligent systems [<xref rid="B1-sensors-25-05441" ref-type="bibr">1</xref>]. For instance, connected vehicles exchange real-time traffic information through vehicle-to-vehicle communication, while smart parking systems leverage positional data to optimize space allocation. Furthermore, within the framework of intelligent transportation systems, all automotive entities can contribute to optimizing traffic flow and enhancing overall transportation efficiency through global monitoring and data analytics [<xref rid="B2-sensors-25-05441" ref-type="bibr">2</xref>,<xref rid="B3-sensors-25-05441" ref-type="bibr">3</xref>]. In recent years, driven by the growing demand for cost-effective mobility, smart car-sharing has gained significant traction as an alternative to traditional vehicle rental services [<xref rid="B4-sensors-25-05441" ref-type="bibr">4</xref>]. According to a report by Statista Market Insights, global car-sharing revenue is projected to reach approximately USD 13.89 billion in 2025 and is forecast to grow at a compound annual growth rate (CAGR) of 3.23% over the subsequent five-year period [<xref rid="B5-sensors-25-05441" ref-type="bibr">5</xref>].</p><p>Traditional car rental services require users to book a specific vehicle in advance and retrieve it from a designated depot, a process that is often time-consuming and inconvenient. In contrast, smart car-sharing providers (e.g., Zipcar, Car2Go) offer a more flexible alternative. As illustrated in <xref rid="sensors-25-05441-f001" ref-type="fig">Figure 1</xref>, a typical smart car-sharing workflow begins with vehicles being classified into categories based on their characteristics (e.g., model, capacity) and registered with the service center. After completing registration and payment, users can select any available vehicle within a category that meets their requirements. This model allows individuals to use vehicles on demand, thereby avoiding the costs and responsibilities associated with private car ownership, such as maintenance expenses [<xref rid="B6-sensors-25-05441" ref-type="bibr">6</xref>]. Furthermore, compared with public transportation and conventional car rentals, smart car-sharing provides greater flexibility in travel time and destination, as well as more convenient vehicle access [<xref rid="B7-sensors-25-05441" ref-type="bibr">7</xref>].</p><p>Despite these benefits, communication in IoV environments relies on wireless channels, which are inherently insecure and susceptible to malicious attacks. Consequently, various authentication schemes [<xref rid="B8-sensors-25-05441" ref-type="bibr">8</xref>,<xref rid="B9-sensors-25-05441" ref-type="bibr">9</xref>,<xref rid="B10-sensors-25-05441" ref-type="bibr">10</xref>] have been proposed for the IoV domain to safeguard against threats such as replay [<xref rid="B11-sensors-25-05441" ref-type="bibr">11</xref>] and forgery attacks [<xref rid="B12-sensors-25-05441" ref-type="bibr">12</xref>]. However, a prevalent limitation of these protocols is their static binding of users to vehicles, which effectively treats the pair as an inseparable entity. This approach is ill-suited for dynamic car-sharing environments. For instance, when malicious behavior occurs, traditional schemes can typically only identify the specific vehicle involved, not the driver. As a result, preventing the malicious user from accessing other vehicles is a challenging and delayed process, as existing authentication protocols incorporate vehicle-specific, rather than user-specific, information in their computations. In a system characterized by rapid user turnover, this oversight creates a significant security vulnerability.</p><p>Furthermore, the high turnover of renters for a single vehicle necessitates schemes with dynamic membership management capabilities. Various approaches have been proposed to achieve this functionality, including the use of area keys [<xref rid="B13-sensors-25-05441" ref-type="bibr">13</xref>] and Merkle Hash Trees (MHTs) [<xref rid="B14-sensors-25-05441" ref-type="bibr">14</xref>]. However, the former approach is computationally expensive due to the need for individual calculations per user, while the latter incurs significant storage overhead because of the hierarchical structure of hash trees. In contrast, the Chinese Remainder Theorem (CRT) enables efficient and lightweight membership management by maintaining and distributing a global shared secret value through broadcasting, demonstrating advantages in both computational efficiency and storage overhead [<xref rid="B15-sensors-25-05441" ref-type="bibr">15</xref>]. Nevertheless, current applications of CRT in the IoV field primarily focus on vehicle-side applications. These implementations often require users to perform computations on their personal digital devices, such as smartphones, which can be impractical or inconvenient for renters in real-world scenarios.</p><p>In response to the aforementioned challenges, we propose an enhanced CLS scheme that introduces a fine-grained and user-vehicle decoupled authentication mechanism for smart car-sharing scenarios. Specifically, our scheme employs the fuzzy extractor to securely incorporate user biometric information into the authentication process while eliminating the need for user-side computation. Once a user completes the login procedure, the corresponding vehicle generates a signature embedded with a biometric-derived secret, thereby enhancing authenticity by jointly verifying both the user and the vehicle. Additionally, vehicles within the system are classified into categories, with each assigned a unique identifier. This process enables legitimate users to select and access any available vehicle within their chosen category. Furthermore, we integrate the CRT with user-extracted biometric secrets and facilitate the dynamic revocation of renters in cases of service expiration or malicious behavior. The key contributions of the article are outlined as follows:<list list-type="simple"><list-item><label>(1)</label><p>We propose an efficient CLS authentication scheme for smart car-sharing scenarios, built upon the fuzzy extractor and the CRT. Compared with existing authentication schemes, our scheme provides decoupled, fine-grained authentication, supports dynamic user revocation, and eliminates computation on the user side.</p></list-item><list-item><label>(2)</label><p>We introduce a novel category-range authentication framework where vehicles are organized into distinct categories with unique identifiers. This enables users to access any vehicle within an authorized category, instead of a single specific one in most IoV frameworks, thereby enhancing the flexibility and efficiency of the rental process.</p></list-item><list-item><label>(3)</label><p>We conduct a comprehensive security analysis of our scheme and benchmark its performance against related works. The results demonstrate that our proposal achieves provable security and exhibits competitive overhead in terms of computation, communication, and dynamic membership management.</p></list-item></list></p><p>The remainder of this article is structured as follows: <xref rid="sec2-sensors-25-05441" ref-type="sec">Section 2</xref> reviews the existing related works relevant to our proposed scheme. <xref rid="sec3-sensors-25-05441" ref-type="sec">Section 3</xref> introduces the preliminaries, as well as our system and security models. <xref rid="sec4-sensors-25-05441" ref-type="sec">Section 4</xref> elaborates on the details of our proposed scheme. Subsequently, <xref rid="sec5-sensors-25-05441" ref-type="sec">Section 5</xref> presents the formal security analysis and discusses the security properties of our scheme. In <xref rid="sec6-sensors-25-05441" ref-type="sec">Section 6</xref>, we evaluate the performance of our proposed scheme and compare it with other existing schemes. Finally, <xref rid="sec7-sensors-25-05441" ref-type="sec">Section 7</xref> concludes the article.</p></sec><sec id="sec2-sensors-25-05441"><title>2. Related Works</title><p>Digital signature schemes have been widely adopted in the IoV to secure communication processes. In early approaches based on Public Key Infrastructure (PKI) [<xref rid="B16-sensors-25-05441" ref-type="bibr">16</xref>,<xref rid="B17-sensors-25-05441" ref-type="bibr">17</xref>], certificates and the corresponding public&#8211;private key pairs of the vehicles are issued by a trusted certificate authority (CA). Although the implementation of PKI systems enhances the security level of these schemes, the resource-intensive certificate management process remains a significant concern. To mitigate this issue, subsequent protocols leveraged Identity-Based Cryptography (IBC), which eliminates certificate management overhead by employing a trusted Private Key Generator (PKG) to derive public keys directly from identities [<xref rid="B18-sensors-25-05441" ref-type="bibr">18</xref>,<xref rid="B19-sensors-25-05441" ref-type="bibr">19</xref>,<xref rid="B20-sensors-25-05441" ref-type="bibr">20</xref>]. However, the implementation of PKG also introduces the key escrow problem, which can lead to sensitive information exposure and faulty authentication if the PKG in the scheme is compromised and no longer trusted.</p><p>To address the key escrow problem, Al-Riyami and Paterson proposed the concept of certificateless public key cryptography (CL-PKC) [<xref rid="B21-sensors-25-05441" ref-type="bibr">21</xref>]. By replacing PKG with a semi-trusted key generation center (KGC) and incorporating random numbers selected by users themselves in the key generation process, certificateless signature (CLS) schemes achieve private key confidentiality, as KGC cannot acquire the complete private key of the participants [<xref rid="B22-sensors-25-05441" ref-type="bibr">22</xref>].</p><p>Built on the framework of CL-PKC, numerous CLS schemes with varying characteristics have been proposed. For instance, Malip et al. [<xref rid="B23-sensors-25-05441" ref-type="bibr">23</xref>] proposed a certificateless anonymous authentication scheme designed to facilitate secure message transmission. Zhong et al. [<xref rid="B24-sensors-25-05441" ref-type="bibr">24</xref>] introduced a certificateless aggregate signature scheme (CLAS) incorporating pseudonyms to achieve message authentication and conditional privacy preservation. Wang et al. [<xref rid="B25-sensors-25-05441" ref-type="bibr">25</xref>] proposed a novel certificateless authentication scheme and demonstrated its security within the standard model. However, the scheme proposed by Wang et al. was subsequently proven to be insecure [<xref rid="B26-sensors-25-05441" ref-type="bibr">26</xref>]. Furthermore, the aforementioned schemes are all based on bilinear mapping, which is computationally intensive, raising significant concerns regarding their efficiency.</p><p>To reduce the computational overhead associated with bilinear pairings, schemes based on elliptic curve cryptography (ECC) have been widely proposed [<xref rid="B27-sensors-25-05441" ref-type="bibr">27</xref>,<xref rid="B28-sensors-25-05441" ref-type="bibr">28</xref>,<xref rid="B29-sensors-25-05441" ref-type="bibr">29</xref>,<xref rid="B30-sensors-25-05441" ref-type="bibr">30</xref>,<xref rid="B31-sensors-25-05441" ref-type="bibr">31</xref>,<xref rid="B32-sensors-25-05441" ref-type="bibr">32</xref>]. Ali et al. [<xref rid="B33-sensors-25-05441" ref-type="bibr">33</xref>] proposed a certificateless authentication scheme utilizing map-to-point hash functions and short signatures. However, Li et al. [<xref rid="B34-sensors-25-05441" ref-type="bibr">34</xref>] later identified that the scheme proposed in [<xref rid="B33-sensors-25-05441" ref-type="bibr">33</xref>] is vulnerable against Type-II adversaries and subsequently contributed a new reliable CLAS scheme for VANET. Aiming to solve the weakness of the potential side channel attacks against tamper-proof devices, Xiong et al. [<xref rid="B35-sensors-25-05441" ref-type="bibr">35</xref>] proposed a double insurance CLS scheme. Unfortunately, Shim [<xref rid="B26-sensors-25-05441" ref-type="bibr">26</xref>] later demonstrated that Xiong&#8217;s scheme is susceptible to forgery attacks. Following this, Gong et al. [<xref rid="B36-sensors-25-05441" ref-type="bibr">36</xref>] introduced a certificateless authentication protocol, asserting its robustness against both Type-I and Type-II adversaries while claiming superiority over prior schemes in [<xref rid="B35-sensors-25-05441" ref-type="bibr">35</xref>,<xref rid="B37-sensors-25-05441" ref-type="bibr">37</xref>]. Nevertheless, Wu et al. [<xref rid="B38-sensors-25-05441" ref-type="bibr">38</xref>] recently concluded that the scheme by Gong et al. [<xref rid="B36-sensors-25-05441" ref-type="bibr">36</xref>] also fails to achieve the claimed resistance against forgery attacks by Type-I adversaries. Crucially, in IoV-based car-sharing scenarios, these schemes focus solely on inter-vehicle authentication while neglecting the essential granular authentications required between users and vehicles, thereby rendering them impractical for dynamic car-sharing applications.</p><p>In recent years, numerous schemes have sought to enhance the flexibility of users in IoV by incorporating techniques such as passwords and biometric information [<xref rid="B39-sensors-25-05441" ref-type="bibr">39</xref>,<xref rid="B40-sensors-25-05441" ref-type="bibr">40</xref>]. Islam et al. [<xref rid="B41-sensors-25-05441" ref-type="bibr">41</xref>] proposed a password-based authentication protocol for VANETs that supports the dynamic changes in vehicle membership. Later, Cui et al. [<xref rid="B42-sensors-25-05441" ref-type="bibr">42</xref>] introduced an authentication scheme based on the Chebyshev chaotic map, incorporating fuzzy verification and honeywords for rescue scenarios. Regarding the application of biometric information, Azees et al. [<xref rid="B43-sensors-25-05441" ref-type="bibr">43</xref>] proposed a hybrid CMOS memristor-based authentication scheme employing bilinear operations, ensuring that only registered users can interact with the vehicle. Wang et al. [<xref rid="B44-sensors-25-05441" ref-type="bibr">44</xref>] integrated distance calculation into the biometric authentication process and proposed a fuzzy CLS scheme. Despite these advancements, existing approaches maintain a rigid binding between users and vehicles, preventing users from accessing vehicles beyond their specifically assigned ones. Meanwhile, in smart car-sharing scenarios, it is crucial for service providers to allow renters to access vehicles at their convenience.</p><p>A comparative summary of existing schemes is presented in <xref rid="sensors-25-05441-t001" ref-type="table">Table 1</xref>. The limitations identified therein highlight the need for a practical authentication scheme that decouples users from specific vehicles, thereby better addressing the operational requirements of real-world car-sharing services.</p></sec><sec id="sec3-sensors-25-05441"><title>3. Preliminaries</title><p>In this section, we first provide a concise background explanation of elliptic curve cryptography and the Chinese Remainder Theorem. Then, we introduce the system and security models of our proposed authentication scheme. The symbols used in our scheme are described in <xref rid="sensors-25-05441-t002" ref-type="table">Table 2</xref>.</p><sec id="sec3dot1-sensors-25-05441"><title>3.1. Elliptic Curve Cryptography</title><p>In the ECC system, an elliptic curve <italic toggle="yes">E</italic> is defined by the equation <inline-formula><mml:math id="mm1" overflow="scroll"><mml:mrow><mml:mrow><mml:msup><mml:mi>y</mml:mi><mml:mn>2</mml:mn></mml:msup><mml:mo>=</mml:mo><mml:msup><mml:mi>x</mml:mi><mml:mn>3</mml:mn></mml:msup><mml:mo>+</mml:mo><mml:mi>a</mml:mi><mml:mi>x</mml:mi><mml:mo>+</mml:mo><mml:mi>b</mml:mi><mml:mspace width="3.33333pt"/><mml:mo form="prefix">mod</mml:mo><mml:mspace width="0.277778em"/><mml:mi>p</mml:mi></mml:mrow></mml:mrow></mml:math></inline-formula> over <inline-formula><mml:math id="mm2" overflow="scroll"><mml:mrow><mml:msub><mml:mi mathvariant="double-struck">F</mml:mi><mml:mi>p</mml:mi></mml:msub></mml:mrow></mml:math></inline-formula>, where <inline-formula><mml:math id="mm3" overflow="scroll"><mml:mrow><mml:msub><mml:mi mathvariant="double-struck">F</mml:mi><mml:mi>p</mml:mi></mml:msub></mml:mrow></mml:math></inline-formula> is a finite field defined on a large prime number <italic toggle="yes">p</italic>. Here, <inline-formula><mml:math id="mm4" overflow="scroll"><mml:mrow><mml:mrow><mml:mi>a</mml:mi><mml:mo>,</mml:mo><mml:mi>b</mml:mi><mml:mo>&#8712;</mml:mo><mml:msub><mml:mi mathvariant="double-struck">F</mml:mi><mml:mi>p</mml:mi></mml:msub></mml:mrow></mml:mrow></mml:math></inline-formula>, satisfying the condition <inline-formula><mml:math id="mm5" overflow="scroll"><mml:mrow><mml:mrow><mml:mn>4</mml:mn><mml:msup><mml:mi>a</mml:mi><mml:mn>3</mml:mn></mml:msup><mml:mo>+</mml:mo><mml:mn>27</mml:mn><mml:msup><mml:mi>b</mml:mi><mml:mn>2</mml:mn></mml:msup><mml:mspace width="3.33333pt"/><mml:mo form="prefix">mod</mml:mo><mml:mspace width="0.277778em"/><mml:mi>p</mml:mi><mml:mo>&#8800;</mml:mo><mml:mn>0</mml:mn></mml:mrow></mml:mrow></mml:math></inline-formula>. Furthermore, let <italic toggle="yes">O</italic> represent a point at infinity; then an additive elliptic curve group <inline-formula><mml:math id="mm6" overflow="scroll"><mml:mrow><mml:mi mathvariant="double-struck">G</mml:mi></mml:mrow></mml:math></inline-formula> with order <italic toggle="yes">q</italic> and the generator <italic toggle="yes">P</italic> can be defined with <italic toggle="yes">O</italic> and the points on <italic toggle="yes">E</italic>.</p><p>Elliptic Curve Discrete Logarithm Problem (ECDLP): Given the instance <inline-formula><mml:math id="mm7" overflow="scroll"><mml:mrow><mml:mrow><mml:mo>(</mml:mo><mml:mi>P</mml:mi><mml:mo>,</mml:mo><mml:mi>a</mml:mi><mml:mi>P</mml:mi><mml:mo>)</mml:mo></mml:mrow></mml:mrow></mml:math></inline-formula>, where <inline-formula><mml:math id="mm8" overflow="scroll"><mml:mrow><mml:mrow><mml:mi>a</mml:mi><mml:mo>&#8712;</mml:mo><mml:msubsup><mml:mi>Z</mml:mi><mml:mi>q</mml:mi><mml:mo>&#8727;</mml:mo></mml:msubsup></mml:mrow></mml:mrow></mml:math></inline-formula> and <inline-formula><mml:math id="mm9" overflow="scroll"><mml:mrow><mml:mrow><mml:mi>P</mml:mi><mml:mo>&#8712;</mml:mo><mml:mi mathvariant="double-struck">G</mml:mi></mml:mrow></mml:mrow></mml:math></inline-formula>, it is computationally infeasible to obtain <italic toggle="yes">a</italic> from <inline-formula><mml:math id="mm10" overflow="scroll"><mml:mrow><mml:mrow><mml:mi>a</mml:mi><mml:mi>P</mml:mi></mml:mrow></mml:mrow></mml:math></inline-formula> in probabilistic polynomial time.</p></sec><sec id="sec3dot2-sensors-25-05441"><title>3.2. Chinese Remainder Theorem</title><p>Let <inline-formula><mml:math id="mm11" overflow="scroll"><mml:mrow><mml:mrow><mml:msub><mml:mi>m</mml:mi><mml:mn>1</mml:mn></mml:msub><mml:mo>,</mml:mo><mml:msub><mml:mi>m</mml:mi><mml:mn>2</mml:mn></mml:msub><mml:mo>,</mml:mo><mml:mo>&#8943;</mml:mo><mml:mo>,</mml:mo><mml:msub><mml:mi>m</mml:mi><mml:mi>n</mml:mi></mml:msub></mml:mrow></mml:mrow></mml:math></inline-formula> be pairwise coprime positive integers, and let <inline-formula><mml:math id="mm12" overflow="scroll"><mml:mrow><mml:mrow><mml:msub><mml:mi>a</mml:mi><mml:mn>1</mml:mn></mml:msub><mml:mo>,</mml:mo><mml:msub><mml:mi>a</mml:mi><mml:mn>2</mml:mn></mml:msub><mml:mo>,</mml:mo><mml:mo>&#8943;</mml:mo><mml:mo>,</mml:mo><mml:msub><mml:mi>a</mml:mi><mml:mi>n</mml:mi></mml:msub></mml:mrow></mml:mrow></mml:math></inline-formula> denote arbitrary integers. Then, the system<disp-formula><mml:math id="mm13" display="block" overflow="scroll"><mml:mrow><mml:mfenced separators="" open="{" close=""><mml:mtable><mml:mtr><mml:mtd columnalign="left"><mml:mrow><mml:mi>x</mml:mi><mml:mo>&#8801;</mml:mo><mml:msub><mml:mi>a</mml:mi><mml:mn>1</mml:mn></mml:msub><mml:mspace width="4pt"/><mml:mrow><mml:mo>(</mml:mo><mml:mi>mod</mml:mi><mml:mspace width="4pt"/><mml:msub><mml:mi>m</mml:mi><mml:mn>1</mml:mn></mml:msub><mml:mo>)</mml:mo></mml:mrow></mml:mrow></mml:mtd></mml:mtr><mml:mtr><mml:mtd columnalign="left"><mml:mrow><mml:mi>x</mml:mi><mml:mo>&#8801;</mml:mo><mml:msub><mml:mi>a</mml:mi><mml:mn>2</mml:mn></mml:msub><mml:mspace width="4pt"/><mml:mrow><mml:mo>(</mml:mo><mml:mi>mod</mml:mi><mml:mspace width="4pt"/><mml:msub><mml:mi>m</mml:mi><mml:mn>2</mml:mn></mml:msub><mml:mo>)</mml:mo></mml:mrow></mml:mrow></mml:mtd></mml:mtr><mml:mtr><mml:mtd columnalign="left"><mml:mo>&#8943;</mml:mo></mml:mtd></mml:mtr><mml:mtr><mml:mtd columnalign="left"><mml:mrow><mml:mi>x</mml:mi><mml:mo>&#8801;</mml:mo><mml:msub><mml:mi>a</mml:mi><mml:mi>n</mml:mi></mml:msub><mml:mspace width="4pt"/><mml:mrow><mml:mo>(</mml:mo><mml:mi>mod</mml:mi><mml:mspace width="4pt"/><mml:msub><mml:mi>m</mml:mi><mml:mi>n</mml:mi></mml:msub><mml:mo>)</mml:mo></mml:mrow></mml:mrow></mml:mtd></mml:mtr></mml:mtable></mml:mfenced></mml:mrow></mml:math></disp-formula>
has a unique solution modulo <inline-formula><mml:math id="mm14" overflow="scroll"><mml:mrow><mml:mrow><mml:mi>N</mml:mi><mml:mo>=</mml:mo><mml:msubsup><mml:mo>&#8719;</mml:mo><mml:mrow><mml:mi>i</mml:mi><mml:mo>=</mml:mo><mml:mn>1</mml:mn></mml:mrow><mml:mi>n</mml:mi></mml:msubsup><mml:msub><mml:mi>m</mml:mi><mml:mi>i</mml:mi></mml:msub></mml:mrow></mml:mrow></mml:math></inline-formula>. Specifically, the solution can be expressed as <inline-formula><mml:math id="mm15" overflow="scroll"><mml:mrow><mml:mrow><mml:mi>x</mml:mi><mml:mo>&#8801;</mml:mo><mml:msubsup><mml:mo>&#8721;</mml:mo><mml:mrow><mml:mi>i</mml:mi><mml:mo>=</mml:mo><mml:mn>1</mml:mn></mml:mrow><mml:mi>n</mml:mi></mml:msubsup><mml:msub><mml:mi>a</mml:mi><mml:mi>i</mml:mi></mml:msub><mml:mo>&#215;</mml:mo><mml:msub><mml:mi>&#945;</mml:mi><mml:mi>i</mml:mi></mml:msub><mml:mo>&#215;</mml:mo><mml:msub><mml:mi>&#946;</mml:mi><mml:mi>i</mml:mi></mml:msub><mml:mspace width="3.33333pt"/><mml:mo form="prefix">mod</mml:mo><mml:mspace width="0.277778em"/><mml:mi>N</mml:mi></mml:mrow></mml:mrow></mml:math></inline-formula>, where <inline-formula><mml:math id="mm16" overflow="scroll"><mml:mrow><mml:mrow><mml:msub><mml:mi>&#945;</mml:mi><mml:mi>i</mml:mi></mml:msub><mml:mo>=</mml:mo><mml:mstyle scriptlevel="0" displaystyle="true"><mml:mfrac><mml:mi>N</mml:mi><mml:msub><mml:mi>m</mml:mi><mml:mi>i</mml:mi></mml:msub></mml:mfrac></mml:mstyle></mml:mrow></mml:mrow></mml:math></inline-formula> and <inline-formula><mml:math id="mm17" overflow="scroll"><mml:mrow><mml:mrow><mml:msub><mml:mi>&#945;</mml:mi><mml:mi>i</mml:mi></mml:msub><mml:mo>&#215;</mml:mo><mml:msub><mml:mi>&#946;</mml:mi><mml:mi>i</mml:mi></mml:msub><mml:mo>&#8801;</mml:mo><mml:mn>1</mml:mn><mml:mspace width="3.33333pt"/><mml:mo form="prefix">mod</mml:mo><mml:mspace width="0.277778em"/><mml:msub><mml:mi>m</mml:mi><mml:mi>i</mml:mi></mml:msub></mml:mrow></mml:mrow></mml:math></inline-formula>.</p></sec><sec id="sec3dot3-sensors-25-05441"><title>3.3. System Model</title><p>In our proposed scheme, four main participants are involved, namely the TA (trust authority), the KGC (key generation center), the SV (sharing vehicle), and the users.</p><list list-type="order"><list-item><p>TA: It represents the service center in smart car-sharing, which is a fully trusted authority that generates the system parameters and manages the service membership of users within the system by distributing and updating the group identifier. Moreover, it is also responsible for generating pseudonyms for users and can track and reveal their real identities when malicious behaviors occur.</p></list-item><list-item><p>KGC: It represents a key generation center that generates the partial private keys for vehicles and the private keys for users and is considered to be a semi-trusted third party.</p></list-item><list-item><p>SV: It represents a vehicle in the car-sharing service. In our scheme, SVs are classified into individual categories based on their characteristics (e.g., model and capacity). After an SV is logged in by a legitimate renter via biometric information, it can authenticate with other verified SVs by generating signatures utilizing the derived group identifier.</p></list-item><list-item><p>User: It represents the actual user of the car-sharing service. Additionally, it is important to emphasize that no local computational abilities are required for users in our proposed scheme.</p></list-item></list><p>The system model of our proposed scheme is demonstrated in <xref rid="sensors-25-05441-f002" ref-type="fig">Figure 2</xref>. Initially, SVs register with KGC to obtain their partial private keys and category identifiers. Subsequently, users complete the registration process by submitting biometric information to TA. When a legitimate user requires access to a vehicle, they may access any vehicle that shares the same category identifier selected during user registration. Upon successful user login, the vehicle can generate signatures to enable secure authentication with other accessed vehicles. In the event that a malicious user is detected, TA will update the group identifier and broadcast the auxiliary information to process revocation, and legitimate vehicles can obtain the updated group identifier using their identifier update secrets derived from the users.</p></sec><sec id="sec3dot4-sensors-25-05441"><title>3.4. Security Model</title><p>In the field of CLS schemes, two types of attacks are often considered, namely Type-I attacks launched by external adversaries and Type-II attacks launched by internal adversaries [<xref rid="B45-sensors-25-05441" ref-type="bibr">45</xref>]. In a Type-I attack, an adversary is able to launch public key replacement attacks but cannot gain access to the master secret key. In contrast, in a Type-II attack, an adversary can acquire the system&#8217;s master secret key but cannot replace the public key of any entity.</p><p>To demonstrate the security of our proposed scheme, we will prove its existential unforgeability against chosen-message attacks (EUF-CMA). This proof is based on two challenge-response games, each formalizing one of the aforementioned attack scenarios.</p><p>Game I: This game is performed by a Type-I adversary <inline-formula><mml:math id="mm18" overflow="scroll"><mml:mrow><mml:msub><mml:mi mathvariant="script">A</mml:mi><mml:mn>1</mml:mn></mml:msub></mml:mrow></mml:math></inline-formula> and the challenger <inline-formula><mml:math id="mm19" overflow="scroll"><mml:mrow><mml:mi mathvariant="script">C</mml:mi></mml:mrow></mml:math></inline-formula>. The details are as follows:</p><p>Setup: <inline-formula><mml:math id="mm20" overflow="scroll"><mml:mrow><mml:mi mathvariant="script">C</mml:mi></mml:mrow></mml:math></inline-formula> runs Setup to generate its master secret key <italic toggle="yes">s</italic> and the system parameters <inline-formula><mml:math id="mm21" overflow="scroll"><mml:mrow><mml:mrow><mml:mi>p</mml:mi><mml:mi>a</mml:mi><mml:mi>r</mml:mi><mml:mi>a</mml:mi><mml:mi>m</mml:mi><mml:mi>s</mml:mi></mml:mrow></mml:mrow></mml:math></inline-formula>. Then it sends <inline-formula><mml:math id="mm22" overflow="scroll"><mml:mrow><mml:mrow><mml:mi>p</mml:mi><mml:mi>a</mml:mi><mml:mi>r</mml:mi><mml:mi>a</mml:mi><mml:mi>m</mml:mi><mml:mi>s</mml:mi></mml:mrow></mml:mrow></mml:math></inline-formula> to <inline-formula><mml:math id="mm23" overflow="scroll"><mml:mrow><mml:msub><mml:mi mathvariant="script">A</mml:mi><mml:mn>1</mml:mn></mml:msub></mml:mrow></mml:math></inline-formula> and keeps <italic toggle="yes">s</italic> secret.</p><p>Queries: In this phase, <inline-formula><mml:math id="mm24" overflow="scroll"><mml:mrow><mml:msub><mml:mi mathvariant="script">A</mml:mi><mml:mn>1</mml:mn></mml:msub></mml:mrow></mml:math></inline-formula> can adaptively access the following queries.</p><list list-type="simple"><list-item><label>(1)</label><p>Vehicle Registration Query: When receiving this query from <inline-formula><mml:math id="mm25" overflow="scroll"><mml:mrow><mml:msub><mml:mi mathvariant="script">A</mml:mi><mml:mn>1</mml:mn></mml:msub></mml:mrow></mml:math></inline-formula> with <inline-formula><mml:math id="mm26" overflow="scroll"><mml:mrow><mml:msub><mml:mi mathvariant="italic">PVID</mml:mi><mml:mi>i</mml:mi></mml:msub></mml:mrow></mml:math></inline-formula> as input, <inline-formula><mml:math id="mm27" overflow="scroll"><mml:mrow><mml:mi mathvariant="script">C</mml:mi></mml:mrow></mml:math></inline-formula> generates the related information for the corresponding vehicle.</p></list-item><list-item><label>(2)</label><p>User Registration Query: When receiving this query from <inline-formula><mml:math id="mm28" overflow="scroll"><mml:mrow><mml:msub><mml:mi mathvariant="script">A</mml:mi><mml:mn>1</mml:mn></mml:msub></mml:mrow></mml:math></inline-formula> with <inline-formula><mml:math id="mm29" overflow="scroll"><mml:mrow><mml:msub><mml:mi mathvariant="italic">PID</mml:mi><mml:mi>j</mml:mi></mml:msub></mml:mrow></mml:math></inline-formula> as input, <inline-formula><mml:math id="mm30" overflow="scroll"><mml:mrow><mml:mi mathvariant="script">C</mml:mi></mml:mrow></mml:math></inline-formula> generates the related information for the corresponding user.</p></list-item><list-item><label>(3)</label><p>Reveal Vehicle Partial Key Query: When receiving this query from <inline-formula><mml:math id="mm31" overflow="scroll"><mml:mrow><mml:msub><mml:mi mathvariant="script">A</mml:mi><mml:mn>1</mml:mn></mml:msub></mml:mrow></mml:math></inline-formula> with <inline-formula><mml:math id="mm32" overflow="scroll"><mml:mrow><mml:msub><mml:mi mathvariant="italic">PVID</mml:mi><mml:mi>i</mml:mi></mml:msub></mml:mrow></mml:math></inline-formula> as input, <inline-formula><mml:math id="mm33" overflow="scroll"><mml:mrow><mml:mi mathvariant="script">C</mml:mi></mml:mrow></mml:math></inline-formula> returns the corresponding <inline-formula><mml:math id="mm34" overflow="scroll"><mml:mrow><mml:msub><mml:mi>d</mml:mi><mml:mi>i</mml:mi></mml:msub></mml:mrow></mml:math></inline-formula>.</p></list-item><list-item><label>(4)</label><p>Reveal User Private Key Query: When receiving this query from <inline-formula><mml:math id="mm35" overflow="scroll"><mml:mrow><mml:msub><mml:mi mathvariant="script">A</mml:mi><mml:mn>1</mml:mn></mml:msub></mml:mrow></mml:math></inline-formula> with <inline-formula><mml:math id="mm36" overflow="scroll"><mml:mrow><mml:msub><mml:mi mathvariant="italic">PID</mml:mi><mml:mi>j</mml:mi></mml:msub></mml:mrow></mml:math></inline-formula> as input, <inline-formula><mml:math id="mm37" overflow="scroll"><mml:mrow><mml:mi mathvariant="script">C</mml:mi></mml:mrow></mml:math></inline-formula> returns the corresponding <inline-formula><mml:math id="mm38" overflow="scroll"><mml:mrow><mml:msub><mml:mi>d</mml:mi><mml:mi>j</mml:mi></mml:msub></mml:mrow></mml:math></inline-formula>.</p></list-item><list-item><label>(5)</label><p>Reveal Vehicle Secret Query: When receiving this query from <inline-formula><mml:math id="mm39" overflow="scroll"><mml:mrow><mml:msub><mml:mi mathvariant="script">A</mml:mi><mml:mn>1</mml:mn></mml:msub></mml:mrow></mml:math></inline-formula> with <inline-formula><mml:math id="mm40" overflow="scroll"><mml:mrow><mml:msub><mml:mi mathvariant="italic">PVID</mml:mi><mml:mi>i</mml:mi></mml:msub></mml:mrow></mml:math></inline-formula> as input, <inline-formula><mml:math id="mm41" overflow="scroll"><mml:mrow><mml:mi mathvariant="script">C</mml:mi></mml:mrow></mml:math></inline-formula> returns the corresponding <inline-formula><mml:math id="mm42" overflow="scroll"><mml:mrow><mml:msub><mml:mi>x</mml:mi><mml:mi>i</mml:mi></mml:msub></mml:mrow></mml:math></inline-formula>.</p></list-item><list-item><label>(6)</label><p>Reveal Vehicle Public Key Query: When receiving this query from <inline-formula><mml:math id="mm43" overflow="scroll"><mml:mrow><mml:msub><mml:mi mathvariant="script">A</mml:mi><mml:mn>1</mml:mn></mml:msub></mml:mrow></mml:math></inline-formula> with <inline-formula><mml:math id="mm44" overflow="scroll"><mml:mrow><mml:msub><mml:mi mathvariant="italic">PVID</mml:mi><mml:mi>j</mml:mi></mml:msub></mml:mrow></mml:math></inline-formula> as input, <inline-formula><mml:math id="mm45" overflow="scroll"><mml:mrow><mml:mi mathvariant="script">C</mml:mi></mml:mrow></mml:math></inline-formula> returns the corresponding <inline-formula><mml:math id="mm46" overflow="scroll"><mml:mrow><mml:mrow><mml:mo>(</mml:mo><mml:msub><mml:mi>X</mml:mi><mml:mi>i</mml:mi></mml:msub><mml:mo>,</mml:mo><mml:msub><mml:mi>R</mml:mi><mml:mi>i</mml:mi></mml:msub><mml:mo>)</mml:mo></mml:mrow></mml:mrow></mml:math></inline-formula>.</p></list-item><list-item><label>(7)</label><p>Reveal User Public Key Query: When receiving this query from <inline-formula><mml:math id="mm47" overflow="scroll"><mml:mrow><mml:msub><mml:mi mathvariant="script">A</mml:mi><mml:mn>1</mml:mn></mml:msub></mml:mrow></mml:math></inline-formula> with <inline-formula><mml:math id="mm48" overflow="scroll"><mml:mrow><mml:msub><mml:mi mathvariant="italic">PID</mml:mi><mml:mi>j</mml:mi></mml:msub></mml:mrow></mml:math></inline-formula> as input, <inline-formula><mml:math id="mm49" overflow="scroll"><mml:mrow><mml:mi mathvariant="script">C</mml:mi></mml:mrow></mml:math></inline-formula> returns the corresponding <inline-formula><mml:math id="mm50" overflow="scroll"><mml:mrow><mml:msub><mml:mi>R</mml:mi><mml:mi>j</mml:mi></mml:msub></mml:mrow></mml:math></inline-formula>.</p></list-item><list-item><label>(8)</label><p>Replace Vehicle Public Key Query: When receiving this query from <inline-formula><mml:math id="mm51" overflow="scroll"><mml:mrow><mml:msub><mml:mi mathvariant="script">A</mml:mi><mml:mn>1</mml:mn></mml:msub></mml:mrow></mml:math></inline-formula> with <inline-formula><mml:math id="mm52" overflow="scroll"><mml:mrow><mml:mrow><mml:mo>(</mml:mo><mml:msub><mml:mi mathvariant="italic">PVID</mml:mi><mml:mi>i</mml:mi></mml:msub><mml:mo>,</mml:mo><mml:msubsup><mml:mi>X</mml:mi><mml:mi>i</mml:mi><mml:mo>&#8242;</mml:mo></mml:msubsup><mml:mo>,</mml:mo><mml:msubsup><mml:mi>R</mml:mi><mml:mi>i</mml:mi><mml:mo>&#8242;</mml:mo></mml:msubsup><mml:mo>)</mml:mo></mml:mrow></mml:mrow></mml:math></inline-formula> as input, <inline-formula><mml:math id="mm53" overflow="scroll"><mml:mrow><mml:mi mathvariant="script">C</mml:mi></mml:mrow></mml:math></inline-formula> replaces the public key of the corresponding vehicle with <inline-formula><mml:math id="mm54" overflow="scroll"><mml:mrow><mml:mrow><mml:msubsup><mml:mi>X</mml:mi><mml:mi>i</mml:mi><mml:mo>&#8242;</mml:mo></mml:msubsup><mml:mo>,</mml:mo><mml:msubsup><mml:mi>R</mml:mi><mml:mi>i</mml:mi><mml:mo>&#8242;</mml:mo></mml:msubsup></mml:mrow></mml:mrow></mml:math></inline-formula>.</p></list-item><list-item><label>(9)</label><p>Replace User Public Key Query: When receiving this query from <inline-formula><mml:math id="mm55" overflow="scroll"><mml:mrow><mml:msub><mml:mi mathvariant="script">A</mml:mi><mml:mn>1</mml:mn></mml:msub></mml:mrow></mml:math></inline-formula> with <inline-formula><mml:math id="mm56" overflow="scroll"><mml:mrow><mml:mrow><mml:mo>(</mml:mo><mml:msub><mml:mi mathvariant="italic">PID</mml:mi><mml:mi>j</mml:mi></mml:msub><mml:mo>,</mml:mo><mml:msubsup><mml:mi>R</mml:mi><mml:mi>j</mml:mi><mml:mo>&#8242;</mml:mo></mml:msubsup><mml:mo>)</mml:mo></mml:mrow></mml:mrow></mml:math></inline-formula> as input, <inline-formula><mml:math id="mm57" overflow="scroll"><mml:mrow><mml:mi mathvariant="script">C</mml:mi></mml:mrow></mml:math></inline-formula> replaces the public key of the corresponding user with <inline-formula><mml:math id="mm58" overflow="scroll"><mml:mrow><mml:msubsup><mml:mi>R</mml:mi><mml:mi>j</mml:mi><mml:mo>&#8242;</mml:mo></mml:msubsup></mml:mrow></mml:math></inline-formula>.</p></list-item><list-item><label>(10)</label><p>Sign Query: When receiving this query from <inline-formula><mml:math id="mm59" overflow="scroll"><mml:mrow><mml:msub><mml:mi mathvariant="script">A</mml:mi><mml:mn>1</mml:mn></mml:msub></mml:mrow></mml:math></inline-formula> with <inline-formula><mml:math id="mm60" overflow="scroll"><mml:mrow><mml:mrow><mml:mo>(</mml:mo><mml:msub><mml:mi mathvariant="italic">PVID</mml:mi><mml:mi>i</mml:mi></mml:msub><mml:mo>,</mml:mo><mml:msub><mml:mi mathvariant="italic">PID</mml:mi><mml:mi>j</mml:mi></mml:msub><mml:mo>,</mml:mo><mml:msub><mml:mi>m</mml:mi><mml:mi>i</mml:mi></mml:msub><mml:mo>)</mml:mo></mml:mrow></mml:mrow></mml:math></inline-formula> as input, <inline-formula><mml:math id="mm61" overflow="scroll"><mml:mrow><mml:mi mathvariant="script">C</mml:mi></mml:mrow></mml:math></inline-formula> outputs a legitimate signature <inline-formula><mml:math id="mm62" overflow="scroll"><mml:mrow><mml:msub><mml:mi>&#963;</mml:mi><mml:mi>i</mml:mi></mml:msub></mml:mrow></mml:math></inline-formula>.</p></list-item></list><p>Forgery: In this phase, <inline-formula><mml:math id="mm63" overflow="scroll"><mml:mrow><mml:msub><mml:mi mathvariant="script">A</mml:mi><mml:mn>1</mml:mn></mml:msub></mml:mrow></mml:math></inline-formula> outputs a signature <inline-formula><mml:math id="mm64" overflow="scroll"><mml:mrow><mml:msup><mml:mi>&#963;</mml:mi><mml:mo>&#8727;</mml:mo></mml:msup></mml:mrow></mml:math></inline-formula> for the tuple <inline-formula><mml:math id="mm65" overflow="scroll"><mml:mrow><mml:mrow><mml:mo>(</mml:mo><mml:msub><mml:mi mathvariant="italic">PVID</mml:mi><mml:mi>i</mml:mi></mml:msub><mml:mo>,</mml:mo><mml:msup><mml:mi mathvariant="italic">PID</mml:mi><mml:mo>&#8727;</mml:mo></mml:msup><mml:mo>,</mml:mo><mml:msup><mml:mi>m</mml:mi><mml:mo>&#8727;</mml:mo></mml:msup><mml:mo>)</mml:mo></mml:mrow></mml:mrow></mml:math></inline-formula>, and <inline-formula><mml:math id="mm66" overflow="scroll"><mml:mrow><mml:msub><mml:mi mathvariant="script">A</mml:mi><mml:mn>1</mml:mn></mml:msub></mml:mrow></mml:math></inline-formula> wins in this game if the following conditions are satisfied.</p><list list-type="bullet"><list-item><p>Sign Query has never been queried with the submitted tuple.</p></list-item><list-item><p>Reveal User Private Key Query and Replace User Public Key Query have never been queried with the pseudonym <inline-formula><mml:math id="mm67" overflow="scroll"><mml:mrow><mml:msup><mml:mi mathvariant="italic">PID</mml:mi><mml:mo>&#8727;</mml:mo></mml:msup></mml:mrow></mml:math></inline-formula> by <inline-formula><mml:math id="mm68" overflow="scroll"><mml:mrow><mml:msub><mml:mi mathvariant="script">A</mml:mi><mml:mn>1</mml:mn></mml:msub></mml:mrow></mml:math></inline-formula>.</p></list-item><list-item><p><inline-formula><mml:math id="mm69" overflow="scroll"><mml:mrow><mml:msup><mml:mi>&#963;</mml:mi><mml:mo>&#8727;</mml:mo></mml:msup></mml:mrow></mml:math></inline-formula> is a valid signature for the submitted tuple.</p></list-item></list><p>Game II: This game is performed by a Type-II adversary <inline-formula><mml:math id="mm70" overflow="scroll"><mml:mrow><mml:msub><mml:mi mathvariant="script">A</mml:mi><mml:mn>2</mml:mn></mml:msub></mml:mrow></mml:math></inline-formula> and the challenger <inline-formula><mml:math id="mm71" overflow="scroll"><mml:mrow><mml:mi mathvariant="script">C</mml:mi></mml:mrow></mml:math></inline-formula>. The details are as follows:</p><p>Setup: <inline-formula><mml:math id="mm72" overflow="scroll"><mml:mrow><mml:mi mathvariant="script">C</mml:mi></mml:mrow></mml:math></inline-formula> runs Setup to generate its master secret key <italic toggle="yes">s</italic> and the system parameters <inline-formula><mml:math id="mm73" overflow="scroll"><mml:mrow><mml:mrow><mml:mi>p</mml:mi><mml:mi>a</mml:mi><mml:mi>r</mml:mi><mml:mi>a</mml:mi><mml:mi>m</mml:mi><mml:mi>s</mml:mi></mml:mrow></mml:mrow></mml:math></inline-formula>. Then it sends <inline-formula><mml:math id="mm74" overflow="scroll"><mml:mrow><mml:mrow><mml:mi>p</mml:mi><mml:mi>a</mml:mi><mml:mi>r</mml:mi><mml:mi>a</mml:mi><mml:mi>m</mml:mi><mml:mi>s</mml:mi></mml:mrow></mml:mrow></mml:math></inline-formula> and <italic toggle="yes">s</italic> to <inline-formula><mml:math id="mm75" overflow="scroll"><mml:mrow><mml:msub><mml:mi mathvariant="script">A</mml:mi><mml:mn>2</mml:mn></mml:msub></mml:mrow></mml:math></inline-formula>.</p><p>Queries: In this phase, <inline-formula><mml:math id="mm76" overflow="scroll"><mml:mrow><mml:msub><mml:mi mathvariant="script">A</mml:mi><mml:mn>2</mml:mn></mml:msub></mml:mrow></mml:math></inline-formula> can adaptively access the following queries.</p><list list-type="simple"><list-item><label>(1)</label><p>Vehicle Registration Query: When receiving this query from <inline-formula><mml:math id="mm77" overflow="scroll"><mml:mrow><mml:msub><mml:mi mathvariant="script">A</mml:mi><mml:mn>2</mml:mn></mml:msub></mml:mrow></mml:math></inline-formula> with <inline-formula><mml:math id="mm78" overflow="scroll"><mml:mrow><mml:msub><mml:mi mathvariant="italic">PVID</mml:mi><mml:mi>i</mml:mi></mml:msub></mml:mrow></mml:math></inline-formula> as input, <inline-formula><mml:math id="mm79" overflow="scroll"><mml:mrow><mml:mi mathvariant="script">C</mml:mi></mml:mrow></mml:math></inline-formula> generates the related information for the corresponding vehicle.</p></list-item><list-item><label>(2)</label><p>User Registration Query: When receiving this query from <inline-formula><mml:math id="mm80" overflow="scroll"><mml:mrow><mml:msub><mml:mi mathvariant="script">A</mml:mi><mml:mn>2</mml:mn></mml:msub></mml:mrow></mml:math></inline-formula> with <inline-formula><mml:math id="mm81" overflow="scroll"><mml:mrow><mml:msub><mml:mi mathvariant="italic">PID</mml:mi><mml:mi>j</mml:mi></mml:msub></mml:mrow></mml:math></inline-formula> as input, <inline-formula><mml:math id="mm82" overflow="scroll"><mml:mrow><mml:mi mathvariant="script">C</mml:mi></mml:mrow></mml:math></inline-formula> generates the related information for the corresponding user.</p></list-item><list-item><label>(3)</label><p>Reveal User Private Key Query: When receiving this query from <inline-formula><mml:math id="mm83" overflow="scroll"><mml:mrow><mml:msub><mml:mi mathvariant="script">A</mml:mi><mml:mn>2</mml:mn></mml:msub></mml:mrow></mml:math></inline-formula> with <inline-formula><mml:math id="mm84" overflow="scroll"><mml:mrow><mml:msub><mml:mi mathvariant="italic">PID</mml:mi><mml:mi>j</mml:mi></mml:msub></mml:mrow></mml:math></inline-formula> as input, <inline-formula><mml:math id="mm85" overflow="scroll"><mml:mrow><mml:mi mathvariant="script">C</mml:mi></mml:mrow></mml:math></inline-formula> returns the corresponding <inline-formula><mml:math id="mm86" overflow="scroll"><mml:mrow><mml:msub><mml:mi>d</mml:mi><mml:mi>j</mml:mi></mml:msub></mml:mrow></mml:math></inline-formula>.</p></list-item><list-item><label>(4)</label><p>Reveal Vehicle Secret Query: When receiving this query from <inline-formula><mml:math id="mm87" overflow="scroll"><mml:mrow><mml:msub><mml:mi mathvariant="script">A</mml:mi><mml:mn>2</mml:mn></mml:msub></mml:mrow></mml:math></inline-formula> with <inline-formula><mml:math id="mm88" overflow="scroll"><mml:mrow><mml:msub><mml:mi mathvariant="italic">PVID</mml:mi><mml:mi>i</mml:mi></mml:msub></mml:mrow></mml:math></inline-formula> as input, <inline-formula><mml:math id="mm89" overflow="scroll"><mml:mrow><mml:mi mathvariant="script">C</mml:mi></mml:mrow></mml:math></inline-formula> returns the corresponding <inline-formula><mml:math id="mm90" overflow="scroll"><mml:mrow><mml:msub><mml:mi>x</mml:mi><mml:mi>i</mml:mi></mml:msub></mml:mrow></mml:math></inline-formula>.</p></list-item><list-item><label>(5)</label><p>Reveal Vehicle Public Key Query: When receiving this query from <inline-formula><mml:math id="mm91" overflow="scroll"><mml:mrow><mml:msub><mml:mi mathvariant="script">A</mml:mi><mml:mn>2</mml:mn></mml:msub></mml:mrow></mml:math></inline-formula> with <inline-formula><mml:math id="mm92" overflow="scroll"><mml:mrow><mml:msub><mml:mi mathvariant="italic">PVID</mml:mi><mml:mi>j</mml:mi></mml:msub></mml:mrow></mml:math></inline-formula> as input, <inline-formula><mml:math id="mm93" overflow="scroll"><mml:mrow><mml:mi mathvariant="script">C</mml:mi></mml:mrow></mml:math></inline-formula> returns the corresponding <inline-formula><mml:math id="mm94" overflow="scroll"><mml:mrow><mml:mrow><mml:mo>(</mml:mo><mml:msub><mml:mi>X</mml:mi><mml:mi>i</mml:mi></mml:msub><mml:mo>,</mml:mo><mml:msub><mml:mi>R</mml:mi><mml:mi>i</mml:mi></mml:msub><mml:mo>)</mml:mo></mml:mrow></mml:mrow></mml:math></inline-formula>.</p></list-item><list-item><label>(6)</label><p>Reveal User Public Key Query: When receiving this query from <inline-formula><mml:math id="mm95" overflow="scroll"><mml:mrow><mml:msub><mml:mi mathvariant="script">A</mml:mi><mml:mn>2</mml:mn></mml:msub></mml:mrow></mml:math></inline-formula> with <inline-formula><mml:math id="mm96" overflow="scroll"><mml:mrow><mml:msub><mml:mi mathvariant="italic">PID</mml:mi><mml:mi>j</mml:mi></mml:msub></mml:mrow></mml:math></inline-formula> as input, <inline-formula><mml:math id="mm97" overflow="scroll"><mml:mrow><mml:mi mathvariant="script">C</mml:mi></mml:mrow></mml:math></inline-formula> returns the corresponding <inline-formula><mml:math id="mm98" overflow="scroll"><mml:mrow><mml:msub><mml:mi>R</mml:mi><mml:mi>j</mml:mi></mml:msub></mml:mrow></mml:math></inline-formula>.</p></list-item><list-item><label>(7)</label><p>Sign Query: When receiving this query from <inline-formula><mml:math id="mm99" overflow="scroll"><mml:mrow><mml:msub><mml:mi mathvariant="script">A</mml:mi><mml:mn>2</mml:mn></mml:msub></mml:mrow></mml:math></inline-formula> with <inline-formula><mml:math id="mm100" overflow="scroll"><mml:mrow><mml:mrow><mml:mo>(</mml:mo><mml:msub><mml:mi mathvariant="italic">PVID</mml:mi><mml:mi>i</mml:mi></mml:msub><mml:mo>,</mml:mo><mml:msub><mml:mi mathvariant="italic">PID</mml:mi><mml:mi>j</mml:mi></mml:msub><mml:mo>,</mml:mo><mml:msub><mml:mi>m</mml:mi><mml:mi>i</mml:mi></mml:msub><mml:mo>)</mml:mo></mml:mrow></mml:mrow></mml:math></inline-formula> as input, <inline-formula><mml:math id="mm101" overflow="scroll"><mml:mrow><mml:mi mathvariant="script">C</mml:mi></mml:mrow></mml:math></inline-formula> outputs a legitimate signature <inline-formula><mml:math id="mm102" overflow="scroll"><mml:mrow><mml:msub><mml:mi>&#963;</mml:mi><mml:mi>i</mml:mi></mml:msub></mml:mrow></mml:math></inline-formula>.</p></list-item></list><p>Forgery: In this phase, <inline-formula><mml:math id="mm103" overflow="scroll"><mml:mrow><mml:msub><mml:mi mathvariant="script">A</mml:mi><mml:mn>2</mml:mn></mml:msub></mml:mrow></mml:math></inline-formula> outputs a signature <inline-formula><mml:math id="mm104" overflow="scroll"><mml:mrow><mml:msup><mml:mi>&#963;</mml:mi><mml:mo>&#8727;</mml:mo></mml:msup></mml:mrow></mml:math></inline-formula> for the tuple <inline-formula><mml:math id="mm105" overflow="scroll"><mml:mrow><mml:mrow><mml:mo>(</mml:mo><mml:msup><mml:mi mathvariant="italic">PVID</mml:mi><mml:mo>&#8727;</mml:mo></mml:msup><mml:mo>,</mml:mo><mml:msub><mml:mi mathvariant="italic">PID</mml:mi><mml:mi>j</mml:mi></mml:msub><mml:mo>,</mml:mo><mml:msup><mml:mi>m</mml:mi><mml:mo>&#8727;</mml:mo></mml:msup><mml:mo>)</mml:mo></mml:mrow></mml:mrow></mml:math></inline-formula>, and <inline-formula><mml:math id="mm106" overflow="scroll"><mml:mrow><mml:msub><mml:mi mathvariant="script">A</mml:mi><mml:mn>2</mml:mn></mml:msub></mml:mrow></mml:math></inline-formula> wins in this game if the following conditions are satisfied.</p><list list-type="bullet"><list-item><p>Sign Query has never been queried with the submitted tuple.</p></list-item><list-item><p>Reveal Vehicle Secret Query has never been queried with the pseudonym <inline-formula><mml:math id="mm107" overflow="scroll"><mml:mrow><mml:msup><mml:mi mathvariant="italic">PVID</mml:mi><mml:mo>&#8727;</mml:mo></mml:msup></mml:mrow></mml:math></inline-formula> by <inline-formula><mml:math id="mm108" overflow="scroll"><mml:mrow><mml:msub><mml:mi mathvariant="script">A</mml:mi><mml:mn>2</mml:mn></mml:msub></mml:mrow></mml:math></inline-formula>.</p></list-item><list-item><p><inline-formula><mml:math id="mm109" overflow="scroll"><mml:mrow><mml:msup><mml:mi>&#963;</mml:mi><mml:mo>&#8727;</mml:mo></mml:msup></mml:mrow></mml:math></inline-formula> is a valid signature for the submitted tuple.</p></list-item></list></sec></sec><sec id="sec4-sensors-25-05441"><title>4. Proposed Scheme</title><p>In this section, we describe our proposed scheme in detail.</p><sec id="sec4dot1-sensors-25-05441"><title>4.1. Setup</title><p>First, TA and KGC will initialize the system by generating public and secret parameters.</p><list list-type="simple"><list-item><label>(1)</label><p>Given <inline-formula><mml:math id="mm110" overflow="scroll"><mml:mrow><mml:mi>&#955;</mml:mi></mml:mrow></mml:math></inline-formula> as the security parameter, TA chooses a cyclic group <inline-formula><mml:math id="mm111" overflow="scroll"><mml:mrow><mml:mi mathvariant="double-struck">G</mml:mi></mml:mrow></mml:math></inline-formula> of order <italic toggle="yes">q</italic> with <italic toggle="yes">P</italic> as its generator. Then, TA randomly selects <inline-formula><mml:math id="mm112" overflow="scroll"><mml:mrow><mml:mrow><mml:mi>t</mml:mi><mml:mo>&#8712;</mml:mo><mml:msubsup><mml:mi mathvariant="double-struck">Z</mml:mi><mml:mi>q</mml:mi><mml:mo>&#8727;</mml:mo></mml:msubsup></mml:mrow></mml:mrow></mml:math></inline-formula> and calculates <inline-formula><mml:math id="mm113" overflow="scroll"><mml:mrow><mml:mrow><mml:msub><mml:mi>T</mml:mi><mml:mrow><mml:mi>p</mml:mi><mml:mi>u</mml:mi><mml:mi>b</mml:mi></mml:mrow></mml:msub><mml:mo>=</mml:mo><mml:mi>t</mml:mi><mml:mo>&#183;</mml:mo><mml:mi>P</mml:mi></mml:mrow></mml:mrow></mml:math></inline-formula>.</p></list-item><list-item><label>(2)</label><p>Then, TA selects five secure hash functions: <inline-formula><mml:math id="mm114" overflow="scroll"><mml:mrow><mml:mrow><mml:msub><mml:mi>H</mml:mi><mml:mn>0</mml:mn></mml:msub><mml:mo>:</mml:mo><mml:mi mathvariant="double-struck">G</mml:mi><mml:mo>&#215;</mml:mo><mml:msup><mml:mrow><mml:mo>{</mml:mo><mml:mn>0</mml:mn><mml:mo>,</mml:mo><mml:mn>1</mml:mn><mml:mo>}</mml:mo></mml:mrow><mml:mo>&#8727;</mml:mo></mml:msup><mml:mo>&#8594;</mml:mo><mml:msubsup><mml:mi mathvariant="double-struck">Z</mml:mi><mml:mi>q</mml:mi><mml:mo>&#8727;</mml:mo></mml:msubsup></mml:mrow></mml:mrow></mml:math></inline-formula>, <inline-formula><mml:math id="mm115" overflow="scroll"><mml:mrow><mml:mrow><mml:msub><mml:mi>H</mml:mi><mml:mn>1</mml:mn></mml:msub><mml:mo>:</mml:mo><mml:msup><mml:mrow><mml:mo>{</mml:mo><mml:mn>0</mml:mn><mml:mo>,</mml:mo><mml:mn>1</mml:mn><mml:mo>}</mml:mo></mml:mrow><mml:mo>&#8727;</mml:mo></mml:msup><mml:mo>&#215;</mml:mo><mml:msup><mml:mi mathvariant="double-struck">G</mml:mi><mml:mn>3</mml:mn></mml:msup><mml:mo>&#8594;</mml:mo><mml:msubsup><mml:mi mathvariant="double-struck">Z</mml:mi><mml:mi>q</mml:mi><mml:mo>&#8727;</mml:mo></mml:msubsup></mml:mrow></mml:mrow></mml:math></inline-formula>, <inline-formula><mml:math id="mm116" overflow="scroll"><mml:mrow><mml:mrow><mml:msub><mml:mi>H</mml:mi><mml:mn>2</mml:mn></mml:msub><mml:mo>:</mml:mo><mml:msup><mml:mrow><mml:mo>{</mml:mo><mml:mn>0</mml:mn><mml:mo>,</mml:mo><mml:mn>1</mml:mn><mml:mo>}</mml:mo></mml:mrow><mml:mo>&#8727;</mml:mo></mml:msup><mml:mo>&#215;</mml:mo><mml:msup><mml:mi mathvariant="double-struck">G</mml:mi><mml:mn>2</mml:mn></mml:msup><mml:mo>&#215;</mml:mo><mml:msup><mml:mrow><mml:mo>{</mml:mo><mml:mn>0</mml:mn><mml:mo>,</mml:mo><mml:mn>1</mml:mn><mml:mo>}</mml:mo></mml:mrow><mml:mo>&#8727;</mml:mo></mml:msup><mml:mo>&#8594;</mml:mo><mml:msubsup><mml:mi mathvariant="double-struck">Z</mml:mi><mml:mi>q</mml:mi><mml:mo>&#8727;</mml:mo></mml:msubsup></mml:mrow></mml:mrow></mml:math></inline-formula>, <inline-formula><mml:math id="mm117" overflow="scroll"><mml:mrow><mml:mrow><mml:msub><mml:mi>H</mml:mi><mml:mn>3</mml:mn></mml:msub><mml:mo>:</mml:mo><mml:msup><mml:mrow><mml:mo>{</mml:mo><mml:mn>0</mml:mn><mml:mo>,</mml:mo><mml:mn>1</mml:mn><mml:mo>}</mml:mo></mml:mrow><mml:mo>&#8727;</mml:mo></mml:msup><mml:mo>&#215;</mml:mo><mml:msup><mml:mrow><mml:mo>{</mml:mo><mml:mn>0</mml:mn><mml:mo>,</mml:mo><mml:mn>1</mml:mn><mml:mo>}</mml:mo></mml:mrow><mml:mo>&#8727;</mml:mo></mml:msup><mml:mo>&#215;</mml:mo><mml:msup><mml:mi mathvariant="double-struck">G</mml:mi><mml:mn>4</mml:mn></mml:msup><mml:mo>&#215;</mml:mo><mml:msup><mml:mrow><mml:mo>{</mml:mo><mml:mn>0</mml:mn><mml:mo>,</mml:mo><mml:mn>1</mml:mn><mml:mo>}</mml:mo></mml:mrow><mml:mo>&#8727;</mml:mo></mml:msup><mml:mo>&#215;</mml:mo><mml:msup><mml:mrow><mml:mo>{</mml:mo><mml:mn>0</mml:mn><mml:mo>,</mml:mo><mml:mn>1</mml:mn><mml:mo>}</mml:mo></mml:mrow><mml:mo>&#8727;</mml:mo></mml:msup><mml:mo>&#8594;</mml:mo><mml:msubsup><mml:mi mathvariant="double-struck">Z</mml:mi><mml:mi>q</mml:mi><mml:mo>&#8727;</mml:mo></mml:msubsup></mml:mrow></mml:mrow></mml:math></inline-formula>, <inline-formula><mml:math id="mm118" overflow="scroll"><mml:mrow><mml:mrow><mml:msub><mml:mi>H</mml:mi><mml:mn>4</mml:mn></mml:msub><mml:mo>:</mml:mo><mml:msup><mml:mrow><mml:mo>{</mml:mo><mml:mn>0</mml:mn><mml:mo>,</mml:mo><mml:mn>1</mml:mn><mml:mo>}</mml:mo></mml:mrow><mml:mo>&#8727;</mml:mo></mml:msup><mml:mo>&#215;</mml:mo><mml:msup><mml:mrow><mml:mo>{</mml:mo><mml:mn>0</mml:mn><mml:mo>,</mml:mo><mml:mn>1</mml:mn><mml:mo>}</mml:mo></mml:mrow><mml:mo>&#8727;</mml:mo></mml:msup><mml:mo>&#215;</mml:mo><mml:msup><mml:mi mathvariant="double-struck">G</mml:mi><mml:mn>2</mml:mn></mml:msup><mml:mo>&#215;</mml:mo><mml:msup><mml:mrow><mml:mo>{</mml:mo><mml:mn>0</mml:mn><mml:mo>,</mml:mo><mml:mn>1</mml:mn><mml:mo>}</mml:mo></mml:mrow><mml:mo>&#8727;</mml:mo></mml:msup><mml:mo>&#215;</mml:mo><mml:msup><mml:mrow><mml:mo>{</mml:mo><mml:mn>0</mml:mn><mml:mo>,</mml:mo><mml:mn>1</mml:mn><mml:mo>}</mml:mo></mml:mrow><mml:mo>&#8727;</mml:mo></mml:msup><mml:mo>&#8594;</mml:mo><mml:msubsup><mml:mi mathvariant="double-struck">Z</mml:mi><mml:mi>q</mml:mi><mml:mo>&#8727;</mml:mo></mml:msubsup></mml:mrow></mml:mrow></mml:math></inline-formula>.</p></list-item><list-item><label>(3)</label><p>KGC randomly selects <inline-formula><mml:math id="mm119" overflow="scroll"><mml:mrow><mml:mrow><mml:mi>s</mml:mi><mml:mo>&#8712;</mml:mo><mml:msubsup><mml:mi mathvariant="double-struck">Z</mml:mi><mml:mi>q</mml:mi><mml:mo>&#8727;</mml:mo></mml:msubsup></mml:mrow></mml:mrow></mml:math></inline-formula> and calculates <inline-formula><mml:math id="mm120" overflow="scroll"><mml:mrow><mml:mrow><mml:msub><mml:mi>P</mml:mi><mml:mrow><mml:mi>p</mml:mi><mml:mi>u</mml:mi><mml:mi>b</mml:mi></mml:mrow></mml:msub><mml:mo>=</mml:mo><mml:mi>s</mml:mi><mml:mo>&#183;</mml:mo><mml:mi>P</mml:mi></mml:mrow></mml:mrow></mml:math></inline-formula>.</p></list-item><list-item><label>(4)</label><p>TA selects <italic toggle="yes">n</italic> unique prime numbers <inline-formula><mml:math id="mm121" overflow="scroll"><mml:mrow><mml:msub><mml:mrow><mml:mi>P</mml:mi><mml:mi>r</mml:mi><mml:mi>i</mml:mi><mml:mi>m</mml:mi><mml:mi>e</mml:mi></mml:mrow><mml:mrow><mml:mi>k</mml:mi><mml:mo>=</mml:mo><mml:mn>1</mml:mn><mml:mo>,</mml:mo><mml:mn>2</mml:mn><mml:mo>,</mml:mo><mml:mo>&#8943;</mml:mo><mml:mo>,</mml:mo><mml:mi>n</mml:mi></mml:mrow></mml:msub></mml:mrow></mml:math></inline-formula> and calculates <inline-formula><mml:math id="mm122" overflow="scroll"><mml:mrow><mml:mrow><mml:msub><mml:mi>&#981;</mml:mi><mml:mi>g</mml:mi></mml:msub><mml:mo>=</mml:mo><mml:msubsup><mml:mo stretchy="false">&#8719;</mml:mo><mml:mrow><mml:mi>k</mml:mi><mml:mo>=</mml:mo><mml:mn>1</mml:mn></mml:mrow><mml:mi>n</mml:mi></mml:msubsup><mml:mi>P</mml:mi><mml:mi>r</mml:mi><mml:mi>i</mml:mi><mml:mi>m</mml:mi><mml:msub><mml:mi>e</mml:mi><mml:mi>k</mml:mi></mml:msub></mml:mrow></mml:mrow></mml:math></inline-formula>. Then, for each <inline-formula><mml:math id="mm123" overflow="scroll"><mml:mrow><mml:msub><mml:mrow><mml:mi>P</mml:mi><mml:mi>r</mml:mi><mml:mi>i</mml:mi><mml:mi>m</mml:mi><mml:mi>e</mml:mi></mml:mrow><mml:mi>k</mml:mi></mml:msub></mml:mrow></mml:math></inline-formula>, TA calculates <inline-formula><mml:math id="mm124" overflow="scroll"><mml:mrow><mml:mrow><mml:msub><mml:mi>&#945;</mml:mi><mml:mi>k</mml:mi></mml:msub><mml:mo>=</mml:mo><mml:mstyle scriptlevel="0" displaystyle="true"><mml:mfrac><mml:msub><mml:mi>&#981;</mml:mi><mml:mi>g</mml:mi></mml:msub><mml:msub><mml:mrow><mml:mi>P</mml:mi><mml:mi>r</mml:mi><mml:mi>i</mml:mi><mml:mi>m</mml:mi><mml:mi>e</mml:mi></mml:mrow><mml:mi>k</mml:mi></mml:msub></mml:mfrac></mml:mstyle></mml:mrow></mml:mrow></mml:math></inline-formula>, <inline-formula><mml:math id="mm125" overflow="scroll"><mml:mrow><mml:mrow><mml:msub><mml:mi>&#945;</mml:mi><mml:mi>k</mml:mi></mml:msub><mml:mo>&#215;</mml:mo><mml:msub><mml:mi>&#946;</mml:mi><mml:mi>k</mml:mi></mml:msub><mml:mo>&#8801;</mml:mo><mml:mn>1</mml:mn><mml:mspace width="3.33333pt"/><mml:mo form="prefix">mod</mml:mo><mml:mspace width="0.277778em"/><mml:mi>P</mml:mi><mml:mi>r</mml:mi><mml:mi>i</mml:mi><mml:mi>m</mml:mi><mml:msub><mml:mi>e</mml:mi><mml:mi>k</mml:mi></mml:msub></mml:mrow></mml:mrow></mml:math></inline-formula>, <inline-formula><mml:math id="mm126" overflow="scroll"><mml:mrow><mml:mrow><mml:msub><mml:mi>&#961;</mml:mi><mml:mi>k</mml:mi></mml:msub><mml:mo>=</mml:mo><mml:msub><mml:mi>&#945;</mml:mi><mml:mi>k</mml:mi></mml:msub><mml:mo>&#215;</mml:mo><mml:msub><mml:mi>&#946;</mml:mi><mml:mi>k</mml:mi></mml:msub></mml:mrow></mml:mrow></mml:math></inline-formula> individually.</p></list-item><list-item><label>(5)</label><p>Finally, TA calculates <inline-formula><mml:math id="mm127" overflow="scroll"><mml:mrow><mml:mrow><mml:mo>&#937;</mml:mo><mml:mo>=</mml:mo><mml:msubsup><mml:mo>&#8721;</mml:mo><mml:mrow><mml:mi>k</mml:mi><mml:mo>=</mml:mo><mml:mn>1</mml:mn></mml:mrow><mml:mi>n</mml:mi></mml:msubsup><mml:msub><mml:mi>&#961;</mml:mi><mml:mi>k</mml:mi></mml:msub></mml:mrow></mml:mrow></mml:math></inline-formula> and publishes the system parameters, which are denoted as <inline-formula><mml:math id="mm128" overflow="scroll"><mml:mrow><mml:mrow><mml:mi>p</mml:mi><mml:mi>a</mml:mi><mml:mi>r</mml:mi><mml:mi>a</mml:mi><mml:mi>m</mml:mi><mml:mi>s</mml:mi><mml:mo>=</mml:mo><mml:mo>{</mml:mo><mml:mi mathvariant="double-struck">G</mml:mi><mml:mo>,</mml:mo><mml:mi>q</mml:mi><mml:mo>,</mml:mo><mml:mi>P</mml:mi><mml:mo>,</mml:mo><mml:msub><mml:mi>P</mml:mi><mml:mrow><mml:mi>p</mml:mi><mml:mi>u</mml:mi><mml:mi>b</mml:mi></mml:mrow></mml:msub><mml:mo>,</mml:mo><mml:msub><mml:mi>T</mml:mi><mml:mrow><mml:mi>p</mml:mi><mml:mi>u</mml:mi><mml:mi>b</mml:mi></mml:mrow></mml:msub><mml:mo>,</mml:mo><mml:msub><mml:mi>H</mml:mi><mml:mn>0</mml:mn></mml:msub><mml:mo>,</mml:mo><mml:msub><mml:mi>H</mml:mi><mml:mn>1</mml:mn></mml:msub><mml:mo>,</mml:mo><mml:msub><mml:mi>H</mml:mi><mml:mn>2</mml:mn></mml:msub><mml:mo>,</mml:mo><mml:msub><mml:mi>H</mml:mi><mml:mn>3</mml:mn></mml:msub><mml:mo>,</mml:mo><mml:msub><mml:mi>H</mml:mi><mml:mn>4</mml:mn></mml:msub><mml:mo>,</mml:mo><mml:mo>&#937;</mml:mo><mml:mo>}</mml:mo></mml:mrow></mml:mrow></mml:math></inline-formula>.</p></list-item></list></sec><sec id="sec4dot2-sensors-25-05441"><title>4.2. Registration</title><p>Every entity, both the SVs and the users, will first complete the registration after system initialization. The registration process includes vehicle registration, user registration, and group identifier distribution.</p><sec id="sec4dot2dot1-sensors-25-05441"><title>4.2.1. Vehicle Registration</title><p>As demonstrated in <xref rid="sensors-25-05441-f003" ref-type="fig">Figure 3</xref>, when an SV proceeds with registration, it first generates its partial key and transmits its unique identity to KGC. Upon receiving the request, KGC generates the corresponding partial private key and assigns a category identifier to the SV. Later, according to the received information from KGC, SV can complete its public&#8211;private key pair.</p><list list-type="simple"><list-item><label>(1)</label><p>A vehicle <inline-formula><mml:math id="mm129" overflow="scroll"><mml:mrow><mml:msub><mml:mi mathvariant="italic">SV</mml:mi><mml:mi>i</mml:mi></mml:msub></mml:mrow></mml:math></inline-formula> first randomly selects <inline-formula><mml:math id="mm130" overflow="scroll"><mml:mrow><mml:mrow><mml:msub><mml:mi>x</mml:mi><mml:mi>i</mml:mi></mml:msub><mml:mo>&#8712;</mml:mo><mml:msubsup><mml:mi>Z</mml:mi><mml:mi>q</mml:mi><mml:mo>&#8727;</mml:mo></mml:msubsup></mml:mrow></mml:mrow></mml:math></inline-formula> and calculates <inline-formula><mml:math id="mm131" overflow="scroll"><mml:mrow><mml:mrow><mml:msub><mml:mi>X</mml:mi><mml:mi>i</mml:mi></mml:msub><mml:mo>=</mml:mo><mml:msub><mml:mi>x</mml:mi><mml:mi>i</mml:mi></mml:msub><mml:mi>P</mml:mi></mml:mrow></mml:mrow></mml:math></inline-formula>. Then, it sends <inline-formula><mml:math id="mm132" overflow="scroll"><mml:mrow><mml:mrow><mml:mo>{</mml:mo><mml:msub><mml:mi mathvariant="italic">VID</mml:mi><mml:mi>i</mml:mi></mml:msub><mml:mo>,</mml:mo><mml:msub><mml:mi>X</mml:mi><mml:mi>i</mml:mi></mml:msub><mml:mo>}</mml:mo></mml:mrow></mml:mrow></mml:math></inline-formula> to TA through a secure channel, where <inline-formula><mml:math id="mm133" overflow="scroll"><mml:mrow><mml:msub><mml:mi mathvariant="italic">VID</mml:mi><mml:mi>i</mml:mi></mml:msub></mml:mrow></mml:math></inline-formula> denotes the unique identifier of <inline-formula><mml:math id="mm134" overflow="scroll"><mml:mrow><mml:msub><mml:mi mathvariant="italic">SV</mml:mi><mml:mi>i</mml:mi></mml:msub></mml:mrow></mml:math></inline-formula>.</p></list-item><list-item><label>(2)</label><p>Upon receiving the request from <inline-formula><mml:math id="mm135" overflow="scroll"><mml:mrow><mml:msub><mml:mi mathvariant="italic">SV</mml:mi><mml:mi>i</mml:mi></mml:msub></mml:mrow></mml:math></inline-formula>, TA randomly selects <inline-formula><mml:math id="mm136" overflow="scroll"><mml:mrow><mml:mrow><mml:mi>&#948;</mml:mi><mml:mo>&#8712;</mml:mo><mml:msubsup><mml:mi>Z</mml:mi><mml:mi>q</mml:mi><mml:mo>&#8727;</mml:mo></mml:msubsup></mml:mrow></mml:mrow></mml:math></inline-formula> and calculates <inline-formula><mml:math id="mm137" overflow="scroll"><mml:mrow><mml:mrow><mml:msub><mml:mi mathvariant="italic">PVID</mml:mi><mml:mi>i</mml:mi></mml:msub><mml:mo>=</mml:mo><mml:msub><mml:mi mathvariant="italic">VID</mml:mi><mml:mi>i</mml:mi></mml:msub><mml:mo>&#8853;</mml:mo><mml:msub><mml:mi>H</mml:mi><mml:mn>0</mml:mn></mml:msub><mml:mrow><mml:mo>(</mml:mo><mml:mi>&#948;</mml:mi><mml:msub><mml:mi>T</mml:mi><mml:mrow><mml:mi>p</mml:mi><mml:mi>u</mml:mi><mml:mi>b</mml:mi></mml:mrow></mml:msub><mml:mo>,</mml:mo><mml:msub><mml:mi>T</mml:mi><mml:mi>v</mml:mi></mml:msub><mml:mo>)</mml:mo></mml:mrow></mml:mrow></mml:mrow></mml:math></inline-formula>, where <inline-formula><mml:math id="mm138" overflow="scroll"><mml:mrow><mml:msub><mml:mi>T</mml:mi><mml:mi>v</mml:mi></mml:msub></mml:mrow></mml:math></inline-formula> is the current timestamp. Consequently, TA transmits <inline-formula><mml:math id="mm139" overflow="scroll"><mml:mrow><mml:msub><mml:mi mathvariant="italic">PVID</mml:mi><mml:mi>i</mml:mi></mml:msub></mml:mrow></mml:math></inline-formula> to KGC through a secure channel.</p></list-item><list-item><label>(3)</label><p>After receiving information from TA, KGC randomly selects <inline-formula><mml:math id="mm140" overflow="scroll"><mml:mrow><mml:mrow><mml:msub><mml:mi>r</mml:mi><mml:mi>i</mml:mi></mml:msub><mml:mo>&#8712;</mml:mo><mml:msubsup><mml:mi>Z</mml:mi><mml:mi>q</mml:mi><mml:mo>&#8727;</mml:mo></mml:msubsup></mml:mrow></mml:mrow></mml:math></inline-formula> and calculates <inline-formula><mml:math id="mm141" overflow="scroll"><mml:mrow><mml:mrow><mml:msub><mml:mi>R</mml:mi><mml:mi>i</mml:mi></mml:msub><mml:mo>=</mml:mo><mml:msub><mml:mi>r</mml:mi><mml:mi>i</mml:mi></mml:msub><mml:mi>P</mml:mi></mml:mrow></mml:mrow></mml:math></inline-formula>, <inline-formula><mml:math id="mm142" overflow="scroll"><mml:mrow><mml:mrow><mml:msub><mml:mi>h</mml:mi><mml:mrow><mml:mn>1</mml:mn><mml:mi>i</mml:mi></mml:mrow></mml:msub><mml:mo>=</mml:mo><mml:msub><mml:mi>H</mml:mi><mml:mn>1</mml:mn></mml:msub><mml:mrow><mml:mo>(</mml:mo><mml:msub><mml:mi mathvariant="italic">PVID</mml:mi><mml:mi>i</mml:mi></mml:msub><mml:mo>,</mml:mo><mml:msub><mml:mi>X</mml:mi><mml:mi>i</mml:mi></mml:msub><mml:mo>,</mml:mo><mml:msub><mml:mi>R</mml:mi><mml:mi>i</mml:mi></mml:msub><mml:mo>,</mml:mo><mml:msub><mml:mi>P</mml:mi><mml:mrow><mml:mi>p</mml:mi><mml:mi>u</mml:mi><mml:mi>b</mml:mi></mml:mrow></mml:msub><mml:mo>)</mml:mo></mml:mrow></mml:mrow></mml:mrow></mml:math></inline-formula>, <inline-formula><mml:math id="mm143" overflow="scroll"><mml:mrow><mml:mrow><mml:msub><mml:mi>d</mml:mi><mml:mi>i</mml:mi></mml:msub><mml:mo>=</mml:mo><mml:msub><mml:mi>r</mml:mi><mml:mi>i</mml:mi></mml:msub><mml:mo>+</mml:mo><mml:mi>s</mml:mi><mml:msub><mml:mi>h</mml:mi><mml:mrow><mml:mn>1</mml:mn><mml:mi>i</mml:mi></mml:mrow></mml:msub><mml:mspace width="3.33333pt"/><mml:mo form="prefix">mod</mml:mo><mml:mspace width="0.277778em"/><mml:mi>q</mml:mi></mml:mrow></mml:mrow></mml:math></inline-formula>. Then, based on the characteristics of the vehicle (e.g., model, capacity), KGC assigns an existing or creates a new class identifier <inline-formula><mml:math id="mm144" overflow="scroll"><mml:mrow><mml:mrow><mml:mi>g</mml:mi><mml:mi>i</mml:mi><mml:msub><mml:mi>d</mml:mi><mml:mi>i</mml:mi></mml:msub><mml:mo>&#8712;</mml:mo><mml:msubsup><mml:mi>Z</mml:mi><mml:mi>q</mml:mi><mml:mo>&#8727;</mml:mo></mml:msubsup></mml:mrow></mml:mrow></mml:math></inline-formula> to <inline-formula><mml:math id="mm145" overflow="scroll"><mml:mrow><mml:msub><mml:mi mathvariant="italic">SV</mml:mi><mml:mi>i</mml:mi></mml:msub></mml:mrow></mml:math></inline-formula> and transmits <inline-formula><mml:math id="mm146" overflow="scroll"><mml:mrow><mml:mrow><mml:mo>{</mml:mo><mml:msub><mml:mi>d</mml:mi><mml:mi>i</mml:mi></mml:msub><mml:mo>,</mml:mo><mml:msub><mml:mi>R</mml:mi><mml:mi>i</mml:mi></mml:msub><mml:mo>,</mml:mo><mml:mi>g</mml:mi><mml:mi>i</mml:mi><mml:msub><mml:mi>d</mml:mi><mml:mi>i</mml:mi></mml:msub><mml:mo>}</mml:mo></mml:mrow></mml:mrow></mml:math></inline-formula> to <inline-formula><mml:math id="mm147" overflow="scroll"><mml:mrow><mml:msub><mml:mi mathvariant="italic">SV</mml:mi><mml:mi>i</mml:mi></mml:msub></mml:mrow></mml:math></inline-formula> through a secure channel. Note that every time after a new class identifier <inline-formula><mml:math id="mm148" overflow="scroll"><mml:mrow><mml:mrow><mml:mi>g</mml:mi><mml:mi>i</mml:mi><mml:msub><mml:mi>d</mml:mi><mml:mrow><mml:mi>n</mml:mi><mml:mi>e</mml:mi><mml:mi>w</mml:mi></mml:mrow></mml:msub></mml:mrow></mml:mrow></mml:math></inline-formula> is created and assigned, KGC calculates <inline-formula><mml:math id="mm149" overflow="scroll"><mml:mrow><mml:mrow><mml:mi>G</mml:mi><mml:mi>I</mml:mi><mml:msub><mml:mi>D</mml:mi><mml:mrow><mml:mi>n</mml:mi><mml:mi>e</mml:mi><mml:mi>w</mml:mi></mml:mrow></mml:msub><mml:mo>=</mml:mo><mml:mi>g</mml:mi><mml:mi>i</mml:mi><mml:msub><mml:mi>d</mml:mi><mml:mrow><mml:mi>n</mml:mi><mml:mi>e</mml:mi><mml:mi>w</mml:mi></mml:mrow></mml:msub><mml:mi>P</mml:mi></mml:mrow></mml:mrow></mml:math></inline-formula> and discloses it to all the entities within the system.</p></list-item><list-item><label>(4)</label><p>After obtaining the message from KGC, <inline-formula><mml:math id="mm150" overflow="scroll"><mml:mrow><mml:msub><mml:mi mathvariant="italic">SV</mml:mi><mml:mi>i</mml:mi></mml:msub></mml:mrow></mml:math></inline-formula> sets its public key as <inline-formula><mml:math id="mm151" overflow="scroll"><mml:mrow><mml:mrow><mml:msub><mml:mi mathvariant="italic">PK</mml:mi><mml:mi>i</mml:mi></mml:msub><mml:mo>=</mml:mo><mml:mrow><mml:mo>(</mml:mo><mml:msub><mml:mi>X</mml:mi><mml:mi>i</mml:mi></mml:msub><mml:mo>,</mml:mo><mml:msub><mml:mi>R</mml:mi><mml:mi>i</mml:mi></mml:msub><mml:mo>)</mml:mo></mml:mrow></mml:mrow></mml:mrow></mml:math></inline-formula> and its private key as <inline-formula><mml:math id="mm152" overflow="scroll"><mml:mrow><mml:mrow><mml:mi>s</mml:mi><mml:msub><mml:mi>k</mml:mi><mml:mi>i</mml:mi></mml:msub><mml:mo>=</mml:mo><mml:mrow><mml:mo>(</mml:mo><mml:msub><mml:mi>x</mml:mi><mml:mi>i</mml:mi></mml:msub><mml:mo>,</mml:mo><mml:msub><mml:mi>d</mml:mi><mml:mi>i</mml:mi></mml:msub><mml:mo>)</mml:mo></mml:mrow></mml:mrow></mml:mrow></mml:math></inline-formula>.</p></list-item></list></sec><sec id="sec4dot2dot2-sensors-25-05441"><title>4.2.2. User Registration</title><p>As presented in <xref rid="sensors-25-05441-f004" ref-type="fig">Figure 4</xref>, when registering, users are required to provide their biometric information. Then, based on the pre-selected category identifier and the pseudonym generated, KGC generates the corresponding credentials, which are consequently encrypted and broadcast to all SVs within the system by TA.</p><list list-type="simple"><list-item><label>(1)</label><p>With the real user identity <inline-formula><mml:math id="mm153" overflow="scroll"><mml:mrow><mml:msub><mml:mi mathvariant="italic">UID</mml:mi><mml:mi>j</mml:mi></mml:msub></mml:mrow></mml:math></inline-formula>, the target category identifier <inline-formula><mml:math id="mm154" overflow="scroll"><mml:mrow><mml:mrow><mml:mi>G</mml:mi><mml:mi>I</mml:mi><mml:msub><mml:mi>D</mml:mi><mml:mi>j</mml:mi></mml:msub></mml:mrow></mml:mrow></mml:math></inline-formula>, and the biometric information <inline-formula><mml:math id="mm155" overflow="scroll"><mml:mrow><mml:mrow><mml:mi>B</mml:mi><mml:mi>i</mml:mi><mml:msub><mml:mi>o</mml:mi><mml:mi>j</mml:mi></mml:msub></mml:mrow></mml:mrow></mml:math></inline-formula> acquired from <inline-formula><mml:math id="mm156" overflow="scroll"><mml:mrow><mml:msub><mml:mi mathvariant="italic">User</mml:mi><mml:mi>j</mml:mi></mml:msub></mml:mrow></mml:math></inline-formula>, TA first utilizes the fuzzy extractor to calculate <inline-formula><mml:math id="mm157" overflow="scroll"><mml:mrow><mml:mrow><mml:mi>G</mml:mi><mml:mi>e</mml:mi><mml:mi>n</mml:mi><mml:mrow><mml:mo>(</mml:mo><mml:mi>B</mml:mi><mml:mi>i</mml:mi><mml:msub><mml:mi>o</mml:mi><mml:mi>j</mml:mi></mml:msub><mml:mo>)</mml:mo></mml:mrow><mml:mo>=</mml:mo><mml:mrow><mml:mo>(</mml:mo><mml:msub><mml:mi>&#952;</mml:mi><mml:mi>j</mml:mi></mml:msub><mml:mo>,</mml:mo><mml:msub><mml:mi>&#964;</mml:mi><mml:mi>j</mml:mi></mml:msub><mml:mo>)</mml:mo></mml:mrow></mml:mrow></mml:mrow></mml:math></inline-formula>. Then, TA randomly selects <inline-formula><mml:math id="mm158" overflow="scroll"><mml:mrow><mml:mrow><mml:mi>&#965;</mml:mi><mml:mo>&#8712;</mml:mo><mml:msubsup><mml:mi>Z</mml:mi><mml:mi>q</mml:mi><mml:mo>&#8727;</mml:mo></mml:msubsup></mml:mrow></mml:mrow></mml:math></inline-formula> and calculates <inline-formula><mml:math id="mm159" overflow="scroll"><mml:mrow><mml:mrow><mml:msub><mml:mi mathvariant="italic">PID</mml:mi><mml:mi>j</mml:mi></mml:msub><mml:mo>=</mml:mo><mml:msub><mml:mi mathvariant="italic">UID</mml:mi><mml:mi>j</mml:mi></mml:msub><mml:mo>&#8853;</mml:mo><mml:msub><mml:mi>H</mml:mi><mml:mn>0</mml:mn></mml:msub><mml:mrow><mml:mo>(</mml:mo><mml:mi>&#965;</mml:mi></mml:mrow><mml:msub><mml:mi>T</mml:mi><mml:mrow><mml:mi>p</mml:mi><mml:mi>u</mml:mi><mml:mi>b</mml:mi></mml:mrow></mml:msub><mml:mo>,</mml:mo><mml:msub><mml:mi>&#952;</mml:mi><mml:mi>j</mml:mi></mml:msub><mml:mrow><mml:mo>|</mml:mo><mml:mo>|</mml:mo></mml:mrow><mml:msub><mml:mi>T</mml:mi><mml:mi>j</mml:mi></mml:msub><mml:mrow><mml:mo>)</mml:mo></mml:mrow></mml:mrow></mml:mrow></mml:math></inline-formula>, where <inline-formula><mml:math id="mm160" overflow="scroll"><mml:mrow><mml:msub><mml:mi>T</mml:mi><mml:mi>j</mml:mi></mml:msub></mml:mrow></mml:math></inline-formula> is the current timestamp. Consequently, TA transmits <inline-formula><mml:math id="mm161" overflow="scroll"><mml:mrow><mml:mrow><mml:mo>{</mml:mo><mml:msub><mml:mi mathvariant="italic">PID</mml:mi><mml:mi>j</mml:mi></mml:msub><mml:mo>,</mml:mo><mml:msub><mml:mi>&#952;</mml:mi><mml:mi>j</mml:mi></mml:msub><mml:mo>,</mml:mo><mml:mi>G</mml:mi><mml:mi>I</mml:mi><mml:msub><mml:mi>D</mml:mi><mml:mi>j</mml:mi></mml:msub><mml:mo>}</mml:mo></mml:mrow></mml:mrow></mml:math></inline-formula> to KGC through a secure channel.</p></list-item><list-item><label>(2)</label><p>Upon receiving the data of TA, KGC randomly selects <inline-formula><mml:math id="mm162" overflow="scroll"><mml:mrow><mml:mrow><mml:msub><mml:mi>r</mml:mi><mml:mi>j</mml:mi></mml:msub><mml:mo>&#8712;</mml:mo><mml:msubsup><mml:mi>Z</mml:mi><mml:mi>q</mml:mi><mml:mo>&#8727;</mml:mo></mml:msubsup></mml:mrow></mml:mrow></mml:math></inline-formula> and calculates <inline-formula><mml:math id="mm163" overflow="scroll"><mml:mrow><mml:mrow><mml:msub><mml:mi>R</mml:mi><mml:mi>j</mml:mi></mml:msub><mml:mo>=</mml:mo><mml:msub><mml:mi>r</mml:mi><mml:mi>j</mml:mi></mml:msub><mml:mi>P</mml:mi></mml:mrow></mml:mrow></mml:math></inline-formula>. Then, KGC calculates the credential <inline-formula><mml:math id="mm164" overflow="scroll"><mml:mrow><mml:mrow><mml:msub><mml:mi>d</mml:mi><mml:mi>j</mml:mi></mml:msub><mml:mo>=</mml:mo><mml:msub><mml:mi>r</mml:mi><mml:mi>j</mml:mi></mml:msub><mml:mo>+</mml:mo><mml:mi>s</mml:mi><mml:msub><mml:mi>h</mml:mi><mml:mrow><mml:mn>1</mml:mn><mml:mi>j</mml:mi></mml:mrow></mml:msub><mml:mspace width="3.33333pt"/><mml:mo form="prefix">mod</mml:mo><mml:mspace width="0.277778em"/><mml:mi>q</mml:mi></mml:mrow></mml:mrow></mml:math></inline-formula> for <inline-formula><mml:math id="mm165" overflow="scroll"><mml:mrow><mml:msub><mml:mi mathvariant="italic">User</mml:mi><mml:mi>j</mml:mi></mml:msub></mml:mrow></mml:math></inline-formula> and transmits it to TA via a secure channel, where <inline-formula><mml:math id="mm166" overflow="scroll"><mml:mrow><mml:mrow><mml:msub><mml:mi>h</mml:mi><mml:mrow><mml:mn>1</mml:mn><mml:mi>j</mml:mi></mml:mrow></mml:msub><mml:mo>=</mml:mo><mml:msub><mml:mi>H</mml:mi><mml:mn>1</mml:mn></mml:msub><mml:mrow><mml:mo>(</mml:mo><mml:msub><mml:mi mathvariant="italic">PID</mml:mi><mml:mi>j</mml:mi></mml:msub><mml:mo>,</mml:mo><mml:mi>G</mml:mi><mml:mi>I</mml:mi><mml:msub><mml:mi>D</mml:mi><mml:mi>j</mml:mi></mml:msub><mml:mo>,</mml:mo><mml:msub><mml:mi>R</mml:mi><mml:mi>j</mml:mi></mml:msub><mml:mo>,</mml:mo><mml:msub><mml:mi>P</mml:mi><mml:mrow><mml:mi>p</mml:mi><mml:mi>u</mml:mi><mml:mi>b</mml:mi></mml:mrow></mml:msub><mml:mo>)</mml:mo></mml:mrow></mml:mrow></mml:mrow></mml:math></inline-formula>.</p></list-item><list-item><label>(3)</label><p>Next, TA randomly selects <inline-formula><mml:math id="mm167" overflow="scroll"><mml:mrow><mml:mrow><mml:msub><mml:mi>u</mml:mi><mml:mi>j</mml:mi></mml:msub><mml:mo>&#8712;</mml:mo><mml:msubsup><mml:mi>Z</mml:mi><mml:mi>q</mml:mi><mml:mo>&#8727;</mml:mo></mml:msubsup></mml:mrow></mml:mrow></mml:math></inline-formula> and an identifier update secret <inline-formula><mml:math id="mm168" overflow="scroll"><mml:mrow><mml:mrow><mml:msub><mml:mi>p</mml:mi><mml:mi>j</mml:mi></mml:msub><mml:mo>&#8712;</mml:mo><mml:msub><mml:mi>Z</mml:mi><mml:mrow><mml:mi>p</mml:mi><mml:mi>r</mml:mi><mml:mi>i</mml:mi><mml:mi>m</mml:mi><mml:mi>e</mml:mi></mml:mrow></mml:msub></mml:mrow></mml:mrow></mml:math></inline-formula>. Then, TA calculates <inline-formula><mml:math id="mm169" overflow="scroll"><mml:mrow><mml:mrow><mml:msub><mml:mi>U</mml:mi><mml:mi>j</mml:mi></mml:msub><mml:mo>=</mml:mo><mml:msub><mml:mi>u</mml:mi><mml:mi>j</mml:mi></mml:msub><mml:mi>P</mml:mi></mml:mrow></mml:mrow></mml:math></inline-formula> and <inline-formula><mml:math id="mm170" overflow="scroll"><mml:mrow><mml:mrow><mml:msub><mml:mi>V</mml:mi><mml:mi>j</mml:mi></mml:msub><mml:mrow><mml:mo>=</mml:mo><mml:mo>(</mml:mo></mml:mrow><mml:msub><mml:mi>d</mml:mi><mml:mi>j</mml:mi></mml:msub><mml:mrow><mml:mo>|</mml:mo><mml:mo>|</mml:mo></mml:mrow><mml:msub><mml:mi>p</mml:mi><mml:mi>j</mml:mi></mml:msub><mml:mrow><mml:mo>)</mml:mo><mml:mo>&#160;</mml:mo><mml:mo>&#8853;</mml:mo><mml:mo>&#160;</mml:mo></mml:mrow><mml:msub><mml:mi>H</mml:mi><mml:mn>0</mml:mn></mml:msub><mml:mrow><mml:mo>(</mml:mo></mml:mrow><mml:msub><mml:mi>u</mml:mi><mml:mi>j</mml:mi></mml:msub><mml:mi>G</mml:mi><mml:mi>I</mml:mi><mml:msub><mml:mi>D</mml:mi><mml:mi>j</mml:mi></mml:msub><mml:mo>,</mml:mo><mml:msub><mml:mi>&#952;</mml:mi><mml:mi>j</mml:mi></mml:msub><mml:mrow><mml:mo>|</mml:mo><mml:mo>|</mml:mo></mml:mrow><mml:msub><mml:mi>T</mml:mi><mml:mi>j</mml:mi></mml:msub><mml:mrow><mml:mo>)</mml:mo></mml:mrow></mml:mrow></mml:mrow></mml:math></inline-formula>.</p></list-item><list-item><label>(4)</label><p>TA calculates <inline-formula><mml:math id="mm171" overflow="scroll"><mml:mrow><mml:mrow><mml:msub><mml:mi>&#981;</mml:mi><mml:mi>g</mml:mi></mml:msub><mml:mo>&#215;</mml:mo><mml:msub><mml:mi>&#946;</mml:mi><mml:mi>j</mml:mi></mml:msub><mml:mo>&#8801;</mml:mo><mml:mn>1</mml:mn><mml:mspace width="3.33333pt"/><mml:mo form="prefix">mod</mml:mo><mml:mspace width="0.277778em"/><mml:msub><mml:mi>p</mml:mi><mml:mi>j</mml:mi></mml:msub></mml:mrow></mml:mrow></mml:math></inline-formula>, <inline-formula><mml:math id="mm172" overflow="scroll"><mml:mrow><mml:mrow><mml:msub><mml:mi>&#961;</mml:mi><mml:mi>j</mml:mi></mml:msub><mml:mo>=</mml:mo><mml:msub><mml:mi>&#981;</mml:mi><mml:mi>g</mml:mi></mml:msub><mml:mo>&#215;</mml:mo><mml:msub><mml:mi>&#946;</mml:mi><mml:mi>j</mml:mi></mml:msub></mml:mrow></mml:mrow></mml:math></inline-formula> and records the parameters in a list <italic toggle="yes">L</italic>.</p></list-item><list-item><label>(5)</label><p>Finally, TA updates <inline-formula><mml:math id="mm173" overflow="scroll"><mml:mrow><mml:msub><mml:mi>&#981;</mml:mi><mml:mi>g</mml:mi></mml:msub></mml:mrow></mml:math></inline-formula> with <inline-formula><mml:math id="mm174" overflow="scroll"><mml:mrow><mml:mrow><mml:msubsup><mml:mi>&#981;</mml:mi><mml:mi>g</mml:mi><mml:mo>&#8242;</mml:mo></mml:msubsup><mml:mo>=</mml:mo><mml:msub><mml:mi>&#981;</mml:mi><mml:mi>g</mml:mi></mml:msub><mml:mo>&#215;</mml:mo><mml:msub><mml:mi>p</mml:mi><mml:mi>j</mml:mi></mml:msub></mml:mrow></mml:mrow></mml:math></inline-formula>, <inline-formula><mml:math id="mm175" overflow="scroll"><mml:mrow><mml:mo>&#937;</mml:mo></mml:mrow></mml:math></inline-formula> with <inline-formula><mml:math id="mm176" overflow="scroll"><mml:mrow><mml:mrow><mml:msup><mml:mo>&#937;</mml:mo><mml:mo>&#8242;</mml:mo></mml:msup><mml:mo>=</mml:mo><mml:mo>&#937;</mml:mo><mml:mo>+</mml:mo><mml:msub><mml:mi>&#961;</mml:mi><mml:mi>j</mml:mi></mml:msub></mml:mrow></mml:mrow></mml:math></inline-formula> and broadcasts <inline-formula><mml:math id="mm177" overflow="scroll"><mml:mrow><mml:mrow><mml:mo>(</mml:mo><mml:msub><mml:mi mathvariant="italic">PID</mml:mi><mml:mi>j</mml:mi></mml:msub><mml:mo>,</mml:mo><mml:msub><mml:mi>R</mml:mi><mml:mi>j</mml:mi></mml:msub><mml:mo>,</mml:mo><mml:msub><mml:mi>&#964;</mml:mi><mml:mi>j</mml:mi></mml:msub><mml:mo>,</mml:mo><mml:msub><mml:mi>V</mml:mi><mml:mi>j</mml:mi></mml:msub><mml:mo>,</mml:mo><mml:msub><mml:mi>U</mml:mi><mml:mi>j</mml:mi></mml:msub><mml:mo>,</mml:mo><mml:msub><mml:mi>T</mml:mi><mml:mi>j</mml:mi></mml:msub><mml:mo>)</mml:mo></mml:mrow></mml:mrow></mml:math></inline-formula> through a public channel.</p></list-item></list></sec><sec id="sec4dot2dot3-sensors-25-05441"><title>4.2.3. Group Identifier Distribution</title><p>To transmit the latest group identifier to all SVs, TA first randomly selects <inline-formula><mml:math id="mm178" overflow="scroll"><mml:mrow><mml:mrow><mml:mi>w</mml:mi><mml:mo>,</mml:mo><mml:mi>z</mml:mi><mml:mo>&#8712;</mml:mo><mml:msubsup><mml:mi>Z</mml:mi><mml:mi>q</mml:mi><mml:mo>&#8727;</mml:mo></mml:msubsup></mml:mrow></mml:mrow></mml:math></inline-formula> and calculates <inline-formula><mml:math id="mm179" overflow="scroll"><mml:mrow><mml:mrow><mml:mi>W</mml:mi><mml:mo>=</mml:mo><mml:mi>w</mml:mi><mml:mi>P</mml:mi></mml:mrow></mml:mrow></mml:math></inline-formula>, <inline-formula><mml:math id="mm180" overflow="scroll"><mml:mrow><mml:mrow><mml:mi>&#950;</mml:mi><mml:mo>=</mml:mo><mml:mi>z</mml:mi><mml:mo>&#937;</mml:mo></mml:mrow></mml:mrow></mml:math></inline-formula>, and <inline-formula><mml:math id="mm181" overflow="scroll"><mml:mrow><mml:mrow><mml:mi>&#958;</mml:mi><mml:mo>=</mml:mo><mml:mi>w</mml:mi><mml:mo>+</mml:mo><mml:msub><mml:mi>H</mml:mi><mml:mn>2</mml:mn></mml:msub><mml:mrow><mml:mo>(</mml:mo><mml:mi>&#950;</mml:mi><mml:mo>,</mml:mo><mml:mi>W</mml:mi><mml:mo>,</mml:mo><mml:msub><mml:mi>T</mml:mi><mml:mrow><mml:mi>p</mml:mi><mml:mi>u</mml:mi><mml:mi>b</mml:mi></mml:mrow></mml:msub><mml:mo>,</mml:mo><mml:msub><mml:mi>T</mml:mi><mml:mi>z</mml:mi></mml:msub><mml:mo>)</mml:mo></mml:mrow><mml:mi>t</mml:mi></mml:mrow></mml:mrow></mml:math></inline-formula>, where <inline-formula><mml:math id="mm182" overflow="scroll"><mml:mrow><mml:msub><mml:mi>T</mml:mi><mml:mi>z</mml:mi></mml:msub></mml:mrow></mml:math></inline-formula> denotes the current timestamp. Later, TA broadcasts <inline-formula><mml:math id="mm183" overflow="scroll"><mml:mrow><mml:mrow><mml:mo>(</mml:mo><mml:mi>&#950;</mml:mi><mml:mo>,</mml:mo><mml:mi>W</mml:mi><mml:mo>,</mml:mo><mml:mi>&#958;</mml:mi><mml:mo>,</mml:mo><mml:msub><mml:mi>T</mml:mi><mml:mi>z</mml:mi></mml:msub><mml:mo>)</mml:mo></mml:mrow></mml:mrow></mml:math></inline-formula> to all vehicles within the system.</p><p>Upon receiving the message from TA, SVs will first check the freshness of the message. Then, they will verify the authenticity of <inline-formula><mml:math id="mm184" overflow="scroll"><mml:mrow><mml:mi>&#950;</mml:mi></mml:mrow></mml:math></inline-formula> by checking whether the equation <inline-formula><mml:math id="mm185" overflow="scroll"><mml:mrow><mml:mrow><mml:mi>&#958;</mml:mi><mml:mi>P</mml:mi><mml:mo>=</mml:mo><mml:mi>W</mml:mi><mml:mo>+</mml:mo><mml:msub><mml:mi>H</mml:mi><mml:mn>2</mml:mn></mml:msub><mml:mrow><mml:mo>(</mml:mo><mml:mi>&#950;</mml:mi><mml:mo>,</mml:mo><mml:mi>W</mml:mi><mml:mo>,</mml:mo><mml:msub><mml:mi>T</mml:mi><mml:mrow><mml:mi>p</mml:mi><mml:mi>u</mml:mi><mml:mi>b</mml:mi></mml:mrow></mml:msub><mml:mo>,</mml:mo><mml:msub><mml:mi>T</mml:mi><mml:mi>z</mml:mi></mml:msub><mml:mo>)</mml:mo></mml:mrow><mml:msub><mml:mi>T</mml:mi><mml:mrow><mml:mi>p</mml:mi><mml:mi>u</mml:mi><mml:mi>b</mml:mi></mml:mrow></mml:msub></mml:mrow></mml:mrow></mml:math></inline-formula> holds. If not, the message will be rejected. Otherwise, SVs will accept the broadcast message and store <inline-formula><mml:math id="mm186" overflow="scroll"><mml:mrow><mml:mi>&#950;</mml:mi></mml:mrow></mml:math></inline-formula> locally for the subsequent derivation of the group identifier.</p></sec></sec><sec id="sec4dot3-sensors-25-05441"><title>4.3. Authentication</title><p>By providing the biometric information, registered users can log into any SV within the same pre-selected target category. Subsequently, the authenticated SVs can establish communications with signature generation and verification. The detailed process of the authentication phase is illustrated in <xref rid="sensors-25-05441-f005" ref-type="fig">Figure 5</xref>.</p><sec id="sec4dot3dot1-sensors-25-05441"><title>4.3.1. User Login</title><p>Suppose that <inline-formula><mml:math id="mm187" overflow="scroll"><mml:mrow><mml:msub><mml:mi mathvariant="italic">User</mml:mi><mml:mi>j</mml:mi></mml:msub></mml:mrow></mml:math></inline-formula> is requesting to log in to <inline-formula><mml:math id="mm188" overflow="scroll"><mml:mrow><mml:msub><mml:mi mathvariant="italic">SV</mml:mi><mml:mi>i</mml:mi></mml:msub></mml:mrow></mml:math></inline-formula>, where the target identifier <inline-formula><mml:math id="mm189" overflow="scroll"><mml:mrow><mml:mrow><mml:mi>G</mml:mi><mml:mi>I</mml:mi><mml:msub><mml:mi>D</mml:mi><mml:mi>j</mml:mi></mml:msub><mml:mo>=</mml:mo><mml:mi>G</mml:mi><mml:mi>I</mml:mi><mml:msub><mml:mi>D</mml:mi><mml:mi>i</mml:mi></mml:msub></mml:mrow></mml:mrow></mml:math></inline-formula>.</p><list list-type="simple"><list-item><label>(1)</label><p>Upon receiving the biometric data <inline-formula><mml:math id="mm190" overflow="scroll"><mml:mrow><mml:mrow><mml:mi>B</mml:mi><mml:mi>i</mml:mi><mml:msub><mml:mi>o</mml:mi><mml:mi>j</mml:mi></mml:msub></mml:mrow></mml:mrow></mml:math></inline-formula> from <inline-formula><mml:math id="mm191" overflow="scroll"><mml:mrow><mml:msub><mml:mi mathvariant="italic">User</mml:mi><mml:mi>j</mml:mi></mml:msub></mml:mrow></mml:math></inline-formula>, <inline-formula><mml:math id="mm192" overflow="scroll"><mml:mrow><mml:msub><mml:mi mathvariant="italic">SV</mml:mi><mml:mi>i</mml:mi></mml:msub></mml:mrow></mml:math></inline-formula> utilizes the fuzzy extractor to obtain <inline-formula><mml:math id="mm193" overflow="scroll"><mml:mrow><mml:mrow><mml:msub><mml:mi>&#952;</mml:mi><mml:mi>j</mml:mi></mml:msub><mml:mo>=</mml:mo><mml:mi>R</mml:mi><mml:mi>e</mml:mi><mml:mi>p</mml:mi><mml:mrow><mml:mo>(</mml:mo><mml:mi>B</mml:mi><mml:mi>i</mml:mi><mml:msub><mml:mi>o</mml:mi><mml:mi>j</mml:mi></mml:msub><mml:mo>,</mml:mo><mml:msub><mml:mi>&#964;</mml:mi><mml:mi>j</mml:mi></mml:msub><mml:mo>)</mml:mo></mml:mrow></mml:mrow></mml:mrow></mml:math></inline-formula>.</p></list-item><list-item><label>(2)</label><p>Next, <inline-formula><mml:math id="mm194" overflow="scroll"><mml:mrow><mml:msub><mml:mi mathvariant="italic">SV</mml:mi><mml:mi>i</mml:mi></mml:msub></mml:mrow></mml:math></inline-formula> calculates <inline-formula><mml:math id="mm195" overflow="scroll"><mml:mrow><mml:mrow><mml:msub><mml:mi>d</mml:mi><mml:mi>j</mml:mi></mml:msub><mml:mrow><mml:mo>|</mml:mo><mml:mo>|</mml:mo></mml:mrow><mml:msub><mml:mi>p</mml:mi><mml:mi>j</mml:mi></mml:msub><mml:mo>=</mml:mo><mml:msub><mml:mi>V</mml:mi><mml:mi>j</mml:mi></mml:msub><mml:mo>&#8853;</mml:mo><mml:msub><mml:mi>H</mml:mi><mml:mn>0</mml:mn></mml:msub><mml:mrow><mml:mo>(</mml:mo><mml:mi>g</mml:mi><mml:mi>i</mml:mi></mml:mrow><mml:msub><mml:mi>d</mml:mi><mml:mi>i</mml:mi></mml:msub><mml:msub><mml:mi>U</mml:mi><mml:mi>j</mml:mi></mml:msub><mml:mo>,</mml:mo><mml:msub><mml:mi>&#952;</mml:mi><mml:mi>j</mml:mi></mml:msub><mml:mrow><mml:mo>|</mml:mo><mml:mo>|</mml:mo></mml:mrow><mml:msub><mml:mi>T</mml:mi><mml:mi>j</mml:mi></mml:msub><mml:mrow><mml:mo>)</mml:mo></mml:mrow></mml:mrow></mml:mrow></mml:math></inline-formula>, <inline-formula><mml:math id="mm196" overflow="scroll"><mml:mrow><mml:mrow><mml:msubsup><mml:mi>h</mml:mi><mml:mrow><mml:mn>1</mml:mn><mml:mi>j</mml:mi></mml:mrow><mml:mo>&#8242;</mml:mo></mml:msubsup><mml:mo>=</mml:mo><mml:msub><mml:mi>H</mml:mi><mml:mn>1</mml:mn></mml:msub><mml:mrow><mml:mo>(</mml:mo><mml:msub><mml:mi mathvariant="italic">PID</mml:mi><mml:mi>j</mml:mi></mml:msub><mml:mo>,</mml:mo><mml:mi>G</mml:mi><mml:mi>I</mml:mi><mml:msub><mml:mi>D</mml:mi><mml:mi>i</mml:mi></mml:msub><mml:mo>,</mml:mo><mml:msub><mml:mi>R</mml:mi><mml:mi>j</mml:mi></mml:msub><mml:mo>,</mml:mo><mml:msub><mml:mi>P</mml:mi><mml:mrow><mml:mi>p</mml:mi><mml:mi>u</mml:mi><mml:mi>b</mml:mi></mml:mrow></mml:msub><mml:mo>)</mml:mo></mml:mrow></mml:mrow></mml:mrow></mml:math></inline-formula> and checks whether the equation <inline-formula><mml:math id="mm197" overflow="scroll"><mml:mrow><mml:mrow><mml:msub><mml:mi>d</mml:mi><mml:mi>j</mml:mi></mml:msub><mml:mi>P</mml:mi><mml:mo>=</mml:mo><mml:msub><mml:mi>R</mml:mi><mml:mi>j</mml:mi></mml:msub><mml:mo>+</mml:mo><mml:msubsup><mml:mi>h</mml:mi><mml:mrow><mml:mn>1</mml:mn><mml:mi>j</mml:mi></mml:mrow><mml:mo>&#8242;</mml:mo></mml:msubsup><mml:msub><mml:mi>P</mml:mi><mml:mrow><mml:mi>p</mml:mi><mml:mi>u</mml:mi><mml:mi>b</mml:mi></mml:mrow></mml:msub></mml:mrow></mml:mrow></mml:math></inline-formula> holds. If not, <inline-formula><mml:math id="mm198" overflow="scroll"><mml:mrow><mml:msub><mml:mi mathvariant="italic">SV</mml:mi><mml:mi>i</mml:mi></mml:msub></mml:mrow></mml:math></inline-formula> rejects the request. Otherwise, <inline-formula><mml:math id="mm199" overflow="scroll"><mml:mrow><mml:msub><mml:mi mathvariant="italic">User</mml:mi><mml:mi>j</mml:mi></mml:msub></mml:mrow></mml:math></inline-formula> succeeds in the login process.</p></list-item></list></sec><sec id="sec4dot3dot2-sensors-25-05441"><title>4.3.2. Signing</title><p>Prior to generating the signature for message <inline-formula><mml:math id="mm200" overflow="scroll"><mml:mrow><mml:msub><mml:mi>m</mml:mi><mml:mi>i</mml:mi></mml:msub></mml:mrow></mml:math></inline-formula>, <inline-formula><mml:math id="mm201" overflow="scroll"><mml:mrow><mml:msub><mml:mi mathvariant="italic">SV</mml:mi><mml:mi>i</mml:mi></mml:msub></mml:mrow></mml:math></inline-formula> extracts the group identifier from the locally stored <inline-formula><mml:math id="mm202" overflow="scroll"><mml:mrow><mml:mi>&#950;</mml:mi></mml:mrow></mml:math></inline-formula> by calculating <inline-formula><mml:math id="mm203" overflow="scroll"><mml:mrow><mml:mrow><mml:mi>z</mml:mi><mml:mo>=</mml:mo><mml:mi>&#950;</mml:mi><mml:mspace width="3.33333pt"/><mml:mo form="prefix">mod</mml:mo><mml:mspace width="0.277778em"/><mml:msub><mml:mi>p</mml:mi><mml:mi>j</mml:mi></mml:msub></mml:mrow></mml:mrow></mml:math></inline-formula>. Subsequently, <inline-formula><mml:math id="mm204" overflow="scroll"><mml:mrow><mml:msub><mml:mi mathvariant="italic">SV</mml:mi><mml:mi>i</mml:mi></mml:msub></mml:mrow></mml:math></inline-formula> proceeds with the signing process, which is detailed as follows:<list list-type="simple"><list-item><label>(1)</label><p><inline-formula><mml:math id="mm205" overflow="scroll"><mml:mrow><mml:msub><mml:mi mathvariant="italic">SV</mml:mi><mml:mi>i</mml:mi></mml:msub></mml:mrow></mml:math></inline-formula> randomly selects <inline-formula><mml:math id="mm206" overflow="scroll"><mml:mrow><mml:mrow><mml:msub><mml:mi>y</mml:mi><mml:mi>i</mml:mi></mml:msub><mml:mo>&#8712;</mml:mo><mml:msubsup><mml:mi>Z</mml:mi><mml:mi>q</mml:mi><mml:mo>&#8727;</mml:mo></mml:msubsup></mml:mrow></mml:mrow></mml:math></inline-formula> and calculates <inline-formula><mml:math id="mm207" overflow="scroll"><mml:mrow><mml:mrow><mml:msub><mml:mi>Y</mml:mi><mml:mi>i</mml:mi></mml:msub><mml:mo>=</mml:mo><mml:msub><mml:mi>y</mml:mi><mml:mi>i</mml:mi></mml:msub><mml:mi>P</mml:mi></mml:mrow></mml:mrow></mml:math></inline-formula>.</p></list-item><list-item><label>(2)</label><p><inline-formula><mml:math id="mm208" overflow="scroll"><mml:mrow><mml:msub><mml:mi mathvariant="italic">SV</mml:mi><mml:mi>i</mml:mi></mml:msub></mml:mrow></mml:math></inline-formula> then acquires the hash values <inline-formula><mml:math id="mm209" overflow="scroll"><mml:mrow><mml:mrow><mml:msub><mml:mi>h</mml:mi><mml:mrow><mml:mn>3</mml:mn><mml:mi>i</mml:mi></mml:mrow></mml:msub><mml:mo>,</mml:mo><mml:msub><mml:mi>h</mml:mi><mml:mrow><mml:mn>4</mml:mn><mml:mi>i</mml:mi></mml:mrow></mml:msub></mml:mrow></mml:mrow></mml:math></inline-formula> by calculating <inline-formula><mml:math id="mm210" overflow="scroll"><mml:mrow><mml:mrow><mml:msub><mml:mi>h</mml:mi><mml:mrow><mml:mn>3</mml:mn><mml:mi>i</mml:mi></mml:mrow></mml:msub><mml:mo>=</mml:mo><mml:msub><mml:mi>H</mml:mi><mml:mn>3</mml:mn></mml:msub><mml:mrow><mml:mo>(</mml:mo><mml:msub><mml:mi>m</mml:mi><mml:mi>i</mml:mi></mml:msub><mml:mo>,</mml:mo><mml:mi>E</mml:mi><mml:mi>I</mml:mi><mml:msub><mml:mi>D</mml:mi><mml:mrow><mml:mi>i</mml:mi><mml:mi>j</mml:mi></mml:mrow></mml:msub><mml:mo>,</mml:mo><mml:msub><mml:mi mathvariant="italic">PK</mml:mi><mml:mi>i</mml:mi></mml:msub><mml:mo>,</mml:mo><mml:msub><mml:mi>Y</mml:mi><mml:mi>i</mml:mi></mml:msub><mml:mo>,</mml:mo><mml:msub><mml:mi>R</mml:mi><mml:mi>j</mml:mi></mml:msub><mml:mo>,</mml:mo><mml:mi>z</mml:mi><mml:mo>,</mml:mo><mml:msub><mml:mi>T</mml:mi><mml:mi>i</mml:mi></mml:msub><mml:mo>)</mml:mo></mml:mrow></mml:mrow></mml:mrow></mml:math></inline-formula> and <inline-formula><mml:math id="mm211" overflow="scroll"><mml:mrow><mml:mrow><mml:msub><mml:mi>h</mml:mi><mml:mrow><mml:mn>4</mml:mn><mml:mi>i</mml:mi></mml:mrow></mml:msub><mml:mo>=</mml:mo><mml:msub><mml:mi>H</mml:mi><mml:mn>4</mml:mn></mml:msub><mml:mrow><mml:mo>(</mml:mo><mml:msub><mml:mi>m</mml:mi><mml:mi>i</mml:mi></mml:msub><mml:mo>,</mml:mo><mml:msub><mml:mi mathvariant="italic">EID</mml:mi><mml:mrow><mml:mi>i</mml:mi><mml:mi>j</mml:mi></mml:mrow></mml:msub><mml:mo>,</mml:mo><mml:msub><mml:mi mathvariant="italic">PK</mml:mi><mml:mi>i</mml:mi></mml:msub><mml:mo>,</mml:mo><mml:mi>z</mml:mi><mml:mo>,</mml:mo><mml:msub><mml:mi>T</mml:mi><mml:mi>i</mml:mi></mml:msub><mml:mo>)</mml:mo></mml:mrow></mml:mrow></mml:mrow></mml:math></inline-formula>, where <inline-formula><mml:math id="mm212" overflow="scroll"><mml:mrow><mml:msub><mml:mi>T</mml:mi><mml:mi>i</mml:mi></mml:msub></mml:mrow></mml:math></inline-formula> denotes the current timestamp and <inline-formula><mml:math id="mm213" overflow="scroll"><mml:mrow><mml:mrow><mml:msub><mml:mi mathvariant="italic">EID</mml:mi><mml:mrow><mml:mi>i</mml:mi><mml:mi>j</mml:mi></mml:mrow></mml:msub><mml:mo>=</mml:mo><mml:msub><mml:mi mathvariant="italic">PVID</mml:mi><mml:mi>i</mml:mi></mml:msub><mml:mrow><mml:mo>|</mml:mo><mml:mo>|</mml:mo></mml:mrow><mml:msub><mml:mi mathvariant="italic">PID</mml:mi><mml:mi>j</mml:mi></mml:msub></mml:mrow></mml:mrow></mml:math></inline-formula>.</p></list-item><list-item><label>(3)</label><p><inline-formula><mml:math id="mm214" overflow="scroll"><mml:mrow><mml:msub><mml:mi mathvariant="italic">SV</mml:mi><mml:mi>i</mml:mi></mml:msub></mml:mrow></mml:math></inline-formula> calculates <inline-formula><mml:math id="mm215" overflow="scroll"><mml:mrow><mml:mrow><mml:msub><mml:mi>&#963;</mml:mi><mml:mi>i</mml:mi></mml:msub><mml:mo>=</mml:mo><mml:msup><mml:mi>z</mml:mi><mml:mrow><mml:mo>&#8722;</mml:mo><mml:mn>1</mml:mn></mml:mrow></mml:msup><mml:mrow><mml:mo>(</mml:mo><mml:msub><mml:mi>y</mml:mi><mml:mi>i</mml:mi></mml:msub><mml:mo>+</mml:mo><mml:msub><mml:mi>h</mml:mi><mml:mrow><mml:mn>3</mml:mn><mml:mi>i</mml:mi></mml:mrow></mml:msub><mml:msub><mml:mi>x</mml:mi><mml:mi>i</mml:mi></mml:msub><mml:mo>+</mml:mo><mml:msub><mml:mi>h</mml:mi><mml:mrow><mml:mn>4</mml:mn><mml:mi>i</mml:mi></mml:mrow></mml:msub><mml:mrow><mml:mo>(</mml:mo><mml:msub><mml:mi>d</mml:mi><mml:mi>i</mml:mi></mml:msub><mml:mo>+</mml:mo><mml:msub><mml:mi>d</mml:mi><mml:mi>j</mml:mi></mml:msub><mml:mo>)</mml:mo></mml:mrow><mml:mo>)</mml:mo></mml:mrow><mml:mspace width="3.33333pt"/><mml:mo form="prefix">mod</mml:mo><mml:mspace width="0.277778em"/><mml:mi>q</mml:mi></mml:mrow></mml:mrow></mml:math></inline-formula>, where <inline-formula><mml:math id="mm216" overflow="scroll"><mml:mrow><mml:msup><mml:mi>z</mml:mi><mml:mrow><mml:mo>&#8722;</mml:mo><mml:mn>1</mml:mn></mml:mrow></mml:msup></mml:mrow></mml:math></inline-formula> denotes the multiplicative inverse of <italic toggle="yes">z</italic> on <inline-formula><mml:math id="mm217" overflow="scroll"><mml:mrow><mml:msubsup><mml:mi>Z</mml:mi><mml:mi>q</mml:mi><mml:mo>&#8727;</mml:mo></mml:msubsup></mml:mrow></mml:math></inline-formula>.</p></list-item><list-item><label>(4)</label><p>Finally, <inline-formula><mml:math id="mm218" overflow="scroll"><mml:mrow><mml:msub><mml:mi mathvariant="italic">SV</mml:mi><mml:mi>i</mml:mi></mml:msub></mml:mrow></mml:math></inline-formula> constructs the signature <inline-formula><mml:math id="mm219" overflow="scroll"><mml:mrow><mml:mrow><mml:msub><mml:mi>c</mml:mi><mml:mi>i</mml:mi></mml:msub><mml:mo>=</mml:mo><mml:mrow><mml:mo>(</mml:mo><mml:msub><mml:mi>&#963;</mml:mi><mml:mi>i</mml:mi></mml:msub><mml:mo>,</mml:mo><mml:msub><mml:mi>Y</mml:mi><mml:mi>i</mml:mi></mml:msub><mml:mo>)</mml:mo></mml:mrow></mml:mrow></mml:mrow></mml:math></inline-formula> and sends the tuple <inline-formula><mml:math id="mm220" overflow="scroll"><mml:mrow><mml:mrow><mml:mo>(</mml:mo><mml:msub><mml:mi>m</mml:mi><mml:mi>i</mml:mi></mml:msub><mml:mo>,</mml:mo><mml:msub><mml:mi>c</mml:mi><mml:mi>i</mml:mi></mml:msub><mml:mo>,</mml:mo><mml:msub><mml:mi mathvariant="italic">EID</mml:mi><mml:mrow><mml:mi>i</mml:mi><mml:mi>j</mml:mi></mml:mrow></mml:msub><mml:mo>,</mml:mo><mml:msub><mml:mi mathvariant="italic">PK</mml:mi><mml:mi>i</mml:mi></mml:msub><mml:mo>,</mml:mo><mml:msub><mml:mi>R</mml:mi><mml:mi>j</mml:mi></mml:msub><mml:mo>,</mml:mo><mml:msub><mml:mi>T</mml:mi><mml:mi>i</mml:mi></mml:msub><mml:mo>)</mml:mo></mml:mrow></mml:mrow></mml:math></inline-formula> to the receiver.</p></list-item></list></p></sec><sec id="sec4dot3dot3-sensors-25-05441"><title>4.3.3. Verification</title><p>Upon receiving the tuple from the sender, <inline-formula><mml:math id="mm221" overflow="scroll"><mml:mrow><mml:msub><mml:mi mathvariant="italic">SV</mml:mi><mml:mi>i</mml:mi></mml:msub></mml:mrow></mml:math></inline-formula>, a logged-in SV can verify the signature and proceed with authentication.</p><list list-type="simple"><list-item><label>(1)</label><p>Upon receiving the message, vehicle <inline-formula><mml:math id="mm222" overflow="scroll"><mml:mrow><mml:msub><mml:mi mathvariant="italic">SV</mml:mi><mml:mi>k</mml:mi></mml:msub></mml:mrow></mml:math></inline-formula> will first check its freshness and will abort it if the timestamp is considered invalid. Then, as mentioned in the signing process, <inline-formula><mml:math id="mm223" overflow="scroll"><mml:mrow><mml:msub><mml:mi mathvariant="italic">SV</mml:mi><mml:mi>k</mml:mi></mml:msub></mml:mrow></mml:math></inline-formula> will extract <italic toggle="yes">z</italic> from <inline-formula><mml:math id="mm224" overflow="scroll"><mml:mrow><mml:mi>&#958;</mml:mi></mml:mrow></mml:math></inline-formula> stored locally by calculating <inline-formula><mml:math id="mm225" overflow="scroll"><mml:mrow><mml:mrow><mml:mi>z</mml:mi><mml:mo>=</mml:mo><mml:mi>&#950;</mml:mi><mml:mspace width="3.33333pt"/><mml:mo form="prefix">mod</mml:mo><mml:mspace width="0.277778em"/><mml:msub><mml:mi>p</mml:mi><mml:mi>l</mml:mi></mml:msub></mml:mrow></mml:mrow></mml:math></inline-formula>, where <inline-formula><mml:math id="mm226" overflow="scroll"><mml:mrow><mml:msub><mml:mi>p</mml:mi><mml:mi>l</mml:mi></mml:msub></mml:mrow></mml:math></inline-formula> denotes the identifier update secret obtained during the user login phase.</p></list-item><list-item><label>(2)</label><p>With the received parameters, <inline-formula><mml:math id="mm227" overflow="scroll"><mml:mrow><mml:msub><mml:mi mathvariant="italic">SV</mml:mi><mml:mi>k</mml:mi></mml:msub></mml:mrow></mml:math></inline-formula> calculates <inline-formula><mml:math id="mm228" overflow="scroll"><mml:mrow><mml:mrow><mml:msub><mml:mi>h</mml:mi><mml:mrow><mml:mn>3</mml:mn><mml:mi>i</mml:mi></mml:mrow></mml:msub><mml:mo>=</mml:mo><mml:msub><mml:mi>H</mml:mi><mml:mn>3</mml:mn></mml:msub><mml:mrow><mml:mo>(</mml:mo><mml:msub><mml:mi>m</mml:mi><mml:mi>i</mml:mi></mml:msub><mml:mo>,</mml:mo><mml:msub><mml:mi mathvariant="italic">EID</mml:mi><mml:mrow><mml:mi>i</mml:mi><mml:mi>j</mml:mi></mml:mrow></mml:msub><mml:mo>,</mml:mo><mml:msub><mml:mi mathvariant="italic">PK</mml:mi><mml:mi>i</mml:mi></mml:msub><mml:mo>,</mml:mo><mml:msub><mml:mi>Y</mml:mi><mml:mi>i</mml:mi></mml:msub><mml:mo>,</mml:mo><mml:msub><mml:mi>R</mml:mi><mml:mi>j</mml:mi></mml:msub><mml:mo>,</mml:mo><mml:mi>z</mml:mi><mml:mo>,</mml:mo><mml:msub><mml:mi>T</mml:mi><mml:mi>i</mml:mi></mml:msub><mml:mo>)</mml:mo></mml:mrow></mml:mrow></mml:mrow></mml:math></inline-formula> and <inline-formula><mml:math id="mm229" overflow="scroll"><mml:mrow><mml:mrow><mml:msub><mml:mi>h</mml:mi><mml:mrow><mml:mn>4</mml:mn><mml:mi>i</mml:mi></mml:mrow></mml:msub><mml:mo>=</mml:mo><mml:msub><mml:mi>H</mml:mi><mml:mn>4</mml:mn></mml:msub><mml:mrow><mml:mo>(</mml:mo><mml:msub><mml:mi>m</mml:mi><mml:mi>i</mml:mi></mml:msub><mml:mo>,</mml:mo><mml:msub><mml:mi mathvariant="italic">EID</mml:mi><mml:mrow><mml:mi>i</mml:mi><mml:mi>j</mml:mi></mml:mrow></mml:msub><mml:mo>,</mml:mo><mml:msub><mml:mi mathvariant="italic">PK</mml:mi><mml:mi>i</mml:mi></mml:msub><mml:mo>,</mml:mo><mml:mi>z</mml:mi><mml:mo>,</mml:mo><mml:msub><mml:mi>T</mml:mi><mml:mi>i</mml:mi></mml:msub><mml:mo>)</mml:mo></mml:mrow></mml:mrow></mml:mrow></mml:math></inline-formula>.</p></list-item><list-item><label>(3)</label><p>Finally, <inline-formula><mml:math id="mm230" overflow="scroll"><mml:mrow><mml:msub><mml:mi mathvariant="italic">SV</mml:mi><mml:mi>k</mml:mi></mml:msub></mml:mrow></mml:math></inline-formula> checks whether the equation <inline-formula><mml:math id="mm231" overflow="scroll"><mml:mrow><mml:mrow><mml:mi>z</mml:mi><mml:msub><mml:mi>&#963;</mml:mi><mml:mi>i</mml:mi></mml:msub><mml:mi>P</mml:mi><mml:mo>=</mml:mo><mml:msub><mml:mi>Y</mml:mi><mml:mi>i</mml:mi></mml:msub><mml:mo>+</mml:mo><mml:msub><mml:mi>h</mml:mi><mml:mrow><mml:mn>3</mml:mn><mml:mi>i</mml:mi></mml:mrow></mml:msub><mml:msub><mml:mi>X</mml:mi><mml:mi>i</mml:mi></mml:msub><mml:mo>+</mml:mo><mml:msub><mml:mi>h</mml:mi><mml:mrow><mml:mn>4</mml:mn><mml:mi>i</mml:mi></mml:mrow></mml:msub><mml:mrow><mml:mo>(</mml:mo><mml:msub><mml:mi>R</mml:mi><mml:mi>i</mml:mi></mml:msub><mml:mo>+</mml:mo><mml:msub><mml:mi>R</mml:mi><mml:mi>j</mml:mi></mml:msub><mml:mo>+</mml:mo><mml:mrow><mml:mo>(</mml:mo><mml:msub><mml:mi>h</mml:mi><mml:msub><mml:mn>1</mml:mn><mml:mi>i</mml:mi></mml:msub></mml:msub><mml:mo>+</mml:mo><mml:msub><mml:mi>h</mml:mi><mml:mrow><mml:mn>1</mml:mn><mml:mi>j</mml:mi></mml:mrow></mml:msub><mml:mo>)</mml:mo></mml:mrow><mml:msub><mml:mi>P</mml:mi><mml:mrow><mml:mi>p</mml:mi><mml:mi>u</mml:mi><mml:mi>b</mml:mi></mml:mrow></mml:msub><mml:mo>)</mml:mo></mml:mrow></mml:mrow></mml:mrow></mml:math></inline-formula> holds. If not, the authentication process fails. Otherwise, <inline-formula><mml:math id="mm232" overflow="scroll"><mml:mrow><mml:msub><mml:mi mathvariant="italic">SV</mml:mi><mml:mi>k</mml:mi></mml:msub></mml:mrow></mml:math></inline-formula> accepts <inline-formula><mml:math id="mm233" overflow="scroll"><mml:mrow><mml:msub><mml:mi>c</mml:mi><mml:mi>i</mml:mi></mml:msub></mml:mrow></mml:math></inline-formula> as a valid signature from <inline-formula><mml:math id="mm234" overflow="scroll"><mml:mrow><mml:msub><mml:mi mathvariant="italic">SV</mml:mi><mml:mi>i</mml:mi></mml:msub></mml:mrow></mml:math></inline-formula>.</p></list-item></list></sec></sec><sec id="sec4dot4-sensors-25-05441"><title>4.4. User Logout</title><p>When the service of <inline-formula><mml:math id="mm235" overflow="scroll"><mml:mrow><mml:msub><mml:mi mathvariant="italic">User</mml:mi><mml:mi>j</mml:mi></mml:msub></mml:mrow></mml:math></inline-formula> terminates, <inline-formula><mml:math id="mm236" overflow="scroll"><mml:mrow><mml:msub><mml:mi mathvariant="italic">SV</mml:mi><mml:mi>i</mml:mi></mml:msub></mml:mrow></mml:math></inline-formula> erases the credentials and sends a logout notification containing <inline-formula><mml:math id="mm237" overflow="scroll"><mml:mrow><mml:msub><mml:mi mathvariant="italic">User</mml:mi><mml:mi>j</mml:mi></mml:msub></mml:mrow></mml:math></inline-formula>&#8217;s information to TA and KGC. Upon receiving the logout message, TA and KGC generate the new credential and identifier update secret for <inline-formula><mml:math id="mm238" overflow="scroll"><mml:mrow><mml:msub><mml:mi mathvariant="italic">User</mml:mi><mml:mi>j</mml:mi></mml:msub></mml:mrow></mml:math></inline-formula> to enable future vehicle usage.</p><list list-type="order"><list-item><p>Upon service termination of <inline-formula><mml:math id="mm239" overflow="scroll"><mml:mrow><mml:msub><mml:mi mathvariant="italic">User</mml:mi><mml:mi>j</mml:mi></mml:msub></mml:mrow></mml:math></inline-formula>, <inline-formula><mml:math id="mm240" overflow="scroll"><mml:mrow><mml:msub><mml:mi mathvariant="italic">SV</mml:mi><mml:mi>i</mml:mi></mml:msub></mml:mrow></mml:math></inline-formula> randomly selects <inline-formula><mml:math id="mm241" overflow="scroll"><mml:mrow><mml:mrow><mml:mi>&#954;</mml:mi><mml:mo>&#8712;</mml:mo><mml:msubsup><mml:mi>Z</mml:mi><mml:mi>q</mml:mi><mml:mo>&#8727;</mml:mo></mml:msubsup></mml:mrow></mml:mrow></mml:math></inline-formula> and calculates <inline-formula><mml:math id="mm242" overflow="scroll"><mml:mrow><mml:mrow><mml:mi>&#967;</mml:mi><mml:mo>=</mml:mo><mml:mi>&#954;</mml:mi><mml:mi>P</mml:mi></mml:mrow></mml:mrow></mml:math></inline-formula> and <inline-formula><mml:math id="mm243" overflow="scroll"><mml:mrow><mml:mrow><mml:mi>&#953;</mml:mi><mml:mo>=</mml:mo><mml:mi>&#954;</mml:mi><mml:mo>+</mml:mo><mml:msub><mml:mi>H</mml:mi><mml:mn>2</mml:mn></mml:msub><mml:mrow><mml:mo>(</mml:mo><mml:msub><mml:mi mathvariant="italic">PID</mml:mi><mml:mi>j</mml:mi></mml:msub><mml:mo>,</mml:mo><mml:mi>&#967;</mml:mi><mml:mo>,</mml:mo><mml:msub><mml:mi>X</mml:mi><mml:mi>i</mml:mi></mml:msub><mml:mo>,</mml:mo><mml:msub><mml:mi>T</mml:mi><mml:mi>l</mml:mi></mml:msub><mml:mo>)</mml:mo></mml:mrow><mml:msub><mml:mi>x</mml:mi><mml:mi>i</mml:mi></mml:msub></mml:mrow></mml:mrow></mml:math></inline-formula>, where <inline-formula><mml:math id="mm244" overflow="scroll"><mml:mrow><mml:msub><mml:mi>T</mml:mi><mml:mi>l</mml:mi></mml:msub></mml:mrow></mml:math></inline-formula> denotes the current timestamp. Then, <inline-formula><mml:math id="mm245" overflow="scroll"><mml:mrow><mml:msub><mml:mi mathvariant="italic">SV</mml:mi><mml:mi>i</mml:mi></mml:msub></mml:mrow></mml:math></inline-formula> transmits <inline-formula><mml:math id="mm246" overflow="scroll"><mml:mrow><mml:mrow><mml:mo>(</mml:mo><mml:msub><mml:mi mathvariant="italic">PID</mml:mi><mml:mi>j</mml:mi></mml:msub><mml:mo>,</mml:mo><mml:mi>&#967;</mml:mi><mml:mo>,</mml:mo><mml:mi>&#953;</mml:mi><mml:mo>,</mml:mo><mml:msub><mml:mi>T</mml:mi><mml:mi>l</mml:mi></mml:msub><mml:mo>)</mml:mo></mml:mrow></mml:mrow></mml:math></inline-formula> to TA and KGC. When receiving the message, TA and KGC can verify its authenticity by checking whether the equation <inline-formula><mml:math id="mm247" overflow="scroll"><mml:mrow><mml:mrow><mml:mi>&#953;</mml:mi><mml:mi>P</mml:mi><mml:mo>=</mml:mo><mml:mi>&#967;</mml:mi><mml:mo>+</mml:mo><mml:msub><mml:mi>H</mml:mi><mml:mn>2</mml:mn></mml:msub><mml:mrow><mml:mo>(</mml:mo><mml:msub><mml:mi mathvariant="italic">PID</mml:mi><mml:mi>j</mml:mi></mml:msub><mml:mo>,</mml:mo><mml:mi>&#967;</mml:mi><mml:mo>,</mml:mo><mml:msub><mml:mi>X</mml:mi><mml:mi>i</mml:mi></mml:msub><mml:mo>,</mml:mo><mml:msub><mml:mi>T</mml:mi><mml:mi>l</mml:mi></mml:msub><mml:mo>)</mml:mo></mml:mrow><mml:msub><mml:mi>X</mml:mi><mml:mi>i</mml:mi></mml:msub></mml:mrow></mml:mrow></mml:math></inline-formula> holds.</p></list-item><list-item><p>After successful verification, based on the received <inline-formula><mml:math id="mm248" overflow="scroll"><mml:mrow><mml:msub><mml:mi mathvariant="italic">PID</mml:mi><mml:mi>j</mml:mi></mml:msub></mml:mrow></mml:math></inline-formula>, KGC randomly selects <inline-formula><mml:math id="mm249" overflow="scroll"><mml:mrow><mml:mrow><mml:msubsup><mml:mi>r</mml:mi><mml:mi>j</mml:mi><mml:mo>&#8242;</mml:mo></mml:msubsup><mml:mo>&#8712;</mml:mo><mml:msubsup><mml:mi mathvariant="double-struck">Z</mml:mi><mml:mi>q</mml:mi><mml:mo>&#8727;</mml:mo></mml:msubsup></mml:mrow></mml:mrow></mml:math></inline-formula> and generates the corresponding credential <inline-formula><mml:math id="mm250" overflow="scroll"><mml:mrow><mml:msubsup><mml:mi>d</mml:mi><mml:mi>j</mml:mi><mml:mo>&#8242;</mml:mo></mml:msubsup></mml:mrow></mml:math></inline-formula> for <inline-formula><mml:math id="mm251" overflow="scroll"><mml:mrow><mml:msub><mml:mi mathvariant="italic">User</mml:mi><mml:mi>j</mml:mi></mml:msub></mml:mrow></mml:math></inline-formula> with operations described in the <italic toggle="yes">User registration</italic> section, which are then transmitted to TA.</p></list-item><list-item><p>According to the received information, TA retrieves the relevant parameters from the list <italic toggle="yes">L</italic>, selects a new identifier update secret <inline-formula><mml:math id="mm252" overflow="scroll"><mml:mrow><mml:mrow><mml:msubsup><mml:mi>p</mml:mi><mml:mi>j</mml:mi><mml:mo>&#8242;</mml:mo></mml:msubsup><mml:mo>&#8712;</mml:mo><mml:msub><mml:mi>Z</mml:mi><mml:mrow><mml:mi>p</mml:mi><mml:mi>r</mml:mi><mml:mi>i</mml:mi><mml:mi>m</mml:mi><mml:mi>e</mml:mi></mml:mrow></mml:msub></mml:mrow></mml:mrow></mml:math></inline-formula>, and calculates <inline-formula><mml:math id="mm253" overflow="scroll"><mml:mrow><mml:mrow><mml:msubsup><mml:mi>V</mml:mi><mml:mi>j</mml:mi><mml:mo>&#8242;</mml:mo></mml:msubsup><mml:mrow><mml:mo>&#160;</mml:mo><mml:mo>=</mml:mo><mml:mo>&#160;</mml:mo><mml:mo>(</mml:mo></mml:mrow><mml:msubsup><mml:mi>d</mml:mi><mml:mi>j</mml:mi><mml:mo>&#8242;</mml:mo></mml:msubsup><mml:mrow><mml:mo>|</mml:mo><mml:mo>|</mml:mo></mml:mrow><mml:msubsup><mml:mi>p</mml:mi><mml:mi>j</mml:mi><mml:mo>&#8242;</mml:mo></mml:msubsup><mml:mrow><mml:mo>)</mml:mo><mml:mo>&#160;</mml:mo><mml:mo>&#8853;</mml:mo><mml:mo>&#160;</mml:mo></mml:mrow><mml:msub><mml:mi>H</mml:mi><mml:mn>0</mml:mn></mml:msub><mml:mrow><mml:mo>(</mml:mo></mml:mrow><mml:msub><mml:mi>u</mml:mi><mml:mi>j</mml:mi></mml:msub><mml:msub><mml:mi mathvariant="italic">GID</mml:mi><mml:mi>j</mml:mi></mml:msub><mml:mo>,</mml:mo><mml:msub><mml:mi>&#952;</mml:mi><mml:mi>j</mml:mi></mml:msub><mml:mrow><mml:mo>|</mml:mo><mml:mo>|</mml:mo></mml:mrow><mml:msub><mml:mi>T</mml:mi><mml:mi>m</mml:mi></mml:msub><mml:mrow><mml:mo>)</mml:mo></mml:mrow></mml:mrow></mml:mrow></mml:math></inline-formula>, where <inline-formula><mml:math id="mm254" overflow="scroll"><mml:mrow><mml:msub><mml:mi>T</mml:mi><mml:mi>m</mml:mi></mml:msub></mml:mrow></mml:math></inline-formula> is the current timestamp.</p></list-item><list-item><p>TA then updates the recorded parameters in list <italic toggle="yes">L</italic> with <inline-formula><mml:math id="mm255" overflow="scroll"><mml:mrow><mml:msubsup><mml:mi>&#961;</mml:mi><mml:mi>j</mml:mi><mml:mo>&#8242;</mml:mo></mml:msubsup></mml:mrow></mml:math></inline-formula>, which is calculated based on the newly generated <inline-formula><mml:math id="mm256" overflow="scroll"><mml:mrow><mml:msubsup><mml:mi>p</mml:mi><mml:mi>j</mml:mi><mml:mo>&#8242;</mml:mo></mml:msubsup></mml:mrow></mml:math></inline-formula>.</p></list-item><list-item><p>Finally, TA updates <inline-formula><mml:math id="mm257" overflow="scroll"><mml:mrow><mml:msub><mml:mi>&#981;</mml:mi><mml:mi>g</mml:mi></mml:msub></mml:mrow></mml:math></inline-formula> and <inline-formula><mml:math id="mm258" overflow="scroll"><mml:mrow><mml:mo>&#937;</mml:mo></mml:mrow></mml:math></inline-formula> with <inline-formula><mml:math id="mm259" overflow="scroll"><mml:mrow><mml:mrow><mml:msub><mml:mi>&#981;</mml:mi><mml:msub><mml:mi>g</mml:mi><mml:mrow><mml:mi>n</mml:mi><mml:mi>e</mml:mi><mml:mi>w</mml:mi></mml:mrow></mml:msub></mml:msub><mml:mo>=</mml:mo><mml:msub><mml:mi>&#981;</mml:mi><mml:mi>g</mml:mi></mml:msub><mml:mo>&#215;</mml:mo><mml:mstyle scriptlevel="0" displaystyle="true"><mml:mfrac><mml:msubsup><mml:mi>p</mml:mi><mml:mi>j</mml:mi><mml:mo>&#8242;</mml:mo></mml:msubsup><mml:msub><mml:mi>p</mml:mi><mml:mi>j</mml:mi></mml:msub></mml:mfrac></mml:mstyle></mml:mrow></mml:mrow></mml:math></inline-formula>, <inline-formula><mml:math id="mm260" overflow="scroll"><mml:mrow><mml:mrow><mml:msup><mml:mo>&#937;</mml:mo><mml:mo>&#8242;</mml:mo></mml:msup><mml:mo>=</mml:mo><mml:mo>&#937;</mml:mo><mml:mo>+</mml:mo><mml:msubsup><mml:mi>&#961;</mml:mi><mml:mi>j</mml:mi><mml:mo>&#8242;</mml:mo></mml:msubsup><mml:mo>&#8722;</mml:mo><mml:msub><mml:mi>&#961;</mml:mi><mml:mi>j</mml:mi></mml:msub></mml:mrow></mml:mrow></mml:math></inline-formula>, and broadcasts <inline-formula><mml:math id="mm261" overflow="scroll"><mml:mrow><mml:mrow><mml:mo>(</mml:mo><mml:msub><mml:mi mathvariant="italic">PID</mml:mi><mml:mi>j</mml:mi></mml:msub><mml:mo>,</mml:mo><mml:msubsup><mml:mi>R</mml:mi><mml:mi>j</mml:mi><mml:mo>&#8242;</mml:mo></mml:msubsup><mml:mo>,</mml:mo><mml:msub><mml:mi>&#964;</mml:mi><mml:mi>j</mml:mi></mml:msub><mml:mo>,</mml:mo><mml:msubsup><mml:mi>V</mml:mi><mml:mi>j</mml:mi><mml:mo>&#8242;</mml:mo></mml:msubsup><mml:mo>,</mml:mo><mml:msub><mml:mi>U</mml:mi><mml:mi>j</mml:mi></mml:msub><mml:mo>,</mml:mo><mml:msub><mml:mi>T</mml:mi><mml:mi>m</mml:mi></mml:msub><mml:mo>)</mml:mo></mml:mrow></mml:mrow></mml:math></inline-formula> via a public channel. Additionally, TA performs the operations described in the <italic toggle="yes">Group identifier distribution</italic> section to prevent potential illegal access with the outdated group identifier.</p></list-item></list></sec><sec id="sec4dot5-sensors-25-05441"><title>4.5. Revocation</title><p>Upon the detection of irregular behaviors, TA is responsible for revealing the real identity of the malicious user and revoking the corresponding user from the system by generating a new group identifier. Suppose the user to be revoked is <inline-formula><mml:math id="mm262" overflow="scroll"><mml:mrow><mml:msub><mml:mi mathvariant="italic">User</mml:mi><mml:mi>r</mml:mi></mml:msub></mml:mrow></mml:math></inline-formula>.</p><list list-type="order"><list-item><p>TA first acquires the corresponding <inline-formula><mml:math id="mm263" overflow="scroll"><mml:mrow><mml:msub><mml:mi>&#961;</mml:mi><mml:mi>r</mml:mi></mml:msub></mml:mrow></mml:math></inline-formula> by searching the maintained list <italic toggle="yes">L</italic> and updates <inline-formula><mml:math id="mm264" overflow="scroll"><mml:mrow><mml:mo>&#937;</mml:mo></mml:mrow></mml:math></inline-formula> by calculating <inline-formula><mml:math id="mm265" overflow="scroll"><mml:mrow><mml:mrow><mml:msup><mml:mo>&#937;</mml:mo><mml:mo>&#8242;</mml:mo></mml:msup><mml:mo>=</mml:mo><mml:mo>&#937;</mml:mo><mml:mo>&#8722;</mml:mo><mml:msub><mml:mi>&#961;</mml:mi><mml:mi>r</mml:mi></mml:msub></mml:mrow></mml:mrow></mml:math></inline-formula>.</p></list-item><list-item><p>Next, TA randomly selects <inline-formula><mml:math id="mm266" overflow="scroll"><mml:mrow><mml:mrow><mml:msup><mml:mi>z</mml:mi><mml:mo>&#8242;</mml:mo></mml:msup><mml:mo>,</mml:mo><mml:mi>&#968;</mml:mi><mml:mo>&#8712;</mml:mo><mml:msubsup><mml:mi>Z</mml:mi><mml:mi>q</mml:mi><mml:mo>&#8727;</mml:mo></mml:msubsup></mml:mrow></mml:mrow></mml:math></inline-formula> and calculates <inline-formula><mml:math id="mm267" overflow="scroll"><mml:mrow><mml:mrow><mml:msup><mml:mi>&#950;</mml:mi><mml:mo>&#8242;</mml:mo></mml:msup><mml:mo>=</mml:mo><mml:msup><mml:mi>z</mml:mi><mml:mo>&#8242;</mml:mo></mml:msup><mml:msup><mml:mo>&#937;</mml:mo><mml:mo>&#8242;</mml:mo></mml:msup></mml:mrow></mml:mrow></mml:math></inline-formula>, <inline-formula><mml:math id="mm268" overflow="scroll"><mml:mrow><mml:mrow><mml:mo>&#936;</mml:mo><mml:mo>=</mml:mo><mml:mi>&#968;</mml:mi><mml:mi>P</mml:mi></mml:mrow></mml:mrow></mml:math></inline-formula>, and <inline-formula><mml:math id="mm269" overflow="scroll"><mml:mrow><mml:mrow><mml:mi>&#957;</mml:mi><mml:mo>=</mml:mo><mml:mi>&#968;</mml:mi><mml:mo>+</mml:mo><mml:msub><mml:mi>H</mml:mi><mml:mn>2</mml:mn></mml:msub><mml:mrow><mml:mo>(</mml:mo><mml:msup><mml:mi>&#950;</mml:mi><mml:mo>&#8242;</mml:mo></mml:msup><mml:mo>,</mml:mo><mml:mo>&#936;</mml:mo><mml:mo>,</mml:mo><mml:msub><mml:mi>T</mml:mi><mml:mrow><mml:mi>p</mml:mi><mml:mi>u</mml:mi><mml:mi>b</mml:mi></mml:mrow></mml:msub><mml:mo>,</mml:mo><mml:msub><mml:mi>T</mml:mi><mml:mi>r</mml:mi></mml:msub><mml:mo>)</mml:mo></mml:mrow><mml:mi>t</mml:mi></mml:mrow></mml:mrow></mml:math></inline-formula>, where <inline-formula><mml:math id="mm270" overflow="scroll"><mml:mrow><mml:msub><mml:mi>T</mml:mi><mml:mi>r</mml:mi></mml:msub></mml:mrow></mml:math></inline-formula> denotes the current timestamp.</p></list-item><list-item><p>TA then broadcasts <inline-formula><mml:math id="mm271" overflow="scroll"><mml:mrow><mml:mrow><mml:mo>(</mml:mo><mml:msup><mml:mi>&#950;</mml:mi><mml:mo>&#8242;</mml:mo></mml:msup><mml:mo>,</mml:mo><mml:mo>&#936;</mml:mo><mml:mo>,</mml:mo><mml:mi>&#957;</mml:mi><mml:mo>,</mml:mo><mml:msub><mml:mi>T</mml:mi><mml:mi>r</mml:mi></mml:msub><mml:mo>)</mml:mo></mml:mrow></mml:mrow></mml:math></inline-formula> to all SVs within the system.</p></list-item><list-item><p>Upon receiving the update message from TA, each SV first checks the timestamp of the message. If the message is fresh, then vehicles will continue to check whether the equation <inline-formula><mml:math id="mm272" overflow="scroll"><mml:mrow><mml:mrow><mml:mi>&#957;</mml:mi><mml:mi>P</mml:mi><mml:mo>=</mml:mo><mml:mo>&#936;</mml:mo><mml:mo>+</mml:mo><mml:msub><mml:mi>H</mml:mi><mml:mn>2</mml:mn></mml:msub><mml:mrow><mml:mo>(</mml:mo><mml:msup><mml:mi>&#950;</mml:mi><mml:mo>&#8242;</mml:mo></mml:msup><mml:mo>,</mml:mo><mml:mo>&#936;</mml:mo><mml:mo>,</mml:mo><mml:msub><mml:mi>T</mml:mi><mml:mrow><mml:mi>p</mml:mi><mml:mi>u</mml:mi><mml:mi>b</mml:mi></mml:mrow></mml:msub><mml:mo>,</mml:mo><mml:msub><mml:mi>T</mml:mi><mml:mi>r</mml:mi></mml:msub><mml:mo>)</mml:mo></mml:mrow><mml:msub><mml:mi>T</mml:mi><mml:mrow><mml:mi>p</mml:mi><mml:mi>u</mml:mi><mml:mi>b</mml:mi></mml:mrow></mml:msub></mml:mrow></mml:mrow></mml:math></inline-formula> holds. If not, then the update process is aborted. Otherwise, a new group identifier can be calculated with <inline-formula><mml:math id="mm273" overflow="scroll"><mml:mrow><mml:mrow><mml:msup><mml:mi>z</mml:mi><mml:mo>&#8242;</mml:mo></mml:msup><mml:mo>=</mml:mo><mml:msup><mml:mi>&#950;</mml:mi><mml:mo>&#8242;</mml:mo></mml:msup><mml:mspace width="3.33333pt"/><mml:mo form="prefix">mod</mml:mo><mml:mspace width="0.277778em"/><mml:msub><mml:mi>p</mml:mi><mml:mrow><mml:mi>u</mml:mi><mml:mi>s</mml:mi><mml:mi>e</mml:mi><mml:mi>r</mml:mi></mml:mrow></mml:msub></mml:mrow></mml:mrow></mml:math></inline-formula>, where <inline-formula><mml:math id="mm274" overflow="scroll"><mml:mrow><mml:msub><mml:mi>p</mml:mi><mml:mrow><mml:mi>u</mml:mi><mml:mi>s</mml:mi><mml:mi>e</mml:mi><mml:mi>r</mml:mi></mml:mrow></mml:msub></mml:mrow></mml:math></inline-formula> denotes the individual identifier update secret held by each SV within the system.</p></list-item></list></sec></sec><sec id="sec5-sensors-25-05441"><title>5. Security Analysis</title><p>In this section, we first prove the existential unforgeability of our scheme under the random oracle model. Then, we analyze the security features of our scheme utilizing the defined security model.</p><sec id="sec5dot1-sensors-25-05441"><title>5.1. Security Proof</title><p>The proofs of Theorem 1 and Theorem 2 are based on a security reduction from the ECDLP, as illustrated in <xref rid="sensors-25-05441-f006" ref-type="fig">Figure 6</xref>. Specifically, we design simulators <inline-formula><mml:math id="mm275" overflow="scroll"><mml:mrow><mml:msub><mml:mi mathvariant="script">B</mml:mi><mml:mn>1</mml:mn></mml:msub></mml:mrow></mml:math></inline-formula> and <inline-formula><mml:math id="mm276" overflow="scroll"><mml:mrow><mml:msub><mml:mi mathvariant="script">B</mml:mi><mml:mn>2</mml:mn></mml:msub></mml:mrow></mml:math></inline-formula> to interact with two distinct types of adversaries, <inline-formula><mml:math id="mm277" overflow="scroll"><mml:mrow><mml:msub><mml:mi mathvariant="script">A</mml:mi><mml:mn>1</mml:mn></mml:msub></mml:mrow></mml:math></inline-formula> and <inline-formula><mml:math id="mm278" overflow="scroll"><mml:mrow><mml:msub><mml:mi mathvariant="script">A</mml:mi><mml:mn>2</mml:mn></mml:msub></mml:mrow></mml:math></inline-formula>, respectively. Given an ECDLP instance <inline-formula><mml:math id="mm279" overflow="scroll"><mml:mrow><mml:mrow><mml:mo>(</mml:mo><mml:mi>P</mml:mi><mml:mo>,</mml:mo><mml:mi>a</mml:mi><mml:mi>P</mml:mi><mml:mo>)</mml:mo></mml:mrow></mml:mrow></mml:math></inline-formula> provided by the challenger <inline-formula><mml:math id="mm280" overflow="scroll"><mml:mrow><mml:mi mathvariant="script">C</mml:mi></mml:mrow></mml:math></inline-formula>, the simulator <inline-formula><mml:math id="mm281" overflow="scroll"><mml:mrow><mml:mi mathvariant="script">B</mml:mi></mml:mrow></mml:math></inline-formula> engages with the adversary <inline-formula><mml:math id="mm282" overflow="scroll"><mml:mrow><mml:mi mathvariant="script">A</mml:mi></mml:mrow></mml:math></inline-formula> in a simulated environment to produce a forged signature. Subsequently, by applying the Forking Lemma [<xref rid="B46-sensors-25-05441" ref-type="bibr">46</xref>,<xref rid="B47-sensors-25-05441" ref-type="bibr">47</xref>]<inline-formula><mml:math id="mm283" overflow="scroll"><mml:mrow><mml:mrow><mml:mo>,</mml:mo><mml:mo>&#160;</mml:mo><mml:mi mathvariant="script">B</mml:mi></mml:mrow></mml:mrow></mml:math></inline-formula> is able to obtain a second forgery corresponding to a different random oracle query made by <inline-formula><mml:math id="mm284" overflow="scroll"><mml:mrow><mml:mi mathvariant="script">A</mml:mi></mml:mrow></mml:math></inline-formula>. From these two distinct forgeries, the simulator can extract and output the solution to the given ECDLP instance, thus completing the reduction.</p><statement><label><bold>Theorem</bold>&#160;<bold>1.</bold></label><p>
<italic toggle="yes">With the hardness assumption of the ECDLP, our proposed ECACS scheme realizes EUF-CMA security against Type-I adversaries under the random oracle model.</italic>
</p></statement><p>The following Lemma 1 concludes the proof of Theorem 1.</p><statement><label><bold>Lemma</bold>&#160;<bold>1.</bold></label><p>
<italic toggle="yes">If there exists a Type-I adversary <inline-formula><mml:math id="mm285" overflow="scroll"><mml:mrow><mml:msub><mml:mi mathvariant="script">A</mml:mi><mml:mn>1</mml:mn></mml:msub></mml:mrow></mml:math></inline-formula> who can successfully forge a valid signature with obvious advantage <inline-formula><mml:math id="mm286" overflow="scroll"><mml:mrow><mml:msub><mml:mi>&#1013;</mml:mi><mml:mn>1</mml:mn></mml:msub></mml:mrow></mml:math></inline-formula>, then a simulator <inline-formula><mml:math id="mm287" overflow="scroll"><mml:mrow><mml:msub><mml:mi mathvariant="script">B</mml:mi><mml:mn>1</mml:mn></mml:msub></mml:mrow></mml:math></inline-formula> can be constructed to solve the ECDLP with non-negligible advantage <inline-formula><mml:math id="mm288" overflow="scroll"><mml:mrow><mml:mstyle scriptlevel="0" displaystyle="true"><mml:mfrac><mml:mrow><mml:mrow><mml:mo>(</mml:mo><mml:mi>e</mml:mi><mml:mo>&#8722;</mml:mo><mml:mn>1</mml:mn><mml:mo>)</mml:mo></mml:mrow><mml:msub><mml:mi>&#1013;</mml:mi><mml:mn>1</mml:mn></mml:msub></mml:mrow><mml:mrow><mml:msup><mml:mi>e</mml:mi><mml:mn>2</mml:mn></mml:msup><mml:mo>&#183;</mml:mo><mml:msub><mml:mi>Q</mml:mi><mml:mrow><mml:mi>u</mml:mi><mml:mi>r</mml:mi></mml:mrow></mml:msub><mml:mrow><mml:mo>(</mml:mo><mml:mrow><mml:msub><mml:mi>Q</mml:mi><mml:msub><mml:mi>h</mml:mi><mml:mn>4</mml:mn></mml:msub></mml:msub><mml:mo>+</mml:mo><mml:msub><mml:mi>Q</mml:mi><mml:mrow><mml:mi>s</mml:mi><mml:mi>i</mml:mi><mml:mi>g</mml:mi></mml:mrow></mml:msub><mml:mo>+</mml:mo><mml:mn>1</mml:mn></mml:mrow><mml:mo>)</mml:mo></mml:mrow></mml:mrow></mml:mfrac></mml:mstyle></mml:mrow></mml:math></inline-formula>, where <inline-formula><mml:math id="mm289" overflow="scroll"><mml:mrow><mml:msub><mml:mi>Q</mml:mi><mml:mrow><mml:mi>u</mml:mi><mml:mi>r</mml:mi></mml:mrow></mml:msub></mml:mrow></mml:math></inline-formula>, <inline-formula><mml:math id="mm290" overflow="scroll"><mml:mrow><mml:msub><mml:mi>Q</mml:mi><mml:mrow><mml:mi>s</mml:mi><mml:mi>i</mml:mi><mml:mi>g</mml:mi></mml:mrow></mml:msub></mml:mrow></mml:math></inline-formula>, and <inline-formula><mml:math id="mm291" overflow="scroll"><mml:mrow><mml:msub><mml:mi>Q</mml:mi><mml:msub><mml:mi>h</mml:mi><mml:mn>4</mml:mn></mml:msub></mml:msub></mml:mrow></mml:math></inline-formula> denote the times of User Registration Query, Sign Query, and <inline-formula><mml:math id="mm292" overflow="scroll"><mml:mrow><mml:msub><mml:mi>H</mml:mi><mml:mn>4</mml:mn></mml:msub></mml:mrow></mml:math></inline-formula> Query, respectively.</italic>
</p></statement><statement><label><bold>Proof.</bold>&#160;</label><p>For the proof of Lemma 1, the challenger <inline-formula><mml:math id="mm293" overflow="scroll"><mml:mrow><mml:mi mathvariant="script">C</mml:mi></mml:mrow></mml:math></inline-formula> will first set up an ECDLP instance <inline-formula><mml:math id="mm294" overflow="scroll"><mml:mrow><mml:mrow><mml:mo>{</mml:mo><mml:mi>P</mml:mi><mml:mo>,</mml:mo><mml:mi>a</mml:mi><mml:mi>P</mml:mi><mml:mo>|</mml:mo><mml:mi>a</mml:mi><mml:mo>&#8712;</mml:mo><mml:msubsup><mml:mi>Z</mml:mi><mml:mi>p</mml:mi><mml:mo>&#8727;</mml:mo></mml:msubsup><mml:mo>}</mml:mo></mml:mrow></mml:mrow></mml:math></inline-formula> and send it to <inline-formula><mml:math id="mm295" overflow="scroll"><mml:mrow><mml:msub><mml:mi mathvariant="script">B</mml:mi><mml:mn>1</mml:mn></mml:msub></mml:mrow></mml:math></inline-formula>. Then, <inline-formula><mml:math id="mm296" overflow="scroll"><mml:mrow><mml:msub><mml:mi mathvariant="script">B</mml:mi><mml:mn>1</mml:mn></mml:msub></mml:mrow></mml:math></inline-formula> will play the following game with <inline-formula><mml:math id="mm297" overflow="scroll"><mml:mrow><mml:msub><mml:mi mathvariant="script">A</mml:mi><mml:mn>1</mml:mn></mml:msub></mml:mrow></mml:math></inline-formula> in order to acquire the solution to the ECDLP instance. The detailed process is as follows:</p><p>Setup: <inline-formula><mml:math id="mm298" overflow="scroll"><mml:mrow><mml:msub><mml:mi mathvariant="script">B</mml:mi><mml:mn>1</mml:mn></mml:msub></mml:mrow></mml:math></inline-formula> sets <inline-formula><mml:math id="mm299" overflow="scroll"><mml:mrow><mml:mrow><mml:msub><mml:mi>P</mml:mi><mml:mrow><mml:mi>p</mml:mi><mml:mi>u</mml:mi><mml:mi>b</mml:mi></mml:mrow></mml:msub><mml:mo>=</mml:mo><mml:mi>a</mml:mi><mml:mi>P</mml:mi></mml:mrow></mml:mrow></mml:math></inline-formula> and sends the system parameters <inline-formula><mml:math id="mm300" overflow="scroll"><mml:mrow><mml:mrow><mml:mo>{</mml:mo><mml:mi mathvariant="double-struck">G</mml:mi><mml:mo>,</mml:mo><mml:mi>q</mml:mi><mml:mo>,</mml:mo><mml:mi>P</mml:mi><mml:mo>,</mml:mo><mml:msub><mml:mi>P</mml:mi><mml:mrow><mml:mi>p</mml:mi><mml:mi>u</mml:mi><mml:mi>b</mml:mi></mml:mrow></mml:msub><mml:mo>,</mml:mo><mml:msub><mml:mi>H</mml:mi><mml:mn>0</mml:mn></mml:msub><mml:mo>,</mml:mo><mml:msub><mml:mi>H</mml:mi><mml:mn>1</mml:mn></mml:msub><mml:mo>,</mml:mo><mml:msub><mml:mi>H</mml:mi><mml:mn>2</mml:mn></mml:msub><mml:mo>,</mml:mo><mml:msub><mml:mi>H</mml:mi><mml:mn>3</mml:mn></mml:msub><mml:mo>,</mml:mo><mml:msub><mml:mi>H</mml:mi><mml:mn>4</mml:mn></mml:msub><mml:mo>,</mml:mo><mml:mo>&#937;</mml:mo><mml:mo>}</mml:mo></mml:mrow></mml:mrow></mml:math></inline-formula> to <inline-formula><mml:math id="mm301" overflow="scroll"><mml:mrow><mml:msub><mml:mi mathvariant="script">A</mml:mi><mml:mn>1</mml:mn></mml:msub></mml:mrow></mml:math></inline-formula>. Meanwhile, <inline-formula><mml:math id="mm302" overflow="scroll"><mml:mrow><mml:msub><mml:mi mathvariant="script">B</mml:mi><mml:mn>1</mml:mn></mml:msub></mml:mrow></mml:math></inline-formula> maintains six lists to record the query results, namely <inline-formula><mml:math id="mm303" overflow="scroll"><mml:mrow><mml:mrow><mml:msub><mml:mi>L</mml:mi><mml:mi>v</mml:mi></mml:msub><mml:mo>,</mml:mo><mml:msub><mml:mi>L</mml:mi><mml:mi>u</mml:mi></mml:msub><mml:mo>,</mml:mo><mml:msub><mml:mi>L</mml:mi><mml:mn>1</mml:mn></mml:msub><mml:mo>,</mml:mo><mml:msub><mml:mi>L</mml:mi><mml:mn>2</mml:mn></mml:msub><mml:mo>,</mml:mo><mml:msub><mml:mi>L</mml:mi><mml:mn>3</mml:mn></mml:msub><mml:mo>,</mml:mo><mml:msub><mml:mi>L</mml:mi><mml:mn>4</mml:mn></mml:msub></mml:mrow></mml:mrow></mml:math></inline-formula>.</p><p>Query Stage: In this stage, <inline-formula><mml:math id="mm304" overflow="scroll"><mml:mrow><mml:msub><mml:mi mathvariant="script">A</mml:mi><mml:mn>1</mml:mn></mml:msub></mml:mrow></mml:math></inline-formula> will adaptively submit the following queries.
<list list-type="simple"><list-item><label>(1)</label><p>Hash Query: <inline-formula><mml:math id="mm305" overflow="scroll"><mml:mrow><mml:msub><mml:mi mathvariant="script">B</mml:mi><mml:mn>1</mml:mn></mml:msub></mml:mrow></mml:math></inline-formula> will respond to the hash queries from <inline-formula><mml:math id="mm306" overflow="scroll"><mml:mrow><mml:msub><mml:mi mathvariant="script">A</mml:mi><mml:mn>1</mml:mn></mml:msub></mml:mrow></mml:math></inline-formula> as follows:
<list list-type="simple"><list-item><label>(a)</label><p><inline-formula><mml:math id="mm307" overflow="scroll"><mml:mrow><mml:msub><mml:mi>H</mml:mi><mml:mn>1</mml:mn></mml:msub></mml:mrow></mml:math></inline-formula> Query: When receiving an <inline-formula><mml:math id="mm308" overflow="scroll"><mml:mrow><mml:msub><mml:mi>H</mml:mi><mml:mn>1</mml:mn></mml:msub></mml:mrow></mml:math></inline-formula> hash query with <inline-formula><mml:math id="mm309" overflow="scroll"><mml:mrow><mml:mrow><mml:mo>(</mml:mo><mml:mi mathvariant="italic">str</mml:mi><mml:mo>,</mml:mo><mml:mi mathvariant="italic">G</mml:mi><mml:mo>,</mml:mo><mml:msub><mml:mi>R</mml:mi><mml:mi>i</mml:mi></mml:msub><mml:mo>,</mml:mo><mml:msub><mml:mi>P</mml:mi><mml:mrow><mml:mi>p</mml:mi><mml:mi>u</mml:mi><mml:mi>b</mml:mi></mml:mrow></mml:msub><mml:mo>)</mml:mo></mml:mrow></mml:mrow></mml:math></inline-formula>, if <inline-formula><mml:math id="mm310" overflow="scroll"><mml:mrow><mml:mrow><mml:mrow><mml:mo>(</mml:mo><mml:mi mathvariant="italic">str</mml:mi><mml:mo>,</mml:mo><mml:mi mathvariant="italic">G</mml:mi><mml:mo>,</mml:mo><mml:msub><mml:mi>R</mml:mi><mml:mi>i</mml:mi></mml:msub><mml:mo>,</mml:mo><mml:msub><mml:mi>P</mml:mi><mml:mrow><mml:mi>p</mml:mi><mml:mi>u</mml:mi><mml:mi>b</mml:mi></mml:mrow></mml:msub><mml:mo>,</mml:mo><mml:msub><mml:mi>h</mml:mi><mml:msub><mml:mn>1</mml:mn><mml:mi>i</mml:mi></mml:msub></mml:msub><mml:mo>)</mml:mo></mml:mrow><mml:mo>&#8712;</mml:mo><mml:msub><mml:mi>L</mml:mi><mml:mn>1</mml:mn></mml:msub></mml:mrow></mml:mrow></mml:math></inline-formula>, <inline-formula><mml:math id="mm311" overflow="scroll"><mml:mrow><mml:msub><mml:mi mathvariant="script">B</mml:mi><mml:mn>1</mml:mn></mml:msub></mml:mrow></mml:math></inline-formula> returns <inline-formula><mml:math id="mm312" overflow="scroll"><mml:mrow><mml:msub><mml:mi>h</mml:mi><mml:mrow><mml:mn>1</mml:mn><mml:mi>i</mml:mi></mml:mrow></mml:msub></mml:mrow></mml:math></inline-formula>. Otherwise, <inline-formula><mml:math id="mm313" overflow="scroll"><mml:mrow><mml:msub><mml:mi mathvariant="script">B</mml:mi><mml:mn>1</mml:mn></mml:msub></mml:mrow></mml:math></inline-formula> selects <inline-formula><mml:math id="mm314" overflow="scroll"><mml:mrow><mml:mrow><mml:msub><mml:mi>h</mml:mi><mml:msub><mml:mn>1</mml:mn><mml:mi>i</mml:mi></mml:msub></mml:msub><mml:mo>&#8712;</mml:mo><mml:msubsup><mml:mi>Z</mml:mi><mml:mi>q</mml:mi><mml:mo>&#8727;</mml:mo></mml:msubsup></mml:mrow></mml:mrow></mml:math></inline-formula>, adds the tuple <inline-formula><mml:math id="mm315" overflow="scroll"><mml:mrow><mml:mrow><mml:mo>(</mml:mo><mml:mi mathvariant="italic">str</mml:mi><mml:mo>,</mml:mo><mml:mi mathvariant="italic">G</mml:mi><mml:mo>,</mml:mo><mml:msub><mml:mi>R</mml:mi><mml:mi>i</mml:mi></mml:msub><mml:mo>,</mml:mo><mml:msub><mml:mi>P</mml:mi><mml:mrow><mml:mi>p</mml:mi><mml:mi>u</mml:mi><mml:mi>b</mml:mi></mml:mrow></mml:msub><mml:mo>,</mml:mo><mml:msub><mml:mi>h</mml:mi><mml:msub><mml:mn>1</mml:mn><mml:mi>i</mml:mi></mml:msub></mml:msub><mml:mo>)</mml:mo></mml:mrow></mml:mrow></mml:math></inline-formula> to <inline-formula><mml:math id="mm316" overflow="scroll"><mml:mrow><mml:msub><mml:mi>L</mml:mi><mml:mn>1</mml:mn></mml:msub></mml:mrow></mml:math></inline-formula>, and then returns <inline-formula><mml:math id="mm317" overflow="scroll"><mml:mrow><mml:msub><mml:mi>h</mml:mi><mml:msub><mml:mn>1</mml:mn><mml:mi>i</mml:mi></mml:msub></mml:msub></mml:mrow></mml:math></inline-formula>. Note that the <inline-formula><mml:math id="mm318" overflow="scroll"><mml:mrow><mml:mi mathvariant="italic">str</mml:mi></mml:mrow></mml:math></inline-formula> and <inline-formula><mml:math id="mm319" overflow="scroll"><mml:mrow><mml:mi mathvariant="italic">G</mml:mi></mml:mrow></mml:math></inline-formula> here generally represent a random string and a point on the defined elliptic curve.</p></list-item><list-item><label>(b)</label><p><inline-formula><mml:math id="mm320" overflow="scroll"><mml:mrow><mml:msub><mml:mi>H</mml:mi><mml:mn>2</mml:mn></mml:msub></mml:mrow></mml:math></inline-formula> Query: When receiving an <inline-formula><mml:math id="mm321" overflow="scroll"><mml:mrow><mml:msub><mml:mi>H</mml:mi><mml:mn>2</mml:mn></mml:msub></mml:mrow></mml:math></inline-formula> hash query with <inline-formula><mml:math id="mm322" overflow="scroll"><mml:mrow><mml:mrow><mml:mo>(</mml:mo><mml:mi>&#950;</mml:mi><mml:mo>,</mml:mo><mml:mi>W</mml:mi><mml:mo>,</mml:mo><mml:msub><mml:mi>P</mml:mi><mml:mrow><mml:mi>p</mml:mi><mml:mi>u</mml:mi><mml:mi>b</mml:mi></mml:mrow></mml:msub><mml:mo>,</mml:mo><mml:msub><mml:mi>T</mml:mi><mml:mi>z</mml:mi></mml:msub><mml:mo>)</mml:mo></mml:mrow></mml:mrow></mml:math></inline-formula>, if <inline-formula><mml:math id="mm323" overflow="scroll"><mml:mrow><mml:mrow><mml:mrow><mml:mo>(</mml:mo><mml:mi>&#950;</mml:mi><mml:mo>,</mml:mo><mml:mi>W</mml:mi><mml:mo>,</mml:mo><mml:msub><mml:mi>P</mml:mi><mml:mrow><mml:mi>p</mml:mi><mml:mi>u</mml:mi><mml:mi>b</mml:mi></mml:mrow></mml:msub><mml:mo>,</mml:mo><mml:msub><mml:mi>T</mml:mi><mml:mi>z</mml:mi></mml:msub><mml:mo>,</mml:mo><mml:msub><mml:mi>h</mml:mi><mml:msub><mml:mn>2</mml:mn><mml:mi>i</mml:mi></mml:msub></mml:msub><mml:mo>)</mml:mo></mml:mrow><mml:mo>&#8712;</mml:mo><mml:msub><mml:mi>L</mml:mi><mml:mn>2</mml:mn></mml:msub></mml:mrow></mml:mrow></mml:math></inline-formula>, <inline-formula><mml:math id="mm324" overflow="scroll"><mml:mrow><mml:msub><mml:mi mathvariant="script">B</mml:mi><mml:mn>1</mml:mn></mml:msub></mml:mrow></mml:math></inline-formula> returns <inline-formula><mml:math id="mm325" overflow="scroll"><mml:mrow><mml:msub><mml:mi>h</mml:mi><mml:msub><mml:mn>2</mml:mn><mml:mi>i</mml:mi></mml:msub></mml:msub></mml:mrow></mml:math></inline-formula>. Otherwise, <inline-formula><mml:math id="mm326" overflow="scroll"><mml:mrow><mml:msub><mml:mi mathvariant="script">B</mml:mi><mml:mn>1</mml:mn></mml:msub></mml:mrow></mml:math></inline-formula> selects <inline-formula><mml:math id="mm327" overflow="scroll"><mml:mrow><mml:mrow><mml:msub><mml:mi>h</mml:mi><mml:msub><mml:mn>2</mml:mn><mml:mi>i</mml:mi></mml:msub></mml:msub><mml:mo>&#8712;</mml:mo><mml:msubsup><mml:mi>Z</mml:mi><mml:mi>q</mml:mi><mml:mo>&#8727;</mml:mo></mml:msubsup></mml:mrow></mml:mrow></mml:math></inline-formula>, adds the tuple <inline-formula><mml:math id="mm328" overflow="scroll"><mml:mrow><mml:mrow><mml:mo>(</mml:mo><mml:mi>&#950;</mml:mi><mml:mo>,</mml:mo><mml:mi>W</mml:mi><mml:mo>,</mml:mo><mml:msub><mml:mi>P</mml:mi><mml:mrow><mml:mi>p</mml:mi><mml:mi>u</mml:mi><mml:mi>b</mml:mi></mml:mrow></mml:msub><mml:mo>,</mml:mo><mml:msub><mml:mi>T</mml:mi><mml:mi>z</mml:mi></mml:msub><mml:mo>,</mml:mo><mml:msub><mml:mi>h</mml:mi><mml:msub><mml:mn>2</mml:mn><mml:mi>i</mml:mi></mml:msub></mml:msub><mml:mo>)</mml:mo></mml:mrow></mml:mrow></mml:math></inline-formula> to <inline-formula><mml:math id="mm329" overflow="scroll"><mml:mrow><mml:msub><mml:mi>L</mml:mi><mml:mn>2</mml:mn></mml:msub></mml:mrow></mml:math></inline-formula>, and then returns <inline-formula><mml:math id="mm330" overflow="scroll"><mml:mrow><mml:msub><mml:mi>h</mml:mi><mml:msub><mml:mn>2</mml:mn><mml:mi>i</mml:mi></mml:msub></mml:msub></mml:mrow></mml:math></inline-formula>.</p></list-item><list-item><label>(c)</label><p><inline-formula><mml:math id="mm331" overflow="scroll"><mml:mrow><mml:msub><mml:mi>H</mml:mi><mml:mn>3</mml:mn></mml:msub></mml:mrow></mml:math></inline-formula> Query: When receiving an <inline-formula><mml:math id="mm332" overflow="scroll"><mml:mrow><mml:msub><mml:mi>H</mml:mi><mml:mn>3</mml:mn></mml:msub></mml:mrow></mml:math></inline-formula> hash query with <inline-formula><mml:math id="mm333" overflow="scroll"><mml:mrow><mml:mrow><mml:mo>(</mml:mo><mml:msub><mml:mi>m</mml:mi><mml:mi>i</mml:mi></mml:msub><mml:mo>,</mml:mo><mml:msub><mml:mi mathvariant="italic">EID</mml:mi><mml:mrow><mml:mi>i</mml:mi><mml:mi>j</mml:mi></mml:mrow></mml:msub><mml:mo>,</mml:mo><mml:msub><mml:mi mathvariant="italic">PK</mml:mi><mml:mi>i</mml:mi></mml:msub><mml:mo>,</mml:mo><mml:msub><mml:mi>Y</mml:mi><mml:mi>i</mml:mi></mml:msub><mml:mo>,</mml:mo><mml:msub><mml:mi>R</mml:mi><mml:mi>j</mml:mi></mml:msub><mml:mo>,</mml:mo><mml:mi>z</mml:mi><mml:mo>,</mml:mo><mml:msub><mml:mi>T</mml:mi><mml:mi>i</mml:mi></mml:msub><mml:mo>)</mml:mo></mml:mrow></mml:mrow></mml:math></inline-formula>, if the corresponding tuple <inline-formula><mml:math id="mm334" overflow="scroll"><mml:mrow><mml:mrow><mml:mrow><mml:mo>(</mml:mo><mml:msub><mml:mi>m</mml:mi><mml:mi>i</mml:mi></mml:msub><mml:mo>,</mml:mo><mml:msub><mml:mi mathvariant="italic">EID</mml:mi><mml:mrow><mml:mi>i</mml:mi><mml:mi>j</mml:mi></mml:mrow></mml:msub><mml:mo>,</mml:mo><mml:msub><mml:mi mathvariant="italic">PK</mml:mi><mml:mi>i</mml:mi></mml:msub><mml:mo>,</mml:mo><mml:msub><mml:mi>Y</mml:mi><mml:mi>i</mml:mi></mml:msub><mml:mo>,</mml:mo><mml:msub><mml:mi>R</mml:mi><mml:mi>j</mml:mi></mml:msub><mml:mo>,</mml:mo><mml:mi>z</mml:mi><mml:mo>,</mml:mo><mml:msub><mml:mi>T</mml:mi><mml:mi>i</mml:mi></mml:msub><mml:mo>,</mml:mo><mml:msub><mml:mi>h</mml:mi><mml:msub><mml:mn>3</mml:mn><mml:mi>i</mml:mi></mml:msub></mml:msub><mml:mo>)</mml:mo></mml:mrow><mml:mo>&#8712;</mml:mo><mml:msub><mml:mi>L</mml:mi><mml:mn>3</mml:mn></mml:msub></mml:mrow></mml:mrow></mml:math></inline-formula>, then <inline-formula><mml:math id="mm335" overflow="scroll"><mml:mrow><mml:msub><mml:mi mathvariant="script">B</mml:mi><mml:mn>1</mml:mn></mml:msub></mml:mrow></mml:math></inline-formula> returns <inline-formula><mml:math id="mm336" overflow="scroll"><mml:mrow><mml:msub><mml:mi>h</mml:mi><mml:msub><mml:mn>3</mml:mn><mml:mi>i</mml:mi></mml:msub></mml:msub></mml:mrow></mml:math></inline-formula>. Otherwise, <inline-formula><mml:math id="mm337" overflow="scroll"><mml:mrow><mml:msub><mml:mi mathvariant="script">B</mml:mi><mml:mn>1</mml:mn></mml:msub></mml:mrow></mml:math></inline-formula> selects <inline-formula><mml:math id="mm338" overflow="scroll"><mml:mrow><mml:mrow><mml:msub><mml:mi>h</mml:mi><mml:msub><mml:mn>3</mml:mn><mml:mi>i</mml:mi></mml:msub></mml:msub><mml:mo>&#8712;</mml:mo><mml:msubsup><mml:mi>Z</mml:mi><mml:mi>q</mml:mi><mml:mo>&#8727;</mml:mo></mml:msubsup></mml:mrow></mml:mrow></mml:math></inline-formula>, adds <inline-formula><mml:math id="mm339" overflow="scroll"><mml:mrow><mml:mrow><mml:mo>(</mml:mo><mml:msub><mml:mi>m</mml:mi><mml:mi>i</mml:mi></mml:msub><mml:mo>,</mml:mo><mml:msub><mml:mi mathvariant="italic">EID</mml:mi><mml:mrow><mml:mi>i</mml:mi><mml:mi>j</mml:mi></mml:mrow></mml:msub><mml:mo>,</mml:mo><mml:msub><mml:mi mathvariant="italic">PK</mml:mi><mml:mi>i</mml:mi></mml:msub><mml:mo>,</mml:mo><mml:msub><mml:mi>Y</mml:mi><mml:mi>i</mml:mi></mml:msub><mml:mo>,</mml:mo><mml:msub><mml:mi>R</mml:mi><mml:mi>j</mml:mi></mml:msub><mml:mo>,</mml:mo><mml:mi>z</mml:mi><mml:mo>,</mml:mo><mml:msub><mml:mi>T</mml:mi><mml:mi>i</mml:mi></mml:msub><mml:mo>,</mml:mo><mml:msub><mml:mi>h</mml:mi><mml:msub><mml:mn>3</mml:mn><mml:mi>i</mml:mi></mml:msub></mml:msub><mml:mo>)</mml:mo></mml:mrow></mml:mrow></mml:math></inline-formula> to <inline-formula><mml:math id="mm340" overflow="scroll"><mml:mrow><mml:msub><mml:mi>L</mml:mi><mml:mn>3</mml:mn></mml:msub></mml:mrow></mml:math></inline-formula>, and then returns <inline-formula><mml:math id="mm341" overflow="scroll"><mml:mrow><mml:msub><mml:mi>h</mml:mi><mml:msub><mml:mn>3</mml:mn><mml:mi>i</mml:mi></mml:msub></mml:msub></mml:mrow></mml:math></inline-formula>.</p></list-item><list-item><label>(d)</label><p><inline-formula><mml:math id="mm342" overflow="scroll"><mml:mrow><mml:msub><mml:mi>H</mml:mi><mml:mn>4</mml:mn></mml:msub></mml:mrow></mml:math></inline-formula> Query: When receiving an <inline-formula><mml:math id="mm343" overflow="scroll"><mml:mrow><mml:msub><mml:mi>H</mml:mi><mml:mn>4</mml:mn></mml:msub></mml:mrow></mml:math></inline-formula> hash query with <inline-formula><mml:math id="mm344" overflow="scroll"><mml:mrow><mml:mrow><mml:mo>(</mml:mo><mml:msub><mml:mi>m</mml:mi><mml:mi>i</mml:mi></mml:msub><mml:mo>,</mml:mo><mml:msub><mml:mi mathvariant="italic">EID</mml:mi><mml:mrow><mml:mi>i</mml:mi><mml:mi>j</mml:mi></mml:mrow></mml:msub><mml:mo>,</mml:mo><mml:msub><mml:mi mathvariant="italic">PK</mml:mi><mml:mi>i</mml:mi></mml:msub><mml:mo>,</mml:mo><mml:mi>z</mml:mi><mml:mo>,</mml:mo><mml:msub><mml:mi>T</mml:mi><mml:mi>i</mml:mi></mml:msub><mml:mo>)</mml:mo></mml:mrow></mml:mrow></mml:math></inline-formula>, if the corresponding tuple <inline-formula><mml:math id="mm345" overflow="scroll"><mml:mrow><mml:mrow><mml:mrow><mml:mo>(</mml:mo><mml:msub><mml:mi>m</mml:mi><mml:mi>i</mml:mi></mml:msub><mml:mo>,</mml:mo><mml:msub><mml:mi mathvariant="italic">EID</mml:mi><mml:mrow><mml:mi>i</mml:mi><mml:mi>j</mml:mi></mml:mrow></mml:msub><mml:mo>,</mml:mo><mml:msub><mml:mi mathvariant="italic">PK</mml:mi><mml:mi>i</mml:mi></mml:msub><mml:mo>,</mml:mo><mml:mi>z</mml:mi><mml:mo>,</mml:mo><mml:msub><mml:mi>T</mml:mi><mml:mi>i</mml:mi></mml:msub><mml:mo>,</mml:mo><mml:msub><mml:mi>h</mml:mi><mml:msub><mml:mn>4</mml:mn><mml:mi>i</mml:mi></mml:msub></mml:msub><mml:mo>)</mml:mo></mml:mrow><mml:mo>&#8712;</mml:mo><mml:msub><mml:mi>L</mml:mi><mml:mn>4</mml:mn></mml:msub></mml:mrow></mml:mrow></mml:math></inline-formula>, then <inline-formula><mml:math id="mm346" overflow="scroll"><mml:mrow><mml:msub><mml:mi mathvariant="script">B</mml:mi><mml:mn>1</mml:mn></mml:msub></mml:mrow></mml:math></inline-formula> returns <inline-formula><mml:math id="mm347" overflow="scroll"><mml:mrow><mml:msub><mml:mi>h</mml:mi><mml:msub><mml:mn>4</mml:mn><mml:mi>i</mml:mi></mml:msub></mml:msub></mml:mrow></mml:math></inline-formula>. Otherwise, <inline-formula><mml:math id="mm348" overflow="scroll"><mml:mrow><mml:msub><mml:mi mathvariant="script">B</mml:mi><mml:mn>1</mml:mn></mml:msub></mml:mrow></mml:math></inline-formula> selects <inline-formula><mml:math id="mm349" overflow="scroll"><mml:mrow><mml:mrow><mml:msub><mml:mi>h</mml:mi><mml:msub><mml:mn>4</mml:mn><mml:mi>i</mml:mi></mml:msub></mml:msub><mml:mo>&#8712;</mml:mo><mml:msubsup><mml:mi>Z</mml:mi><mml:mi>q</mml:mi><mml:mo>&#8727;</mml:mo></mml:msubsup></mml:mrow></mml:mrow></mml:math></inline-formula>, adds <inline-formula><mml:math id="mm350" overflow="scroll"><mml:mrow><mml:mrow><mml:mo>(</mml:mo><mml:msub><mml:mi>m</mml:mi><mml:mi>i</mml:mi></mml:msub><mml:mo>,</mml:mo><mml:msub><mml:mi mathvariant="italic">EID</mml:mi><mml:mrow><mml:mi>i</mml:mi><mml:mi>j</mml:mi></mml:mrow></mml:msub><mml:mo>,</mml:mo><mml:msub><mml:mi mathvariant="italic">PK</mml:mi><mml:mi>i</mml:mi></mml:msub><mml:mo>,</mml:mo><mml:mi>z</mml:mi><mml:mo>,</mml:mo><mml:msub><mml:mi>T</mml:mi><mml:mi>i</mml:mi></mml:msub><mml:mo>,</mml:mo><mml:msub><mml:mi>h</mml:mi><mml:msub><mml:mn>4</mml:mn><mml:mi>i</mml:mi></mml:msub></mml:msub><mml:mo>)</mml:mo></mml:mrow></mml:mrow></mml:math></inline-formula> to <inline-formula><mml:math id="mm351" overflow="scroll"><mml:mrow><mml:msub><mml:mi>L</mml:mi><mml:mn>4</mml:mn></mml:msub></mml:mrow></mml:math></inline-formula>, and then returns <inline-formula><mml:math id="mm352" overflow="scroll"><mml:mrow><mml:msub><mml:mi>h</mml:mi><mml:msub><mml:mn>4</mml:mn><mml:mi>i</mml:mi></mml:msub></mml:msub></mml:mrow></mml:math></inline-formula>.</p></list-item></list>
</p></list-item><list-item><label>(2)</label><p>Vehicle Registration Query: When <inline-formula><mml:math id="mm353" overflow="scroll"><mml:mrow><mml:msub><mml:mi mathvariant="script">B</mml:mi><mml:mn>1</mml:mn></mml:msub></mml:mrow></mml:math></inline-formula> receives a Vehicle Registration Query from <inline-formula><mml:math id="mm354" overflow="scroll"><mml:mrow><mml:msub><mml:mi mathvariant="script">A</mml:mi><mml:mn>1</mml:mn></mml:msub></mml:mrow></mml:math></inline-formula> with <inline-formula><mml:math id="mm355" overflow="scroll"><mml:mrow><mml:msub><mml:mi mathvariant="italic">PVID</mml:mi><mml:mi>i</mml:mi></mml:msub></mml:mrow></mml:math></inline-formula> as input, if <inline-formula><mml:math id="mm356" overflow="scroll"><mml:mrow><mml:msub><mml:mi mathvariant="italic">PVID</mml:mi><mml:mi>i</mml:mi></mml:msub></mml:mrow></mml:math></inline-formula> exists in <inline-formula><mml:math id="mm357" overflow="scroll"><mml:mrow><mml:msub><mml:mi>L</mml:mi><mml:mi>v</mml:mi></mml:msub></mml:mrow></mml:math></inline-formula>, <inline-formula><mml:math id="mm358" overflow="scroll"><mml:mrow><mml:msub><mml:mi mathvariant="script">B</mml:mi><mml:mn>1</mml:mn></mml:msub></mml:mrow></mml:math></inline-formula> returns &#8869;. Otherwise, <inline-formula><mml:math id="mm359" overflow="scroll"><mml:mrow><mml:msub><mml:mi mathvariant="script">B</mml:mi><mml:mn>1</mml:mn></mml:msub></mml:mrow></mml:math></inline-formula> selects <inline-formula><mml:math id="mm360" overflow="scroll"><mml:mrow><mml:mrow><mml:msub><mml:mi>x</mml:mi><mml:mi>i</mml:mi></mml:msub><mml:mo>,</mml:mo><mml:msub><mml:mi>d</mml:mi><mml:mi>i</mml:mi></mml:msub><mml:mo>,</mml:mo><mml:mi>g</mml:mi><mml:mi>i</mml:mi><mml:msub><mml:mi>d</mml:mi><mml:mi>i</mml:mi></mml:msub><mml:mo>,</mml:mo><mml:msub><mml:mi>h</mml:mi><mml:msub><mml:mn>1</mml:mn><mml:mi>i</mml:mi></mml:msub></mml:msub><mml:mo>&#8712;</mml:mo><mml:msubsup><mml:mi>Z</mml:mi><mml:mi>q</mml:mi><mml:mo>&#8727;</mml:mo></mml:msubsup></mml:mrow></mml:mrow></mml:math></inline-formula> and calculates <inline-formula><mml:math id="mm361" overflow="scroll"><mml:mrow><mml:mrow><mml:msub><mml:mi>R</mml:mi><mml:mi>i</mml:mi></mml:msub><mml:mo>=</mml:mo><mml:msub><mml:mi>d</mml:mi><mml:mi>i</mml:mi></mml:msub><mml:mi>P</mml:mi><mml:mo>&#8722;</mml:mo><mml:msub><mml:mi>h</mml:mi><mml:msub><mml:mn>1</mml:mn><mml:mi>i</mml:mi></mml:msub></mml:msub><mml:msub><mml:mi>P</mml:mi><mml:mrow><mml:mi>p</mml:mi><mml:mi>u</mml:mi><mml:mi>b</mml:mi></mml:mrow></mml:msub></mml:mrow></mml:mrow></mml:math></inline-formula>, <inline-formula><mml:math id="mm362" overflow="scroll"><mml:mrow><mml:mrow><mml:msub><mml:mi>X</mml:mi><mml:mi>i</mml:mi></mml:msub><mml:mo>=</mml:mo><mml:msub><mml:mi>x</mml:mi><mml:mi>i</mml:mi></mml:msub><mml:mi>P</mml:mi></mml:mrow></mml:mrow></mml:math></inline-formula> and <inline-formula><mml:math id="mm363" overflow="scroll"><mml:mrow><mml:mrow><mml:mi>G</mml:mi><mml:mi>I</mml:mi><mml:msub><mml:mi>D</mml:mi><mml:mi>i</mml:mi></mml:msub><mml:mo>=</mml:mo><mml:mi>g</mml:mi><mml:mi>i</mml:mi><mml:msub><mml:mi>d</mml:mi><mml:mi>i</mml:mi></mml:msub><mml:mi>P</mml:mi></mml:mrow></mml:mrow></mml:math></inline-formula>. Then, <inline-formula><mml:math id="mm364" overflow="scroll"><mml:mrow><mml:msub><mml:mi mathvariant="script">B</mml:mi><mml:mn>1</mml:mn></mml:msub></mml:mrow></mml:math></inline-formula> adds <inline-formula><mml:math id="mm365" overflow="scroll"><mml:mrow><mml:mrow><mml:mo>(</mml:mo><mml:msub><mml:mi mathvariant="italic">PVID</mml:mi><mml:mi>i</mml:mi></mml:msub><mml:mo>,</mml:mo><mml:msub><mml:mi>x</mml:mi><mml:mi>i</mml:mi></mml:msub><mml:mo>,</mml:mo><mml:msub><mml:mi>X</mml:mi><mml:mi>i</mml:mi></mml:msub><mml:mo>,</mml:mo><mml:msub><mml:mi>d</mml:mi><mml:mi>i</mml:mi></mml:msub><mml:mo>,</mml:mo><mml:msub><mml:mi>R</mml:mi><mml:mi>i</mml:mi></mml:msub><mml:mo>,</mml:mo><mml:mi>g</mml:mi><mml:mi>i</mml:mi><mml:msub><mml:mi>d</mml:mi><mml:mi>i</mml:mi></mml:msub><mml:mo>,</mml:mo><mml:mi>G</mml:mi><mml:mi>I</mml:mi><mml:msub><mml:mi>D</mml:mi><mml:mi>i</mml:mi></mml:msub><mml:mo>)</mml:mo></mml:mrow></mml:mrow></mml:math></inline-formula> to <inline-formula><mml:math id="mm366" overflow="scroll"><mml:mrow><mml:msub><mml:mi>L</mml:mi><mml:mi>v</mml:mi></mml:msub></mml:mrow></mml:math></inline-formula> and <inline-formula><mml:math id="mm367" overflow="scroll"><mml:mrow><mml:mrow><mml:mo>(</mml:mo><mml:msub><mml:mi mathvariant="italic">PVID</mml:mi><mml:mi>i</mml:mi></mml:msub><mml:mo>,</mml:mo><mml:msub><mml:mi>X</mml:mi><mml:mi>i</mml:mi></mml:msub><mml:mo>,</mml:mo><mml:msub><mml:mi>R</mml:mi><mml:mi>i</mml:mi></mml:msub><mml:mo>,</mml:mo><mml:msub><mml:mi>P</mml:mi><mml:mrow><mml:mi>p</mml:mi><mml:mi>u</mml:mi><mml:mi>b</mml:mi></mml:mrow></mml:msub><mml:mo>,</mml:mo><mml:msub><mml:mi>h</mml:mi><mml:msub><mml:mn>1</mml:mn><mml:mi>i</mml:mi></mml:msub></mml:msub><mml:mo>)</mml:mo></mml:mrow></mml:mrow></mml:math></inline-formula> to <inline-formula><mml:math id="mm368" overflow="scroll"><mml:mrow><mml:msub><mml:mi>L</mml:mi><mml:mn>1</mml:mn></mml:msub></mml:mrow></mml:math></inline-formula>.</p></list-item><list-item><label>(3)</label><p>User Registration Query: When <inline-formula><mml:math id="mm369" overflow="scroll"><mml:mrow><mml:msub><mml:mi mathvariant="script">B</mml:mi><mml:mn>1</mml:mn></mml:msub></mml:mrow></mml:math></inline-formula> receives a User Registration Query from <inline-formula><mml:math id="mm370" overflow="scroll"><mml:mrow><mml:msub><mml:mi mathvariant="script">A</mml:mi><mml:mn>1</mml:mn></mml:msub></mml:mrow></mml:math></inline-formula> with <inline-formula><mml:math id="mm371" overflow="scroll"><mml:mrow><mml:msub><mml:mi mathvariant="italic">PID</mml:mi><mml:mi>j</mml:mi></mml:msub></mml:mrow></mml:math></inline-formula> as input, if <inline-formula><mml:math id="mm372" overflow="scroll"><mml:mrow><mml:msub><mml:mi mathvariant="italic">PID</mml:mi><mml:mi>j</mml:mi></mml:msub></mml:mrow></mml:math></inline-formula> exists in <inline-formula><mml:math id="mm373" overflow="scroll"><mml:mrow><mml:msub><mml:mi>L</mml:mi><mml:mi>u</mml:mi></mml:msub></mml:mrow></mml:math></inline-formula>, <inline-formula><mml:math id="mm374" overflow="scroll"><mml:mrow><mml:msub><mml:mi mathvariant="script">B</mml:mi><mml:mn>1</mml:mn></mml:msub></mml:mrow></mml:math></inline-formula> returns &#8869;. Otherwise, <inline-formula><mml:math id="mm375" overflow="scroll"><mml:mrow><mml:msub><mml:mi mathvariant="script">B</mml:mi><mml:mn>1</mml:mn></mml:msub></mml:mrow></mml:math></inline-formula> continues the game as follows:
<list list-type="bullet"><list-item><p>If <inline-formula><mml:math id="mm376" overflow="scroll"><mml:mrow><mml:mrow><mml:msub><mml:mi mathvariant="italic">PID</mml:mi><mml:mi>j</mml:mi></mml:msub><mml:mo>=</mml:mo><mml:msup><mml:mi mathvariant="italic">PID</mml:mi><mml:mo>&#8727;</mml:mo></mml:msup></mml:mrow></mml:mrow></mml:math></inline-formula>, <inline-formula><mml:math id="mm377" overflow="scroll"><mml:mrow><mml:msub><mml:mi mathvariant="script">B</mml:mi><mml:mn>1</mml:mn></mml:msub></mml:mrow></mml:math></inline-formula> selects <inline-formula><mml:math id="mm378" overflow="scroll"><mml:mrow><mml:mrow><mml:msub><mml:mi>r</mml:mi><mml:mi>j</mml:mi></mml:msub><mml:mo>,</mml:mo><mml:msub><mml:mi>h</mml:mi><mml:msub><mml:mn>1</mml:mn><mml:mi>i</mml:mi></mml:msub></mml:msub><mml:mo>&#8712;</mml:mo><mml:msubsup><mml:mi>Z</mml:mi><mml:mi>q</mml:mi><mml:mo>&#8727;</mml:mo></mml:msubsup></mml:mrow></mml:mrow></mml:math></inline-formula> and calculates <inline-formula><mml:math id="mm379" overflow="scroll"><mml:mrow><mml:mrow><mml:msub><mml:mi>R</mml:mi><mml:mi>j</mml:mi></mml:msub><mml:mo>=</mml:mo><mml:msub><mml:mi>r</mml:mi><mml:mi>j</mml:mi></mml:msub><mml:mi>P</mml:mi></mml:mrow></mml:mrow></mml:math></inline-formula>. Then, <inline-formula><mml:math id="mm380" overflow="scroll"><mml:mrow><mml:msub><mml:mi mathvariant="script">B</mml:mi><mml:mn>1</mml:mn></mml:msub></mml:mrow></mml:math></inline-formula> adds the tuple <inline-formula><mml:math id="mm381" overflow="scroll"><mml:mrow><mml:mrow><mml:mo>(</mml:mo><mml:msub><mml:mi mathvariant="italic">PID</mml:mi><mml:mi>j</mml:mi></mml:msub><mml:mo>,</mml:mo><mml:mi>G</mml:mi><mml:mi>I</mml:mi><mml:msub><mml:mi>D</mml:mi><mml:mi>j</mml:mi></mml:msub><mml:mo>,</mml:mo><mml:mo>&#8869;</mml:mo><mml:mo>,</mml:mo><mml:msub><mml:mi>R</mml:mi><mml:mi>j</mml:mi></mml:msub><mml:mo>)</mml:mo></mml:mrow></mml:mrow></mml:math></inline-formula> to <inline-formula><mml:math id="mm382" overflow="scroll"><mml:mrow><mml:msub><mml:mi>L</mml:mi><mml:mi>u</mml:mi></mml:msub></mml:mrow></mml:math></inline-formula> and the tuple <inline-formula><mml:math id="mm383" overflow="scroll"><mml:mrow><mml:mrow><mml:mo>(</mml:mo><mml:msub><mml:mi mathvariant="italic">PID</mml:mi><mml:mi>j</mml:mi></mml:msub><mml:mo>,</mml:mo><mml:mi>G</mml:mi><mml:mi>I</mml:mi><mml:msub><mml:mi>D</mml:mi><mml:mi>j</mml:mi></mml:msub><mml:mo>,</mml:mo><mml:msub><mml:mi>R</mml:mi><mml:mi>j</mml:mi></mml:msub><mml:mo>,</mml:mo><mml:msub><mml:mi>P</mml:mi><mml:mrow><mml:mi>p</mml:mi><mml:mi>u</mml:mi><mml:mi>b</mml:mi></mml:mrow></mml:msub><mml:mo>,</mml:mo><mml:msub><mml:mi>h</mml:mi><mml:msub><mml:mn>1</mml:mn><mml:mi>j</mml:mi></mml:msub></mml:msub><mml:mo>)</mml:mo></mml:mrow></mml:mrow></mml:math></inline-formula> to <inline-formula><mml:math id="mm384" overflow="scroll"><mml:mrow><mml:msub><mml:mi>L</mml:mi><mml:mn>1</mml:mn></mml:msub></mml:mrow></mml:math></inline-formula>, where <inline-formula><mml:math id="mm385" overflow="scroll"><mml:mrow><mml:mrow><mml:mi>G</mml:mi><mml:mi>I</mml:mi><mml:msub><mml:mi>D</mml:mi><mml:mi>j</mml:mi></mml:msub></mml:mrow></mml:mrow></mml:math></inline-formula> is selected from the existing records in <inline-formula><mml:math id="mm386" overflow="scroll"><mml:mrow><mml:msub><mml:mi>L</mml:mi><mml:mi>v</mml:mi></mml:msub></mml:mrow></mml:math></inline-formula>.</p></list-item><list-item><p>If <inline-formula><mml:math id="mm387" overflow="scroll"><mml:mrow><mml:mrow><mml:mi mathvariant="italic">PID</mml:mi><mml:mi>j</mml:mi><mml:mo>&#8800;</mml:mo><mml:msup><mml:mi mathvariant="italic">PID</mml:mi><mml:mo>&#8727;</mml:mo></mml:msup></mml:mrow></mml:mrow></mml:math></inline-formula>, <inline-formula><mml:math id="mm388" overflow="scroll"><mml:mrow><mml:msub><mml:mi mathvariant="script">B</mml:mi><mml:mn>1</mml:mn></mml:msub></mml:mrow></mml:math></inline-formula> selects <inline-formula><mml:math id="mm389" overflow="scroll"><mml:mrow><mml:mrow><mml:msub><mml:mi>d</mml:mi><mml:mi>j</mml:mi></mml:msub><mml:mo>,</mml:mo><mml:msub><mml:mi>h</mml:mi><mml:msub><mml:mn>1</mml:mn><mml:mi>i</mml:mi></mml:msub></mml:msub><mml:mo>&#8712;</mml:mo><mml:msubsup><mml:mi>Z</mml:mi><mml:mi>q</mml:mi><mml:mo>&#8727;</mml:mo></mml:msubsup></mml:mrow></mml:mrow></mml:math></inline-formula> and calculates <inline-formula><mml:math id="mm390" overflow="scroll"><mml:mrow><mml:mrow><mml:msub><mml:mi>R</mml:mi><mml:mi>j</mml:mi></mml:msub><mml:mo>=</mml:mo><mml:msub><mml:mi>d</mml:mi><mml:mi>j</mml:mi></mml:msub><mml:mi>P</mml:mi><mml:mo>&#8722;</mml:mo><mml:msub><mml:mi>h</mml:mi><mml:msub><mml:mn>1</mml:mn><mml:mi>i</mml:mi></mml:msub></mml:msub><mml:msub><mml:mi>P</mml:mi><mml:mrow><mml:mi>p</mml:mi><mml:mi>u</mml:mi><mml:mi>b</mml:mi></mml:mrow></mml:msub></mml:mrow></mml:mrow></mml:math></inline-formula>. Then, <inline-formula><mml:math id="mm391" overflow="scroll"><mml:mrow><mml:msub><mml:mi mathvariant="script">B</mml:mi><mml:mn>1</mml:mn></mml:msub></mml:mrow></mml:math></inline-formula> adds <inline-formula><mml:math id="mm392" overflow="scroll"><mml:mrow><mml:mrow><mml:mo>(</mml:mo><mml:msub><mml:mi mathvariant="italic">PID</mml:mi><mml:mi>j</mml:mi></mml:msub><mml:mo>,</mml:mo><mml:mi>G</mml:mi><mml:mi>I</mml:mi><mml:msub><mml:mi>D</mml:mi><mml:mi>j</mml:mi></mml:msub><mml:mo>,</mml:mo><mml:msub><mml:mi>d</mml:mi><mml:mi>j</mml:mi></mml:msub><mml:mo>,</mml:mo><mml:msub><mml:mi>R</mml:mi><mml:mi>j</mml:mi></mml:msub><mml:mo>)</mml:mo></mml:mrow></mml:mrow></mml:math></inline-formula> to <inline-formula><mml:math id="mm393" overflow="scroll"><mml:mrow><mml:msub><mml:mi>L</mml:mi><mml:mi>u</mml:mi></mml:msub></mml:mrow></mml:math></inline-formula> and <inline-formula><mml:math id="mm394" overflow="scroll"><mml:mrow><mml:mrow><mml:mo>(</mml:mo><mml:msub><mml:mi mathvariant="italic">PID</mml:mi><mml:mi>j</mml:mi></mml:msub><mml:mo>,</mml:mo><mml:mi>G</mml:mi><mml:mi>I</mml:mi><mml:msub><mml:mi>D</mml:mi><mml:mi>j</mml:mi></mml:msub><mml:mo>,</mml:mo><mml:msub><mml:mi>R</mml:mi><mml:mi>j</mml:mi></mml:msub><mml:mo>,</mml:mo><mml:msub><mml:mi>P</mml:mi><mml:mrow><mml:mi>p</mml:mi><mml:mi>u</mml:mi><mml:mi>b</mml:mi></mml:mrow></mml:msub><mml:mo>,</mml:mo><mml:msub><mml:mi>h</mml:mi><mml:msub><mml:mn>1</mml:mn><mml:mi>j</mml:mi></mml:msub></mml:msub><mml:mo>)</mml:mo></mml:mrow></mml:mrow></mml:math></inline-formula> to <inline-formula><mml:math id="mm395" overflow="scroll"><mml:mrow><mml:msub><mml:mi>L</mml:mi><mml:mn>1</mml:mn></mml:msub></mml:mrow></mml:math></inline-formula>, where <inline-formula><mml:math id="mm396" overflow="scroll"><mml:mrow><mml:mrow><mml:mi>G</mml:mi><mml:mi>I</mml:mi><mml:msub><mml:mi>D</mml:mi><mml:mi>j</mml:mi></mml:msub></mml:mrow></mml:mrow></mml:math></inline-formula> is selected from the existing records in <inline-formula><mml:math id="mm397" overflow="scroll"><mml:mrow><mml:msub><mml:mi>L</mml:mi><mml:mi>v</mml:mi></mml:msub></mml:mrow></mml:math></inline-formula>.</p></list-item></list></p></list-item><list-item><label>(4)</label><p>Reveal Vehicle Partial Key Query: When <inline-formula><mml:math id="mm398" overflow="scroll"><mml:mrow><mml:msub><mml:mi mathvariant="script">B</mml:mi><mml:mn>1</mml:mn></mml:msub></mml:mrow></mml:math></inline-formula> receives a Reveal Vehicle Partial Key Query from <inline-formula><mml:math id="mm399" overflow="scroll"><mml:mrow><mml:msub><mml:mi mathvariant="script">A</mml:mi><mml:mn>1</mml:mn></mml:msub></mml:mrow></mml:math></inline-formula> with <inline-formula><mml:math id="mm400" overflow="scroll"><mml:mrow><mml:msub><mml:mi mathvariant="italic">PVID</mml:mi><mml:mi>i</mml:mi></mml:msub></mml:mrow></mml:math></inline-formula> as input, if the tuple <inline-formula><mml:math id="mm401" overflow="scroll"><mml:mrow><mml:mrow><mml:mrow><mml:mo>(</mml:mo><mml:mi>P</mml:mi><mml:mi>V</mml:mi><mml:mi>I</mml:mi><mml:msub><mml:mi>D</mml:mi><mml:mi>i</mml:mi></mml:msub><mml:mo>,</mml:mo><mml:msub><mml:mi>x</mml:mi><mml:mi>i</mml:mi></mml:msub><mml:mo>,</mml:mo><mml:msub><mml:mi>X</mml:mi><mml:mi>i</mml:mi></mml:msub><mml:mo>,</mml:mo><mml:msub><mml:mi>d</mml:mi><mml:mi>i</mml:mi></mml:msub><mml:mo>,</mml:mo><mml:msub><mml:mi>R</mml:mi><mml:mi>i</mml:mi></mml:msub><mml:mo>,</mml:mo><mml:mi>g</mml:mi><mml:mi>i</mml:mi><mml:msub><mml:mi>d</mml:mi><mml:mi>i</mml:mi></mml:msub><mml:mo>,</mml:mo><mml:mi>G</mml:mi><mml:mi>I</mml:mi><mml:msub><mml:mi>D</mml:mi><mml:mi>i</mml:mi></mml:msub><mml:mo>)</mml:mo></mml:mrow><mml:mo>&#8712;</mml:mo><mml:msub><mml:mi>L</mml:mi><mml:mi>v</mml:mi></mml:msub></mml:mrow></mml:mrow></mml:math></inline-formula>, <inline-formula><mml:math id="mm402" overflow="scroll"><mml:mrow><mml:msub><mml:mi mathvariant="script">B</mml:mi><mml:mn>1</mml:mn></mml:msub></mml:mrow></mml:math></inline-formula> returns the corresponding <inline-formula><mml:math id="mm403" overflow="scroll"><mml:mrow><mml:msub><mml:mi>d</mml:mi><mml:mi>i</mml:mi></mml:msub></mml:mrow></mml:math></inline-formula>. Otherwise, <inline-formula><mml:math id="mm404" overflow="scroll"><mml:mrow><mml:msub><mml:mi mathvariant="script">B</mml:mi><mml:mn>1</mml:mn></mml:msub></mml:mrow></mml:math></inline-formula> first executes the Vehicle Registration Query with <inline-formula><mml:math id="mm405" overflow="scroll"><mml:mrow><mml:msub><mml:mi mathvariant="italic">PVID</mml:mi><mml:mi>i</mml:mi></mml:msub></mml:mrow></mml:math></inline-formula> as input and then returns the corresponding <inline-formula><mml:math id="mm406" overflow="scroll"><mml:mrow><mml:msub><mml:mi>d</mml:mi><mml:mi>i</mml:mi></mml:msub></mml:mrow></mml:math></inline-formula>.</p></list-item><list-item><label>(5)</label><p>Reveal User Private Key Query: When <inline-formula><mml:math id="mm407" overflow="scroll"><mml:mrow><mml:msub><mml:mi mathvariant="script">B</mml:mi><mml:mn>1</mml:mn></mml:msub></mml:mrow></mml:math></inline-formula> receives a Reveal User Private Key Query from <inline-formula><mml:math id="mm408" overflow="scroll"><mml:mrow><mml:msub><mml:mi mathvariant="script">A</mml:mi><mml:mn>1</mml:mn></mml:msub></mml:mrow></mml:math></inline-formula> with <inline-formula><mml:math id="mm409" overflow="scroll"><mml:mrow><mml:msub><mml:mi mathvariant="italic">PID</mml:mi><mml:mi>j</mml:mi></mml:msub></mml:mrow></mml:math></inline-formula> as input, if <inline-formula><mml:math id="mm410" overflow="scroll"><mml:mrow><mml:mrow><mml:msub><mml:mi mathvariant="italic">PID</mml:mi><mml:mi>j</mml:mi></mml:msub><mml:mo>=</mml:mo><mml:msup><mml:mi mathvariant="italic">PID</mml:mi><mml:mo>&#8727;</mml:mo></mml:msup></mml:mrow></mml:mrow></mml:math></inline-formula>, <inline-formula><mml:math id="mm411" overflow="scroll"><mml:mrow><mml:msub><mml:mi mathvariant="script">B</mml:mi><mml:mn>1</mml:mn></mml:msub></mml:mrow></mml:math></inline-formula> aborts the game. Otherwise, <inline-formula><mml:math id="mm412" overflow="scroll"><mml:mrow><mml:msub><mml:mi mathvariant="script">B</mml:mi><mml:mn>1</mml:mn></mml:msub></mml:mrow></mml:math></inline-formula> continues the game as follows:
<list list-type="bullet"><list-item><p>If <inline-formula><mml:math id="mm413" overflow="scroll"><mml:mrow><mml:mrow><mml:msub><mml:mi mathvariant="italic">PID</mml:mi><mml:mi>j</mml:mi></mml:msub><mml:mo>&#8712;</mml:mo><mml:msub><mml:mi>L</mml:mi><mml:mi>u</mml:mi></mml:msub></mml:mrow></mml:mrow></mml:math></inline-formula>, <inline-formula><mml:math id="mm414" overflow="scroll"><mml:mrow><mml:msub><mml:mi mathvariant="script">B</mml:mi><mml:mn>1</mml:mn></mml:msub></mml:mrow></mml:math></inline-formula> returns the corresponding <inline-formula><mml:math id="mm415" overflow="scroll"><mml:mrow><mml:msub><mml:mi>d</mml:mi><mml:mi>j</mml:mi></mml:msub></mml:mrow></mml:math></inline-formula>.</p></list-item><list-item><p>If <inline-formula><mml:math id="mm416" overflow="scroll"><mml:mrow><mml:mrow><mml:msub><mml:mi mathvariant="italic">PID</mml:mi><mml:mi>j</mml:mi></mml:msub><mml:mo>&#8713;</mml:mo><mml:msub><mml:mi>L</mml:mi><mml:mi>u</mml:mi></mml:msub></mml:mrow></mml:mrow></mml:math></inline-formula>, <inline-formula><mml:math id="mm417" overflow="scroll"><mml:mrow><mml:msub><mml:mi mathvariant="script">B</mml:mi><mml:mn>1</mml:mn></mml:msub></mml:mrow></mml:math></inline-formula> first executes the User Registration Query and then returns the corresponding <inline-formula><mml:math id="mm418" overflow="scroll"><mml:mrow><mml:msub><mml:mi>d</mml:mi><mml:mi>j</mml:mi></mml:msub></mml:mrow></mml:math></inline-formula>.</p></list-item></list></p></list-item><list-item><label>(6)</label><p>Reveal Vehicle Secret Query: When <inline-formula><mml:math id="mm419" overflow="scroll"><mml:mrow><mml:msub><mml:mi mathvariant="script">B</mml:mi><mml:mn>1</mml:mn></mml:msub></mml:mrow></mml:math></inline-formula> receives a Reveal Vehicle Secret Query from <inline-formula><mml:math id="mm420" overflow="scroll"><mml:mrow><mml:msub><mml:mi mathvariant="script">A</mml:mi><mml:mn>1</mml:mn></mml:msub></mml:mrow></mml:math></inline-formula> with <inline-formula><mml:math id="mm421" overflow="scroll"><mml:mrow><mml:mrow><mml:mi>P</mml:mi><mml:mi>V</mml:mi><mml:mi>I</mml:mi><mml:msub><mml:mi>D</mml:mi><mml:mi>i</mml:mi></mml:msub></mml:mrow></mml:mrow></mml:math></inline-formula> as input, <inline-formula><mml:math id="mm422" overflow="scroll"><mml:mrow><mml:msub><mml:mi mathvariant="script">B</mml:mi><mml:mn>1</mml:mn></mml:msub></mml:mrow></mml:math></inline-formula> returns <inline-formula><mml:math id="mm423" overflow="scroll"><mml:mrow><mml:msub><mml:mi>x</mml:mi><mml:mi>i</mml:mi></mml:msub></mml:mrow></mml:math></inline-formula> if <inline-formula><mml:math id="mm424" overflow="scroll"><mml:mrow><mml:mrow><mml:mrow><mml:mo>(</mml:mo><mml:mi>P</mml:mi><mml:mi>V</mml:mi><mml:mi>I</mml:mi><mml:msub><mml:mi>D</mml:mi><mml:mi>i</mml:mi></mml:msub><mml:mo>,</mml:mo><mml:msub><mml:mi>x</mml:mi><mml:mi>i</mml:mi></mml:msub><mml:mo>,</mml:mo><mml:msub><mml:mi>X</mml:mi><mml:mi>i</mml:mi></mml:msub><mml:mo>,</mml:mo><mml:msub><mml:mi>d</mml:mi><mml:mi>i</mml:mi></mml:msub><mml:mo>,</mml:mo><mml:msub><mml:mi>R</mml:mi><mml:mi>i</mml:mi></mml:msub><mml:mo>,</mml:mo><mml:mi>g</mml:mi><mml:mi>i</mml:mi><mml:msub><mml:mi>d</mml:mi><mml:mi>i</mml:mi></mml:msub><mml:mo>,</mml:mo><mml:mi>G</mml:mi><mml:mi>I</mml:mi><mml:msub><mml:mi>D</mml:mi><mml:mi>i</mml:mi></mml:msub><mml:mo>)</mml:mo></mml:mrow><mml:mo>&#8712;</mml:mo><mml:msub><mml:mi>L</mml:mi><mml:mi>v</mml:mi></mml:msub></mml:mrow></mml:mrow></mml:math></inline-formula>. Otherwise, <inline-formula><mml:math id="mm425" overflow="scroll"><mml:mrow><mml:msub><mml:mi mathvariant="script">B</mml:mi><mml:mn>1</mml:mn></mml:msub></mml:mrow></mml:math></inline-formula> first executes the Vehicle Registration Query with <inline-formula><mml:math id="mm426" overflow="scroll"><mml:mrow><mml:mrow><mml:mi>P</mml:mi><mml:mi>V</mml:mi><mml:mi>I</mml:mi><mml:msub><mml:mi>D</mml:mi><mml:mi>i</mml:mi></mml:msub></mml:mrow></mml:mrow></mml:math></inline-formula> as input and then returns the corresponding <inline-formula><mml:math id="mm427" overflow="scroll"><mml:mrow><mml:msub><mml:mi>x</mml:mi><mml:mi>i</mml:mi></mml:msub></mml:mrow></mml:math></inline-formula>.</p></list-item><list-item><label>(7)</label><p>Reveal Vehicle Public Key Query: When <inline-formula><mml:math id="mm428" overflow="scroll"><mml:mrow><mml:msub><mml:mi mathvariant="script">B</mml:mi><mml:mn>1</mml:mn></mml:msub></mml:mrow></mml:math></inline-formula> receives a Reveal Public Key Query from <inline-formula><mml:math id="mm429" overflow="scroll"><mml:mrow><mml:msub><mml:mi mathvariant="script">A</mml:mi><mml:mn>1</mml:mn></mml:msub></mml:mrow></mml:math></inline-formula> with <inline-formula><mml:math id="mm430" overflow="scroll"><mml:mrow><mml:msub><mml:mi mathvariant="italic">PVID</mml:mi><mml:mi>i</mml:mi></mml:msub></mml:mrow></mml:math></inline-formula> as input, if <inline-formula><mml:math id="mm431" overflow="scroll"><mml:mrow><mml:mrow><mml:mrow><mml:mo>(</mml:mo><mml:mi>P</mml:mi><mml:mi>V</mml:mi><mml:mi>I</mml:mi><mml:msub><mml:mi>D</mml:mi><mml:mi>i</mml:mi></mml:msub><mml:mo>,</mml:mo><mml:msub><mml:mi>x</mml:mi><mml:mi>i</mml:mi></mml:msub><mml:mo>,</mml:mo><mml:msub><mml:mi>X</mml:mi><mml:mi>i</mml:mi></mml:msub><mml:mo>,</mml:mo><mml:msub><mml:mi>d</mml:mi><mml:mi>i</mml:mi></mml:msub><mml:mo>,</mml:mo><mml:msub><mml:mi>R</mml:mi><mml:mi>i</mml:mi></mml:msub><mml:mo>,</mml:mo><mml:mi>g</mml:mi><mml:mi>i</mml:mi><mml:msub><mml:mi>d</mml:mi><mml:mi>i</mml:mi></mml:msub><mml:mo>,</mml:mo><mml:mi>G</mml:mi><mml:mi>I</mml:mi><mml:msub><mml:mi>D</mml:mi><mml:mi>i</mml:mi></mml:msub><mml:mo>)</mml:mo></mml:mrow><mml:mo>&#8712;</mml:mo><mml:msub><mml:mi>L</mml:mi><mml:mi>v</mml:mi></mml:msub></mml:mrow></mml:mrow></mml:math></inline-formula>, <inline-formula><mml:math id="mm432" overflow="scroll"><mml:mrow><mml:msub><mml:mi mathvariant="script">B</mml:mi><mml:mn>1</mml:mn></mml:msub></mml:mrow></mml:math></inline-formula> returns the corresponding <inline-formula><mml:math id="mm433" overflow="scroll"><mml:mrow><mml:mrow><mml:mo>(</mml:mo><mml:msub><mml:mi>X</mml:mi><mml:mi>i</mml:mi></mml:msub><mml:mo>,</mml:mo><mml:msub><mml:mi>R</mml:mi><mml:mi>i</mml:mi></mml:msub><mml:mo>)</mml:mo></mml:mrow></mml:mrow></mml:math></inline-formula>. Otherwise, <inline-formula><mml:math id="mm434" overflow="scroll"><mml:mrow><mml:msub><mml:mi mathvariant="script">B</mml:mi><mml:mn>1</mml:mn></mml:msub></mml:mrow></mml:math></inline-formula> first executes the Vehicle Registration Query with <inline-formula><mml:math id="mm435" overflow="scroll"><mml:mrow><mml:msub><mml:mi mathvariant="italic">PVID</mml:mi><mml:mi>i</mml:mi></mml:msub></mml:mrow></mml:math></inline-formula> as input and then returns the corresponding <inline-formula><mml:math id="mm436" overflow="scroll"><mml:mrow><mml:mrow><mml:mo>(</mml:mo><mml:msub><mml:mi>X</mml:mi><mml:mi>i</mml:mi></mml:msub><mml:mo>,</mml:mo><mml:msub><mml:mi>R</mml:mi><mml:mi>i</mml:mi></mml:msub><mml:mo>)</mml:mo></mml:mrow></mml:mrow></mml:math></inline-formula>.</p></list-item><list-item><label>(8)</label><p>Reveal User Public Key Query: When <inline-formula><mml:math id="mm437" overflow="scroll"><mml:mrow><mml:msub><mml:mi mathvariant="script">B</mml:mi><mml:mn>1</mml:mn></mml:msub></mml:mrow></mml:math></inline-formula> receives a Reveal User Public Key Query from <inline-formula><mml:math id="mm438" overflow="scroll"><mml:mrow><mml:msub><mml:mi mathvariant="script">A</mml:mi><mml:mn>1</mml:mn></mml:msub></mml:mrow></mml:math></inline-formula> with <inline-formula><mml:math id="mm439" overflow="scroll"><mml:mrow><mml:msub><mml:mi mathvariant="italic">PID</mml:mi><mml:mi>j</mml:mi></mml:msub></mml:mrow></mml:math></inline-formula> as input, if <inline-formula><mml:math id="mm440" overflow="scroll"><mml:mrow><mml:mrow><mml:mrow><mml:mo>(</mml:mo><mml:msub><mml:mi mathvariant="italic">PID</mml:mi><mml:mi>j</mml:mi></mml:msub><mml:mo>,</mml:mo><mml:mi>G</mml:mi><mml:mi>I</mml:mi><mml:msub><mml:mi>D</mml:mi><mml:mi>j</mml:mi></mml:msub><mml:mo>,</mml:mo><mml:msub><mml:mi>d</mml:mi><mml:mi>j</mml:mi></mml:msub><mml:mo>,</mml:mo><mml:msub><mml:mi>R</mml:mi><mml:mi>j</mml:mi></mml:msub><mml:mo>)</mml:mo></mml:mrow><mml:mo>&#8712;</mml:mo><mml:msub><mml:mi>L</mml:mi><mml:mi>u</mml:mi></mml:msub></mml:mrow></mml:mrow></mml:math></inline-formula>, <inline-formula><mml:math id="mm441" overflow="scroll"><mml:mrow><mml:msub><mml:mi mathvariant="script">B</mml:mi><mml:mn>1</mml:mn></mml:msub></mml:mrow></mml:math></inline-formula> returns the corresponding <inline-formula><mml:math id="mm442" overflow="scroll"><mml:mrow><mml:msub><mml:mi>R</mml:mi><mml:mi>j</mml:mi></mml:msub></mml:mrow></mml:math></inline-formula>. Otherwise, <inline-formula><mml:math id="mm443" overflow="scroll"><mml:mrow><mml:msub><mml:mi mathvariant="script">B</mml:mi><mml:mn>1</mml:mn></mml:msub></mml:mrow></mml:math></inline-formula> first executes the User Registration Query with <inline-formula><mml:math id="mm444" overflow="scroll"><mml:mrow><mml:msub><mml:mi mathvariant="italic">PID</mml:mi><mml:mi>j</mml:mi></mml:msub></mml:mrow></mml:math></inline-formula> as input and then returns the corresponding <inline-formula><mml:math id="mm445" overflow="scroll"><mml:mrow><mml:msub><mml:mi>R</mml:mi><mml:mi>j</mml:mi></mml:msub></mml:mrow></mml:math></inline-formula>.</p></list-item><list-item><label>(9)</label><p>Replace Vehicle Public Key Query: When <inline-formula><mml:math id="mm446" overflow="scroll"><mml:mrow><mml:msub><mml:mi mathvariant="script">B</mml:mi><mml:mn>1</mml:mn></mml:msub></mml:mrow></mml:math></inline-formula> receives a Replace Vehicle Public Key Query from <inline-formula><mml:math id="mm447" overflow="scroll"><mml:mrow><mml:msub><mml:mi mathvariant="script">A</mml:mi><mml:mn>1</mml:mn></mml:msub></mml:mrow></mml:math></inline-formula> with <inline-formula><mml:math id="mm448" overflow="scroll"><mml:mrow><mml:mrow><mml:mo>(</mml:mo><mml:mi>P</mml:mi><mml:mi>V</mml:mi><mml:mi>I</mml:mi><mml:msub><mml:mi>D</mml:mi><mml:mi>i</mml:mi></mml:msub><mml:mo>,</mml:mo><mml:msubsup><mml:mi>X</mml:mi><mml:mi>i</mml:mi><mml:mo>&#8242;</mml:mo></mml:msubsup><mml:mo>,</mml:mo><mml:msubsup><mml:mi>R</mml:mi><mml:mi>i</mml:mi><mml:mo>&#8242;</mml:mo></mml:msubsup><mml:mo>)</mml:mo></mml:mrow></mml:mrow></mml:math></inline-formula> as input, <inline-formula><mml:math id="mm449" overflow="scroll"><mml:mrow><mml:msub><mml:mi mathvariant="script">B</mml:mi><mml:mn>1</mml:mn></mml:msub></mml:mrow></mml:math></inline-formula> sets <inline-formula><mml:math id="mm450" overflow="scroll"><mml:mrow><mml:mrow><mml:mo>(</mml:mo><mml:msubsup><mml:mi>X</mml:mi><mml:mi>i</mml:mi><mml:mo>&#8242;</mml:mo></mml:msubsup><mml:mo>,</mml:mo><mml:msubsup><mml:mi>R</mml:mi><mml:mi>i</mml:mi><mml:mo>&#8242;</mml:mo></mml:msubsup><mml:mo>)</mml:mo></mml:mrow></mml:mrow></mml:math></inline-formula> as <inline-formula><mml:math id="mm451" overflow="scroll"><mml:mrow><mml:msub><mml:mi mathvariant="italic">PVID</mml:mi><mml:mi>i</mml:mi></mml:msub></mml:mrow></mml:math></inline-formula>s new public key and updates the record in <inline-formula><mml:math id="mm452" overflow="scroll"><mml:mrow><mml:msub><mml:mi>L</mml:mi><mml:mi>v</mml:mi></mml:msub></mml:mrow></mml:math></inline-formula>.</p></list-item><list-item><label>(10)</label><p>Replace User Public Key Query: When <inline-formula><mml:math id="mm453" overflow="scroll"><mml:mrow><mml:msub><mml:mi mathvariant="script">B</mml:mi><mml:mn>1</mml:mn></mml:msub></mml:mrow></mml:math></inline-formula> receives a Replace User Public Key Query from <inline-formula><mml:math id="mm454" overflow="scroll"><mml:mrow><mml:msub><mml:mi mathvariant="script">A</mml:mi><mml:mn>1</mml:mn></mml:msub></mml:mrow></mml:math></inline-formula> with <inline-formula><mml:math id="mm455" overflow="scroll"><mml:mrow><mml:mrow><mml:mo>(</mml:mo><mml:msub><mml:mi mathvariant="italic">PID</mml:mi><mml:mi>j</mml:mi></mml:msub><mml:mo>,</mml:mo><mml:msubsup><mml:mi>R</mml:mi><mml:mi>j</mml:mi><mml:mo>&#8242;</mml:mo></mml:msubsup><mml:mo>)</mml:mo></mml:mrow></mml:mrow></mml:math></inline-formula> as input, <inline-formula><mml:math id="mm456" overflow="scroll"><mml:mrow><mml:msub><mml:mi mathvariant="script">B</mml:mi><mml:mn>1</mml:mn></mml:msub></mml:mrow></mml:math></inline-formula> sets <inline-formula><mml:math id="mm457" overflow="scroll"><mml:mrow><mml:msubsup><mml:mi>R</mml:mi><mml:mi>i</mml:mi><mml:mo>&#8242;</mml:mo></mml:msubsup></mml:mrow></mml:math></inline-formula> as <inline-formula><mml:math id="mm458" overflow="scroll"><mml:mrow><mml:msub><mml:mi mathvariant="italic">PID</mml:mi><mml:mi>j</mml:mi></mml:msub></mml:mrow></mml:math></inline-formula>&#8217;s new public key and updates the record in <inline-formula><mml:math id="mm459" overflow="scroll"><mml:mrow><mml:msub><mml:mi>L</mml:mi><mml:mi>u</mml:mi></mml:msub></mml:mrow></mml:math></inline-formula>.</p></list-item><list-item><label>(11)</label><p>Sign Query: When <inline-formula><mml:math id="mm460" overflow="scroll"><mml:mrow><mml:msub><mml:mi mathvariant="script">B</mml:mi><mml:mn>1</mml:mn></mml:msub></mml:mrow></mml:math></inline-formula> receives a Sign Query from <inline-formula><mml:math id="mm461" overflow="scroll"><mml:mrow><mml:msub><mml:mi mathvariant="script">A</mml:mi><mml:mn>1</mml:mn></mml:msub></mml:mrow></mml:math></inline-formula> with <inline-formula><mml:math id="mm462" overflow="scroll"><mml:mrow><mml:mrow><mml:mo>(</mml:mo><mml:msub><mml:mi mathvariant="italic">PVID</mml:mi><mml:mi>i</mml:mi></mml:msub><mml:mo>,</mml:mo><mml:msub><mml:mi mathvariant="italic">PID</mml:mi><mml:mi>j</mml:mi></mml:msub><mml:mo>,</mml:mo><mml:msub><mml:mi>m</mml:mi><mml:mi>i</mml:mi></mml:msub><mml:mo>)</mml:mo></mml:mrow></mml:mrow></mml:math></inline-formula> as input, <inline-formula><mml:math id="mm463" overflow="scroll"><mml:mrow><mml:msub><mml:mi mathvariant="script">B</mml:mi><mml:mn>1</mml:mn></mml:msub></mml:mrow></mml:math></inline-formula> first checks whether <inline-formula><mml:math id="mm464" overflow="scroll"><mml:mrow><mml:msub><mml:mi mathvariant="italic">PVID</mml:mi><mml:mi>i</mml:mi></mml:msub></mml:mrow></mml:math></inline-formula> and <inline-formula><mml:math id="mm465" overflow="scroll"><mml:mrow><mml:msub><mml:mi mathvariant="italic">PID</mml:mi><mml:mi>j</mml:mi></mml:msub></mml:mrow></mml:math></inline-formula> exist in <inline-formula><mml:math id="mm466" overflow="scroll"><mml:mrow><mml:msub><mml:mi>L</mml:mi><mml:mi>v</mml:mi></mml:msub></mml:mrow></mml:math></inline-formula> and <inline-formula><mml:math id="mm467" overflow="scroll"><mml:mrow><mml:msub><mml:mi>L</mml:mi><mml:mi>u</mml:mi></mml:msub></mml:mrow></mml:math></inline-formula>. If not, <inline-formula><mml:math id="mm468" overflow="scroll"><mml:mrow><mml:msub><mml:mi mathvariant="script">B</mml:mi><mml:mn>1</mml:mn></mml:msub></mml:mrow></mml:math></inline-formula> first executes the Vehicle Registration Query and User Registration Query with the input identities. Then, after acquiring the corresponding records, <inline-formula><mml:math id="mm469" overflow="scroll"><mml:mrow><mml:msub><mml:mi mathvariant="script">B</mml:mi><mml:mn>1</mml:mn></mml:msub></mml:mrow></mml:math></inline-formula> continues the game as follows:
<list list-type="bullet"><list-item><p>If <inline-formula><mml:math id="mm470" overflow="scroll"><mml:mrow><mml:mrow><mml:msub><mml:mi mathvariant="italic">PID</mml:mi><mml:mi>j</mml:mi></mml:msub><mml:mo>&#8800;</mml:mo><mml:msup><mml:mi mathvariant="italic">PID</mml:mi><mml:mo>&#8727;</mml:mo></mml:msup></mml:mrow></mml:mrow></mml:math></inline-formula>, <inline-formula><mml:math id="mm471" overflow="scroll"><mml:mrow><mml:msub><mml:mi mathvariant="script">B</mml:mi><mml:mn>1</mml:mn></mml:msub></mml:mrow></mml:math></inline-formula> selects <inline-formula><mml:math id="mm472" overflow="scroll"><mml:mrow><mml:mrow><mml:mi>z</mml:mi><mml:mo>,</mml:mo><mml:msub><mml:mi>y</mml:mi><mml:mi>i</mml:mi></mml:msub><mml:mo>,</mml:mo><mml:msub><mml:mi>h</mml:mi><mml:msub><mml:mn>3</mml:mn><mml:mi>i</mml:mi></mml:msub></mml:msub><mml:mo>,</mml:mo><mml:msub><mml:mi>h</mml:mi><mml:msub><mml:mn>4</mml:mn><mml:mi>i</mml:mi></mml:msub></mml:msub><mml:mo>&#8712;</mml:mo><mml:msubsup><mml:mi>Z</mml:mi><mml:mi>q</mml:mi><mml:mo>&#8727;</mml:mo></mml:msubsup></mml:mrow></mml:mrow></mml:math></inline-formula> and obtains <inline-formula><mml:math id="mm473" overflow="scroll"><mml:mrow><mml:msub><mml:mi>h</mml:mi><mml:msub><mml:mn>1</mml:mn><mml:mi>i</mml:mi></mml:msub></mml:msub></mml:mrow></mml:math></inline-formula>, <inline-formula><mml:math id="mm474" overflow="scroll"><mml:mrow><mml:msub><mml:mi>h</mml:mi><mml:msub><mml:mn>1</mml:mn><mml:mi>j</mml:mi></mml:msub></mml:msub></mml:mrow></mml:math></inline-formula> from <inline-formula><mml:math id="mm475" overflow="scroll"><mml:mrow><mml:msub><mml:mi>L</mml:mi><mml:mn>1</mml:mn></mml:msub></mml:mrow></mml:math></inline-formula>. Then, <inline-formula><mml:math id="mm476" overflow="scroll"><mml:mrow><mml:msub><mml:mi mathvariant="script">B</mml:mi><mml:mn>1</mml:mn></mml:msub></mml:mrow></mml:math></inline-formula> calculates <inline-formula><mml:math id="mm477" overflow="scroll"><mml:mrow><mml:mrow><mml:msub><mml:mi>Y</mml:mi><mml:mi>i</mml:mi></mml:msub><mml:mo>=</mml:mo><mml:msub><mml:mi>y</mml:mi><mml:mi>i</mml:mi></mml:msub><mml:mi>P</mml:mi></mml:mrow></mml:mrow></mml:math></inline-formula>, <inline-formula><mml:math id="mm478" overflow="scroll"><mml:mrow><mml:mrow><mml:msub><mml:mi>&#963;</mml:mi><mml:mi>i</mml:mi></mml:msub><mml:mo>=</mml:mo><mml:msup><mml:mi>z</mml:mi><mml:mrow><mml:mo>&#8722;</mml:mo><mml:mn>1</mml:mn></mml:mrow></mml:msup><mml:mrow><mml:mo>(</mml:mo><mml:msub><mml:mi>y</mml:mi><mml:mi>i</mml:mi></mml:msub><mml:mo>+</mml:mo><mml:msub><mml:mi>h</mml:mi><mml:msub><mml:mn>3</mml:mn><mml:mi>i</mml:mi></mml:msub></mml:msub><mml:msub><mml:mi>x</mml:mi><mml:mi>i</mml:mi></mml:msub><mml:mo>+</mml:mo><mml:msub><mml:mi>h</mml:mi><mml:msub><mml:mn>4</mml:mn><mml:mi>i</mml:mi></mml:msub></mml:msub><mml:mrow><mml:mo>(</mml:mo><mml:msub><mml:mi>d</mml:mi><mml:mi>i</mml:mi></mml:msub><mml:mo>+</mml:mo><mml:msub><mml:mi>d</mml:mi><mml:mi>j</mml:mi></mml:msub><mml:mo>)</mml:mo></mml:mrow><mml:mo>)</mml:mo></mml:mrow></mml:mrow></mml:mrow></mml:math></inline-formula>. Then, <inline-formula><mml:math id="mm479" overflow="scroll"><mml:mrow><mml:msub><mml:mi mathvariant="script">B</mml:mi><mml:mn>1</mml:mn></mml:msub></mml:mrow></mml:math></inline-formula> adds <inline-formula><mml:math id="mm480" overflow="scroll"><mml:mrow><mml:mrow><mml:mo>(</mml:mo><mml:msub><mml:mi>m</mml:mi><mml:mi>i</mml:mi></mml:msub><mml:mo>,</mml:mo><mml:msub><mml:mi mathvariant="italic">EID</mml:mi><mml:mrow><mml:mi>i</mml:mi><mml:mi>j</mml:mi></mml:mrow></mml:msub><mml:mo>,</mml:mo><mml:mi>G</mml:mi><mml:mi>I</mml:mi><mml:msub><mml:mi>D</mml:mi><mml:mi>j</mml:mi></mml:msub><mml:mo>,</mml:mo><mml:msub><mml:mi mathvariant="italic">PK</mml:mi><mml:mi>i</mml:mi></mml:msub><mml:mo>,</mml:mo><mml:msub><mml:mi>Y</mml:mi><mml:mi>i</mml:mi></mml:msub><mml:mo>,</mml:mo><mml:msub><mml:mi>R</mml:mi><mml:mi>j</mml:mi></mml:msub><mml:mo>,</mml:mo><mml:mi>z</mml:mi><mml:mo>,</mml:mo><mml:msub><mml:mi>T</mml:mi><mml:mi>z</mml:mi></mml:msub><mml:mo>,</mml:mo><mml:msub><mml:mi>h</mml:mi><mml:msub><mml:mn>3</mml:mn><mml:mi>i</mml:mi></mml:msub></mml:msub><mml:mo>)</mml:mo></mml:mrow></mml:mrow></mml:math></inline-formula> to <inline-formula><mml:math id="mm481" overflow="scroll"><mml:mrow><mml:msub><mml:mi>L</mml:mi><mml:mn>3</mml:mn></mml:msub></mml:mrow></mml:math></inline-formula> and <inline-formula><mml:math id="mm482" overflow="scroll"><mml:mrow><mml:mrow><mml:mo>(</mml:mo><mml:msub><mml:mi>m</mml:mi><mml:mi>i</mml:mi></mml:msub><mml:mo>,</mml:mo><mml:msub><mml:mi mathvariant="italic">EID</mml:mi><mml:mrow><mml:mi>i</mml:mi><mml:mi>j</mml:mi></mml:mrow></mml:msub><mml:mo>,</mml:mo><mml:mi>G</mml:mi><mml:mi>I</mml:mi><mml:msub><mml:mi>D</mml:mi><mml:mi>j</mml:mi></mml:msub><mml:mo>,</mml:mo><mml:msub><mml:mi mathvariant="italic">PK</mml:mi><mml:mi>i</mml:mi></mml:msub><mml:mo>,</mml:mo><mml:mi>z</mml:mi><mml:mo>,</mml:mo><mml:msub><mml:mi>T</mml:mi><mml:mi>z</mml:mi></mml:msub><mml:mo>,</mml:mo><mml:msub><mml:mi>h</mml:mi><mml:msub><mml:mn>4</mml:mn><mml:mi>i</mml:mi></mml:msub></mml:msub><mml:mo>)</mml:mo></mml:mrow></mml:mrow></mml:math></inline-formula> to <inline-formula><mml:math id="mm483" overflow="scroll"><mml:mrow><mml:msub><mml:mi>L</mml:mi><mml:mn>4</mml:mn></mml:msub></mml:mrow></mml:math></inline-formula>, where <inline-formula><mml:math id="mm484" overflow="scroll"><mml:mrow><mml:mrow><mml:msub><mml:mi mathvariant="italic">EID</mml:mi><mml:mrow><mml:mi>i</mml:mi><mml:mi>j</mml:mi></mml:mrow></mml:msub><mml:mo>=</mml:mo><mml:mi>P</mml:mi><mml:mi>V</mml:mi><mml:mi>I</mml:mi><mml:msub><mml:mi>D</mml:mi><mml:mi>i</mml:mi></mml:msub><mml:mrow><mml:mo>|</mml:mo><mml:mo>|</mml:mo></mml:mrow><mml:msub><mml:mi mathvariant="italic">PID</mml:mi><mml:mi>j</mml:mi></mml:msub></mml:mrow></mml:mrow></mml:math></inline-formula>. Finally, <inline-formula><mml:math id="mm485" overflow="scroll"><mml:mrow><mml:msub><mml:mi mathvariant="script">B</mml:mi><mml:mn>1</mml:mn></mml:msub></mml:mrow></mml:math></inline-formula> returns <inline-formula><mml:math id="mm486" overflow="scroll"><mml:mrow><mml:mrow><mml:mo>(</mml:mo><mml:msub><mml:mi>&#963;</mml:mi><mml:mi>i</mml:mi></mml:msub><mml:mo>,</mml:mo><mml:msub><mml:mi>Y</mml:mi><mml:mi>i</mml:mi></mml:msub><mml:mo>,</mml:mo><mml:msub><mml:mi>T</mml:mi><mml:mi>z</mml:mi></mml:msub><mml:mo>)</mml:mo></mml:mrow></mml:mrow></mml:math></inline-formula> to <inline-formula><mml:math id="mm487" overflow="scroll"><mml:mrow><mml:msub><mml:mi mathvariant="script">A</mml:mi><mml:mn>1</mml:mn></mml:msub></mml:mrow></mml:math></inline-formula>.</p></list-item><list-item><p>If <inline-formula><mml:math id="mm488" overflow="scroll"><mml:mrow><mml:mrow><mml:msub><mml:mi mathvariant="italic">PID</mml:mi><mml:mi>j</mml:mi></mml:msub><mml:mo>=</mml:mo><mml:msup><mml:mi mathvariant="italic">PID</mml:mi><mml:mo>&#8727;</mml:mo></mml:msup></mml:mrow></mml:mrow></mml:math></inline-formula>, <inline-formula><mml:math id="mm489" overflow="scroll"><mml:mrow><mml:msub><mml:mi mathvariant="script">B</mml:mi><mml:mn>1</mml:mn></mml:msub></mml:mrow></mml:math></inline-formula> selects <inline-formula><mml:math id="mm490" overflow="scroll"><mml:mrow><mml:mrow><mml:mi>z</mml:mi><mml:mo>,</mml:mo><mml:msub><mml:mi>y</mml:mi><mml:mi>i</mml:mi></mml:msub><mml:mo>,</mml:mo><mml:msub><mml:mi>h</mml:mi><mml:msub><mml:mn>3</mml:mn><mml:mi>i</mml:mi></mml:msub></mml:msub><mml:mo>,</mml:mo><mml:msub><mml:mi>h</mml:mi><mml:msub><mml:mn>4</mml:mn><mml:mi>i</mml:mi></mml:msub></mml:msub><mml:mo>&#8712;</mml:mo><mml:msubsup><mml:mi>Z</mml:mi><mml:mi>q</mml:mi><mml:mo>&#8727;</mml:mo></mml:msubsup></mml:mrow></mml:mrow></mml:math></inline-formula> and obtains <inline-formula><mml:math id="mm491" overflow="scroll"><mml:mrow><mml:msub><mml:mi>h</mml:mi><mml:msub><mml:mn>1</mml:mn><mml:mi>i</mml:mi></mml:msub></mml:msub></mml:mrow></mml:math></inline-formula>, <inline-formula><mml:math id="mm492" overflow="scroll"><mml:mrow><mml:msub><mml:mi>h</mml:mi><mml:msub><mml:mn>1</mml:mn><mml:mi>j</mml:mi></mml:msub></mml:msub></mml:mrow></mml:math></inline-formula> from <inline-formula><mml:math id="mm493" overflow="scroll"><mml:mrow><mml:msub><mml:mi>L</mml:mi><mml:mn>1</mml:mn></mml:msub></mml:mrow></mml:math></inline-formula>. Then, <inline-formula><mml:math id="mm494" overflow="scroll"><mml:mrow><mml:msub><mml:mi mathvariant="script">B</mml:mi><mml:mn>1</mml:mn></mml:msub></mml:mrow></mml:math></inline-formula> sets <inline-formula><mml:math id="mm495" overflow="scroll"><mml:mrow><mml:mrow><mml:msub><mml:mi>&#963;</mml:mi><mml:mi>i</mml:mi></mml:msub><mml:mo>=</mml:mo><mml:msup><mml:mi>z</mml:mi><mml:mrow><mml:mo>&#8722;</mml:mo><mml:mn>1</mml:mn></mml:mrow></mml:msup><mml:msub><mml:mi>y</mml:mi><mml:mi>i</mml:mi></mml:msub></mml:mrow></mml:mrow></mml:math></inline-formula>, <inline-formula><mml:math id="mm496" overflow="scroll"><mml:mrow><mml:mrow><mml:msub><mml:mi>Y</mml:mi><mml:mi>i</mml:mi></mml:msub><mml:mo>=</mml:mo><mml:mi>z</mml:mi><mml:msub><mml:mi>&#963;</mml:mi><mml:mi>i</mml:mi></mml:msub><mml:mi>P</mml:mi><mml:mo>&#8722;</mml:mo><mml:msub><mml:mi>h</mml:mi><mml:msub><mml:mn>3</mml:mn><mml:mi>i</mml:mi></mml:msub></mml:msub><mml:msub><mml:mi>X</mml:mi><mml:mi>i</mml:mi></mml:msub><mml:mo>&#8722;</mml:mo><mml:msub><mml:mi>h</mml:mi><mml:msub><mml:mn>4</mml:mn><mml:mi>i</mml:mi></mml:msub></mml:msub><mml:mrow><mml:mo>(</mml:mo><mml:msub><mml:mi>R</mml:mi><mml:mi>i</mml:mi></mml:msub><mml:mo>+</mml:mo><mml:msub><mml:mi>R</mml:mi><mml:mi>j</mml:mi></mml:msub><mml:mo>+</mml:mo><mml:msub><mml:mi>h</mml:mi><mml:msub><mml:mn>1</mml:mn><mml:mrow><mml:mi>i</mml:mi><mml:mi>j</mml:mi></mml:mrow></mml:msub></mml:msub><mml:msub><mml:mi>P</mml:mi><mml:mrow><mml:mi>p</mml:mi><mml:mi>u</mml:mi><mml:mi>b</mml:mi></mml:mrow></mml:msub><mml:mo>)</mml:mo></mml:mrow></mml:mrow></mml:mrow></mml:math></inline-formula>, where <inline-formula><mml:math id="mm497" overflow="scroll"><mml:mrow><mml:mrow><mml:msub><mml:mi>h</mml:mi><mml:msub><mml:mn>1</mml:mn><mml:mrow><mml:mi>i</mml:mi><mml:mi>j</mml:mi></mml:mrow></mml:msub></mml:msub><mml:mo>=</mml:mo><mml:mrow><mml:mo>(</mml:mo><mml:msub><mml:mi>h</mml:mi><mml:msub><mml:mn>1</mml:mn><mml:mi>i</mml:mi></mml:msub></mml:msub><mml:mo>+</mml:mo><mml:msub><mml:mi>h</mml:mi><mml:msub><mml:mn>1</mml:mn><mml:mi>j</mml:mi></mml:msub></mml:msub><mml:mo>)</mml:mo></mml:mrow></mml:mrow></mml:mrow></mml:math></inline-formula>. Then, <inline-formula><mml:math id="mm498" overflow="scroll"><mml:mrow><mml:msub><mml:mi mathvariant="script">B</mml:mi><mml:mn>1</mml:mn></mml:msub></mml:mrow></mml:math></inline-formula> adds <inline-formula><mml:math id="mm499" overflow="scroll"><mml:mrow><mml:mrow><mml:mo>(</mml:mo><mml:msub><mml:mi>m</mml:mi><mml:mi>i</mml:mi></mml:msub><mml:mo>,</mml:mo><mml:msub><mml:mi mathvariant="italic">EID</mml:mi><mml:mrow><mml:mi>i</mml:mi><mml:mi>j</mml:mi></mml:mrow></mml:msub><mml:mo>,</mml:mo><mml:mi>G</mml:mi><mml:mi>I</mml:mi><mml:msub><mml:mi>D</mml:mi><mml:mi>j</mml:mi></mml:msub><mml:mo>,</mml:mo><mml:msub><mml:mi mathvariant="italic">PK</mml:mi><mml:mi>i</mml:mi></mml:msub><mml:mo>,</mml:mo><mml:msub><mml:mi>Y</mml:mi><mml:mi>i</mml:mi></mml:msub><mml:mo>,</mml:mo><mml:msub><mml:mi>R</mml:mi><mml:mi>j</mml:mi></mml:msub><mml:mo>,</mml:mo><mml:mi>z</mml:mi><mml:mo>,</mml:mo><mml:msub><mml:mi>T</mml:mi><mml:mi>z</mml:mi></mml:msub><mml:mo>,</mml:mo><mml:msub><mml:mi>h</mml:mi><mml:msub><mml:mn>3</mml:mn><mml:mi>i</mml:mi></mml:msub></mml:msub><mml:mo>)</mml:mo></mml:mrow></mml:mrow></mml:math></inline-formula> to <inline-formula><mml:math id="mm500" overflow="scroll"><mml:mrow><mml:msub><mml:mi>L</mml:mi><mml:mn>3</mml:mn></mml:msub></mml:mrow></mml:math></inline-formula> and <inline-formula><mml:math id="mm501" overflow="scroll"><mml:mrow><mml:mrow><mml:mo>(</mml:mo><mml:msub><mml:mi>m</mml:mi><mml:mi>i</mml:mi></mml:msub><mml:mo>,</mml:mo><mml:msub><mml:mi mathvariant="italic">EID</mml:mi><mml:mrow><mml:mi>i</mml:mi><mml:mi>j</mml:mi></mml:mrow></mml:msub><mml:mo>,</mml:mo><mml:mi>G</mml:mi><mml:mi>I</mml:mi><mml:msub><mml:mi>D</mml:mi><mml:mi>j</mml:mi></mml:msub><mml:mo>,</mml:mo><mml:msub><mml:mi mathvariant="italic">PK</mml:mi><mml:mi>i</mml:mi></mml:msub><mml:mo>,</mml:mo><mml:mi>z</mml:mi><mml:mo>,</mml:mo><mml:msub><mml:mi>T</mml:mi><mml:mi>z</mml:mi></mml:msub><mml:mo>,</mml:mo><mml:msub><mml:mi>h</mml:mi><mml:msub><mml:mn>4</mml:mn><mml:mi>i</mml:mi></mml:msub></mml:msub><mml:mo>)</mml:mo></mml:mrow></mml:mrow></mml:math></inline-formula> to <inline-formula><mml:math id="mm502" overflow="scroll"><mml:mrow><mml:msub><mml:mi>L</mml:mi><mml:mn>4</mml:mn></mml:msub></mml:mrow></mml:math></inline-formula>, where <inline-formula><mml:math id="mm503" overflow="scroll"><mml:mrow><mml:mrow><mml:msub><mml:mi mathvariant="italic">EID</mml:mi><mml:mrow><mml:mi>i</mml:mi><mml:mi>j</mml:mi></mml:mrow></mml:msub><mml:mo>=</mml:mo><mml:msub><mml:mi mathvariant="italic">PVID</mml:mi><mml:mi>i</mml:mi></mml:msub><mml:mrow><mml:mo>|</mml:mo><mml:mo>|</mml:mo></mml:mrow><mml:msub><mml:mi mathvariant="italic">PID</mml:mi><mml:mi>j</mml:mi></mml:msub></mml:mrow></mml:mrow></mml:math></inline-formula>. Finally, <inline-formula><mml:math id="mm504" overflow="scroll"><mml:mrow><mml:msub><mml:mi mathvariant="script">B</mml:mi><mml:mn>1</mml:mn></mml:msub></mml:mrow></mml:math></inline-formula> returns <inline-formula><mml:math id="mm505" overflow="scroll"><mml:mrow><mml:mrow><mml:mo>(</mml:mo><mml:msub><mml:mi>&#963;</mml:mi><mml:mi>i</mml:mi></mml:msub><mml:mo>,</mml:mo><mml:msub><mml:mi>Y</mml:mi><mml:mi>i</mml:mi></mml:msub><mml:mo>,</mml:mo><mml:msub><mml:mi>T</mml:mi><mml:mi>z</mml:mi></mml:msub><mml:mo>)</mml:mo></mml:mrow></mml:mrow></mml:math></inline-formula> to <inline-formula><mml:math id="mm506" overflow="scroll"><mml:mrow><mml:msub><mml:mi mathvariant="script">A</mml:mi><mml:mn>1</mml:mn></mml:msub></mml:mrow></mml:math></inline-formula>.</p></list-item></list></p></list-item></list></p><p>Forgery Stage: After all the queries have been made and replied to, <inline-formula><mml:math id="mm507" overflow="scroll"><mml:mrow><mml:msub><mml:mi mathvariant="script">A</mml:mi><mml:mn>1</mml:mn></mml:msub></mml:mrow></mml:math></inline-formula> outputs a forged signature <inline-formula><mml:math id="mm508" overflow="scroll"><mml:mrow><mml:mrow><mml:mo>(</mml:mo><mml:msubsup><mml:mi>&#963;</mml:mi><mml:mrow><mml:mn>1</mml:mn></mml:mrow><mml:mo>&#8727;</mml:mo></mml:msubsup><mml:mo>,</mml:mo><mml:msub><mml:mi>Y</mml:mi><mml:mi>i</mml:mi></mml:msub><mml:mo>)</mml:mo></mml:mrow></mml:mrow></mml:math></inline-formula> for the identity-message pair <inline-formula><mml:math id="mm509" overflow="scroll"><mml:mrow><mml:mrow><mml:mo>(</mml:mo><mml:msub><mml:mi mathvariant="italic">PVID</mml:mi><mml:mi>i</mml:mi></mml:msub><mml:mo>,</mml:mo><mml:msubsup><mml:mi mathvariant="italic">PID</mml:mi><mml:mrow><mml:mi>j</mml:mi></mml:mrow><mml:mo>&#8727;</mml:mo></mml:msubsup><mml:mo>,</mml:mo><mml:msup><mml:mi>m</mml:mi><mml:mo>&#8727;</mml:mo></mml:msup><mml:mo>)</mml:mo></mml:mrow></mml:mrow></mml:math></inline-formula>. If <inline-formula><mml:math id="mm510" overflow="scroll"><mml:mrow><mml:mrow><mml:msubsup><mml:mi mathvariant="italic">PID</mml:mi><mml:mrow><mml:mi>j</mml:mi></mml:mrow><mml:mo>&#8727;</mml:mo></mml:msubsup><mml:mo>&#8800;</mml:mo><mml:msup><mml:mi mathvariant="italic">PID</mml:mi><mml:mo>&#8727;</mml:mo></mml:msup></mml:mrow></mml:mrow></mml:math></inline-formula>, <inline-formula><mml:math id="mm511" overflow="scroll"><mml:mrow><mml:msub><mml:mi mathvariant="script">B</mml:mi><mml:mn>1</mml:mn></mml:msub></mml:mrow></mml:math></inline-formula> outputs &#8869; and aborts the game. Otherwise, according to the Forking Lemma, <inline-formula><mml:math id="mm512" overflow="scroll"><mml:mrow><mml:msub><mml:mi mathvariant="script">B</mml:mi><mml:mn>1</mml:mn></mml:msub></mml:mrow></mml:math></inline-formula> can rewind the game process and make <inline-formula><mml:math id="mm513" overflow="scroll"><mml:mrow><mml:msub><mml:mi mathvariant="script">A</mml:mi><mml:mn>1</mml:mn></mml:msub></mml:mrow></mml:math></inline-formula> output another forged signature <inline-formula><mml:math id="mm514" overflow="scroll"><mml:mrow><mml:mrow><mml:mo>(</mml:mo><mml:msubsup><mml:mi>&#963;</mml:mi><mml:mrow><mml:mn>2</mml:mn></mml:mrow><mml:mo>&#8727;</mml:mo></mml:msubsup><mml:mo>,</mml:mo><mml:msub><mml:mi>Y</mml:mi><mml:mi>i</mml:mi></mml:msub><mml:mo>)</mml:mo></mml:mrow></mml:mrow></mml:math></inline-formula> by changing the output of <inline-formula><mml:math id="mm515" overflow="scroll"><mml:mrow><mml:msub><mml:mi>H</mml:mi><mml:mn>4</mml:mn></mml:msub></mml:mrow></mml:math></inline-formula>. Hence, we have<disp-formula><mml:math id="mm516" display="block" overflow="scroll"><mml:mrow><mml:mfenced separators="" open="{" close=""><mml:mtable><mml:mtr><mml:mtd columnalign="left"><mml:mrow><mml:msubsup><mml:mi>&#963;</mml:mi><mml:mrow><mml:mn>1</mml:mn></mml:mrow><mml:mo>&#8727;</mml:mo></mml:msubsup><mml:mo>=</mml:mo><mml:msubsup><mml:mi>y</mml:mi><mml:mi>i</mml:mi><mml:mo>&#8727;</mml:mo></mml:msubsup><mml:mo>+</mml:mo><mml:msubsup><mml:mi>h</mml:mi><mml:mn>3</mml:mn><mml:mo>&#8727;</mml:mo></mml:msubsup><mml:msubsup><mml:mi>x</mml:mi><mml:mi>i</mml:mi><mml:mo>&#8727;</mml:mo></mml:msubsup><mml:mo>+</mml:mo><mml:msubsup><mml:mi>h</mml:mi><mml:mn>4</mml:mn><mml:mo>&#8727;</mml:mo></mml:msubsup><mml:mrow><mml:mo>(</mml:mo><mml:msubsup><mml:mi>d</mml:mi><mml:mi>i</mml:mi><mml:mo>&#8727;</mml:mo></mml:msubsup><mml:mo>+</mml:mo><mml:msubsup><mml:mi>r</mml:mi><mml:mi>j</mml:mi><mml:mo>&#8727;</mml:mo></mml:msubsup><mml:mo>+</mml:mo><mml:msubsup><mml:mi>h</mml:mi><mml:mrow><mml:msub><mml:mn>1</mml:mn><mml:mrow><mml:mi>i</mml:mi><mml:mi>j</mml:mi></mml:mrow></mml:msub></mml:mrow><mml:mo>&#8727;</mml:mo></mml:msubsup><mml:mi>a</mml:mi><mml:mo>)</mml:mo></mml:mrow></mml:mrow></mml:mtd></mml:mtr><mml:mtr><mml:mtd columnalign="left"><mml:mrow><mml:msubsup><mml:mi>&#963;</mml:mi><mml:mrow><mml:mn>2</mml:mn></mml:mrow><mml:mo>&#8727;</mml:mo></mml:msubsup><mml:mo>=</mml:mo><mml:msubsup><mml:mi>y</mml:mi><mml:mi>i</mml:mi><mml:mo>&#8727;</mml:mo></mml:msubsup><mml:mo>+</mml:mo><mml:msubsup><mml:mi>h</mml:mi><mml:mn>3</mml:mn><mml:mo>&#8727;</mml:mo></mml:msubsup><mml:msubsup><mml:mi>x</mml:mi><mml:mi>i</mml:mi><mml:mo>&#8727;</mml:mo></mml:msubsup><mml:mo>+</mml:mo><mml:msubsup><mml:mi>h</mml:mi><mml:mn>4</mml:mn><mml:msup><mml:mo>&#8727;</mml:mo><mml:mo>&#8242;</mml:mo></mml:msup></mml:msubsup><mml:mrow><mml:mo>(</mml:mo><mml:msubsup><mml:mi>d</mml:mi><mml:mi>i</mml:mi><mml:mo>&#8727;</mml:mo></mml:msubsup><mml:mo>+</mml:mo><mml:msubsup><mml:mi>r</mml:mi><mml:mi>j</mml:mi><mml:mo>&#8727;</mml:mo></mml:msubsup><mml:mo>+</mml:mo><mml:msubsup><mml:mi>h</mml:mi><mml:mrow><mml:msub><mml:mn>1</mml:mn><mml:mrow><mml:mi>i</mml:mi><mml:mi>j</mml:mi></mml:mrow></mml:msub></mml:mrow><mml:mo>&#8727;</mml:mo></mml:msubsup><mml:mi>a</mml:mi><mml:mo>)</mml:mo></mml:mrow></mml:mrow></mml:mtd></mml:mtr></mml:mtable></mml:mfenced></mml:mrow></mml:math></disp-formula></p><p>From the above equations, <inline-formula><mml:math id="mm517" overflow="scroll"><mml:mrow><mml:msub><mml:mi mathvariant="script">B</mml:mi><mml:mn>1</mml:mn></mml:msub></mml:mrow></mml:math></inline-formula> outputs <inline-formula><mml:math id="mm518" overflow="scroll"><mml:mrow><mml:mrow><mml:mi>a</mml:mi><mml:mo>=</mml:mo><mml:mstyle scriptlevel="0" displaystyle="true"><mml:mfrac><mml:mn>1</mml:mn><mml:msubsup><mml:mi>h</mml:mi><mml:mrow><mml:msub><mml:mn>1</mml:mn><mml:mrow><mml:mi>i</mml:mi><mml:mi>j</mml:mi></mml:mrow></mml:msub></mml:mrow><mml:mo>&#8727;</mml:mo></mml:msubsup></mml:mfrac></mml:mstyle><mml:mrow><mml:mo>(</mml:mo><mml:mstyle scriptlevel="0" displaystyle="true"><mml:mfrac><mml:mrow><mml:msubsup><mml:mi>&#963;</mml:mi><mml:mrow><mml:mn>1</mml:mn></mml:mrow><mml:mo>&#8727;</mml:mo></mml:msubsup><mml:mo>&#8722;</mml:mo><mml:msubsup><mml:mi>&#963;</mml:mi><mml:mrow><mml:mn>2</mml:mn></mml:mrow><mml:mo>&#8727;</mml:mo></mml:msubsup></mml:mrow><mml:mrow><mml:msubsup><mml:mi>h</mml:mi><mml:mn>4</mml:mn><mml:mo>&#8727;</mml:mo></mml:msubsup><mml:mo>&#8722;</mml:mo><mml:msubsup><mml:mi>h</mml:mi><mml:mn>4</mml:mn><mml:msup><mml:mo>&#8727;</mml:mo><mml:mo>&#8242;</mml:mo></mml:msup></mml:msubsup></mml:mrow></mml:mfrac></mml:mstyle><mml:mo>&#8722;</mml:mo><mml:msubsup><mml:mi>d</mml:mi><mml:mi>i</mml:mi><mml:mo>&#8727;</mml:mo></mml:msubsup><mml:mo>&#8722;</mml:mo><mml:msubsup><mml:mi>r</mml:mi><mml:mi>j</mml:mi><mml:mo>&#8727;</mml:mo></mml:msubsup><mml:mo>)</mml:mo></mml:mrow></mml:mrow></mml:mrow></mml:math></inline-formula> as the solution to the ECDLP instance.</p><p>Let <inline-formula><mml:math id="mm519" overflow="scroll"><mml:mrow><mml:msub><mml:mi>E</mml:mi><mml:mn>1</mml:mn></mml:msub></mml:mrow></mml:math></inline-formula> denote the event that the game does not abort in the Query Stage, <inline-formula><mml:math id="mm520" overflow="scroll"><mml:mrow><mml:msub><mml:mi>E</mml:mi><mml:mn>2</mml:mn></mml:msub></mml:mrow></mml:math></inline-formula> denote the event that the game does not abort in the Forge Stage, and <inline-formula><mml:math id="mm521" overflow="scroll"><mml:mrow><mml:msub><mml:mi>E</mml:mi><mml:mn>3</mml:mn></mml:msub></mml:mrow></mml:math></inline-formula> denote the event that <inline-formula><mml:math id="mm522" overflow="scroll"><mml:mrow><mml:msub><mml:mi mathvariant="script">A</mml:mi><mml:mn>1</mml:mn></mml:msub></mml:mrow></mml:math></inline-formula> successfully outputs two valid forged signatures in the game. Then the advantage of <inline-formula><mml:math id="mm523" overflow="scroll"><mml:mrow><mml:msub><mml:mi mathvariant="script">B</mml:mi><mml:mn>1</mml:mn></mml:msub></mml:mrow></mml:math></inline-formula> solving the ECDLP instance can be presented with <inline-formula><mml:math id="mm524" overflow="scroll"><mml:mrow><mml:mrow><mml:mi>P</mml:mi><mml:mi>r</mml:mi><mml:mrow><mml:mo>[</mml:mo><mml:msub><mml:mi>&#1013;</mml:mi><mml:msub><mml:mi mathvariant="script">B</mml:mi><mml:mn>1</mml:mn></mml:msub></mml:msub><mml:mo>]</mml:mo></mml:mrow><mml:mo>=</mml:mo><mml:mi>P</mml:mi><mml:mi>r</mml:mi><mml:mrow><mml:mo>[</mml:mo><mml:msub><mml:mi>E</mml:mi><mml:mn>1</mml:mn></mml:msub><mml:mo>&#8743;</mml:mo><mml:msub><mml:mi>E</mml:mi><mml:mn>2</mml:mn></mml:msub><mml:mo>&#8743;</mml:mo><mml:msub><mml:mi>E</mml:mi><mml:mn>3</mml:mn></mml:msub><mml:mo>]</mml:mo></mml:mrow><mml:mo>=</mml:mo><mml:mi>P</mml:mi><mml:mi>r</mml:mi><mml:mrow><mml:mo>[</mml:mo><mml:msub><mml:mi>E</mml:mi><mml:mn>1</mml:mn></mml:msub><mml:mo>]</mml:mo></mml:mrow><mml:mi>P</mml:mi><mml:mi>r</mml:mi><mml:mrow><mml:mo>[</mml:mo><mml:msub><mml:mi>E</mml:mi><mml:mn>2</mml:mn></mml:msub><mml:mo>|</mml:mo><mml:msub><mml:mi>E</mml:mi><mml:mn>1</mml:mn></mml:msub><mml:mo>]</mml:mo></mml:mrow><mml:mi>P</mml:mi><mml:mi>r</mml:mi><mml:mrow><mml:mo>[</mml:mo><mml:msub><mml:mi>E</mml:mi><mml:mn>3</mml:mn></mml:msub><mml:mo>|</mml:mo><mml:msub><mml:mi>E</mml:mi><mml:mn>1</mml:mn></mml:msub><mml:mo>&#8743;</mml:mo><mml:msub><mml:mi>E</mml:mi><mml:mn>2</mml:mn></mml:msub><mml:mo>]</mml:mo></mml:mrow></mml:mrow></mml:mrow></mml:math></inline-formula>. Furthermore, we have <inline-formula><mml:math id="mm525" overflow="scroll"><mml:mrow><mml:mrow><mml:mi>P</mml:mi><mml:mi>r</mml:mi><mml:mrow><mml:mo>[</mml:mo><mml:msub><mml:mi>E</mml:mi><mml:mn>1</mml:mn></mml:msub><mml:mo>]</mml:mo></mml:mrow><mml:mo>&#8805;</mml:mo><mml:msup><mml:mrow><mml:mo>(</mml:mo><mml:mrow><mml:mn>1</mml:mn><mml:mo>&#8722;</mml:mo><mml:mstyle scriptlevel="0" displaystyle="true"><mml:mfrac><mml:mn>1</mml:mn><mml:msub><mml:mi>Q</mml:mi><mml:mrow><mml:mi>u</mml:mi><mml:mi>r</mml:mi></mml:mrow></mml:msub></mml:mfrac></mml:mstyle></mml:mrow><mml:mo>)</mml:mo></mml:mrow><mml:mrow><mml:mo>(</mml:mo><mml:msub><mml:mi>Q</mml:mi><mml:mrow><mml:mi>u</mml:mi><mml:mi>p</mml:mi><mml:mi>k</mml:mi></mml:mrow></mml:msub><mml:mo>+</mml:mo><mml:msub><mml:mi>Q</mml:mi><mml:mrow><mml:mi>s</mml:mi><mml:mi>i</mml:mi><mml:mi>g</mml:mi></mml:mrow></mml:msub><mml:mo>)</mml:mo></mml:mrow></mml:msup></mml:mrow></mml:mrow></mml:math></inline-formula>, <inline-formula><mml:math id="mm526" overflow="scroll"><mml:mrow><mml:mrow><mml:mi>P</mml:mi><mml:mi>r</mml:mi><mml:mrow><mml:mo>[</mml:mo><mml:msub><mml:mi>E</mml:mi><mml:mn>2</mml:mn></mml:msub><mml:mo>|</mml:mo><mml:msub><mml:mi>E</mml:mi><mml:mn>1</mml:mn></mml:msub><mml:mo>]</mml:mo></mml:mrow><mml:mo>&#8805;</mml:mo><mml:mstyle scriptlevel="0" displaystyle="true"><mml:mfrac><mml:mn>1</mml:mn><mml:msub><mml:mi>Q</mml:mi><mml:mrow><mml:mi>u</mml:mi><mml:mi>r</mml:mi></mml:mrow></mml:msub></mml:mfrac></mml:mstyle></mml:mrow></mml:mrow></mml:math></inline-formula>, where <inline-formula><mml:math id="mm527" overflow="scroll"><mml:mrow><mml:msub><mml:mi>Q</mml:mi><mml:mrow><mml:mi>u</mml:mi><mml:mi>r</mml:mi></mml:mrow></mml:msub></mml:mrow></mml:math></inline-formula> denotes the times of User Registration Query, <inline-formula><mml:math id="mm528" overflow="scroll"><mml:mrow><mml:msub><mml:mi>Q</mml:mi><mml:mrow><mml:mi>u</mml:mi><mml:mi>p</mml:mi><mml:mi>k</mml:mi></mml:mrow></mml:msub></mml:mrow></mml:math></inline-formula> denotes the times of Reveal User Private Key Query, and <inline-formula><mml:math id="mm529" overflow="scroll"><mml:mrow><mml:msub><mml:mi>Q</mml:mi><mml:mrow><mml:mi>s</mml:mi><mml:mi>i</mml:mi><mml:mi>g</mml:mi></mml:mrow></mml:msub></mml:mrow></mml:math></inline-formula> denotes the times of Sign Query.</p><p>According to the Forking Lemma, we have <inline-formula><mml:math id="mm530" overflow="scroll"><mml:mrow><mml:mrow><mml:mi>P</mml:mi><mml:mi>r</mml:mi><mml:mrow><mml:mo>[</mml:mo><mml:msub><mml:mi>E</mml:mi><mml:mn>3</mml:mn></mml:msub><mml:mo>|</mml:mo><mml:msub><mml:mi>E</mml:mi><mml:mn>1</mml:mn></mml:msub><mml:mo>&#8743;</mml:mo><mml:msub><mml:mi>E</mml:mi><mml:mn>2</mml:mn></mml:msub><mml:mo>]</mml:mo></mml:mrow><mml:mo>&#8805;</mml:mo><mml:mrow><mml:mo>(</mml:mo><mml:mn>1</mml:mn><mml:mo>&#8722;</mml:mo><mml:mstyle scriptlevel="0" displaystyle="true"><mml:mfrac><mml:mn>1</mml:mn><mml:mi>e</mml:mi></mml:mfrac></mml:mstyle><mml:mo>)</mml:mo></mml:mrow><mml:mstyle scriptlevel="0" displaystyle="true"><mml:mfrac><mml:msub><mml:mi>&#1013;</mml:mi><mml:mn>1</mml:mn></mml:msub><mml:mrow><mml:msub><mml:mi>Q</mml:mi><mml:msub><mml:mi>h</mml:mi><mml:mn>4</mml:mn></mml:msub></mml:msub><mml:mo>+</mml:mo><mml:msub><mml:mi>Q</mml:mi><mml:mrow><mml:mi>s</mml:mi><mml:mi>i</mml:mi><mml:mi>g</mml:mi></mml:mrow></mml:msub><mml:mo>+</mml:mo><mml:mn>1</mml:mn></mml:mrow></mml:mfrac></mml:mstyle></mml:mrow></mml:mrow></mml:math></inline-formula>, where <inline-formula><mml:math id="mm531" overflow="scroll"><mml:mrow><mml:msub><mml:mi>&#1013;</mml:mi><mml:mn>1</mml:mn></mml:msub></mml:mrow></mml:math></inline-formula> represents the advantage that <inline-formula><mml:math id="mm532" overflow="scroll"><mml:mrow><mml:msub><mml:mi mathvariant="script">A</mml:mi><mml:mn>1</mml:mn></mml:msub></mml:mrow></mml:math></inline-formula> can successfully forge a signature, and <inline-formula><mml:math id="mm533" overflow="scroll"><mml:mrow><mml:msub><mml:mi>Q</mml:mi><mml:msub><mml:mi>h</mml:mi><mml:mn>4</mml:mn></mml:msub></mml:msub></mml:mrow></mml:math></inline-formula> represents the times of <inline-formula><mml:math id="mm534" overflow="scroll"><mml:mrow><mml:msub><mml:mi>H</mml:mi><mml:mn>4</mml:mn></mml:msub></mml:mrow></mml:math></inline-formula> Query.</p><p>Therefore, <inline-formula><mml:math id="mm535" overflow="scroll"><mml:mrow><mml:msub><mml:mi mathvariant="script">B</mml:mi><mml:mn>1</mml:mn></mml:msub></mml:mrow></mml:math></inline-formula>&#8217;s advantage of solving the ECDLP instance is<disp-formula><mml:math id="mm536" display="block" overflow="scroll"><mml:mrow><mml:mtable displaystyle="true"><mml:mtr><mml:mtd columnalign="right"><mml:mrow><mml:mi>P</mml:mi><mml:mi>r</mml:mi><mml:mo>[</mml:mo><mml:msub><mml:mi>&#1013;</mml:mi><mml:msub><mml:mi mathvariant="script">B</mml:mi><mml:mn>1</mml:mn></mml:msub></mml:msub><mml:mo>]</mml:mo></mml:mrow></mml:mtd><mml:mtd columnalign="left"><mml:mrow><mml:mo>=</mml:mo><mml:mi>P</mml:mi><mml:mi>r</mml:mi><mml:mo>[</mml:mo><mml:msub><mml:mi>E</mml:mi><mml:mn>1</mml:mn></mml:msub><mml:mo>&#8743;</mml:mo><mml:msub><mml:mi>E</mml:mi><mml:mn>2</mml:mn></mml:msub><mml:mo>&#8743;</mml:mo><mml:msub><mml:mi>E</mml:mi><mml:mn>3</mml:mn></mml:msub><mml:mo>]</mml:mo></mml:mrow></mml:mtd></mml:mtr><mml:mtr><mml:mtd columnalign="right"><mml:mspace width="1.em"/></mml:mtd><mml:mtd columnalign="left"><mml:mrow><mml:mo>=</mml:mo><mml:mi>P</mml:mi><mml:mi>r</mml:mi><mml:mrow><mml:mo>[</mml:mo><mml:msub><mml:mi>E</mml:mi><mml:mn>1</mml:mn></mml:msub><mml:mo>]</mml:mo></mml:mrow><mml:mi>P</mml:mi><mml:mi>r</mml:mi><mml:mrow><mml:mo>[</mml:mo><mml:msub><mml:mi>E</mml:mi><mml:mn>2</mml:mn></mml:msub><mml:mo>|</mml:mo><mml:msub><mml:mi>E</mml:mi><mml:mn>1</mml:mn></mml:msub><mml:mo>]</mml:mo></mml:mrow><mml:mi>P</mml:mi><mml:mi>r</mml:mi><mml:mrow><mml:mo>[</mml:mo><mml:msub><mml:mi>E</mml:mi><mml:mn>3</mml:mn></mml:msub><mml:mo>|</mml:mo><mml:msub><mml:mi>E</mml:mi><mml:mn>1</mml:mn></mml:msub><mml:mo>&#8743;</mml:mo><mml:msub><mml:mi>E</mml:mi><mml:mn>2</mml:mn></mml:msub><mml:mo>]</mml:mo></mml:mrow></mml:mrow></mml:mtd></mml:mtr><mml:mtr><mml:mtd columnalign="right"><mml:mspace width="1.em"/></mml:mtd><mml:mtd columnalign="left"><mml:mrow><mml:mo>&#8805;</mml:mo><mml:mrow><mml:mo>[</mml:mo><mml:msup><mml:mrow><mml:mo>(</mml:mo><mml:mrow><mml:mn>1</mml:mn><mml:mo>&#8722;</mml:mo><mml:mstyle scriptlevel="0" displaystyle="true"><mml:mfrac><mml:mn>1</mml:mn><mml:msub><mml:mi>Q</mml:mi><mml:mrow><mml:mi>u</mml:mi><mml:mi>r</mml:mi></mml:mrow></mml:msub></mml:mfrac></mml:mstyle></mml:mrow><mml:mo>)</mml:mo></mml:mrow><mml:mrow><mml:mo>(</mml:mo><mml:msub><mml:mi>Q</mml:mi><mml:mrow><mml:mi>u</mml:mi><mml:mi>p</mml:mi><mml:mi>k</mml:mi></mml:mrow></mml:msub><mml:mo>+</mml:mo><mml:msub><mml:mi>Q</mml:mi><mml:mrow><mml:mi>s</mml:mi><mml:mi>i</mml:mi><mml:mi>g</mml:mi></mml:mrow></mml:msub><mml:mo>)</mml:mo></mml:mrow></mml:msup><mml:mo>]</mml:mo></mml:mrow><mml:mstyle scriptlevel="0" displaystyle="true"><mml:mfrac><mml:mn>1</mml:mn><mml:msub><mml:mi>Q</mml:mi><mml:mrow><mml:mi>u</mml:mi><mml:mi>r</mml:mi></mml:mrow></mml:msub></mml:mfrac></mml:mstyle><mml:mrow><mml:mo>(</mml:mo><mml:mn>1</mml:mn><mml:mo>&#8722;</mml:mo><mml:mstyle scriptlevel="0" displaystyle="true"><mml:mfrac><mml:mn>1</mml:mn><mml:mi>e</mml:mi></mml:mfrac></mml:mstyle><mml:mo>)</mml:mo></mml:mrow><mml:mstyle scriptlevel="0" displaystyle="true"><mml:mfrac><mml:msub><mml:mi>&#1013;</mml:mi><mml:mn>1</mml:mn></mml:msub><mml:mrow><mml:msub><mml:mi>Q</mml:mi><mml:msub><mml:mi>h</mml:mi><mml:mn>4</mml:mn></mml:msub></mml:msub><mml:mo>+</mml:mo><mml:msub><mml:mi>Q</mml:mi><mml:mrow><mml:mi>s</mml:mi><mml:mi>i</mml:mi><mml:mi>g</mml:mi></mml:mrow></mml:msub><mml:mo>+</mml:mo><mml:mn>1</mml:mn></mml:mrow></mml:mfrac></mml:mstyle></mml:mrow></mml:mtd></mml:mtr><mml:mtr><mml:mtd columnalign="right"><mml:mspace width="1.em"/></mml:mtd><mml:mtd columnalign="left"><mml:mrow><mml:mo>&#8805;</mml:mo><mml:mstyle scriptlevel="0" displaystyle="true"><mml:mfrac><mml:mrow><mml:mrow><mml:mo>(</mml:mo><mml:mi>e</mml:mi><mml:mo>&#8722;</mml:mo><mml:mn>1</mml:mn><mml:mo>)</mml:mo></mml:mrow><mml:msub><mml:mi>&#1013;</mml:mi><mml:mn>1</mml:mn></mml:msub></mml:mrow><mml:mrow><mml:msup><mml:mi>e</mml:mi><mml:mn>2</mml:mn></mml:msup><mml:mo>&#183;</mml:mo><mml:msub><mml:mi>Q</mml:mi><mml:mrow><mml:mi>u</mml:mi><mml:mi>r</mml:mi></mml:mrow></mml:msub><mml:mrow><mml:mo>(</mml:mo><mml:mrow><mml:msub><mml:mi>Q</mml:mi><mml:msub><mml:mi>h</mml:mi><mml:mn>4</mml:mn></mml:msub></mml:msub><mml:mo>+</mml:mo><mml:msub><mml:mi>Q</mml:mi><mml:mrow><mml:mi>s</mml:mi><mml:mi>i</mml:mi><mml:mi>g</mml:mi></mml:mrow></mml:msub><mml:mo>+</mml:mo><mml:mn>1</mml:mn></mml:mrow><mml:mo>)</mml:mo></mml:mrow></mml:mrow></mml:mfrac></mml:mstyle></mml:mrow></mml:mtd></mml:mtr></mml:mtable></mml:mrow></mml:math></disp-formula></p><p>Thus, if there exists an adversary <inline-formula><mml:math id="mm537" overflow="scroll"><mml:mrow><mml:msub><mml:mi mathvariant="script">A</mml:mi><mml:mn>1</mml:mn></mml:msub></mml:mrow></mml:math></inline-formula> who can successfully forge a signature with advantage <inline-formula><mml:math id="mm538" overflow="scroll"><mml:mrow><mml:msub><mml:mi>&#1013;</mml:mi><mml:mn>1</mml:mn></mml:msub></mml:mrow></mml:math></inline-formula>, then <inline-formula><mml:math id="mm539" overflow="scroll"><mml:mrow><mml:msub><mml:mi mathvariant="script">B</mml:mi><mml:mn>1</mml:mn></mml:msub></mml:mrow></mml:math></inline-formula> can output the solution to the ECDLP instance with probability <inline-formula><mml:math id="mm540" overflow="scroll"><mml:mrow><mml:mstyle scriptlevel="0" displaystyle="true"><mml:mfrac><mml:mrow><mml:mrow><mml:mo>(</mml:mo><mml:mi>e</mml:mi><mml:mo>&#8722;</mml:mo><mml:mn>1</mml:mn><mml:mo>)</mml:mo></mml:mrow><mml:msub><mml:mi>&#1013;</mml:mi><mml:mn>1</mml:mn></mml:msub></mml:mrow><mml:mrow><mml:msup><mml:mi>e</mml:mi><mml:mn>2</mml:mn></mml:msup><mml:mo>&#183;</mml:mo><mml:msub><mml:mi>Q</mml:mi><mml:mrow><mml:mi>u</mml:mi><mml:mi>r</mml:mi></mml:mrow></mml:msub><mml:mrow><mml:mo>(</mml:mo><mml:mrow><mml:msub><mml:mi>Q</mml:mi><mml:msub><mml:mi>h</mml:mi><mml:mn>4</mml:mn></mml:msub></mml:msub><mml:mo>+</mml:mo><mml:msub><mml:mi>Q</mml:mi><mml:mrow><mml:mi>s</mml:mi><mml:mi>i</mml:mi><mml:mi>g</mml:mi></mml:mrow></mml:msub><mml:mo>+</mml:mo><mml:mn>1</mml:mn></mml:mrow><mml:mo>)</mml:mo></mml:mrow></mml:mrow></mml:mfrac></mml:mstyle></mml:mrow></mml:math></inline-formula>. &#9633;</p></statement><statement><label><bold>Theorem</bold>&#160;<bold>2.</bold></label><p>
<italic toggle="yes">With the hardness assumption of the ECDLP, our proposed ECACS scheme realizes EUF-CMA security against Type-II adversaries under the random oracle model.</italic>
</p></statement><p>The following Lemma 2 concludes the proof of Theorem 2.</p><statement><label><bold>Lemma</bold>&#160;<bold>2.</bold></label><p>
<italic toggle="yes">If there exists a Type-II adversary <inline-formula><mml:math id="mm541" overflow="scroll"><mml:mrow><mml:msub><mml:mi mathvariant="script">A</mml:mi><mml:mn>2</mml:mn></mml:msub></mml:mrow></mml:math></inline-formula> who can successfully forge a valid signature with obvious advantage <inline-formula><mml:math id="mm542" overflow="scroll"><mml:mrow><mml:msub><mml:mi>&#1013;</mml:mi><mml:mn>2</mml:mn></mml:msub></mml:mrow></mml:math></inline-formula>, then a simulator <inline-formula><mml:math id="mm543" overflow="scroll"><mml:mrow><mml:msub><mml:mi mathvariant="script">B</mml:mi><mml:mn>2</mml:mn></mml:msub></mml:mrow></mml:math></inline-formula> can be constructed to solve the ECDLP with non-negligible advantage <inline-formula><mml:math id="mm544" overflow="scroll"><mml:mrow><mml:mrow><mml:mrow><mml:mo>(</mml:mo><mml:mn>1</mml:mn><mml:mo>&#8722;</mml:mo><mml:mstyle scriptlevel="0" displaystyle="true"><mml:mfrac><mml:mn>1</mml:mn><mml:mi>e</mml:mi></mml:mfrac></mml:mstyle><mml:mo>)</mml:mo></mml:mrow><mml:mstyle scriptlevel="0" displaystyle="true"><mml:mfrac><mml:msub><mml:mi>&#1013;</mml:mi><mml:mn>2</mml:mn></mml:msub><mml:mrow><mml:mi>e</mml:mi><mml:mo>&#183;</mml:mo><mml:msub><mml:mi>Q</mml:mi><mml:mrow><mml:mi>v</mml:mi><mml:mi>r</mml:mi></mml:mrow></mml:msub><mml:msub><mml:mi>Q</mml:mi><mml:msub><mml:mi>h</mml:mi><mml:mn>3</mml:mn></mml:msub></mml:msub></mml:mrow></mml:mfrac></mml:mstyle></mml:mrow></mml:mrow></mml:math></inline-formula>, where <inline-formula><mml:math id="mm545" overflow="scroll"><mml:mrow><mml:msub><mml:mi>Q</mml:mi><mml:mrow><mml:mi>v</mml:mi><mml:mi>r</mml:mi></mml:mrow></mml:msub></mml:mrow></mml:math></inline-formula> and <inline-formula><mml:math id="mm546" overflow="scroll"><mml:mrow><mml:msub><mml:mi>Q</mml:mi><mml:msub><mml:mi>h</mml:mi><mml:mn>3</mml:mn></mml:msub></mml:msub></mml:mrow></mml:math></inline-formula> denote the times of Vehicle Registration Query and <inline-formula><mml:math id="mm547" overflow="scroll"><mml:mrow><mml:msub><mml:mi>H</mml:mi><mml:mn>3</mml:mn></mml:msub></mml:mrow></mml:math></inline-formula> Query, respectively.</italic>
</p></statement><statement><label><bold>Proof.</bold>&#160;</label><p>For the proof of Lemma 2, the challenger <inline-formula><mml:math id="mm548" overflow="scroll"><mml:mrow><mml:mi mathvariant="script">C</mml:mi></mml:mrow></mml:math></inline-formula> will set up an ECDLP instance <inline-formula><mml:math id="mm549" overflow="scroll"><mml:mrow><mml:mrow><mml:mo>{</mml:mo><mml:mi>P</mml:mi><mml:mo>,</mml:mo><mml:mi>b</mml:mi><mml:mi>P</mml:mi><mml:mo>|</mml:mo><mml:mi>b</mml:mi><mml:mo>&#8712;</mml:mo><mml:msubsup><mml:mi>Z</mml:mi><mml:mi>p</mml:mi><mml:mo>&#8727;</mml:mo></mml:msubsup><mml:mo>}</mml:mo></mml:mrow></mml:mrow></mml:math></inline-formula> and send it to <inline-formula><mml:math id="mm550" overflow="scroll"><mml:mrow><mml:msub><mml:mi mathvariant="script">B</mml:mi><mml:mn>2</mml:mn></mml:msub></mml:mrow></mml:math></inline-formula>. Then, <inline-formula><mml:math id="mm551" overflow="scroll"><mml:mrow><mml:msub><mml:mi mathvariant="script">B</mml:mi><mml:mn>2</mml:mn></mml:msub></mml:mrow></mml:math></inline-formula> will play the following game with <inline-formula><mml:math id="mm552" overflow="scroll"><mml:mrow><mml:msub><mml:mi mathvariant="script">A</mml:mi><mml:mn>2</mml:mn></mml:msub></mml:mrow></mml:math></inline-formula> in order to acquire the solution to the ECDLP instance. The detailed process is as follows:</p><p>Setup: <inline-formula><mml:math id="mm553" overflow="scroll"><mml:mrow><mml:msub><mml:mi mathvariant="script">B</mml:mi><mml:mn>2</mml:mn></mml:msub></mml:mrow></mml:math></inline-formula> sets <inline-formula><mml:math id="mm554" overflow="scroll"><mml:mrow><mml:mrow><mml:msub><mml:mi>P</mml:mi><mml:mrow><mml:mi>p</mml:mi><mml:mi>u</mml:mi><mml:mi>b</mml:mi></mml:mrow></mml:msub><mml:mo>=</mml:mo><mml:mi>s</mml:mi><mml:mi>P</mml:mi></mml:mrow></mml:mrow></mml:math></inline-formula> and sends <italic toggle="yes">s</italic> and the parameters <inline-formula><mml:math id="mm555" overflow="scroll"><mml:mrow><mml:mrow><mml:mo>{</mml:mo><mml:mi mathvariant="double-struck">G</mml:mi><mml:mo>,</mml:mo><mml:mi>q</mml:mi><mml:mo>,</mml:mo><mml:mi>P</mml:mi><mml:mo>,</mml:mo><mml:msub><mml:mi>P</mml:mi><mml:mrow><mml:mi>p</mml:mi><mml:mi>u</mml:mi><mml:mi>b</mml:mi></mml:mrow></mml:msub><mml:mo>,</mml:mo><mml:msub><mml:mi>H</mml:mi><mml:mn>0</mml:mn></mml:msub><mml:mo>,</mml:mo><mml:msub><mml:mi>H</mml:mi><mml:mn>1</mml:mn></mml:msub><mml:mo>,</mml:mo><mml:msub><mml:mi>H</mml:mi><mml:mn>2</mml:mn></mml:msub><mml:mo>,</mml:mo><mml:msub><mml:mi>H</mml:mi><mml:mn>3</mml:mn></mml:msub><mml:mo>,</mml:mo><mml:msub><mml:mi>H</mml:mi><mml:mn>4</mml:mn></mml:msub><mml:mo>,</mml:mo><mml:mo>&#937;</mml:mo><mml:mo>}</mml:mo></mml:mrow></mml:mrow></mml:math></inline-formula> to <inline-formula><mml:math id="mm556" overflow="scroll"><mml:mrow><mml:msub><mml:mi mathvariant="script">A</mml:mi><mml:mn>2</mml:mn></mml:msub></mml:mrow></mml:math></inline-formula>. Meanwhile, <inline-formula><mml:math id="mm557" overflow="scroll"><mml:mrow><mml:msub><mml:mi mathvariant="script">B</mml:mi><mml:mn>2</mml:mn></mml:msub></mml:mrow></mml:math></inline-formula> maintains six lists to record the query results, namely <inline-formula><mml:math id="mm558" overflow="scroll"><mml:mrow><mml:mrow><mml:msub><mml:mi>L</mml:mi><mml:mi>v</mml:mi></mml:msub><mml:mo>,</mml:mo><mml:msub><mml:mi>L</mml:mi><mml:mi>u</mml:mi></mml:msub><mml:mo>,</mml:mo><mml:msub><mml:mi>L</mml:mi><mml:mn>1</mml:mn></mml:msub><mml:mo>,</mml:mo><mml:msub><mml:mi>L</mml:mi><mml:mn>2</mml:mn></mml:msub><mml:mo>,</mml:mo><mml:msub><mml:mi>L</mml:mi><mml:mn>3</mml:mn></mml:msub><mml:mo>,</mml:mo><mml:msub><mml:mi>L</mml:mi><mml:mn>4</mml:mn></mml:msub></mml:mrow></mml:mrow></mml:math></inline-formula>.</p><p>Query Stage: In this stage, <inline-formula><mml:math id="mm559" overflow="scroll"><mml:mrow><mml:msub><mml:mi mathvariant="script">A</mml:mi><mml:mn>2</mml:mn></mml:msub></mml:mrow></mml:math></inline-formula> will adaptively submit the following queries.
<list list-type="simple"><list-item><label>(1)</label><p>Hash Query: <inline-formula><mml:math id="mm560" overflow="scroll"><mml:mrow><mml:msub><mml:mi mathvariant="script">B</mml:mi><mml:mn>2</mml:mn></mml:msub></mml:mrow></mml:math></inline-formula> answers the Hash Query the same as in Game I.</p></list-item><list-item><label>(2)</label><p>Vehicle Registration Query: When <inline-formula><mml:math id="mm561" overflow="scroll"><mml:mrow><mml:msub><mml:mi mathvariant="script">B</mml:mi><mml:mn>2</mml:mn></mml:msub></mml:mrow></mml:math></inline-formula> receives a Vehicle Registration Query from <inline-formula><mml:math id="mm562" overflow="scroll"><mml:mrow><mml:msub><mml:mi mathvariant="script">A</mml:mi><mml:mn>2</mml:mn></mml:msub></mml:mrow></mml:math></inline-formula> with <inline-formula><mml:math id="mm563" overflow="scroll"><mml:mrow><mml:msub><mml:mi mathvariant="italic">PVID</mml:mi><mml:mi>i</mml:mi></mml:msub></mml:mrow></mml:math></inline-formula> as input, if <inline-formula><mml:math id="mm564" overflow="scroll"><mml:mrow><mml:msub><mml:mi mathvariant="italic">PVID</mml:mi><mml:mi>i</mml:mi></mml:msub></mml:mrow></mml:math></inline-formula> exists in <inline-formula><mml:math id="mm565" overflow="scroll"><mml:mrow><mml:msub><mml:mi>L</mml:mi><mml:mi>v</mml:mi></mml:msub></mml:mrow></mml:math></inline-formula>, <inline-formula><mml:math id="mm566" overflow="scroll"><mml:mrow><mml:msub><mml:mi mathvariant="script">B</mml:mi><mml:mn>1</mml:mn></mml:msub></mml:mrow></mml:math></inline-formula> returns &#8869;. Otherwise, continue the game as follows.
<list list-type="bullet"><list-item><p>If <inline-formula><mml:math id="mm567" overflow="scroll"><mml:mrow><mml:mrow><mml:msub><mml:mi mathvariant="italic">PVID</mml:mi><mml:mi>i</mml:mi></mml:msub><mml:mo>=</mml:mo><mml:msup><mml:mi mathvariant="italic">PVID</mml:mi><mml:mo>&#8727;</mml:mo></mml:msup></mml:mrow></mml:mrow></mml:math></inline-formula>, <inline-formula><mml:math id="mm568" overflow="scroll"><mml:mrow><mml:msub><mml:mi mathvariant="script">B</mml:mi><mml:mn>2</mml:mn></mml:msub></mml:mrow></mml:math></inline-formula> selects <inline-formula><mml:math id="mm569" overflow="scroll"><mml:mrow><mml:mrow><mml:msub><mml:mi>r</mml:mi><mml:mi>i</mml:mi></mml:msub><mml:mo>,</mml:mo><mml:mi>g</mml:mi><mml:mi>i</mml:mi><mml:msub><mml:mi>d</mml:mi><mml:mi>i</mml:mi></mml:msub><mml:mo>,</mml:mo><mml:msub><mml:mi>h</mml:mi><mml:msub><mml:mn>1</mml:mn><mml:mi>i</mml:mi></mml:msub></mml:msub><mml:mo>&#8712;</mml:mo><mml:msubsup><mml:mi>Z</mml:mi><mml:mi>q</mml:mi><mml:mo>&#8727;</mml:mo></mml:msubsup></mml:mrow></mml:mrow></mml:math></inline-formula> and calculates <inline-formula><mml:math id="mm570" overflow="scroll"><mml:mrow><mml:mrow><mml:msub><mml:mi>R</mml:mi><mml:mi>i</mml:mi></mml:msub><mml:mo>=</mml:mo><mml:msub><mml:mi>r</mml:mi><mml:mi>i</mml:mi></mml:msub><mml:mi>P</mml:mi></mml:mrow></mml:mrow></mml:math></inline-formula>, <inline-formula><mml:math id="mm571" overflow="scroll"><mml:mrow><mml:mrow><mml:mi>G</mml:mi><mml:mi>I</mml:mi><mml:msub><mml:mi>D</mml:mi><mml:mi>i</mml:mi></mml:msub><mml:mo>=</mml:mo><mml:mi>g</mml:mi><mml:mi>i</mml:mi><mml:msub><mml:mi>d</mml:mi><mml:mi>i</mml:mi></mml:msub><mml:mi>P</mml:mi></mml:mrow></mml:mrow></mml:math></inline-formula> and <inline-formula><mml:math id="mm572" overflow="scroll"><mml:mrow><mml:mrow><mml:msub><mml:mi>d</mml:mi><mml:mi>i</mml:mi></mml:msub><mml:mo>=</mml:mo><mml:msub><mml:mi>r</mml:mi><mml:mi>i</mml:mi></mml:msub><mml:mo>+</mml:mo><mml:msub><mml:mi>h</mml:mi><mml:msub><mml:mn>1</mml:mn><mml:mi>i</mml:mi></mml:msub></mml:msub><mml:mi>s</mml:mi></mml:mrow></mml:mrow></mml:math></inline-formula>. Then, <inline-formula><mml:math id="mm573" overflow="scroll"><mml:mrow><mml:msub><mml:mi mathvariant="script">B</mml:mi><mml:mn>2</mml:mn></mml:msub></mml:mrow></mml:math></inline-formula> sets <inline-formula><mml:math id="mm574" overflow="scroll"><mml:mrow><mml:mrow><mml:msub><mml:mi>X</mml:mi><mml:mi>i</mml:mi></mml:msub><mml:mo>=</mml:mo><mml:mi>b</mml:mi><mml:mi>P</mml:mi></mml:mrow></mml:mrow></mml:math></inline-formula> and adds the tuple <inline-formula><mml:math id="mm575" overflow="scroll"><mml:mrow><mml:mrow><mml:mo>(</mml:mo><mml:msub><mml:mi mathvariant="italic">PVID</mml:mi><mml:mi>i</mml:mi></mml:msub><mml:mo>,</mml:mo><mml:mo>&#8869;</mml:mo><mml:mo>,</mml:mo><mml:msub><mml:mi>X</mml:mi><mml:mi>i</mml:mi></mml:msub><mml:mo>,</mml:mo><mml:msub><mml:mi>d</mml:mi><mml:mi>i</mml:mi></mml:msub><mml:mo>,</mml:mo><mml:msub><mml:mi>R</mml:mi><mml:mi>i</mml:mi></mml:msub><mml:mo>,</mml:mo><mml:mi>g</mml:mi><mml:mi>i</mml:mi><mml:msub><mml:mi>d</mml:mi><mml:mi>i</mml:mi></mml:msub><mml:mo>,</mml:mo><mml:mi>G</mml:mi><mml:mi>I</mml:mi><mml:msub><mml:mi>D</mml:mi><mml:mi>i</mml:mi></mml:msub><mml:mo>)</mml:mo></mml:mrow></mml:mrow></mml:math></inline-formula> to <inline-formula><mml:math id="mm576" overflow="scroll"><mml:mrow><mml:msub><mml:mi>L</mml:mi><mml:mi>v</mml:mi></mml:msub></mml:mrow></mml:math></inline-formula> and <inline-formula><mml:math id="mm577" overflow="scroll"><mml:mrow><mml:mrow><mml:mo>(</mml:mo><mml:msub><mml:mi mathvariant="italic">PVID</mml:mi><mml:mi>i</mml:mi></mml:msub><mml:mo>,</mml:mo><mml:msub><mml:mi>X</mml:mi><mml:mi>i</mml:mi></mml:msub><mml:mo>,</mml:mo><mml:msub><mml:mi>R</mml:mi><mml:mi>i</mml:mi></mml:msub><mml:mo>,</mml:mo><mml:msub><mml:mi>P</mml:mi><mml:mrow><mml:mi>p</mml:mi><mml:mi>u</mml:mi><mml:mi>b</mml:mi></mml:mrow></mml:msub><mml:mo>,</mml:mo><mml:msub><mml:mi>h</mml:mi><mml:msub><mml:mn>1</mml:mn><mml:mi>i</mml:mi></mml:msub></mml:msub><mml:mo>)</mml:mo></mml:mrow></mml:mrow></mml:math></inline-formula> to <inline-formula><mml:math id="mm578" overflow="scroll"><mml:mrow><mml:msub><mml:mi>L</mml:mi><mml:mn>1</mml:mn></mml:msub></mml:mrow></mml:math></inline-formula>.</p></list-item><list-item><p>If <inline-formula><mml:math id="mm579" overflow="scroll"><mml:mrow><mml:mrow><mml:msub><mml:mi mathvariant="italic">PVID</mml:mi><mml:mi>i</mml:mi></mml:msub><mml:mo>&#8800;</mml:mo><mml:msup><mml:mi mathvariant="italic">PVID</mml:mi><mml:mo>&#8727;</mml:mo></mml:msup></mml:mrow></mml:mrow></mml:math></inline-formula>, <inline-formula><mml:math id="mm580" overflow="scroll"><mml:mrow><mml:msub><mml:mi mathvariant="script">B</mml:mi><mml:mn>2</mml:mn></mml:msub></mml:mrow></mml:math></inline-formula> selects <inline-formula><mml:math id="mm581" overflow="scroll"><mml:mrow><mml:mrow><mml:msub><mml:mi>x</mml:mi><mml:mi>i</mml:mi></mml:msub><mml:mo>,</mml:mo><mml:msub><mml:mi>r</mml:mi><mml:mi>i</mml:mi></mml:msub><mml:mo>,</mml:mo><mml:mi>g</mml:mi><mml:mi>i</mml:mi><mml:msub><mml:mi>d</mml:mi><mml:mi>i</mml:mi></mml:msub><mml:mo>,</mml:mo><mml:msub><mml:mi>h</mml:mi><mml:msub><mml:mn>1</mml:mn><mml:mi>i</mml:mi></mml:msub></mml:msub><mml:mo>&#8712;</mml:mo><mml:msubsup><mml:mi>Z</mml:mi><mml:mi>q</mml:mi><mml:mo>&#8727;</mml:mo></mml:msubsup></mml:mrow></mml:mrow></mml:math></inline-formula> and calculates <inline-formula><mml:math id="mm582" overflow="scroll"><mml:mrow><mml:mrow><mml:msub><mml:mi>R</mml:mi><mml:mi>i</mml:mi></mml:msub><mml:mo>=</mml:mo><mml:msub><mml:mi>r</mml:mi><mml:mi>i</mml:mi></mml:msub><mml:mi>P</mml:mi></mml:mrow></mml:mrow></mml:math></inline-formula>, <inline-formula><mml:math id="mm583" overflow="scroll"><mml:mrow><mml:mrow><mml:msub><mml:mi>X</mml:mi><mml:mi>i</mml:mi></mml:msub><mml:mo>=</mml:mo><mml:msub><mml:mi>x</mml:mi><mml:mi>i</mml:mi></mml:msub><mml:mi>P</mml:mi></mml:mrow></mml:mrow></mml:math></inline-formula>, <inline-formula><mml:math id="mm584" overflow="scroll"><mml:mrow><mml:mrow><mml:mi>G</mml:mi><mml:mi>I</mml:mi><mml:msub><mml:mi>D</mml:mi><mml:mi>i</mml:mi></mml:msub><mml:mo>=</mml:mo><mml:mi>g</mml:mi><mml:mi>i</mml:mi><mml:msub><mml:mi>d</mml:mi><mml:mi>i</mml:mi></mml:msub><mml:mi>P</mml:mi></mml:mrow></mml:mrow></mml:math></inline-formula> and <inline-formula><mml:math id="mm585" overflow="scroll"><mml:mrow><mml:mrow><mml:msub><mml:mi>d</mml:mi><mml:mi>i</mml:mi></mml:msub><mml:mo>=</mml:mo><mml:msub><mml:mi>r</mml:mi><mml:mi>i</mml:mi></mml:msub><mml:mo>+</mml:mo><mml:msub><mml:mi>h</mml:mi><mml:msub><mml:mn>1</mml:mn><mml:mi>i</mml:mi></mml:msub></mml:msub><mml:mi>s</mml:mi></mml:mrow></mml:mrow></mml:math></inline-formula>. Then, <inline-formula><mml:math id="mm586" overflow="scroll"><mml:mrow><mml:msub><mml:mi mathvariant="script">B</mml:mi><mml:mn>1</mml:mn></mml:msub></mml:mrow></mml:math></inline-formula> adds the tuple <inline-formula><mml:math id="mm587" overflow="scroll"><mml:mrow><mml:mrow><mml:mo>(</mml:mo><mml:msub><mml:mi mathvariant="italic">PVID</mml:mi><mml:mi>i</mml:mi></mml:msub><mml:mo>,</mml:mo><mml:msub><mml:mi>x</mml:mi><mml:mi>i</mml:mi></mml:msub><mml:mo>,</mml:mo><mml:msub><mml:mi>X</mml:mi><mml:mi>i</mml:mi></mml:msub><mml:mo>,</mml:mo><mml:msub><mml:mi>d</mml:mi><mml:mi>i</mml:mi></mml:msub><mml:mo>,</mml:mo><mml:msub><mml:mi>R</mml:mi><mml:mi>i</mml:mi></mml:msub><mml:mo>,</mml:mo><mml:mi>g</mml:mi><mml:mi>i</mml:mi><mml:msub><mml:mi>d</mml:mi><mml:mi>i</mml:mi></mml:msub><mml:mo>,</mml:mo><mml:mi>G</mml:mi><mml:mi>I</mml:mi><mml:msub><mml:mi>D</mml:mi><mml:mi>i</mml:mi></mml:msub><mml:mo>)</mml:mo></mml:mrow></mml:mrow></mml:math></inline-formula> to <inline-formula><mml:math id="mm588" overflow="scroll"><mml:mrow><mml:msub><mml:mi>L</mml:mi><mml:mi>v</mml:mi></mml:msub></mml:mrow></mml:math></inline-formula> and <inline-formula><mml:math id="mm589" overflow="scroll"><mml:mrow><mml:mrow><mml:mo>(</mml:mo><mml:msub><mml:mi mathvariant="italic">PVID</mml:mi><mml:mi>i</mml:mi></mml:msub><mml:mo>,</mml:mo><mml:msub><mml:mi>X</mml:mi><mml:mi>i</mml:mi></mml:msub><mml:mo>,</mml:mo><mml:msub><mml:mi>R</mml:mi><mml:mi>i</mml:mi></mml:msub><mml:mo>,</mml:mo><mml:msub><mml:mi>P</mml:mi><mml:mrow><mml:mi>p</mml:mi><mml:mi>u</mml:mi><mml:mi>b</mml:mi></mml:mrow></mml:msub><mml:mo>,</mml:mo><mml:msub><mml:mi>h</mml:mi><mml:msub><mml:mn>1</mml:mn><mml:mi>i</mml:mi></mml:msub></mml:msub><mml:mo>)</mml:mo></mml:mrow></mml:mrow></mml:math></inline-formula> to <inline-formula><mml:math id="mm590" overflow="scroll"><mml:mrow><mml:msub><mml:mi>L</mml:mi><mml:mn>1</mml:mn></mml:msub></mml:mrow></mml:math></inline-formula>.</p></list-item></list></p></list-item><list-item><label>(3)</label><p>User Registration Query: When <inline-formula><mml:math id="mm591" overflow="scroll"><mml:mrow><mml:msub><mml:mi mathvariant="script">B</mml:mi><mml:mn>1</mml:mn></mml:msub></mml:mrow></mml:math></inline-formula> receives a User Registration Query from <inline-formula><mml:math id="mm592" overflow="scroll"><mml:mrow><mml:msub><mml:mi mathvariant="script">A</mml:mi><mml:mn>1</mml:mn></mml:msub></mml:mrow></mml:math></inline-formula> with <inline-formula><mml:math id="mm593" overflow="scroll"><mml:mrow><mml:msub><mml:mi mathvariant="italic">PID</mml:mi><mml:mi>j</mml:mi></mml:msub></mml:mrow></mml:math></inline-formula> as input, if <inline-formula><mml:math id="mm594" overflow="scroll"><mml:mrow><mml:msub><mml:mi mathvariant="italic">PID</mml:mi><mml:mi>j</mml:mi></mml:msub></mml:mrow></mml:math></inline-formula> exists in <inline-formula><mml:math id="mm595" overflow="scroll"><mml:mrow><mml:msub><mml:mi>L</mml:mi><mml:mi>u</mml:mi></mml:msub></mml:mrow></mml:math></inline-formula>, <inline-formula><mml:math id="mm596" overflow="scroll"><mml:mrow><mml:msub><mml:mi mathvariant="script">B</mml:mi><mml:mn>1</mml:mn></mml:msub></mml:mrow></mml:math></inline-formula> returns &#8869;. Otherwise, <inline-formula><mml:math id="mm597" overflow="scroll"><mml:mrow><mml:msub><mml:mi mathvariant="script">B</mml:mi><mml:mn>2</mml:mn></mml:msub></mml:mrow></mml:math></inline-formula> selects <inline-formula><mml:math id="mm598" overflow="scroll"><mml:mrow><mml:mrow><mml:msub><mml:mi>d</mml:mi><mml:mi>j</mml:mi></mml:msub><mml:mo>,</mml:mo><mml:msub><mml:mi>h</mml:mi><mml:msub><mml:mn>1</mml:mn><mml:mi>i</mml:mi></mml:msub></mml:msub><mml:mo>&#8712;</mml:mo><mml:msubsup><mml:mi>Z</mml:mi><mml:mi>q</mml:mi><mml:mo>&#8727;</mml:mo></mml:msubsup></mml:mrow></mml:mrow></mml:math></inline-formula> and calculates <inline-formula><mml:math id="mm599" overflow="scroll"><mml:mrow><mml:mrow><mml:msub><mml:mi>R</mml:mi><mml:mi>j</mml:mi></mml:msub><mml:mo>=</mml:mo><mml:msub><mml:mi>d</mml:mi><mml:mi>j</mml:mi></mml:msub><mml:mi>P</mml:mi><mml:mo>&#8722;</mml:mo><mml:msub><mml:mi>h</mml:mi><mml:msub><mml:mn>1</mml:mn><mml:mi>i</mml:mi></mml:msub></mml:msub><mml:msub><mml:mi>P</mml:mi><mml:mrow><mml:mi>p</mml:mi><mml:mi>u</mml:mi><mml:mi>b</mml:mi></mml:mrow></mml:msub></mml:mrow></mml:mrow></mml:math></inline-formula>. Then, <inline-formula><mml:math id="mm600" overflow="scroll"><mml:mrow><mml:msub><mml:mi mathvariant="script">B</mml:mi><mml:mn>2</mml:mn></mml:msub></mml:mrow></mml:math></inline-formula> adds the tuple <inline-formula><mml:math id="mm601" overflow="scroll"><mml:mrow><mml:mrow><mml:mo>(</mml:mo><mml:msub><mml:mi mathvariant="italic">PID</mml:mi><mml:mi>j</mml:mi></mml:msub><mml:mo>,</mml:mo><mml:mi>G</mml:mi><mml:mi>I</mml:mi><mml:msub><mml:mi>D</mml:mi><mml:mi>j</mml:mi></mml:msub><mml:mo>,</mml:mo><mml:msub><mml:mi>d</mml:mi><mml:mi>j</mml:mi></mml:msub><mml:mo>,</mml:mo><mml:msub><mml:mi>R</mml:mi><mml:mi>j</mml:mi></mml:msub><mml:mo>)</mml:mo></mml:mrow></mml:mrow></mml:math></inline-formula> to <inline-formula><mml:math id="mm602" overflow="scroll"><mml:mrow><mml:msub><mml:mi>L</mml:mi><mml:mi>u</mml:mi></mml:msub></mml:mrow></mml:math></inline-formula> and the tuple <inline-formula><mml:math id="mm603" overflow="scroll"><mml:mrow><mml:mrow><mml:mo>(</mml:mo><mml:msub><mml:mi mathvariant="italic">PID</mml:mi><mml:mi>j</mml:mi></mml:msub><mml:mo>,</mml:mo><mml:mi>G</mml:mi><mml:mi>I</mml:mi><mml:msub><mml:mi>D</mml:mi><mml:mi>j</mml:mi></mml:msub><mml:mo>,</mml:mo><mml:msub><mml:mi>R</mml:mi><mml:mi>j</mml:mi></mml:msub><mml:mo>,</mml:mo><mml:msub><mml:mi>P</mml:mi><mml:mrow><mml:mi>p</mml:mi><mml:mi>u</mml:mi><mml:mi>b</mml:mi></mml:mrow></mml:msub><mml:mo>,</mml:mo><mml:msub><mml:mi>h</mml:mi><mml:msub><mml:mn>1</mml:mn><mml:mi>j</mml:mi></mml:msub></mml:msub><mml:mo>)</mml:mo></mml:mrow></mml:mrow></mml:math></inline-formula> to <inline-formula><mml:math id="mm604" overflow="scroll"><mml:mrow><mml:msub><mml:mi>L</mml:mi><mml:mn>1</mml:mn></mml:msub></mml:mrow></mml:math></inline-formula>, where <inline-formula><mml:math id="mm605" overflow="scroll"><mml:mrow><mml:mrow><mml:mi>G</mml:mi><mml:mi>I</mml:mi><mml:msub><mml:mi>D</mml:mi><mml:mi>j</mml:mi></mml:msub></mml:mrow></mml:mrow></mml:math></inline-formula> is selected from the existing records in <inline-formula><mml:math id="mm606" overflow="scroll"><mml:mrow><mml:msub><mml:mi>L</mml:mi><mml:mi>v</mml:mi></mml:msub></mml:mrow></mml:math></inline-formula>.</p></list-item><list-item><label>(4)</label><p>Reveal User Private Key Query: When <inline-formula><mml:math id="mm607" overflow="scroll"><mml:mrow><mml:msub><mml:mi mathvariant="script">B</mml:mi><mml:mn>2</mml:mn></mml:msub></mml:mrow></mml:math></inline-formula> receives a Reveal User Private Key Query from <inline-formula><mml:math id="mm608" overflow="scroll"><mml:mrow><mml:msub><mml:mi mathvariant="script">A</mml:mi><mml:mn>2</mml:mn></mml:msub></mml:mrow></mml:math></inline-formula> with <inline-formula><mml:math id="mm609" overflow="scroll"><mml:mrow><mml:msub><mml:mi mathvariant="italic">PID</mml:mi><mml:mi>j</mml:mi></mml:msub></mml:mrow></mml:math></inline-formula> as input, if the tuple <inline-formula><mml:math id="mm610" overflow="scroll"><mml:mrow><mml:mrow><mml:mrow><mml:mo>(</mml:mo><mml:msub><mml:mi mathvariant="italic">PID</mml:mi><mml:mi>j</mml:mi></mml:msub><mml:mo>,</mml:mo><mml:mi>G</mml:mi><mml:mi>I</mml:mi><mml:msub><mml:mi>D</mml:mi><mml:mi>j</mml:mi></mml:msub><mml:mo>,</mml:mo><mml:msub><mml:mi>d</mml:mi><mml:mi>j</mml:mi></mml:msub><mml:mo>,</mml:mo><mml:msub><mml:mi>R</mml:mi><mml:mi>j</mml:mi></mml:msub><mml:mo>)</mml:mo></mml:mrow><mml:mo>&#8712;</mml:mo><mml:msub><mml:mi>L</mml:mi><mml:mi>u</mml:mi></mml:msub></mml:mrow></mml:mrow></mml:math></inline-formula>, <inline-formula><mml:math id="mm611" overflow="scroll"><mml:mrow><mml:mrow><mml:mi mathvariant="script">B</mml:mi><mml:mn>2</mml:mn></mml:mrow></mml:mrow></mml:math></inline-formula> returns the corresponding <inline-formula><mml:math id="mm612" overflow="scroll"><mml:mrow><mml:msub><mml:mi>d</mml:mi><mml:mi>j</mml:mi></mml:msub></mml:mrow></mml:math></inline-formula>. Otherwise, <inline-formula><mml:math id="mm613" overflow="scroll"><mml:mrow><mml:msub><mml:mi mathvariant="script">B</mml:mi><mml:mn>2</mml:mn></mml:msub></mml:mrow></mml:math></inline-formula> first executes the User Registration Query with <inline-formula><mml:math id="mm614" overflow="scroll"><mml:mrow><mml:msub><mml:mi mathvariant="italic">PID</mml:mi><mml:mi>j</mml:mi></mml:msub></mml:mrow></mml:math></inline-formula> as input and then returns the corresponding <inline-formula><mml:math id="mm615" overflow="scroll"><mml:mrow><mml:msub><mml:mi>d</mml:mi><mml:mi>j</mml:mi></mml:msub></mml:mrow></mml:math></inline-formula>.</p></list-item><list-item><label>(5)</label><p>Reveal Vehicle Secret Query: When <inline-formula><mml:math id="mm616" overflow="scroll"><mml:mrow><mml:msub><mml:mi mathvariant="script">B</mml:mi><mml:mn>2</mml:mn></mml:msub></mml:mrow></mml:math></inline-formula> receives a Reveal Vehicle Secret Query from <inline-formula><mml:math id="mm617" overflow="scroll"><mml:mrow><mml:msub><mml:mi mathvariant="script">A</mml:mi><mml:mn>2</mml:mn></mml:msub></mml:mrow></mml:math></inline-formula> with <inline-formula><mml:math id="mm618" overflow="scroll"><mml:mrow><mml:msub><mml:mi mathvariant="italic">PVID</mml:mi><mml:mi>i</mml:mi></mml:msub></mml:mrow></mml:math></inline-formula> as input, if <inline-formula><mml:math id="mm619" overflow="scroll"><mml:mrow><mml:mrow><mml:msub><mml:mi mathvariant="italic">PVID</mml:mi><mml:mi>i</mml:mi></mml:msub><mml:mo>=</mml:mo><mml:msup><mml:mi mathvariant="italic">PVID</mml:mi><mml:mo>&#8727;</mml:mo></mml:msup></mml:mrow></mml:mrow></mml:math></inline-formula>, <inline-formula><mml:math id="mm620" overflow="scroll"><mml:mrow><mml:msub><mml:mi mathvariant="script">B</mml:mi><mml:mn>2</mml:mn></mml:msub></mml:mrow></mml:math></inline-formula> aborts the game. Otherwise, <inline-formula><mml:math id="mm621" overflow="scroll"><mml:mrow><mml:msub><mml:mi mathvariant="script">B</mml:mi><mml:mn>2</mml:mn></mml:msub></mml:mrow></mml:math></inline-formula> continues the game as follows:
<list list-type="bullet"><list-item><p>If <inline-formula><mml:math id="mm622" overflow="scroll"><mml:mrow><mml:mrow><mml:msub><mml:mi mathvariant="italic">PVID</mml:mi><mml:mi>i</mml:mi></mml:msub><mml:mo>&#8712;</mml:mo><mml:msub><mml:mi>L</mml:mi><mml:mi>v</mml:mi></mml:msub></mml:mrow></mml:mrow></mml:math></inline-formula>, <inline-formula><mml:math id="mm623" overflow="scroll"><mml:mrow><mml:msub><mml:mi mathvariant="script">B</mml:mi><mml:mn>2</mml:mn></mml:msub></mml:mrow></mml:math></inline-formula> returns the corresponding <inline-formula><mml:math id="mm624" overflow="scroll"><mml:mrow><mml:msub><mml:mi>x</mml:mi><mml:mi>i</mml:mi></mml:msub></mml:mrow></mml:math></inline-formula>.</p></list-item><list-item><p>If <inline-formula><mml:math id="mm625" overflow="scroll"><mml:mrow><mml:mrow><mml:msub><mml:mi mathvariant="italic">PVID</mml:mi><mml:mi>i</mml:mi></mml:msub><mml:mo>&#8713;</mml:mo><mml:msub><mml:mi>L</mml:mi><mml:mi>v</mml:mi></mml:msub></mml:mrow></mml:mrow></mml:math></inline-formula>, <inline-formula><mml:math id="mm626" overflow="scroll"><mml:mrow><mml:msub><mml:mi mathvariant="script">B</mml:mi><mml:mn>2</mml:mn></mml:msub></mml:mrow></mml:math></inline-formula> first executes the Vehicle Registration Query and then returns the corresponding <inline-formula><mml:math id="mm627" overflow="scroll"><mml:mrow><mml:msub><mml:mi>x</mml:mi><mml:mi>i</mml:mi></mml:msub></mml:mrow></mml:math></inline-formula>.</p></list-item></list></p></list-item><list-item><label>(6)</label><p>Reveal Vehicle Public Key Query: When <inline-formula><mml:math id="mm628" overflow="scroll"><mml:mrow><mml:msub><mml:mi mathvariant="script">B</mml:mi><mml:mn>2</mml:mn></mml:msub></mml:mrow></mml:math></inline-formula> receives a Reveal Public Key Query from <inline-formula><mml:math id="mm629" overflow="scroll"><mml:mrow><mml:msub><mml:mi mathvariant="script">A</mml:mi><mml:mn>2</mml:mn></mml:msub></mml:mrow></mml:math></inline-formula> with <inline-formula><mml:math id="mm630" overflow="scroll"><mml:mrow><mml:msub><mml:mi mathvariant="italic">PVID</mml:mi><mml:mi>i</mml:mi></mml:msub></mml:mrow></mml:math></inline-formula> as input, if <inline-formula><mml:math id="mm631" overflow="scroll"><mml:mrow><mml:mrow><mml:mrow><mml:mo>(</mml:mo><mml:msub><mml:mi mathvariant="italic">PVID</mml:mi><mml:mi>i</mml:mi></mml:msub><mml:mo>,</mml:mo><mml:msub><mml:mi>x</mml:mi><mml:mi>i</mml:mi></mml:msub><mml:mo>,</mml:mo><mml:msub><mml:mi>X</mml:mi><mml:mi>i</mml:mi></mml:msub><mml:mo>,</mml:mo><mml:msub><mml:mi>d</mml:mi><mml:mi>i</mml:mi></mml:msub><mml:mo>,</mml:mo><mml:msub><mml:mi>R</mml:mi><mml:mi>i</mml:mi></mml:msub><mml:mo>,</mml:mo><mml:mi>g</mml:mi><mml:mi>i</mml:mi><mml:msub><mml:mi>d</mml:mi><mml:mi>i</mml:mi></mml:msub><mml:mo>,</mml:mo><mml:mi>G</mml:mi><mml:mi>I</mml:mi><mml:msub><mml:mi>D</mml:mi><mml:mi>i</mml:mi></mml:msub><mml:mo>)</mml:mo></mml:mrow><mml:mo>&#8712;</mml:mo><mml:msub><mml:mi>L</mml:mi><mml:mi>v</mml:mi></mml:msub></mml:mrow></mml:mrow></mml:math></inline-formula>, <inline-formula><mml:math id="mm632" overflow="scroll"><mml:mrow><mml:msub><mml:mi mathvariant="script">B</mml:mi><mml:mn>2</mml:mn></mml:msub></mml:mrow></mml:math></inline-formula> returns the corresponding <inline-formula><mml:math id="mm633" overflow="scroll"><mml:mrow><mml:mrow><mml:mo>(</mml:mo><mml:msub><mml:mi>X</mml:mi><mml:mi>i</mml:mi></mml:msub><mml:mo>,</mml:mo><mml:msub><mml:mi>R</mml:mi><mml:mi>i</mml:mi></mml:msub><mml:mo>)</mml:mo></mml:mrow></mml:mrow></mml:math></inline-formula>. Otherwise, <inline-formula><mml:math id="mm634" overflow="scroll"><mml:mrow><mml:msub><mml:mi mathvariant="script">B</mml:mi><mml:mn>2</mml:mn></mml:msub></mml:mrow></mml:math></inline-formula> first executes the Vehicle Registration Query with <inline-formula><mml:math id="mm635" overflow="scroll"><mml:mrow><mml:msub><mml:mi mathvariant="italic">PVID</mml:mi><mml:mi>i</mml:mi></mml:msub></mml:mrow></mml:math></inline-formula> as input and then returns the corresponding <inline-formula><mml:math id="mm636" overflow="scroll"><mml:mrow><mml:mrow><mml:mo>(</mml:mo><mml:msub><mml:mi>X</mml:mi><mml:mi>i</mml:mi></mml:msub><mml:mo>,</mml:mo><mml:msub><mml:mi>R</mml:mi><mml:mi>i</mml:mi></mml:msub><mml:mo>)</mml:mo></mml:mrow></mml:mrow></mml:math></inline-formula>.</p></list-item><list-item><label>(7)</label><p>Reveal User Public Key Query: When <inline-formula><mml:math id="mm637" overflow="scroll"><mml:mrow><mml:msub><mml:mi mathvariant="script">B</mml:mi><mml:mn>2</mml:mn></mml:msub></mml:mrow></mml:math></inline-formula> receives a Reveal User Public Key Query from <inline-formula><mml:math id="mm638" overflow="scroll"><mml:mrow><mml:msub><mml:mi mathvariant="script">A</mml:mi><mml:mn>2</mml:mn></mml:msub></mml:mrow></mml:math></inline-formula> with <inline-formula><mml:math id="mm639" overflow="scroll"><mml:mrow><mml:msub><mml:mi mathvariant="italic">PID</mml:mi><mml:mi>j</mml:mi></mml:msub></mml:mrow></mml:math></inline-formula> as input, if <inline-formula><mml:math id="mm640" overflow="scroll"><mml:mrow><mml:mrow><mml:mrow><mml:mo>(</mml:mo><mml:msub><mml:mi mathvariant="italic">PID</mml:mi><mml:mi>j</mml:mi></mml:msub><mml:mo>,</mml:mo><mml:mi>G</mml:mi><mml:mi>I</mml:mi><mml:msub><mml:mi>D</mml:mi><mml:mi>j</mml:mi></mml:msub><mml:mo>,</mml:mo><mml:msub><mml:mi>d</mml:mi><mml:mi>j</mml:mi></mml:msub><mml:mo>,</mml:mo><mml:msub><mml:mi>R</mml:mi><mml:mi>j</mml:mi></mml:msub><mml:mo>)</mml:mo></mml:mrow><mml:mo>&#8712;</mml:mo><mml:msub><mml:mi>L</mml:mi><mml:mi>u</mml:mi></mml:msub></mml:mrow></mml:mrow></mml:math></inline-formula>, <inline-formula><mml:math id="mm641" overflow="scroll"><mml:mrow><mml:msub><mml:mi mathvariant="script">B</mml:mi><mml:mn>2</mml:mn></mml:msub></mml:mrow></mml:math></inline-formula> returns the corresponding <inline-formula><mml:math id="mm642" overflow="scroll"><mml:mrow><mml:msub><mml:mi>R</mml:mi><mml:mi>j</mml:mi></mml:msub></mml:mrow></mml:math></inline-formula>. Otherwise, <inline-formula><mml:math id="mm643" overflow="scroll"><mml:mrow><mml:msub><mml:mi mathvariant="script">B</mml:mi><mml:mn>2</mml:mn></mml:msub></mml:mrow></mml:math></inline-formula> first executes the User Registration Query with <inline-formula><mml:math id="mm644" overflow="scroll"><mml:mrow><mml:msub><mml:mi mathvariant="italic">PID</mml:mi><mml:mi>j</mml:mi></mml:msub></mml:mrow></mml:math></inline-formula> as input and then returns the corresponding <inline-formula><mml:math id="mm645" overflow="scroll"><mml:mrow><mml:msub><mml:mi>R</mml:mi><mml:mi>j</mml:mi></mml:msub></mml:mrow></mml:math></inline-formula>.</p></list-item><list-item><label>(8)</label><p>Sign Query: When <inline-formula><mml:math id="mm646" overflow="scroll"><mml:mrow><mml:msub><mml:mi mathvariant="script">B</mml:mi><mml:mn>2</mml:mn></mml:msub></mml:mrow></mml:math></inline-formula> receives a Sign Query from <inline-formula><mml:math id="mm647" overflow="scroll"><mml:mrow><mml:msub><mml:mi mathvariant="script">A</mml:mi><mml:mn>2</mml:mn></mml:msub></mml:mrow></mml:math></inline-formula> with <inline-formula><mml:math id="mm648" overflow="scroll"><mml:mrow><mml:mrow><mml:mo>(</mml:mo><mml:msub><mml:mi mathvariant="italic">PVID</mml:mi><mml:mi>i</mml:mi></mml:msub><mml:mo>,</mml:mo><mml:msub><mml:mi mathvariant="italic">PID</mml:mi><mml:mi>j</mml:mi></mml:msub><mml:mo>,</mml:mo><mml:msub><mml:mi>m</mml:mi><mml:mi>i</mml:mi></mml:msub><mml:mo>)</mml:mo></mml:mrow></mml:mrow></mml:math></inline-formula> as input, <inline-formula><mml:math id="mm649" overflow="scroll"><mml:mrow><mml:msub><mml:mi mathvariant="script">B</mml:mi><mml:mn>2</mml:mn></mml:msub></mml:mrow></mml:math></inline-formula> first checks whether <inline-formula><mml:math id="mm650" overflow="scroll"><mml:mrow><mml:msub><mml:mi mathvariant="italic">PVID</mml:mi><mml:mi>i</mml:mi></mml:msub></mml:mrow></mml:math></inline-formula> and <inline-formula><mml:math id="mm651" overflow="scroll"><mml:mrow><mml:msub><mml:mi mathvariant="italic">PID</mml:mi><mml:mi>j</mml:mi></mml:msub></mml:mrow></mml:math></inline-formula> exist in <inline-formula><mml:math id="mm652" overflow="scroll"><mml:mrow><mml:msub><mml:mi>L</mml:mi><mml:mi>v</mml:mi></mml:msub></mml:mrow></mml:math></inline-formula> and <inline-formula><mml:math id="mm653" overflow="scroll"><mml:mrow><mml:msub><mml:mi>L</mml:mi><mml:mi>u</mml:mi></mml:msub></mml:mrow></mml:math></inline-formula>. If not, <inline-formula><mml:math id="mm654" overflow="scroll"><mml:mrow><mml:msub><mml:mi mathvariant="script">B</mml:mi><mml:mn>2</mml:mn></mml:msub></mml:mrow></mml:math></inline-formula> first executes the Vehicle Registration Query and User Registration Query with the input identities. Then, after acquiring the corresponding records, <inline-formula><mml:math id="mm655" overflow="scroll"><mml:mrow><mml:msub><mml:mi mathvariant="script">B</mml:mi><mml:mn>2</mml:mn></mml:msub></mml:mrow></mml:math></inline-formula> continues the game as follows:
<list list-type="bullet"><list-item><p>If <inline-formula><mml:math id="mm656" overflow="scroll"><mml:mrow><mml:mrow><mml:msub><mml:mi mathvariant="italic">PVID</mml:mi><mml:mi>j</mml:mi></mml:msub><mml:mo>&#8800;</mml:mo><mml:msup><mml:mi mathvariant="italic">PVID</mml:mi><mml:mo>&#8727;</mml:mo></mml:msup></mml:mrow></mml:mrow></mml:math></inline-formula>, <inline-formula><mml:math id="mm657" overflow="scroll"><mml:mrow><mml:msub><mml:mi mathvariant="script">B</mml:mi><mml:mn>2</mml:mn></mml:msub></mml:mrow></mml:math></inline-formula> selects <inline-formula><mml:math id="mm658" overflow="scroll"><mml:mrow><mml:mrow><mml:mi>z</mml:mi><mml:mo>,</mml:mo><mml:msub><mml:mi>y</mml:mi><mml:mi>i</mml:mi></mml:msub><mml:mo>,</mml:mo><mml:msub><mml:mi>h</mml:mi><mml:msub><mml:mn>3</mml:mn><mml:mi>i</mml:mi></mml:msub></mml:msub><mml:mo>,</mml:mo><mml:msub><mml:mi>h</mml:mi><mml:msub><mml:mn>4</mml:mn><mml:mi>i</mml:mi></mml:msub></mml:msub><mml:mo>&#8712;</mml:mo><mml:msubsup><mml:mi>Z</mml:mi><mml:mi>q</mml:mi><mml:mo>&#8727;</mml:mo></mml:msubsup></mml:mrow></mml:mrow></mml:math></inline-formula> and obtains <inline-formula><mml:math id="mm659" overflow="scroll"><mml:mrow><mml:msub><mml:mi>h</mml:mi><mml:msub><mml:mn>1</mml:mn><mml:mi>i</mml:mi></mml:msub></mml:msub></mml:mrow></mml:math></inline-formula>, <inline-formula><mml:math id="mm660" overflow="scroll"><mml:mrow><mml:msub><mml:mi>h</mml:mi><mml:msub><mml:mn>1</mml:mn><mml:mi>j</mml:mi></mml:msub></mml:msub></mml:mrow></mml:math></inline-formula> from <inline-formula><mml:math id="mm661" overflow="scroll"><mml:mrow><mml:msub><mml:mi>L</mml:mi><mml:mn>1</mml:mn></mml:msub></mml:mrow></mml:math></inline-formula>. Then, <inline-formula><mml:math id="mm662" overflow="scroll"><mml:mrow><mml:msub><mml:mi mathvariant="script">B</mml:mi><mml:mn>2</mml:mn></mml:msub></mml:mrow></mml:math></inline-formula> calculates <inline-formula><mml:math id="mm663" overflow="scroll"><mml:mrow><mml:mrow><mml:msub><mml:mi>Y</mml:mi><mml:mi>i</mml:mi></mml:msub><mml:mo>=</mml:mo><mml:msub><mml:mi>y</mml:mi><mml:mi>i</mml:mi></mml:msub><mml:mi>P</mml:mi></mml:mrow></mml:mrow></mml:math></inline-formula>, <inline-formula><mml:math id="mm664" overflow="scroll"><mml:mrow><mml:mrow><mml:msub><mml:mi>&#963;</mml:mi><mml:mi>i</mml:mi></mml:msub><mml:mo>=</mml:mo><mml:msup><mml:mi>z</mml:mi><mml:mrow><mml:mo>&#8722;</mml:mo><mml:mn>1</mml:mn></mml:mrow></mml:msup><mml:mrow><mml:mo>(</mml:mo><mml:msub><mml:mi>y</mml:mi><mml:mi>i</mml:mi></mml:msub><mml:mo>+</mml:mo><mml:msub><mml:mi>h</mml:mi><mml:msub><mml:mn>3</mml:mn><mml:mi>i</mml:mi></mml:msub></mml:msub><mml:msub><mml:mi>x</mml:mi><mml:mi>i</mml:mi></mml:msub><mml:mo>+</mml:mo><mml:msub><mml:mi>h</mml:mi><mml:msub><mml:mn>4</mml:mn><mml:mi>i</mml:mi></mml:msub></mml:msub><mml:mrow><mml:mo>(</mml:mo><mml:msub><mml:mi>d</mml:mi><mml:mi>i</mml:mi></mml:msub><mml:mo>+</mml:mo><mml:msub><mml:mi>d</mml:mi><mml:mi>j</mml:mi></mml:msub><mml:mo>)</mml:mo></mml:mrow><mml:mo>)</mml:mo></mml:mrow></mml:mrow></mml:mrow></mml:math></inline-formula>. Then, <inline-formula><mml:math id="mm665" overflow="scroll"><mml:mrow><mml:msub><mml:mi mathvariant="script">B</mml:mi><mml:mn>2</mml:mn></mml:msub></mml:mrow></mml:math></inline-formula> adds <inline-formula><mml:math id="mm666" overflow="scroll"><mml:mrow><mml:mrow><mml:mo>(</mml:mo><mml:msub><mml:mi>m</mml:mi><mml:mi>i</mml:mi></mml:msub><mml:mo>,</mml:mo><mml:msub><mml:mi mathvariant="italic">EID</mml:mi><mml:mrow><mml:mi>i</mml:mi><mml:mi>j</mml:mi></mml:mrow></mml:msub><mml:mo>,</mml:mo><mml:mi>G</mml:mi><mml:mi>I</mml:mi><mml:msub><mml:mi>D</mml:mi><mml:mi>j</mml:mi></mml:msub><mml:mo>,</mml:mo><mml:msub><mml:mi mathvariant="italic">PK</mml:mi><mml:mi>i</mml:mi></mml:msub><mml:mo>,</mml:mo><mml:msub><mml:mi>Y</mml:mi><mml:mi>i</mml:mi></mml:msub><mml:mo>,</mml:mo><mml:msub><mml:mi>R</mml:mi><mml:mi>j</mml:mi></mml:msub><mml:mo>,</mml:mo><mml:mi>z</mml:mi><mml:mo>,</mml:mo><mml:msub><mml:mi>T</mml:mi><mml:mi>z</mml:mi></mml:msub><mml:mo>,</mml:mo><mml:msub><mml:mi>h</mml:mi><mml:msub><mml:mn>3</mml:mn><mml:mi>i</mml:mi></mml:msub></mml:msub><mml:mo>)</mml:mo></mml:mrow></mml:mrow></mml:math></inline-formula> to <inline-formula><mml:math id="mm667" overflow="scroll"><mml:mrow><mml:msub><mml:mi>L</mml:mi><mml:mn>3</mml:mn></mml:msub></mml:mrow></mml:math></inline-formula> and <inline-formula><mml:math id="mm668" overflow="scroll"><mml:mrow><mml:mrow><mml:mo>(</mml:mo><mml:msub><mml:mi>m</mml:mi><mml:mi>i</mml:mi></mml:msub><mml:mo>,</mml:mo><mml:msub><mml:mi mathvariant="italic">EID</mml:mi><mml:mrow><mml:mi>i</mml:mi><mml:mi>j</mml:mi></mml:mrow></mml:msub><mml:mo>,</mml:mo><mml:mi>G</mml:mi><mml:mi>I</mml:mi><mml:msub><mml:mi>D</mml:mi><mml:mi>j</mml:mi></mml:msub><mml:mo>,</mml:mo><mml:msub><mml:mi mathvariant="italic">PK</mml:mi><mml:mi>i</mml:mi></mml:msub><mml:mo>,</mml:mo><mml:mi>z</mml:mi><mml:mo>,</mml:mo><mml:msub><mml:mi>T</mml:mi><mml:mi>z</mml:mi></mml:msub><mml:mo>,</mml:mo><mml:msub><mml:mi>h</mml:mi><mml:msub><mml:mn>4</mml:mn><mml:mi>i</mml:mi></mml:msub></mml:msub><mml:mo>)</mml:mo></mml:mrow></mml:mrow></mml:math></inline-formula> to <inline-formula><mml:math id="mm669" overflow="scroll"><mml:mrow><mml:msub><mml:mi>L</mml:mi><mml:mn>4</mml:mn></mml:msub></mml:mrow></mml:math></inline-formula>. Finally, <inline-formula><mml:math id="mm670" overflow="scroll"><mml:mrow><mml:msub><mml:mi mathvariant="script">B</mml:mi><mml:mn>2</mml:mn></mml:msub></mml:mrow></mml:math></inline-formula> returns <inline-formula><mml:math id="mm671" overflow="scroll"><mml:mrow><mml:mrow><mml:mo>(</mml:mo><mml:msub><mml:mi>&#963;</mml:mi><mml:mi>i</mml:mi></mml:msub><mml:mo>,</mml:mo><mml:msub><mml:mi>Y</mml:mi><mml:mi>i</mml:mi></mml:msub><mml:mo>,</mml:mo><mml:msub><mml:mi>T</mml:mi><mml:mi>z</mml:mi></mml:msub><mml:mo>)</mml:mo></mml:mrow></mml:mrow></mml:math></inline-formula> to <inline-formula><mml:math id="mm672" overflow="scroll"><mml:mrow><mml:msub><mml:mi mathvariant="script">A</mml:mi><mml:mn>2</mml:mn></mml:msub></mml:mrow></mml:math></inline-formula>.</p></list-item><list-item><p>If <inline-formula><mml:math id="mm673" overflow="scroll"><mml:mrow><mml:mrow><mml:msub><mml:mi mathvariant="italic">PVID</mml:mi><mml:mi>j</mml:mi></mml:msub><mml:mo>=</mml:mo><mml:msup><mml:mi mathvariant="italic">PVID</mml:mi><mml:mo>&#8727;</mml:mo></mml:msup></mml:mrow></mml:mrow></mml:math></inline-formula>, <inline-formula><mml:math id="mm674" overflow="scroll"><mml:mrow><mml:msub><mml:mi mathvariant="script">B</mml:mi><mml:mn>2</mml:mn></mml:msub></mml:mrow></mml:math></inline-formula> selects <inline-formula><mml:math id="mm675" overflow="scroll"><mml:mrow><mml:mrow><mml:mi>z</mml:mi><mml:mo>,</mml:mo><mml:msub><mml:mi>y</mml:mi><mml:mi>i</mml:mi></mml:msub><mml:mo>,</mml:mo><mml:msub><mml:mi>h</mml:mi><mml:msub><mml:mn>3</mml:mn><mml:mi>i</mml:mi></mml:msub></mml:msub><mml:mo>,</mml:mo><mml:msub><mml:mi>h</mml:mi><mml:msub><mml:mn>4</mml:mn><mml:mi>i</mml:mi></mml:msub></mml:msub><mml:mo>&#8712;</mml:mo><mml:msubsup><mml:mi>Z</mml:mi><mml:mi>q</mml:mi><mml:mo>&#8727;</mml:mo></mml:msubsup></mml:mrow></mml:mrow></mml:math></inline-formula> and obtains <inline-formula><mml:math id="mm676" overflow="scroll"><mml:mrow><mml:msub><mml:mi>h</mml:mi><mml:msub><mml:mn>1</mml:mn><mml:mi>i</mml:mi></mml:msub></mml:msub></mml:mrow></mml:math></inline-formula>, <inline-formula><mml:math id="mm677" overflow="scroll"><mml:mrow><mml:msub><mml:mi>h</mml:mi><mml:msub><mml:mn>1</mml:mn><mml:mi>j</mml:mi></mml:msub></mml:msub></mml:mrow></mml:math></inline-formula> from <inline-formula><mml:math id="mm678" overflow="scroll"><mml:mrow><mml:msub><mml:mi>L</mml:mi><mml:mn>1</mml:mn></mml:msub></mml:mrow></mml:math></inline-formula>. Then, <inline-formula><mml:math id="mm679" overflow="scroll"><mml:mrow><mml:msub><mml:mi mathvariant="script">B</mml:mi><mml:mn>2</mml:mn></mml:msub></mml:mrow></mml:math></inline-formula> sets <inline-formula><mml:math id="mm680" overflow="scroll"><mml:mrow><mml:mrow><mml:msub><mml:mi>&#963;</mml:mi><mml:mi>i</mml:mi></mml:msub><mml:mo>=</mml:mo><mml:msup><mml:mi>z</mml:mi><mml:mrow><mml:mo>&#8722;</mml:mo><mml:mn>1</mml:mn></mml:mrow></mml:msup><mml:msub><mml:mi>y</mml:mi><mml:mi>i</mml:mi></mml:msub></mml:mrow></mml:mrow></mml:math></inline-formula> and calculates <inline-formula><mml:math id="mm681" overflow="scroll"><mml:mrow><mml:mrow><mml:msub><mml:mi>Y</mml:mi><mml:mi>i</mml:mi></mml:msub><mml:mo>=</mml:mo><mml:mi>z</mml:mi><mml:msub><mml:mi>&#963;</mml:mi><mml:mi>i</mml:mi></mml:msub><mml:mi>P</mml:mi><mml:mo>&#8722;</mml:mo><mml:msub><mml:mi>h</mml:mi><mml:msub><mml:mn>3</mml:mn><mml:mi>i</mml:mi></mml:msub></mml:msub><mml:msub><mml:mi>X</mml:mi><mml:mi>i</mml:mi></mml:msub><mml:mo>&#8722;</mml:mo><mml:msub><mml:mi>h</mml:mi><mml:msub><mml:mn>4</mml:mn><mml:mi>i</mml:mi></mml:msub></mml:msub><mml:mrow><mml:mo>(</mml:mo><mml:msub><mml:mi>R</mml:mi><mml:mi>i</mml:mi></mml:msub><mml:mo>+</mml:mo><mml:msub><mml:mi>R</mml:mi><mml:mi>j</mml:mi></mml:msub><mml:mo>+</mml:mo><mml:msub><mml:mi>h</mml:mi><mml:msub><mml:mn>1</mml:mn><mml:mrow><mml:mi>i</mml:mi><mml:mi>j</mml:mi></mml:mrow></mml:msub></mml:msub><mml:msub><mml:mi>P</mml:mi><mml:mrow><mml:mi>p</mml:mi><mml:mi>u</mml:mi><mml:mi>b</mml:mi></mml:mrow></mml:msub><mml:mo>)</mml:mo></mml:mrow></mml:mrow></mml:mrow></mml:math></inline-formula>, where <inline-formula><mml:math id="mm682" overflow="scroll"><mml:mrow><mml:mrow><mml:msub><mml:mi>h</mml:mi><mml:msub><mml:mn>1</mml:mn><mml:mrow><mml:mi>i</mml:mi><mml:mi>j</mml:mi></mml:mrow></mml:msub></mml:msub><mml:mo>=</mml:mo><mml:mrow><mml:mo>(</mml:mo><mml:msub><mml:mi>h</mml:mi><mml:msub><mml:mn>1</mml:mn><mml:mi>i</mml:mi></mml:msub></mml:msub><mml:mo>+</mml:mo><mml:msub><mml:mi>h</mml:mi><mml:msub><mml:mn>1</mml:mn><mml:mi>j</mml:mi></mml:msub></mml:msub><mml:mo>)</mml:mo></mml:mrow></mml:mrow></mml:mrow></mml:math></inline-formula>. <inline-formula><mml:math id="mm683" overflow="scroll"><mml:mrow><mml:msub><mml:mi mathvariant="script">B</mml:mi><mml:mn>2</mml:mn></mml:msub></mml:mrow></mml:math></inline-formula> then adds <inline-formula><mml:math id="mm684" overflow="scroll"><mml:mrow><mml:mrow><mml:mo>(</mml:mo><mml:msub><mml:mi>m</mml:mi><mml:mi>i</mml:mi></mml:msub><mml:mo>,</mml:mo><mml:msub><mml:mi mathvariant="italic">EID</mml:mi><mml:mrow><mml:mi>i</mml:mi><mml:mi>j</mml:mi></mml:mrow></mml:msub><mml:mo>,</mml:mo><mml:mi>G</mml:mi><mml:mi>I</mml:mi><mml:msub><mml:mi>D</mml:mi><mml:mi>j</mml:mi></mml:msub><mml:mo>,</mml:mo><mml:msub><mml:mi mathvariant="italic">PK</mml:mi><mml:mi>i</mml:mi></mml:msub><mml:mo>,</mml:mo><mml:msub><mml:mi>Y</mml:mi><mml:mi>i</mml:mi></mml:msub><mml:mo>,</mml:mo><mml:msub><mml:mi>R</mml:mi><mml:mi>j</mml:mi></mml:msub><mml:mo>,</mml:mo><mml:mi>z</mml:mi><mml:mo>,</mml:mo><mml:msub><mml:mi>T</mml:mi><mml:mi>z</mml:mi></mml:msub><mml:mo>,</mml:mo><mml:msub><mml:mi>h</mml:mi><mml:msub><mml:mn>3</mml:mn><mml:mi>i</mml:mi></mml:msub></mml:msub><mml:mo>)</mml:mo></mml:mrow></mml:mrow></mml:math></inline-formula> to <inline-formula><mml:math id="mm685" overflow="scroll"><mml:mrow><mml:msub><mml:mi>L</mml:mi><mml:mn>3</mml:mn></mml:msub></mml:mrow></mml:math></inline-formula> and <inline-formula><mml:math id="mm686" overflow="scroll"><mml:mrow><mml:mrow><mml:mo>(</mml:mo><mml:msub><mml:mi>m</mml:mi><mml:mi>i</mml:mi></mml:msub><mml:mo>,</mml:mo><mml:msub><mml:mi mathvariant="italic">EID</mml:mi><mml:mrow><mml:mi>i</mml:mi><mml:mi>j</mml:mi></mml:mrow></mml:msub><mml:mo>,</mml:mo><mml:mi>G</mml:mi><mml:mi>I</mml:mi><mml:msub><mml:mi>D</mml:mi><mml:mi>j</mml:mi></mml:msub><mml:mo>,</mml:mo><mml:msub><mml:mi mathvariant="italic">PK</mml:mi><mml:mi>i</mml:mi></mml:msub><mml:mo>,</mml:mo><mml:mi>z</mml:mi><mml:mo>,</mml:mo><mml:msub><mml:mi>T</mml:mi><mml:mi>z</mml:mi></mml:msub><mml:mo>,</mml:mo><mml:msub><mml:mi>h</mml:mi><mml:msub><mml:mn>4</mml:mn><mml:mi>i</mml:mi></mml:msub></mml:msub><mml:mo>)</mml:mo></mml:mrow></mml:mrow></mml:math></inline-formula> to <inline-formula><mml:math id="mm687" overflow="scroll"><mml:mrow><mml:msub><mml:mi>L</mml:mi><mml:mn>4</mml:mn></mml:msub></mml:mrow></mml:math></inline-formula>, where <inline-formula><mml:math id="mm688" overflow="scroll"><mml:mrow><mml:mrow><mml:msub><mml:mi mathvariant="italic">EID</mml:mi><mml:mrow><mml:mi>i</mml:mi><mml:mi>j</mml:mi></mml:mrow></mml:msub><mml:mo>=</mml:mo><mml:msub><mml:mi mathvariant="italic">PVID</mml:mi><mml:mi>i</mml:mi></mml:msub><mml:mrow><mml:mo>|</mml:mo><mml:mo>|</mml:mo></mml:mrow><mml:msub><mml:mi mathvariant="italic">PID</mml:mi><mml:mi>j</mml:mi></mml:msub></mml:mrow></mml:mrow></mml:math></inline-formula>. Finally, <inline-formula><mml:math id="mm689" overflow="scroll"><mml:mrow><mml:msub><mml:mi mathvariant="script">B</mml:mi><mml:mn>2</mml:mn></mml:msub></mml:mrow></mml:math></inline-formula> returns <inline-formula><mml:math id="mm690" overflow="scroll"><mml:mrow><mml:mrow><mml:mo>(</mml:mo><mml:msub><mml:mi>&#963;</mml:mi><mml:mi>i</mml:mi></mml:msub><mml:mo>,</mml:mo><mml:msub><mml:mi>Y</mml:mi><mml:mi>i</mml:mi></mml:msub><mml:mo>,</mml:mo><mml:msub><mml:mi>T</mml:mi><mml:mi>z</mml:mi></mml:msub><mml:mo>)</mml:mo></mml:mrow></mml:mrow></mml:math></inline-formula> to <inline-formula><mml:math id="mm691" overflow="scroll"><mml:mrow><mml:msub><mml:mi mathvariant="script">A</mml:mi><mml:mn>2</mml:mn></mml:msub></mml:mrow></mml:math></inline-formula>.</p></list-item></list></p></list-item></list>
</p><p>Forgery Stage: After all the queries have been made and replied to, <inline-formula><mml:math id="mm692" overflow="scroll"><mml:mrow><mml:msub><mml:mi mathvariant="script">A</mml:mi><mml:mn>2</mml:mn></mml:msub></mml:mrow></mml:math></inline-formula> outputs a forged signature <inline-formula><mml:math id="mm693" overflow="scroll"><mml:mrow><mml:mrow><mml:mo>(</mml:mo><mml:msubsup><mml:mi>&#963;</mml:mi><mml:mrow><mml:mn>1</mml:mn></mml:mrow><mml:mo>&#8727;</mml:mo></mml:msubsup><mml:mo>,</mml:mo><mml:msub><mml:mi>Y</mml:mi><mml:mi>i</mml:mi></mml:msub><mml:mo>)</mml:mo></mml:mrow></mml:mrow></mml:math></inline-formula> for the identity-message pair <inline-formula><mml:math id="mm694" overflow="scroll"><mml:mrow><mml:mrow><mml:mo>(</mml:mo><mml:msub><mml:mi mathvariant="italic">PVID</mml:mi><mml:mi>i</mml:mi></mml:msub><mml:mo>,</mml:mo><mml:msubsup><mml:mi mathvariant="italic">PID</mml:mi><mml:mrow><mml:mi>j</mml:mi></mml:mrow><mml:mo>&#8727;</mml:mo></mml:msubsup><mml:mo>,</mml:mo><mml:msup><mml:mi>m</mml:mi><mml:mo>&#8727;</mml:mo></mml:msup><mml:mo>)</mml:mo></mml:mrow></mml:mrow></mml:math></inline-formula>. If <inline-formula><mml:math id="mm695" overflow="scroll"><mml:mrow><mml:mrow><mml:msubsup><mml:mi mathvariant="italic">PVID</mml:mi><mml:mrow><mml:mi>i</mml:mi></mml:mrow><mml:mo>&#8727;</mml:mo></mml:msubsup><mml:mo>&#8800;</mml:mo><mml:msup><mml:mi mathvariant="italic">PVID</mml:mi><mml:mo>&#8727;</mml:mo></mml:msup></mml:mrow></mml:mrow></mml:math></inline-formula>, <inline-formula><mml:math id="mm696" overflow="scroll"><mml:mrow><mml:msub><mml:mi mathvariant="script">B</mml:mi><mml:mn>2</mml:mn></mml:msub></mml:mrow></mml:math></inline-formula> outputs &#8869; and aborts the game. Otherwise, according to the Forking Lemma, <inline-formula><mml:math id="mm697" overflow="scroll"><mml:mrow><mml:msub><mml:mi mathvariant="script">B</mml:mi><mml:mn>2</mml:mn></mml:msub></mml:mrow></mml:math></inline-formula> can rewind the game process and make <inline-formula><mml:math id="mm698" overflow="scroll"><mml:mrow><mml:msub><mml:mi mathvariant="script">A</mml:mi><mml:mn>2</mml:mn></mml:msub></mml:mrow></mml:math></inline-formula> output another forged signature <inline-formula><mml:math id="mm699" overflow="scroll"><mml:mrow><mml:mrow><mml:mo>(</mml:mo><mml:msubsup><mml:mi>&#963;</mml:mi><mml:mrow><mml:mn>2</mml:mn></mml:mrow><mml:mo>&#8727;</mml:mo></mml:msubsup><mml:mo>,</mml:mo><mml:msub><mml:mi>Y</mml:mi><mml:mi>i</mml:mi></mml:msub><mml:mo>)</mml:mo></mml:mrow></mml:mrow></mml:math></inline-formula> by changing the output of <inline-formula><mml:math id="mm700" overflow="scroll"><mml:mrow><mml:msub><mml:mi>H</mml:mi><mml:mn>3</mml:mn></mml:msub></mml:mrow></mml:math></inline-formula>. Hence, we have<disp-formula><mml:math id="mm701" display="block" overflow="scroll"><mml:mrow><mml:mfenced separators="" open="{" close=""><mml:mtable><mml:mtr><mml:mtd columnalign="left"><mml:mrow><mml:msubsup><mml:mi>&#963;</mml:mi><mml:mrow><mml:mn>1</mml:mn></mml:mrow><mml:mo>&#8727;</mml:mo></mml:msubsup><mml:mo>=</mml:mo><mml:msubsup><mml:mi>y</mml:mi><mml:mi>i</mml:mi><mml:mo>&#8727;</mml:mo></mml:msubsup><mml:mo>+</mml:mo><mml:msubsup><mml:mi>h</mml:mi><mml:mn>3</mml:mn><mml:msup><mml:mo>&#8727;</mml:mo><mml:mo>&#8242;</mml:mo></mml:msup></mml:msubsup><mml:mi>b</mml:mi><mml:mo>+</mml:mo><mml:msubsup><mml:mi>h</mml:mi><mml:mn>4</mml:mn><mml:mo>&#8727;</mml:mo></mml:msubsup><mml:mrow><mml:mo>(</mml:mo><mml:msubsup><mml:mi>d</mml:mi><mml:mi>i</mml:mi><mml:mo>&#8727;</mml:mo></mml:msubsup><mml:mo>+</mml:mo><mml:msubsup><mml:mi>d</mml:mi><mml:mi>j</mml:mi><mml:mo>&#8727;</mml:mo></mml:msubsup><mml:mo>)</mml:mo></mml:mrow></mml:mrow></mml:mtd></mml:mtr><mml:mtr><mml:mtd columnalign="left"><mml:mrow><mml:msubsup><mml:mi>&#963;</mml:mi><mml:mrow><mml:mn>2</mml:mn></mml:mrow><mml:mo>&#8727;</mml:mo></mml:msubsup><mml:mo>=</mml:mo><mml:msubsup><mml:mi>y</mml:mi><mml:mi>i</mml:mi><mml:mo>&#8727;</mml:mo></mml:msubsup><mml:mo>+</mml:mo><mml:msubsup><mml:mi>h</mml:mi><mml:mn>3</mml:mn><mml:mo>&#8727;</mml:mo></mml:msubsup><mml:mi>b</mml:mi><mml:mo>+</mml:mo><mml:msubsup><mml:mi>h</mml:mi><mml:mn>4</mml:mn><mml:mo>&#8727;</mml:mo></mml:msubsup><mml:mrow><mml:mo>(</mml:mo><mml:msubsup><mml:mi>d</mml:mi><mml:mi>i</mml:mi><mml:mo>&#8727;</mml:mo></mml:msubsup><mml:mo>+</mml:mo><mml:msubsup><mml:mi>d</mml:mi><mml:mi>j</mml:mi><mml:mo>&#8727;</mml:mo></mml:msubsup><mml:mo>)</mml:mo></mml:mrow></mml:mrow></mml:mtd></mml:mtr></mml:mtable></mml:mfenced></mml:mrow></mml:math></disp-formula></p><p>From the above equations, <inline-formula><mml:math id="mm702" overflow="scroll"><mml:mrow><mml:msub><mml:mi mathvariant="script">B</mml:mi><mml:mn>1</mml:mn></mml:msub></mml:mrow></mml:math></inline-formula> outputs <inline-formula><mml:math id="mm703" overflow="scroll"><mml:mrow><mml:mrow><mml:mi>b</mml:mi><mml:mo>=</mml:mo><mml:mstyle scriptlevel="0" displaystyle="true"><mml:mfrac><mml:mrow><mml:msubsup><mml:mi>&#963;</mml:mi><mml:mrow><mml:mn>1</mml:mn></mml:mrow><mml:mo>&#8727;</mml:mo></mml:msubsup><mml:mo>&#8722;</mml:mo><mml:msubsup><mml:mi>&#963;</mml:mi><mml:mrow><mml:mn>2</mml:mn></mml:mrow><mml:mo>&#8727;</mml:mo></mml:msubsup></mml:mrow><mml:mrow><mml:msubsup><mml:mi>h</mml:mi><mml:mn>3</mml:mn><mml:mo>&#8727;</mml:mo></mml:msubsup><mml:mo>&#8722;</mml:mo><mml:msubsup><mml:mi>h</mml:mi><mml:mn>3</mml:mn><mml:msup><mml:mo>&#8727;</mml:mo><mml:mo>&#8242;</mml:mo></mml:msup></mml:msubsup></mml:mrow></mml:mfrac></mml:mstyle></mml:mrow></mml:mrow></mml:math></inline-formula> as the solution to the ECDLP instance.</p><p>Let <inline-formula><mml:math id="mm704" overflow="scroll"><mml:mrow><mml:msub><mml:mi>E</mml:mi><mml:mn>1</mml:mn></mml:msub></mml:mrow></mml:math></inline-formula> denote the event that the game does not abort in Query Stage, <inline-formula><mml:math id="mm705" overflow="scroll"><mml:mrow><mml:msub><mml:mi>E</mml:mi><mml:mn>2</mml:mn></mml:msub></mml:mrow></mml:math></inline-formula> denote the event that the game does not abort in Forge Stage, and <inline-formula><mml:math id="mm706" overflow="scroll"><mml:mrow><mml:msub><mml:mi>E</mml:mi><mml:mn>3</mml:mn></mml:msub></mml:mrow></mml:math></inline-formula> denote the event that <inline-formula><mml:math id="mm707" overflow="scroll"><mml:mrow><mml:msub><mml:mi mathvariant="script">A</mml:mi><mml:mn>2</mml:mn></mml:msub></mml:mrow></mml:math></inline-formula> successfully outputs two valid forged signatures in the game. Then the advantage of <inline-formula><mml:math id="mm708" overflow="scroll"><mml:mrow><mml:msub><mml:mi mathvariant="script">B</mml:mi><mml:mn>2</mml:mn></mml:msub></mml:mrow></mml:math></inline-formula> solving the ECDLP instance can be presented with <inline-formula><mml:math id="mm709" overflow="scroll"><mml:mrow><mml:mrow><mml:mi>P</mml:mi><mml:mi>r</mml:mi><mml:mrow><mml:mo>[</mml:mo><mml:msub><mml:mi>&#1013;</mml:mi><mml:msub><mml:mi mathvariant="script">B</mml:mi><mml:mn>1</mml:mn></mml:msub></mml:msub><mml:mo>]</mml:mo></mml:mrow><mml:mo>=</mml:mo><mml:mi>P</mml:mi><mml:mi>r</mml:mi><mml:mrow><mml:mo>[</mml:mo><mml:msub><mml:mi>E</mml:mi><mml:mn>1</mml:mn></mml:msub><mml:mo>&#8743;</mml:mo><mml:msub><mml:mi>E</mml:mi><mml:mn>2</mml:mn></mml:msub><mml:mo>&#8743;</mml:mo><mml:msub><mml:mi>E</mml:mi><mml:mn>3</mml:mn></mml:msub><mml:mo>]</mml:mo></mml:mrow><mml:mo>=</mml:mo><mml:mi>P</mml:mi><mml:mi>r</mml:mi><mml:mrow><mml:mo>[</mml:mo><mml:msub><mml:mi>E</mml:mi><mml:mn>1</mml:mn></mml:msub><mml:mo>]</mml:mo></mml:mrow><mml:mi>P</mml:mi><mml:mi>r</mml:mi><mml:mrow><mml:mo>[</mml:mo><mml:msub><mml:mi>E</mml:mi><mml:mn>2</mml:mn></mml:msub><mml:mo>|</mml:mo><mml:msub><mml:mi>E</mml:mi><mml:mn>1</mml:mn></mml:msub><mml:mo>]</mml:mo></mml:mrow><mml:mi>P</mml:mi><mml:mi>r</mml:mi><mml:mrow><mml:mo>[</mml:mo><mml:msub><mml:mi>E</mml:mi><mml:mn>3</mml:mn></mml:msub><mml:mo>|</mml:mo><mml:msub><mml:mi>E</mml:mi><mml:mn>1</mml:mn></mml:msub><mml:mo>&#8743;</mml:mo><mml:msub><mml:mi>E</mml:mi><mml:mn>2</mml:mn></mml:msub><mml:mo>]</mml:mo></mml:mrow></mml:mrow></mml:mrow></mml:math></inline-formula>. Furthermore, we have <inline-formula><mml:math id="mm710" overflow="scroll"><mml:mrow><mml:mrow><mml:mi>P</mml:mi><mml:mi>r</mml:mi><mml:mrow><mml:mo>[</mml:mo><mml:msub><mml:mi>E</mml:mi><mml:mn>1</mml:mn></mml:msub><mml:mo>]</mml:mo></mml:mrow><mml:mo>&#8805;</mml:mo><mml:msup><mml:mrow><mml:mo>(</mml:mo><mml:mrow><mml:mn>1</mml:mn><mml:mo>&#8722;</mml:mo><mml:mstyle scriptlevel="0" displaystyle="true"><mml:mfrac><mml:mn>1</mml:mn><mml:msub><mml:mi>Q</mml:mi><mml:mrow><mml:mi>v</mml:mi><mml:mi>r</mml:mi></mml:mrow></mml:msub></mml:mfrac></mml:mstyle></mml:mrow><mml:mo>)</mml:mo></mml:mrow><mml:mrow><mml:mo>(</mml:mo><mml:msub><mml:mi>Q</mml:mi><mml:mrow><mml:mi>r</mml:mi><mml:mi>v</mml:mi><mml:mi>s</mml:mi></mml:mrow></mml:msub><mml:mo>+</mml:mo><mml:msub><mml:mi>Q</mml:mi><mml:mrow><mml:mi>s</mml:mi><mml:mi>i</mml:mi><mml:mi>g</mml:mi></mml:mrow></mml:msub><mml:mo>+</mml:mo><mml:mn>1</mml:mn><mml:mo>)</mml:mo></mml:mrow></mml:msup></mml:mrow></mml:mrow></mml:math></inline-formula>, <inline-formula><mml:math id="mm711" overflow="scroll"><mml:mrow><mml:mrow><mml:mi>P</mml:mi><mml:mi>r</mml:mi><mml:mrow><mml:mo>[</mml:mo><mml:msub><mml:mi>E</mml:mi><mml:mn>2</mml:mn></mml:msub><mml:mo>|</mml:mo><mml:msub><mml:mi>E</mml:mi><mml:mn>1</mml:mn></mml:msub><mml:mo>]</mml:mo></mml:mrow><mml:mo>&#8805;</mml:mo><mml:mstyle scriptlevel="0" displaystyle="true"><mml:mfrac><mml:mn>1</mml:mn><mml:msub><mml:mi>Q</mml:mi><mml:mrow><mml:mi>v</mml:mi><mml:mi>r</mml:mi></mml:mrow></mml:msub></mml:mfrac></mml:mstyle></mml:mrow></mml:mrow></mml:math></inline-formula>, where <inline-formula><mml:math id="mm712" overflow="scroll"><mml:mrow><mml:msub><mml:mi>Q</mml:mi><mml:mrow><mml:mi>v</mml:mi><mml:mi>r</mml:mi></mml:mrow></mml:msub></mml:mrow></mml:math></inline-formula> denotes the times of Vehicle Registration Query, <inline-formula><mml:math id="mm713" overflow="scroll"><mml:mrow><mml:msub><mml:mi>Q</mml:mi><mml:mrow><mml:mi>r</mml:mi><mml:mi>v</mml:mi><mml:mi>s</mml:mi></mml:mrow></mml:msub></mml:mrow></mml:math></inline-formula> denotes the times of Reveal Vehicle Secret Query, and <inline-formula><mml:math id="mm714" overflow="scroll"><mml:mrow><mml:msub><mml:mi>Q</mml:mi><mml:mrow><mml:mi>s</mml:mi><mml:mi>i</mml:mi><mml:mi>g</mml:mi></mml:mrow></mml:msub></mml:mrow></mml:math></inline-formula> denotes the times of Sign Query.</p><p>According to the Forking Lemma, we have <inline-formula><mml:math id="mm715" overflow="scroll"><mml:mrow><mml:mrow><mml:mi>P</mml:mi><mml:mi>r</mml:mi><mml:mrow><mml:mo>[</mml:mo><mml:msub><mml:mi>E</mml:mi><mml:mn>3</mml:mn></mml:msub><mml:mo>|</mml:mo><mml:msub><mml:mi>E</mml:mi><mml:mn>1</mml:mn></mml:msub><mml:mo>&#8743;</mml:mo><mml:msub><mml:mi>E</mml:mi><mml:mn>2</mml:mn></mml:msub><mml:mo>]</mml:mo></mml:mrow><mml:mo>&#8805;</mml:mo><mml:mrow><mml:mo>(</mml:mo><mml:mn>1</mml:mn><mml:mo>&#8722;</mml:mo><mml:mstyle scriptlevel="0" displaystyle="true"><mml:mfrac><mml:mn>1</mml:mn><mml:mi>e</mml:mi></mml:mfrac></mml:mstyle><mml:mo>)</mml:mo></mml:mrow><mml:mstyle scriptlevel="0" displaystyle="true"><mml:mfrac><mml:msub><mml:mi>&#1013;</mml:mi><mml:mn>2</mml:mn></mml:msub><mml:mrow><mml:msub><mml:mi>Q</mml:mi><mml:msub><mml:mi>h</mml:mi><mml:mn>3</mml:mn></mml:msub></mml:msub><mml:mo>+</mml:mo><mml:msub><mml:mi>Q</mml:mi><mml:mrow><mml:mi>s</mml:mi><mml:mi>i</mml:mi><mml:mi>g</mml:mi></mml:mrow></mml:msub><mml:mo>+</mml:mo><mml:mn>1</mml:mn></mml:mrow></mml:mfrac></mml:mstyle></mml:mrow></mml:mrow></mml:math></inline-formula>, where <inline-formula><mml:math id="mm716" overflow="scroll"><mml:mrow><mml:msub><mml:mi>&#1013;</mml:mi><mml:mn>2</mml:mn></mml:msub></mml:mrow></mml:math></inline-formula> represents the advantage that <inline-formula><mml:math id="mm717" overflow="scroll"><mml:mrow><mml:msub><mml:mi mathvariant="script">A</mml:mi><mml:mn>2</mml:mn></mml:msub></mml:mrow></mml:math></inline-formula> can successfully forge a signature and <inline-formula><mml:math id="mm718" overflow="scroll"><mml:mrow><mml:msub><mml:mi>Q</mml:mi><mml:msub><mml:mi>h</mml:mi><mml:mn>3</mml:mn></mml:msub></mml:msub></mml:mrow></mml:math></inline-formula> represents the times of <inline-formula><mml:math id="mm719" overflow="scroll"><mml:mrow><mml:msub><mml:mi>H</mml:mi><mml:mn>3</mml:mn></mml:msub></mml:mrow></mml:math></inline-formula> Query.</p><p>Therefore, <inline-formula><mml:math id="mm720" overflow="scroll"><mml:mrow><mml:msub><mml:mi mathvariant="script">B</mml:mi><mml:mn>2</mml:mn></mml:msub></mml:mrow></mml:math></inline-formula>&#8217;s advantage of solving the ECDLP instance is<disp-formula><mml:math id="mm721" display="block" overflow="scroll"><mml:mrow><mml:mtable displaystyle="true"><mml:mtr><mml:mtd columnalign="right"><mml:mrow><mml:mi>P</mml:mi><mml:mi>r</mml:mi><mml:mo>[</mml:mo><mml:msub><mml:mi>&#1013;</mml:mi><mml:msub><mml:mi mathvariant="script">B</mml:mi><mml:mn>2</mml:mn></mml:msub></mml:msub><mml:mo>]</mml:mo></mml:mrow></mml:mtd><mml:mtd columnalign="left"><mml:mrow><mml:mo>=</mml:mo><mml:mi>P</mml:mi><mml:mi>r</mml:mi><mml:mo>[</mml:mo><mml:msub><mml:mi>E</mml:mi><mml:mn>1</mml:mn></mml:msub><mml:mo>&#8743;</mml:mo><mml:msub><mml:mi>E</mml:mi><mml:mn>2</mml:mn></mml:msub><mml:mo>&#8743;</mml:mo><mml:msub><mml:mi>E</mml:mi><mml:mn>3</mml:mn></mml:msub><mml:mo>]</mml:mo></mml:mrow></mml:mtd></mml:mtr><mml:mtr><mml:mtd columnalign="right"><mml:mspace width="1.em"/></mml:mtd><mml:mtd columnalign="left"><mml:mrow><mml:mo>=</mml:mo><mml:mi>P</mml:mi><mml:mi>r</mml:mi><mml:mrow><mml:mo>[</mml:mo><mml:msub><mml:mi>E</mml:mi><mml:mn>1</mml:mn></mml:msub><mml:mo>]</mml:mo></mml:mrow><mml:mi>P</mml:mi><mml:mi>r</mml:mi><mml:mrow><mml:mo>[</mml:mo><mml:msub><mml:mi>E</mml:mi><mml:mn>2</mml:mn></mml:msub><mml:mo>|</mml:mo><mml:msub><mml:mi>E</mml:mi><mml:mn>1</mml:mn></mml:msub><mml:mo>]</mml:mo></mml:mrow><mml:mi>P</mml:mi><mml:mi>r</mml:mi><mml:mrow><mml:mo>[</mml:mo><mml:msub><mml:mi>E</mml:mi><mml:mn>3</mml:mn></mml:msub><mml:mo>|</mml:mo><mml:msub><mml:mi>E</mml:mi><mml:mn>1</mml:mn></mml:msub><mml:mo>&#8743;</mml:mo><mml:msub><mml:mi>E</mml:mi><mml:mn>2</mml:mn></mml:msub><mml:mo>]</mml:mo></mml:mrow></mml:mrow></mml:mtd></mml:mtr><mml:mtr><mml:mtd columnalign="right"><mml:mspace width="1.em"/></mml:mtd><mml:mtd columnalign="left"><mml:mrow><mml:mo>&#8805;</mml:mo><mml:mrow><mml:mo>[</mml:mo><mml:msup><mml:mrow><mml:mo>(</mml:mo><mml:mrow><mml:mn>1</mml:mn><mml:mo>&#8722;</mml:mo><mml:mstyle scriptlevel="0" displaystyle="true"><mml:mfrac><mml:mn>1</mml:mn><mml:msub><mml:mi>Q</mml:mi><mml:mrow><mml:mi>v</mml:mi><mml:mi>r</mml:mi></mml:mrow></mml:msub></mml:mfrac></mml:mstyle></mml:mrow><mml:mo>)</mml:mo></mml:mrow><mml:mrow><mml:mo>(</mml:mo><mml:msub><mml:mi>Q</mml:mi><mml:mrow><mml:mi>r</mml:mi><mml:mi>v</mml:mi><mml:mi>s</mml:mi></mml:mrow></mml:msub><mml:mo>+</mml:mo><mml:msub><mml:mi>Q</mml:mi><mml:mrow><mml:mi>s</mml:mi><mml:mi>i</mml:mi><mml:mi>g</mml:mi></mml:mrow></mml:msub><mml:mo>+</mml:mo><mml:mn>1</mml:mn></mml:mrow></mml:msup><mml:mo>)</mml:mo></mml:mrow><mml:mrow><mml:mo>]</mml:mo></mml:mrow><mml:mstyle scriptlevel="0" displaystyle="true"><mml:mfrac><mml:mn>1</mml:mn><mml:msub><mml:mi>Q</mml:mi><mml:mrow><mml:mi>v</mml:mi><mml:mi>r</mml:mi></mml:mrow></mml:msub></mml:mfrac></mml:mstyle><mml:mrow><mml:mo>(</mml:mo><mml:mn>1</mml:mn><mml:mo>&#8722;</mml:mo><mml:mstyle scriptlevel="0" displaystyle="true"><mml:mfrac><mml:mn>1</mml:mn><mml:mi>e</mml:mi></mml:mfrac></mml:mstyle><mml:mo>)</mml:mo></mml:mrow><mml:mstyle scriptlevel="0" displaystyle="true"><mml:mfrac><mml:msub><mml:mi>&#1013;</mml:mi><mml:mn>2</mml:mn></mml:msub><mml:mrow><mml:msub><mml:mi>Q</mml:mi><mml:msub><mml:mi>h</mml:mi><mml:mn>3</mml:mn></mml:msub></mml:msub><mml:mo>+</mml:mo><mml:msub><mml:mi>Q</mml:mi><mml:mrow><mml:mi>s</mml:mi><mml:mi>i</mml:mi><mml:mi>g</mml:mi></mml:mrow></mml:msub><mml:mo>+</mml:mo><mml:mn>1</mml:mn></mml:mrow></mml:mfrac></mml:mstyle></mml:mrow></mml:mtd></mml:mtr><mml:mtr><mml:mtd columnalign="right"><mml:mspace width="1.em"/></mml:mtd><mml:mtd columnalign="left"><mml:mrow><mml:mo>&#8805;</mml:mo><mml:mstyle scriptlevel="0" displaystyle="true"><mml:mfrac><mml:mrow><mml:mrow><mml:mo>(</mml:mo><mml:mi>e</mml:mi><mml:mo>&#8722;</mml:mo><mml:mn>1</mml:mn><mml:mo>)</mml:mo></mml:mrow><mml:msub><mml:mi>&#1013;</mml:mi><mml:mn>2</mml:mn></mml:msub></mml:mrow><mml:mrow><mml:msup><mml:mi>e</mml:mi><mml:mn>2</mml:mn></mml:msup><mml:mo>&#183;</mml:mo><mml:msub><mml:mi>Q</mml:mi><mml:mrow><mml:mi>v</mml:mi><mml:mi>r</mml:mi></mml:mrow></mml:msub><mml:mrow><mml:mo>(</mml:mo><mml:msub><mml:mi>Q</mml:mi><mml:msub><mml:mi>h</mml:mi><mml:mn>3</mml:mn></mml:msub></mml:msub><mml:mo>+</mml:mo><mml:msub><mml:mi>Q</mml:mi><mml:mrow><mml:mi>s</mml:mi><mml:mi>i</mml:mi><mml:mi>g</mml:mi></mml:mrow></mml:msub><mml:mo>+</mml:mo><mml:mn>1</mml:mn><mml:mo>)</mml:mo><mml:mo>)</mml:mo></mml:mrow></mml:mrow></mml:mfrac></mml:mstyle></mml:mrow></mml:mtd></mml:mtr></mml:mtable></mml:mrow></mml:math></disp-formula></p><p>Thus, if there exists an adversary <inline-formula><mml:math id="mm722" overflow="scroll"><mml:mrow><mml:msub><mml:mi mathvariant="script">A</mml:mi><mml:mn>2</mml:mn></mml:msub></mml:mrow></mml:math></inline-formula> who can successfully forge a signature with advantage <inline-formula><mml:math id="mm723" overflow="scroll"><mml:mrow><mml:msub><mml:mi>&#1013;</mml:mi><mml:mn>2</mml:mn></mml:msub></mml:mrow></mml:math></inline-formula>, then <inline-formula><mml:math id="mm724" overflow="scroll"><mml:mrow><mml:msub><mml:mi mathvariant="script">B</mml:mi><mml:mn>2</mml:mn></mml:msub></mml:mrow></mml:math></inline-formula> can output the solution to the ECDLP instance with probability <inline-formula><mml:math id="mm725" overflow="scroll"><mml:mrow><mml:mstyle scriptlevel="0" displaystyle="true"><mml:mfrac><mml:mrow><mml:mrow><mml:mo>(</mml:mo><mml:mi>e</mml:mi><mml:mo>&#8722;</mml:mo><mml:mn>1</mml:mn><mml:mo>)</mml:mo></mml:mrow><mml:msub><mml:mi>&#1013;</mml:mi><mml:mn>2</mml:mn></mml:msub></mml:mrow><mml:mrow><mml:msup><mml:mi>e</mml:mi><mml:mn>2</mml:mn></mml:msup><mml:mo>&#183;</mml:mo><mml:msub><mml:mi>Q</mml:mi><mml:mrow><mml:mi>v</mml:mi><mml:mi>r</mml:mi></mml:mrow></mml:msub><mml:mrow><mml:mo>(</mml:mo><mml:msub><mml:mi>Q</mml:mi><mml:msub><mml:mi>h</mml:mi><mml:mn>3</mml:mn></mml:msub></mml:msub><mml:mo>+</mml:mo><mml:msub><mml:mi>Q</mml:mi><mml:mrow><mml:mi>s</mml:mi><mml:mi>i</mml:mi><mml:mi>g</mml:mi></mml:mrow></mml:msub><mml:mo>+</mml:mo><mml:mn>1</mml:mn><mml:mo>)</mml:mo><mml:mo>)</mml:mo></mml:mrow></mml:mrow></mml:mfrac></mml:mstyle></mml:mrow></mml:math></inline-formula>. &#9633;</p></statement></sec><sec id="sec5dot2-sensors-25-05441"><title>5.2. Security Features</title><p>In particular, our CLS scheme satisfies the following security objectives: message authenticity and integrity, anonymity, traceability, revocability, and resistance against replay and MITM attacks.</p><sec id="sec5dot2dot1-sensors-25-05441"><title>5.2.1. Message Authenticity and Integrity</title><p>Based on the existential unforgeability proof presented above, it is computationally infeasible for either Type-I or Type-II adversaries to forge a valid signature. Furthermore, since the corresponding identifier update secrets of revoked users are no longer included in <inline-formula><mml:math id="mm726" overflow="scroll"><mml:mrow><mml:mo>&#937;</mml:mo></mml:mrow></mml:math></inline-formula>, no revoked user can generate a valid signature with any SV due to the inability to extract the latest group identifier <italic toggle="yes">z</italic>. Consequently, our proposed scheme ensures both the authenticity and integrity of the transmitted message.</p></sec><sec id="sec5dot2dot2-sensors-25-05441"><title>5.2.2. Anonymity</title><p>In our proposed scheme, the identities utilized by vehicles and users in the authentication process are pseudonyms generated based on their real identities and TA&#8217;s secret key <italic toggle="yes">t</italic>. Consequently, no adversary can obtain the real identity of any entity without access to TA&#8217;s secret key. Hence, our proposed scheme achieves anonymity.</p></sec><sec id="sec5dot2dot3-sensors-25-05441"><title>5.2.3. Traceability</title><p>When emergencies occur, TA can reveal the real identity of any entity by calculating <inline-formula><mml:math id="mm727" overflow="scroll"><mml:mrow><mml:mrow><mml:msub><mml:mi mathvariant="italic">VID</mml:mi><mml:mi>i</mml:mi></mml:msub><mml:mo>=</mml:mo><mml:msub><mml:mi mathvariant="italic">PVID</mml:mi><mml:mi>i</mml:mi></mml:msub><mml:mo>&#8853;</mml:mo><mml:msub><mml:mi>H</mml:mi><mml:mn>0</mml:mn></mml:msub><mml:mrow><mml:mo>(</mml:mo><mml:mi>t</mml:mi><mml:msub><mml:mi>R</mml:mi><mml:mi>j</mml:mi></mml:msub><mml:mo>,</mml:mo><mml:msub><mml:mi>T</mml:mi><mml:mi>i</mml:mi></mml:msub><mml:mo>)</mml:mo></mml:mrow></mml:mrow></mml:mrow></mml:math></inline-formula> or <inline-formula><mml:math id="mm728" overflow="scroll"><mml:mrow><mml:mrow><mml:msub><mml:mi mathvariant="italic">UID</mml:mi><mml:mi>i</mml:mi></mml:msub><mml:mo>=</mml:mo><mml:msub><mml:mi mathvariant="italic">PID</mml:mi><mml:mi>i</mml:mi></mml:msub><mml:mo>&#8853;</mml:mo><mml:msub><mml:mi>H</mml:mi><mml:mn>0</mml:mn></mml:msub><mml:mrow><mml:mo>(</mml:mo><mml:mi>&#965;</mml:mi></mml:mrow><mml:msub><mml:mi>T</mml:mi><mml:mrow><mml:mi>p</mml:mi><mml:mi>u</mml:mi><mml:mi>b</mml:mi></mml:mrow></mml:msub><mml:mo>,</mml:mo><mml:msub><mml:mi>&#952;</mml:mi><mml:mi>j</mml:mi></mml:msub><mml:mrow><mml:mo>|</mml:mo><mml:mo>|</mml:mo></mml:mrow><mml:msub><mml:mi>T</mml:mi><mml:mi>j</mml:mi></mml:msub><mml:mrow><mml:mo>)</mml:mo></mml:mrow></mml:mrow></mml:mrow></mml:math></inline-formula>. Thus, our proposed scheme meets the requirement of traceability.</p></sec><sec id="sec5dot2dot4-sensors-25-05441"><title>5.2.4. Revocability</title><p>In the event of a user with unusual behaviors, it is imperative for TA to promptly revoke the user&#8217;s ability to process authentication within the system. By updating the group identifier <italic toggle="yes">z</italic> and distributing it through the application of the Chinese Remainder Theorem, only vehicles authenticated with the current legitimate users can generate valid signatures and perform the verification process. Thus, our proposed scheme effectively supports the revocation feature.</p></sec><sec id="sec5dot2dot5-sensors-25-05441"><title>5.2.5. Resistance Against Replay Attacks</title><p>In our scheme, the messages transmitted during the signing and verification processes all contain timestamps. Any message that fails to meet the freshness requirements will be rejected. Therefore, our scheme is capable of resisting replay attacks.</p></sec><sec id="sec5dot2dot6-sensors-25-05441"><title>5.2.6. Resistance Against MITM Attacks</title><p>To launch a man-in-the-middle (MITM) attack, an adversary would first need to forge a valid signature; otherwise, it would not be able to modify the signature it captures. Moreover, based on the existential unforgeability proof provided above, neither Type-I nor Type-II adversaries can forge a valid signature. Therefore, our proposed scheme is resistant to MITM attacks.</p></sec></sec></sec><sec id="sec6-sensors-25-05441"><title>6. Performance Evaluation</title><p>In this section, we provide the performance comparison between our proposed scheme and the related schemes [<xref rid="B48-sensors-25-05441" ref-type="bibr">48</xref>,<xref rid="B49-sensors-25-05441" ref-type="bibr">49</xref>,<xref rid="B50-sensors-25-05441" ref-type="bibr">50</xref>,<xref rid="B51-sensors-25-05441" ref-type="bibr">51</xref>,<xref rid="B52-sensors-25-05441" ref-type="bibr">52</xref>,<xref rid="B53-sensors-25-05441" ref-type="bibr">53</xref>,<xref rid="B54-sensors-25-05441" ref-type="bibr">54</xref>]. Given that practical communications among entities are established over wireless channels, necessitating timely and lightweight information transmission, our evaluation primarily focuses on the calculation time cost and information payload size. Specifically, our evaluation encompasses four key aspects: functional properties, computational overhead, communication overhead, and the revocation feature.</p><sec id="sec6dot1-sensors-25-05441"><title>6.1. Experiment Environment</title><p>Our experiments are conducted on a Lenovo personal computer (Lenovo Group Ltd., Beijing, China) equipped with an Intel Core i5-9500T 2.20 GHz CPU and 8 GB of RAM. The standard open-source MIRACL Crypto SDK is employed on the Ubuntu 22.04 operating system to implement the cryptographic operations, with the security parameter <inline-formula><mml:math id="mm729" overflow="scroll"><mml:mrow><mml:mi>&#955;</mml:mi></mml:mrow></mml:math></inline-formula> set to 128 bits to meet the required security standards. The bilinear pairing operations for pairing-based schemes are performed over a Tate pairing-based curve with an embedding degree of 2, while the scalar operations for ECC-based schemes are executed over the secp256r1 curve. The measured results of the operation time cost are presented in <xref rid="sensors-25-05441-t003" ref-type="table">Table 3</xref>.</p></sec><sec id="sec6dot2-sensors-25-05441"><title>6.2. Functional Properties</title><p>The comparison results of the functionalities of our proposed scheme with other state-of-the-art relatives are illustrated in <xref rid="sensors-25-05441-t004" ref-type="table">Table 4</xref>. While the scheme proposed in [<xref rid="B48-sensors-25-05441" ref-type="bibr">48</xref>] achieves unforgeability, its reliance on bilinear pairings incurs substantial computational overhead. Regarding ECC-based schemes, though the schemes proposed in [<xref rid="B49-sensors-25-05441" ref-type="bibr">49</xref>,<xref rid="B50-sensors-25-05441" ref-type="bibr">50</xref>] support revocation, they overlook the need for a decoupled user authentication phase. The scheme proposed in [<xref rid="B54-sensors-25-05441" ref-type="bibr">54</xref>] utilizes passwords and biometric data to realize the authentication processes for users, but it is based on individual relationships between users and vehicles, which lacks the flexibility required in rental scenarios. In contrast, our scheme utilizes the Chinese Remainder Theorem to achieve user revocation. Furthermore, the fuzzy extractor and category identifier mechanism allow our scheme to support both user decoupling and category-range selective authentication. Hence, our scheme demonstrates superior performance under the smart car-sharing situations.</p></sec><sec id="sec6dot3-sensors-25-05441"><title>6.3. Computational Overhead</title><p>To conduct a comprehensive evaluation, we assess the computational overhead of the schemes by analyzing the time cost associated with signature generation and verification, with the results detailed in <xref rid="sensors-25-05441-t005" ref-type="table">Table 5</xref> and <xref rid="sensors-25-05441-f007" ref-type="fig">Figure 7</xref>.</p><p>For our scheme, the signature generation process involves one scalar multiplication operation and two general secure hash operations, and the computational cost is <inline-formula><mml:math id="mm730" overflow="scroll"><mml:mrow><mml:mrow><mml:msub><mml:mi>T</mml:mi><mml:mrow><mml:mi>e</mml:mi><mml:mi>m</mml:mi></mml:mrow></mml:msub><mml:mo>+</mml:mo><mml:mn>2</mml:mn><mml:msub><mml:mi>T</mml:mi><mml:mi>h</mml:mi></mml:msub><mml:mo>=</mml:mo><mml:mn>2.634</mml:mn></mml:mrow></mml:mrow></mml:math></inline-formula> ms. As for signature verification, our proposed scheme requires four ECC scalar multiplication operations, four ECC point addition operations, and four general secure hash operations, which cost <inline-formula><mml:math id="mm731" overflow="scroll"><mml:mrow><mml:mrow><mml:mn>4</mml:mn><mml:msub><mml:mi>T</mml:mi><mml:mrow><mml:mi>e</mml:mi><mml:mi>m</mml:mi></mml:mrow></mml:msub><mml:mo>+</mml:mo><mml:mn>4</mml:mn><mml:msub><mml:mi>T</mml:mi><mml:mrow><mml:mi>e</mml:mi><mml:mi>a</mml:mi></mml:mrow></mml:msub><mml:mo>+</mml:mo><mml:mn>4</mml:mn><mml:msub><mml:mi>T</mml:mi><mml:mi>h</mml:mi></mml:msub><mml:mo>=</mml:mo><mml:mn>10.604</mml:mn></mml:mrow></mml:mrow></mml:math></inline-formula> ms. Based on the evaluation, our scheme demonstrates competitive computational efficiency compared with other related schemes. Moreover, our scheme offers additional functionalities, including category-range selection when performing authentication between vehicles and users, as well as the feature of revocation. Therefore, it is reasonable to conclude that our scheme demonstrates outstanding performance in terms of computational overhead.</p></sec><sec id="sec6dot4-sensors-25-05441"><title>6.4. Communication Overhead</title><p>In our evaluation, we measure the communication overhead of the related schemes based on the length of the transmitted signature tuples. To meet the requirements of the security parameter, we set the size of elements in <inline-formula><mml:math id="mm732" overflow="scroll"><mml:mrow><mml:msub><mml:mi mathvariant="double-struck">G</mml:mi><mml:mn>1</mml:mn></mml:msub></mml:mrow></mml:math></inline-formula> to 384 bytes, the size of elements in <inline-formula><mml:math id="mm733" overflow="scroll"><mml:mrow><mml:mi mathvariant="double-struck">G</mml:mi></mml:mrow></mml:math></inline-formula> to 64 bytes, and the size of elements in <inline-formula><mml:math id="mm734" overflow="scroll"><mml:mrow><mml:msubsup><mml:mi mathvariant="double-struck">Z</mml:mi><mml:mi>q</mml:mi><mml:mo>&#8727;</mml:mo></mml:msubsup></mml:mrow></mml:math></inline-formula> to 32 bytes. Considering schemes implying timestamps to resist replay attacks, we set the size of the timestamps to 4 bytes. The comparison results are presented in <xref rid="sensors-25-05441-t005" ref-type="table">Table 5</xref> and <xref rid="sensors-25-05441-f008" ref-type="fig">Figure 8</xref>.</p><p>In our proposed scheme, the communication overhead for a signature is <inline-formula><mml:math id="mm735" overflow="scroll"><mml:mrow><mml:mrow><mml:mrow><mml:mo>|</mml:mo><mml:mi mathvariant="double-struck">G</mml:mi><mml:mo>|</mml:mo><mml:mo>+</mml:mo><mml:mn>2</mml:mn><mml:mo>|</mml:mo></mml:mrow><mml:msubsup><mml:mi mathvariant="double-struck">Z</mml:mi><mml:mi>q</mml:mi><mml:mo>&#8727;</mml:mo></mml:msubsup><mml:mrow><mml:mo>|</mml:mo><mml:mo>+</mml:mo><mml:mo>|</mml:mo><mml:mi>T</mml:mi><mml:mo>|</mml:mo></mml:mrow><mml:mo>=</mml:mo><mml:mn>132</mml:mn></mml:mrow></mml:mrow></mml:math></inline-formula> bytes. As demonstrated in <xref rid="sensors-25-05441-t005" ref-type="table">Table 5</xref> and <xref rid="sensors-25-05441-f004" ref-type="fig">Figure 4</xref>, our scheme is superior to the schemes in [<xref rid="B48-sensors-25-05441" ref-type="bibr">48</xref>,<xref rid="B54-sensors-25-05441" ref-type="bibr">54</xref>] and is at the same low overhead level as the schemes in [<xref rid="B49-sensors-25-05441" ref-type="bibr">49</xref>,<xref rid="B51-sensors-25-05441" ref-type="bibr">51</xref>,<xref rid="B52-sensors-25-05441" ref-type="bibr">52</xref>,<xref rid="B53-sensors-25-05441" ref-type="bibr">53</xref>]. Moreover, while maintaining communication efficiency, our proposed scheme realizes enhanced functionality that increases its practicality in real-world scenarios. Therefore, our scheme outperforms the related scheme in the field of communication overhead.</p></sec><sec id="sec6dot5-sensors-25-05441"><title>6.5. Revocation Feature</title><p><xref rid="sensors-25-05441-t006" ref-type="table">Table 6</xref> presents a comparative analysis of the revocation feature of our proposed scheme against related schemes. Specifically, the schemes in [<xref rid="B48-sensors-25-05441" ref-type="bibr">48</xref>,<xref rid="B51-sensors-25-05441" ref-type="bibr">51</xref>,<xref rid="B53-sensors-25-05441" ref-type="bibr">53</xref>,<xref rid="B54-sensors-25-05441" ref-type="bibr">54</xref>] lack the functionality of revocation. Meanwhile, the schemes in [<xref rid="B8-sensors-25-05441" ref-type="bibr">8</xref>,<xref rid="B52-sensors-25-05441" ref-type="bibr">52</xref>] implement revocation through the use of revocation lists. However, this approach inherently incurs a linear increase in overhead as the system scales and the number of entities grows. Likewise, the revocation mechanism in [<xref rid="B50-sensors-25-05441" ref-type="bibr">50</xref>] requires synchronization with the blockchain database, introducing additional latency while still exhibiting linear growth in resource consumption.</p><p>In contrast, our proposed scheme leverages the CRT and achieves revocation by broadcasting the group identifier through public channels, thereby ensuring that revocation efficiency remains independent of system scale. This inherent scalability makes our scheme particularly suitable for large-scale applications.</p></sec></sec><sec sec-type="conclusions" id="sec7-sensors-25-05441"><title>7. Conclusions</title><p>In this paper, we introduced an enhanced certificateless authentication scheme tailored for smart car-sharing environments. By incorporating biometric information and leveraging the Chinese Remainder Theorem for user membership management, our scheme provides a lightweight, decoupled, and fine-grained authentication mechanism between users and vehicles, eliminating the need for user-side computation. The implementation of category identifiers further enhances flexibility, allowing users to access any vehicle within a designated class, which is a feature essential for the dynamic nature of practical car-sharing. A formal security analysis proves our scheme is secure against both Type-I and Type-II adversaries under the random oracle model. Furthermore, performance evaluations demonstrate that our scheme achieves competitive efficiency while delivering significant practical functionalities. Future work will focus on extending this framework to multi-domain environments and developing practical cross-domain authentication protocols.</p></sec></body><back><fn-group><fn><p><bold>Disclaimer/Publisher&#8217;s Note:</bold> The statements, opinions and data contained in all publications are solely those of the individual author(s) and contributor(s) and not of MDPI and/or the editor(s). MDPI and/or the editor(s) disclaim responsibility for any injury to people or property resulting from any ideas, methods, instructions or products referred to in the content.</p></fn></fn-group><notes><title>Author Contributions</title><p>Conceptualization, Z.S. and X.K.; methodology, X.K.; validation, X.K. and T.Y.; formal analysis, X.K.; writing&#8212;original draft preparation, X.K.; writing&#8212;review and editing, Z.S., X.K. and T.Y.; visualization, X.K.; supervision, Z.S.; project administration, Z.S.; funding acquisition, Z.S. All authors have read and agreed to the published version of the manuscript.</p></notes><notes><title>Institutional Review Board Statement</title><p>Not applicable.</p></notes><notes><title>Informed Consent Statement</title><p>Not applicable.</p></notes><notes notes-type="data-availability"><title>Data Availability Statement</title><p>Data are contained within the article.</p></notes><notes notes-type="COI-statement"><title>Conflicts of Interest</title><p>The authors declare no conflicts of interest.</p></notes><ref-list><title>References</title><ref id="B1-sensors-25-05441"><label>1.</label><element-citation publication-type="journal"><person-group person-group-type="author"><name name-style="western"><surname>Rajkumar</surname><given-names>Y.</given-names></name><name name-style="western"><surname>Santhosh Kumar</surname><given-names>S.</given-names></name></person-group><article-title>A comprehensive survey on communication techniques for the realization of intelligent transportation systems in IoT based smart cities</article-title><source>Peer-Peer Netw. Appl.</source><year>2024</year><volume>17</volume><fpage>1263</fpage><lpage>1308</lpage><pub-id pub-id-type="doi">10.1007/s12083-024-01627-9</pub-id></element-citation></ref><ref id="B2-sensors-25-05441"><label>2.</label><element-citation publication-type="journal"><person-group person-group-type="author"><name name-style="western"><surname>Ji</surname><given-names>B.</given-names></name><name name-style="western"><surname>Zhang</surname><given-names>X.</given-names></name><name name-style="western"><surname>Mumtaz</surname><given-names>S.</given-names></name><name name-style="western"><surname>Han</surname><given-names>C.</given-names></name><name name-style="western"><surname>Li</surname><given-names>C.</given-names></name><name name-style="western"><surname>Wen</surname><given-names>H.</given-names></name><name name-style="western"><surname>Wang</surname><given-names>D.</given-names></name></person-group><article-title>Survey on the internet of vehicles: Network architectures and applications</article-title><source>IEEE Commun. Stand. Mag.</source><year>2020</year><volume>4</volume><fpage>34</fpage><lpage>41</lpage><pub-id pub-id-type="doi">10.1109/MCOMSTD.001.1900053</pub-id></element-citation></ref><ref id="B3-sensors-25-05441"><label>3.</label><element-citation publication-type="journal"><person-group person-group-type="author"><name name-style="western"><surname>Karabulut</surname><given-names>M.A.</given-names></name><name name-style="western"><surname>Shah</surname><given-names>A.S.</given-names></name><name name-style="western"><surname>Ilhan</surname><given-names>H.</given-names></name><name name-style="western"><surname>Pathan</surname><given-names>A.S.K.</given-names></name><name name-style="western"><surname>Atiquzzaman</surname><given-names>M.</given-names></name></person-group><article-title>Inspecting VANET with various critical aspects&#8212;A systematic review</article-title><source>Ad Hoc Netw.</source><year>2023</year><volume>150</volume><fpage>103281</fpage><pub-id pub-id-type="doi">10.1016/j.adhoc.2023.103281</pub-id></element-citation></ref><ref id="B4-sensors-25-05441"><label>4.</label><element-citation publication-type="journal"><person-group person-group-type="author"><name name-style="western"><surname>V&#233;lez</surname><given-names>A.M.A.</given-names></name></person-group><article-title>Economic impacts, carbon footprint and rebound effects of car sharing: Scenario analysis assessing business-to-consumer and peer-to-peer car sharing</article-title><source>Sustain. Prod. Consum.</source><year>2023</year><volume>35</volume><fpage>238</fpage><lpage>249</lpage><pub-id pub-id-type="doi">10.1016/j.spc.2022.11.004</pub-id></element-citation></ref><ref id="B5-sensors-25-05441"><label>5.</label><element-citation publication-type="webpage"><person-group person-group-type="author"><collab>Statista Market Insights</collab></person-group><article-title>Car-Sharing&#8211;Worldwide</article-title><comment>Available online: <ext-link xmlns:xlink="http://www.w3.org/1999/xlink" xlink:href="https://www.statista.com/outlook/mmo/shared-mobility/car-sharing/worldwide" ext-link-type="uri">https://www.statista.com/outlook/mmo/shared-mobility/car-sharing/worldwide</ext-link></comment><date-in-citation content-type="access-date" iso-8601-date="2025-05-26">(accessed on 26 May 2025)</date-in-citation></element-citation></ref><ref id="B6-sensors-25-05441"><label>6.</label><element-citation publication-type="journal"><person-group person-group-type="author"><name name-style="western"><surname>Huang</surname><given-names>C.</given-names></name><name name-style="western"><surname>Lu</surname><given-names>R.</given-names></name><name name-style="western"><surname>Ni</surname><given-names>J.</given-names></name><name name-style="western"><surname>Shen</surname><given-names>X.</given-names></name></person-group><article-title>DAPA: A decentralized, accountable, and privacy-preserving architecture for car sharing services</article-title><source>IEEE Trans. Veh. Technol.</source><year>2020</year><volume>69</volume><fpage>4869</fpage><lpage>4882</lpage><pub-id pub-id-type="doi">10.1109/TVT.2020.2980777</pub-id></element-citation></ref><ref id="B7-sensors-25-05441"><label>7.</label><element-citation publication-type="journal"><person-group person-group-type="author"><name name-style="western"><surname>Liu</surname><given-names>Y.</given-names></name><name name-style="western"><surname>He</surname><given-names>D.</given-names></name><name name-style="western"><surname>Bao</surname><given-names>Z.</given-names></name><name name-style="western"><surname>Luo</surname><given-names>M.</given-names></name><name name-style="western"><surname>Peng</surname><given-names>C.</given-names></name></person-group><article-title>PEACS: A Privacy-Enhancing and Accountable Car Sharing System</article-title><source>IEEE Internet Things J.</source><year>2024</year><volume>11</volume><fpage>16422</fpage><lpage>16435</lpage><pub-id pub-id-type="doi">10.1109/JIOT.2024.3353458</pub-id></element-citation></ref><ref id="B8-sensors-25-05441"><label>8.</label><element-citation publication-type="journal"><person-group person-group-type="author"><name name-style="western"><surname>Zhu</surname><given-names>D.</given-names></name><name name-style="western"><surname>Guan</surname><given-names>Y.</given-names></name></person-group><article-title>Secure and Lightweight Conditional Privacy-Preserving Identity Authentication Scheme for VANET</article-title><source>IEEE Sens. J.</source><year>2024</year><volume>24</volume><fpage>35743</fpage><lpage>35756</lpage><pub-id pub-id-type="doi">10.1109/JSEN.2024.3431557</pub-id></element-citation></ref><ref id="B9-sensors-25-05441"><label>9.</label><element-citation publication-type="journal"><person-group person-group-type="author"><name name-style="western"><surname>Yue</surname><given-names>Q.</given-names></name><name name-style="western"><surname>Jiang</surname><given-names>W.</given-names></name><name name-style="western"><surname>Lei</surname><given-names>H.</given-names></name></person-group><article-title>A lightweight certificateless aggregate signature scheme without pairing for VANETs</article-title><source>Sci. Rep.</source><year>2025</year><volume>15</volume><elocation-id>23663</elocation-id><pub-id pub-id-type="doi">10.1038/s41598-025-08656-1</pub-id><pub-id pub-id-type="pmid">40604058</pub-id><pub-id pub-id-type="pmcid">PMC12223204</pub-id></element-citation></ref><ref id="B10-sensors-25-05441"><label>10.</label><element-citation publication-type="journal"><person-group person-group-type="author"><name name-style="western"><surname>Rajkumar</surname><given-names>Y.</given-names></name><name name-style="western"><surname>Kumar</surname><given-names>S.S.</given-names></name></person-group><article-title>An elliptic curve cryptography based certificate-less signature aggregation scheme for efficient authentication in vehicular ad hoc networks</article-title><source>Wirel. Netw.</source><year>2024</year><volume>30</volume><fpage>335</fpage><lpage>362</lpage><pub-id pub-id-type="doi">10.1007/s11276-023-03473-8</pub-id></element-citation></ref><ref id="B11-sensors-25-05441"><label>11.</label><element-citation publication-type="journal"><person-group person-group-type="author"><name name-style="western"><surname>Mundhe</surname><given-names>P.</given-names></name><name name-style="western"><surname>Verma</surname><given-names>S.</given-names></name><name name-style="western"><surname>Venkatesan</surname><given-names>S.</given-names></name></person-group><article-title>A comprehensive survey on authentication and privacy-preserving schemes in VANETs</article-title><source>Comput. Sci. Rev.</source><year>2021</year><volume>41</volume><fpage>100411</fpage><pub-id pub-id-type="doi">10.1016/j.cosrev.2021.100411</pub-id></element-citation></ref><ref id="B12-sensors-25-05441"><label>12.</label><element-citation publication-type="journal"><person-group person-group-type="author"><name name-style="western"><surname>AlMarshoud</surname><given-names>M.</given-names></name><name name-style="western"><surname>Sabir Kiraz</surname><given-names>M.</given-names></name><name name-style="western"><surname>Al-Bayatti</surname><given-names>A.H.</given-names></name></person-group><article-title>Security, privacy, and decentralized trust management in VANETs: A review of current research and future directions</article-title><source>ACM Comput. Surv.</source><year>2024</year><volume>56</volume><fpage>1</fpage><lpage>39</lpage><pub-id pub-id-type="doi">10.1145/3656166</pub-id></element-citation></ref><ref id="B13-sensors-25-05441"><label>13.</label><element-citation publication-type="journal"><person-group person-group-type="author"><name name-style="western"><surname>Wang</surname><given-names>Y.</given-names></name><name name-style="western"><surname>Liu</surname><given-names>Y.</given-names></name><name name-style="western"><surname>Tian</surname><given-names>Y.</given-names></name></person-group><article-title>ISC-CPPA: Improverd-security certificateless conditional privacy-preserving authentication scheme with revocation</article-title><source>IEEE Trans. Veh. Technol.</source><year>2022</year><volume>71</volume><fpage>12304</fpage><lpage>12314</lpage><pub-id pub-id-type="doi">10.1109/TVT.2022.3194060</pub-id></element-citation></ref><ref id="B14-sensors-25-05441"><label>14.</label><element-citation publication-type="journal"><person-group person-group-type="author"><name name-style="western"><surname>Al-Mekhlafi</surname><given-names>Z.G.</given-names></name><name name-style="western"><surname>Al-Janabi</surname><given-names>H.D.K.</given-names></name><name name-style="western"><surname>Al-Shareeda</surname><given-names>M.A.</given-names></name><name name-style="western"><surname>Mohammed</surname><given-names>B.A.</given-names></name><name name-style="western"><surname>Alshudukhi</surname><given-names>J.S.</given-names></name><name name-style="western"><surname>Al-Dhlan</surname><given-names>K.A.</given-names></name></person-group><article-title>Fog computing and blockchain technology based certificateless authentication scheme in 5G-assisted vehicular communication</article-title><source>Peer-Peer Netw. Appl.</source><year>2024</year><volume>17</volume><fpage>3703</fpage><lpage>3721</lpage><pub-id pub-id-type="doi">10.1007/s12083-024-01778-9</pub-id></element-citation></ref><ref id="B15-sensors-25-05441"><label>15.</label><element-citation publication-type="journal"><person-group person-group-type="author"><name name-style="western"><surname>Hou</surname><given-names>Y.</given-names></name><name name-style="western"><surname>Cao</surname><given-names>Y.</given-names></name><name name-style="western"><surname>Xiong</surname><given-names>H.</given-names></name><name name-style="western"><surname>Sun</surname><given-names>Z.</given-names></name><name name-style="western"><surname>Mumtaz</surname><given-names>S.</given-names></name><name name-style="western"><surname>Tian</surname><given-names>D.</given-names></name></person-group><article-title>CASKA-CRT: Chinese remainder theorem empowered certificateless aggregate signcryption scheme with key agreement in IoVs</article-title><source>IEEE Trans. Intell. Veh.</source><year>2024</year><volume>9</volume><fpage>6814</fpage><lpage>6829</lpage><pub-id pub-id-type="doi">10.1109/TIV.2024.3388724</pub-id></element-citation></ref><ref id="B16-sensors-25-05441"><label>16.</label><element-citation publication-type="journal"><person-group person-group-type="author"><name name-style="western"><surname>Raya</surname><given-names>M.</given-names></name><name name-style="western"><surname>Hubaux</surname><given-names>J.P.</given-names></name></person-group><article-title>Securing vehicular ad hoc networks</article-title><source>J. Comput. Secur.</source><year>2007</year><volume>15</volume><fpage>39</fpage><lpage>68</lpage><pub-id pub-id-type="doi">10.3233/JCS-2007-15103</pub-id></element-citation></ref><ref id="B17-sensors-25-05441"><label>17.</label><element-citation publication-type="journal"><person-group person-group-type="author"><name name-style="western"><surname>Sun</surname><given-names>Y.</given-names></name><name name-style="western"><surname>Lu</surname><given-names>R.</given-names></name><name name-style="western"><surname>Lin</surname><given-names>X.</given-names></name><name name-style="western"><surname>Shen</surname><given-names>X.</given-names></name><name name-style="western"><surname>Su</surname><given-names>J.</given-names></name></person-group><article-title>An efficient pseudonymous authentication scheme with strong privacy preservation for vehicular communications</article-title><source>IEEE Trans. Veh. Technol.</source><year>2010</year><volume>59</volume><fpage>3589</fpage><lpage>3603</lpage><pub-id pub-id-type="doi">10.1109/TVT.2010.2051468</pub-id></element-citation></ref><ref id="B18-sensors-25-05441"><label>18.</label><element-citation publication-type="journal"><person-group person-group-type="author"><name name-style="western"><surname>Di</surname><given-names>C.</given-names></name><name name-style="western"><surname>Wu</surname><given-names>W.</given-names></name></person-group><article-title>A Novel Identity-Based Mutual Authentication Scheme for Vehicle Ad Hoc Networks</article-title><source>Wirel. Commun. Mob. Comput.</source><year>2022</year><volume>2022</volume><fpage>7881079</fpage><pub-id pub-id-type="doi">10.1155/2022/7881079</pub-id></element-citation></ref><ref id="B19-sensors-25-05441"><label>19.</label><element-citation publication-type="journal"><person-group person-group-type="author"><name name-style="western"><surname>Umar</surname><given-names>M.</given-names></name><name name-style="western"><surname>Islam</surname><given-names>S.H.</given-names></name><name name-style="western"><surname>Mahmood</surname><given-names>K.</given-names></name><name name-style="western"><surname>Ahmed</surname><given-names>S.</given-names></name><name name-style="western"><surname>Ghaffar</surname><given-names>Z.</given-names></name><name name-style="western"><surname>Saleem</surname><given-names>M.A.</given-names></name></person-group><article-title>Provable secure identity-based anonymous and privacy-preserving inter-vehicular authentication protocol for VANETS using PUF</article-title><source>IEEE Trans. Veh. Technol.</source><year>2021</year><volume>70</volume><fpage>12158</fpage><lpage>12167</lpage><pub-id pub-id-type="doi">10.1109/TVT.2021.3118892</pub-id></element-citation></ref><ref id="B20-sensors-25-05441"><label>20.</label><element-citation publication-type="journal"><person-group person-group-type="author"><name name-style="western"><surname>Li</surname><given-names>Q.</given-names></name><name name-style="western"><surname>Hsu</surname><given-names>C.F.</given-names></name><name name-style="western"><surname>Raymond Choo</surname><given-names>K.K.</given-names></name><name name-style="western"><surname>He</surname><given-names>D.</given-names></name></person-group><article-title>A Provably Secure and Lightweight Identity-Based Two-Party Authenticated Key Agreement Protocol for Vehicular Ad Hoc Networks</article-title><source>Secur. Commun. Netw.</source><year>2019</year><volume>2019</volume><fpage>7871067</fpage><pub-id pub-id-type="doi">10.1155/2019/7871067</pub-id></element-citation></ref><ref id="B21-sensors-25-05441"><label>21.</label><element-citation publication-type="confproc"><person-group person-group-type="author"><name name-style="western"><surname>Al-Riyami</surname><given-names>S.S.</given-names></name><name name-style="western"><surname>Paterson</surname><given-names>K.G.</given-names></name></person-group><article-title>Certificateless public key cryptography</article-title><source>Proceedings of the International Conference on the Theory and Application of Cryptology and Information Security</source><conf-loc>Taipei, Taiwan</conf-loc><conf-date>30 November&#8211;4 December 2003</conf-date><publisher-name>Springer</publisher-name><publisher-loc>Berlin/Heidelberg, Germany</publisher-loc><year>2003</year><fpage>452</fpage><lpage>473</lpage></element-citation></ref><ref id="B22-sensors-25-05441"><label>22.</label><element-citation publication-type="journal"><person-group person-group-type="author"><name name-style="western"><surname>Ma</surname><given-names>K.</given-names></name><name name-style="western"><surname>Zhou</surname><given-names>Y.</given-names></name><name name-style="western"><surname>Wang</surname><given-names>Y.</given-names></name><name name-style="western"><surname>Dong</surname><given-names>C.</given-names></name><name name-style="western"><surname>Xia</surname><given-names>Z.</given-names></name><name name-style="western"><surname>Yang</surname><given-names>B.</given-names></name><name name-style="western"><surname>Zhang</surname><given-names>M.</given-names></name></person-group><article-title>An efficient certificateless signature scheme with provably security and its applications</article-title><source>IEEE Syst. J.</source><year>2023</year><volume>17</volume><fpage>5636</fpage><lpage>5647</lpage><pub-id pub-id-type="doi">10.1109/JSYST.2023.3269597</pub-id></element-citation></ref><ref id="B23-sensors-25-05441"><label>23.</label><element-citation publication-type="journal"><person-group person-group-type="author"><name name-style="western"><surname>Malip</surname><given-names>A.</given-names></name><name name-style="western"><surname>Ng</surname><given-names>S.L.</given-names></name><name name-style="western"><surname>Li</surname><given-names>Q.</given-names></name></person-group><article-title>A certificateless anonymous authenticated announcement scheme in vehicular ad hoc networks</article-title><source>Secur. Commun. Netw.</source><year>2014</year><volume>7</volume><fpage>588</fpage><lpage>601</lpage><pub-id pub-id-type="doi">10.1002/sec.760</pub-id></element-citation></ref><ref id="B24-sensors-25-05441"><label>24.</label><element-citation publication-type="journal"><person-group person-group-type="author"><name name-style="western"><surname>Zhong</surname><given-names>H.</given-names></name><name name-style="western"><surname>Han</surname><given-names>S.</given-names></name><name name-style="western"><surname>Cui</surname><given-names>J.</given-names></name><name name-style="western"><surname>Zhang</surname><given-names>J.</given-names></name><name name-style="western"><surname>Xu</surname><given-names>Y.</given-names></name></person-group><article-title>Privacy-preserving authentication scheme with full aggregation in VANET</article-title><source>Inf. Sci.</source><year>2019</year><volume>476</volume><fpage>211</fpage><lpage>221</lpage><pub-id pub-id-type="doi">10.1016/j.ins.2018.10.021</pub-id></element-citation></ref><ref id="B25-sensors-25-05441"><label>25.</label><element-citation publication-type="journal"><person-group person-group-type="author"><name name-style="western"><surname>Wang</surname><given-names>H.</given-names></name><name name-style="western"><surname>Wang</surname><given-names>L.</given-names></name><name name-style="western"><surname>Zhang</surname><given-names>K.</given-names></name><name name-style="western"><surname>Li</surname><given-names>J.</given-names></name><name name-style="western"><surname>Luo</surname><given-names>Y.</given-names></name></person-group><article-title>A conditional privacy-preserving certificateless aggregate signature scheme in the standard model for VANETs</article-title><source>IEEE Access</source><year>2022</year><volume>10</volume><fpage>15605</fpage><lpage>15618</lpage><pub-id pub-id-type="doi">10.1109/ACCESS.2022.3147595</pub-id></element-citation></ref><ref id="B26-sensors-25-05441"><label>26.</label><element-citation publication-type="journal"><person-group person-group-type="author"><name name-style="western"><surname>Shim</surname><given-names>K.A.</given-names></name></person-group><article-title>Security analysis of conditional privacy-preserving authentication schemes for VANETs</article-title><source>IEEE Access</source><year>2023</year><volume>11</volume><fpage>33956</fpage><lpage>33963</lpage><pub-id pub-id-type="doi">10.1109/ACCESS.2023.3263738</pub-id></element-citation></ref><ref id="B27-sensors-25-05441"><label>27.</label><element-citation publication-type="journal"><person-group person-group-type="author"><name name-style="western"><surname>Zheng</surname><given-names>H.</given-names></name><name name-style="western"><surname>Luo</surname><given-names>M.</given-names></name><name name-style="western"><surname>Zhang</surname><given-names>Y.</given-names></name><name name-style="western"><surname>Peng</surname><given-names>C.</given-names></name><name name-style="western"><surname>Feng</surname><given-names>Q.</given-names></name></person-group><article-title>A security-enhanced pairing-free certificateless aggregate signature for vehicular Ad-Hoc networks</article-title><source>IEEE Syst. J.</source><year>2022</year><volume>17</volume><fpage>3822</fpage><lpage>3833</lpage><pub-id pub-id-type="doi">10.1109/JSYST.2022.3220869</pub-id></element-citation></ref><ref id="B28-sensors-25-05441"><label>28.</label><element-citation publication-type="journal"><person-group person-group-type="author"><name name-style="western"><surname>Cheng</surname><given-names>G.</given-names></name><name name-style="western"><surname>Huang</surname><given-names>J.</given-names></name><name name-style="western"><surname>Wang</surname><given-names>Y.</given-names></name><name name-style="western"><surname>Zhao</surname><given-names>J.</given-names></name><name name-style="western"><surname>Kong</surname><given-names>L.</given-names></name><name name-style="western"><surname>Deng</surname><given-names>S.</given-names></name><name name-style="western"><surname>Yan</surname><given-names>X.</given-names></name></person-group><article-title>Conditional privacy-preserving multi-domain authentication and pseudonym management for 6G-enabled IoV</article-title><source>IEEE Trans. Inf. Forensics Secur.</source><year>2023</year><volume>19</volume><fpage>10206</fpage><lpage>10220</lpage><pub-id pub-id-type="doi">10.1109/TIFS.2023.3314211</pub-id></element-citation></ref><ref id="B29-sensors-25-05441"><label>29.</label><element-citation publication-type="journal"><person-group person-group-type="author"><name name-style="western"><surname>Yin</surname><given-names>D.</given-names></name><name name-style="western"><surname>Gong</surname><given-names>B.</given-names></name></person-group><article-title>A Lightweight Certificateless Mutual Authentication Scheme Based on Signatures for IIoT</article-title><source>IEEE Internet Things J.</source><year>2024</year><volume>11</volume><fpage>26852</fpage><lpage>26865</lpage><pub-id pub-id-type="doi">10.1109/JIOT.2024.3389018</pub-id></element-citation></ref><ref id="B30-sensors-25-05441"><label>30.</label><element-citation publication-type="journal"><person-group person-group-type="author"><name name-style="western"><surname>Lin</surname><given-names>H.T.</given-names></name><name name-style="western"><surname>Jhuang</surname><given-names>W.L.</given-names></name></person-group><article-title>Blockchain-Based Lightweight Certificateless Authenticated Key Agreement Protocol for V2V Communications in IoV</article-title><source>IEEE Internet Things J.</source><year>2024</year><volume>11</volume><fpage>27744</fpage><lpage>27759</lpage><pub-id pub-id-type="doi">10.1109/JIOT.2024.3400320</pub-id></element-citation></ref><ref id="B31-sensors-25-05441"><label>31.</label><element-citation publication-type="journal"><person-group person-group-type="author"><name name-style="western"><surname>Gu</surname><given-names>Y.</given-names></name><name name-style="western"><surname>Shen</surname><given-names>L.</given-names></name><name name-style="western"><surname>Gao</surname><given-names>C.</given-names></name><name name-style="western"><surname>Zhu</surname><given-names>T.</given-names></name></person-group><article-title>Efficient and Secure Certificateless Aggregate Signature Scheme in Vehicle Networks</article-title><source>Netinfo Secur.</source><year>2024</year><volume>24</volume><fpage>188</fpage><lpage>202</lpage></element-citation></ref><ref id="B32-sensors-25-05441"><label>32.</label><element-citation publication-type="journal"><person-group person-group-type="author"><name name-style="western"><surname>Genc</surname><given-names>Y.</given-names></name><name name-style="western"><surname>Aytas</surname><given-names>N.</given-names></name><name name-style="western"><surname>Akkoc</surname><given-names>A.</given-names></name><name name-style="western"><surname>Afacan</surname><given-names>E.</given-names></name><name name-style="western"><surname>Yazgan</surname><given-names>E.</given-names></name></person-group><article-title>ELCPAS: A new efficient lightweight certificateless conditional privacy preserving authentication scheme for IoV</article-title><source>Veh. Commun.</source><year>2023</year><volume>39</volume><fpage>100549</fpage><pub-id pub-id-type="doi">10.1016/j.vehcom.2022.100549</pub-id></element-citation></ref><ref id="B33-sensors-25-05441"><label>33.</label><element-citation publication-type="journal"><person-group person-group-type="author"><name name-style="western"><surname>Ali</surname><given-names>I.</given-names></name><name name-style="western"><surname>Chen</surname><given-names>Y.</given-names></name><name name-style="western"><surname>Ullah</surname><given-names>N.</given-names></name><name name-style="western"><surname>Kumar</surname><given-names>R.</given-names></name><name name-style="western"><surname>He</surname><given-names>W.</given-names></name></person-group><article-title>An efficient and provably secure ECC-based conditional privacy-preserving authentication for vehicle-to-vehicle communication in VANETs</article-title><source>IEEE Trans. Veh. Technol.</source><year>2021</year><volume>70</volume><fpage>1278</fpage><lpage>1291</lpage><pub-id pub-id-type="doi">10.1109/TVT.2021.3050399</pub-id></element-citation></ref><ref id="B34-sensors-25-05441"><label>34.</label><element-citation publication-type="journal"><person-group person-group-type="author"><name name-style="western"><surname>Li</surname><given-names>X.</given-names></name><name name-style="western"><surname>Yin</surname><given-names>X.</given-names></name><name name-style="western"><surname>Ning</surname><given-names>J.</given-names></name></person-group><article-title>RelCLAS: A Reliable Malicious KGC-Resistant Certificateless Aggregate Signature Protocol for Vehicular Ad Hoc Networks</article-title><source>IEEE Internet Things J.</source><year>2023</year><volume>10</volume><fpage>21100</fpage><lpage>21114</lpage><pub-id pub-id-type="doi">10.1109/JIOT.2023.3285402</pub-id></element-citation></ref><ref id="B35-sensors-25-05441"><label>35.</label><element-citation publication-type="journal"><person-group person-group-type="author"><name name-style="western"><surname>Xiong</surname><given-names>W.</given-names></name><name name-style="western"><surname>Wang</surname><given-names>R.</given-names></name><name name-style="western"><surname>Wang</surname><given-names>Y.</given-names></name><name name-style="western"><surname>Zhou</surname><given-names>F.</given-names></name><name name-style="western"><surname>Luo</surname><given-names>X.</given-names></name></person-group><article-title>CPPA-D: Efficient conditional privacy-preserving authentication scheme with double-insurance in VANETs</article-title><source>IEEE Trans. Veh. Technol.</source><year>2021</year><volume>70</volume><fpage>3456</fpage><lpage>3468</lpage><pub-id pub-id-type="doi">10.1109/TVT.2021.3064337</pub-id></element-citation></ref><ref id="B36-sensors-25-05441"><label>36.</label><element-citation publication-type="journal"><person-group person-group-type="author"><name name-style="western"><surname>Gong</surname><given-names>Z.</given-names></name><name name-style="western"><surname>Gao</surname><given-names>T.</given-names></name><name name-style="western"><surname>Guo</surname><given-names>N.</given-names></name></person-group><article-title>PCAS: Cryptanalysis and improvement of pairing-free certificateless aggregate signature scheme with conditional privacy-preserving for VANETs</article-title><source>Ad Hoc Netw.</source><year>2023</year><volume>144</volume><fpage>103134</fpage><pub-id pub-id-type="doi">10.1016/j.adhoc.2023.103134</pub-id></element-citation></ref><ref id="B37-sensors-25-05441"><label>37.</label><element-citation publication-type="journal"><person-group person-group-type="author"><name name-style="western"><surname>Ali</surname><given-names>I.</given-names></name><name name-style="western"><surname>Hassan</surname><given-names>A.</given-names></name><name name-style="western"><surname>Li</surname><given-names>F.</given-names></name></person-group><article-title>Authentication and privacy schemes for vehicular ad hoc networks (VANETs): A survey</article-title><source>Veh. Commun.</source><year>2019</year><volume>16</volume><fpage>45</fpage><lpage>61</lpage><pub-id pub-id-type="doi">10.1016/j.vehcom.2019.02.002</pub-id></element-citation></ref><ref id="B38-sensors-25-05441"><label>38.</label><element-citation publication-type="journal"><person-group person-group-type="author"><name name-style="western"><surname>Wu</surname><given-names>W.</given-names></name><name name-style="western"><surname>Ye</surname><given-names>F.</given-names></name></person-group><article-title>IPCAS: An improved conditional privacy-preserving certificateless aggregate signature scheme without bilinear pairing for VANETs</article-title><source>J. Syst. Archit.</source><year>2024</year><volume>152</volume><fpage>103175</fpage><pub-id pub-id-type="doi">10.1016/j.sysarc.2024.103175</pub-id></element-citation></ref><ref id="B39-sensors-25-05441"><label>39.</label><element-citation publication-type="journal"><person-group person-group-type="author"><name name-style="western"><surname>Paliwal</surname><given-names>S.</given-names></name><name name-style="western"><surname>Cherukuri</surname><given-names>A.K.</given-names></name><name name-style="western"><surname>Gao</surname><given-names>X.Z.</given-names></name></person-group><article-title>Dynamic private Modulus based password conditional privacy preserving authentication and key-agreement protocol for VANET</article-title><source>Wirel. Pers. Commun.</source><year>2022</year><volume>123</volume><fpage>2061</fpage><lpage>2088</lpage><pub-id pub-id-type="doi">10.1007/s11277-021-09228-y</pub-id></element-citation></ref><ref id="B40-sensors-25-05441"><label>40.</label><element-citation publication-type="confproc"><person-group person-group-type="author"><name name-style="western"><surname>Roeschlin</surname><given-names>M.</given-names></name><name name-style="western"><surname>Vaas</surname><given-names>C.</given-names></name><name name-style="western"><surname>Rasmussen</surname><given-names>K.B.</given-names></name><name name-style="western"><surname>Martinovic</surname><given-names>I.</given-names></name></person-group><article-title>Bionyms: Driver-centric message authentication using biometric measurements</article-title><source>Proceedings of the 2018 IEEE Vehicular Networking Conference (VNC)</source><conf-loc>Taipei, Taiwan</conf-loc><conf-date>5&#8211;7 December 2018</conf-date><fpage>1</fpage><lpage>8</lpage></element-citation></ref><ref id="B41-sensors-25-05441"><label>41.</label><element-citation publication-type="journal"><person-group person-group-type="author"><name name-style="western"><surname>Islam</surname><given-names>S.H.</given-names></name><name name-style="western"><surname>Obaidat</surname><given-names>M.S.</given-names></name><name name-style="western"><surname>Vijayakumar</surname><given-names>P.</given-names></name><name name-style="western"><surname>Abdulhay</surname><given-names>E.</given-names></name><name name-style="western"><surname>Li</surname><given-names>F.</given-names></name><name name-style="western"><surname>Reddy</surname><given-names>M.K.C.</given-names></name></person-group><article-title>A robust and efficient password-based conditional privacy preserving authentication and group-key agreement protocol for VANETs</article-title><source>Future Gener. Comput. Syst.</source><year>2018</year><volume>84</volume><fpage>216</fpage><lpage>227</lpage><pub-id pub-id-type="doi">10.1016/j.future.2017.07.002</pub-id></element-citation></ref><ref id="B42-sensors-25-05441"><label>42.</label><element-citation publication-type="journal"><person-group person-group-type="author"><name name-style="western"><surname>Cui</surname><given-names>J.</given-names></name><name name-style="western"><surname>Liu</surname><given-names>X.</given-names></name><name name-style="western"><surname>Zhong</surname><given-names>H.</given-names></name><name name-style="western"><surname>Zhang</surname><given-names>J.</given-names></name><name name-style="western"><surname>Wei</surname><given-names>L.</given-names></name><name name-style="western"><surname>Bolodurina</surname><given-names>I.</given-names></name><name name-style="western"><surname>He</surname><given-names>D.</given-names></name></person-group><article-title>A Practical and Provably Secure Authentication and Key Agreement Scheme for UAV-Assisted VANETs for Emergency Rescue</article-title><source>IEEE Trans. Netw. Sci. Eng.</source><year>2024</year><volume>11</volume><fpage>1454</fpage><lpage>1468</lpage><pub-id pub-id-type="doi">10.1109/TNSE.2023.3323972</pub-id></element-citation></ref><ref id="B43-sensors-25-05441"><label>43.</label><element-citation publication-type="journal"><person-group person-group-type="author"><name name-style="western"><surname>Azees</surname><given-names>M.</given-names></name><name name-style="western"><surname>Rajasekaran</surname><given-names>A.S.</given-names></name><name name-style="western"><surname>Vijayakumar</surname><given-names>P.</given-names></name><name name-style="western"><surname>Karuppiah</surname><given-names>M.</given-names></name></person-group><article-title>Hybrid CMOS Memristor Based Biometric OBU Authentication and Anonymous Mutual Authentication for Secure Communication in Fog-Based VANETs</article-title><source>IEEE Trans. Intell. Transp. Syst.</source><year>2024</year><volume>25</volume><fpage>11117</fpage><lpage>11129</lpage><pub-id pub-id-type="doi">10.1109/TITS.2024.3378724</pub-id></element-citation></ref><ref id="B44-sensors-25-05441"><label>44.</label><element-citation publication-type="journal"><person-group person-group-type="author"><name name-style="western"><surname>Wang</surname><given-names>L.</given-names></name><name name-style="western"><surname>Xu</surname><given-names>J.</given-names></name><name name-style="western"><surname>Qin</surname><given-names>B.</given-names></name><name name-style="western"><surname>Wen</surname><given-names>M.</given-names></name><name name-style="western"><surname>Chen</surname><given-names>K.</given-names></name></person-group><article-title>An Efficient Fuzzy Certificateless Signature-Based Authentication Scheme Using Anonymous Biometric Identities for VANETs</article-title><source>IEEE Trans. Dependable Secur. Comput.</source><year>2025</year><volume>22</volume><fpage>292</fpage><lpage>307</lpage><pub-id pub-id-type="doi">10.1109/TDSC.2024.3392470</pub-id></element-citation></ref><ref id="B45-sensors-25-05441"><label>45.</label><element-citation publication-type="journal"><person-group person-group-type="author"><name name-style="western"><surname>Huang</surname><given-names>X.</given-names></name><name name-style="western"><surname>Mu</surname><given-names>Y.</given-names></name><name name-style="western"><surname>Susilo</surname><given-names>W.</given-names></name><name name-style="western"><surname>Wong</surname><given-names>D.S.</given-names></name><name name-style="western"><surname>Wu</surname><given-names>W.</given-names></name></person-group><article-title>Certificateless signatures: New schemes and security models</article-title><source>Comput. J.</source><year>2012</year><volume>55</volume><fpage>457</fpage><lpage>474</lpage><pub-id pub-id-type="doi">10.1093/comjnl/bxr097</pub-id></element-citation></ref><ref id="B46-sensors-25-05441"><label>46.</label><element-citation publication-type="journal"><person-group person-group-type="author"><name name-style="western"><surname>Pointcheval</surname><given-names>D.</given-names></name><name name-style="western"><surname>Stern</surname><given-names>J.</given-names></name></person-group><article-title>Security arguments for digital signatures and blind signatures</article-title><source>J. Cryptol.</source><year>2000</year><volume>13</volume><fpage>361</fpage><lpage>396</lpage><pub-id pub-id-type="doi">10.1007/s001450010003</pub-id></element-citation></ref><ref id="B47-sensors-25-05441"><label>47.</label><element-citation publication-type="confproc"><person-group person-group-type="author"><name name-style="western"><surname>Bellare</surname><given-names>M.</given-names></name><name name-style="western"><surname>Neven</surname><given-names>G.</given-names></name></person-group><article-title>Multi-signatures in the plain public-key model and a general forking lemma</article-title><source>Proceedings of the 13th ACM Conference on Computer and Communications Security</source><conf-loc>Alexandria, VA, USA</conf-loc><conf-date>30 October&#8211;3 November 2006</conf-date><fpage>390</fpage><lpage>399</lpage></element-citation></ref><ref id="B48-sensors-25-05441"><label>48.</label><element-citation publication-type="journal"><person-group person-group-type="author"><name name-style="western"><surname>Kar</surname><given-names>J.</given-names></name><name name-style="western"><surname>Liu</surname><given-names>X.</given-names></name><name name-style="western"><surname>Li</surname><given-names>F.</given-names></name></person-group><article-title>CL-ASS: An efficient and low-cost certificateless aggregate signature scheme for wireless sensor networks</article-title><source>J. Inf. Secur. Appl.</source><year>2021</year><volume>61</volume><fpage>102905</fpage><pub-id pub-id-type="doi">10.1016/j.jisa.2021.102905</pub-id></element-citation></ref><ref id="B49-sensors-25-05441"><label>49.</label><element-citation publication-type="journal"><person-group person-group-type="author"><name name-style="western"><surname>Zhu</surname><given-names>Y.</given-names></name><name name-style="western"><surname>Zhou</surname><given-names>Y.</given-names></name><name name-style="western"><surname>Wang</surname><given-names>J.</given-names></name><name name-style="western"><surname>Yang</surname><given-names>B.</given-names></name><name name-style="western"><surname>Zhang</surname><given-names>M.</given-names></name></person-group><article-title>A Lightweight Cross-Domain Direct Identity Authentication Protocol for VANETs</article-title><source>IEEE Internet Things J.</source><year>2024</year><volume>11</volume><fpage>37741</fpage><lpage>37757</lpage><pub-id pub-id-type="doi">10.1109/JIOT.2024.3438257</pub-id></element-citation></ref><ref id="B50-sensors-25-05441"><label>50.</label><element-citation publication-type="journal"><person-group person-group-type="author"><name name-style="western"><surname>Liu</surname><given-names>X.</given-names></name><name name-style="western"><surname>Wang</surname><given-names>L.</given-names></name><name name-style="western"><surname>Li</surname><given-names>L.</given-names></name><name name-style="western"><surname>Zhang</surname><given-names>X.</given-names></name><name name-style="western"><surname>Niu</surname><given-names>S.</given-names></name></person-group><article-title>A Certificateless Anonymous Cross-Domain Authentication Scheme Assisted by Blockchain for Internet of Vehicles</article-title><source>Wirel. Commun. Mob. Comput.</source><year>2022</year><volume>2022</volume><fpage>3488977</fpage><pub-id pub-id-type="doi">10.1155/2022/3488977</pub-id></element-citation></ref><ref id="B51-sensors-25-05441"><label>51.</label><element-citation publication-type="journal"><person-group person-group-type="author"><name name-style="western"><surname>Yang</surname><given-names>X.</given-names></name><name name-style="western"><surname>Li</surname><given-names>S.</given-names></name><name name-style="western"><surname>Yang</surname><given-names>L.</given-names></name><name name-style="western"><surname>Du</surname><given-names>X.</given-names></name><name name-style="western"><surname>Wang</surname><given-names>C.</given-names></name></person-group><article-title>Efficient and Security-Enhanced Certificateless Aggregate Signature-Based Authentication Scheme With Conditional Privacy Preservation for VANETs</article-title><source>IEEE Trans. Intell. Transp. Syst.</source><year>2024</year><volume>25</volume><fpage>12256</fpage><lpage>12268</lpage><pub-id pub-id-type="doi">10.1109/TITS.2024.3367925</pub-id></element-citation></ref><ref id="B52-sensors-25-05441"><label>52.</label><element-citation publication-type="journal"><person-group person-group-type="author"><name name-style="western"><surname>Ye</surname><given-names>X.</given-names></name><name name-style="western"><surname>Xu</surname><given-names>G.</given-names></name><name name-style="western"><surname>Cheng</surname><given-names>X.</given-names></name><name name-style="western"><surname>Li</surname><given-names>Y.</given-names></name><name name-style="western"><surname>Qin</surname><given-names>Z.</given-names></name></person-group><article-title>Certificateless-Based Anonymous Authentication and Aggregate Signature Scheme for Vehicular Ad Hoc Networks</article-title><source>Wirel. Commun. Mob. Comput.</source><year>2021</year><volume>2021</volume><fpage>6677137</fpage><pub-id pub-id-type="doi">10.1155/2021/6677137</pub-id></element-citation></ref><ref id="B53-sensors-25-05441"><label>53.</label><element-citation publication-type="journal"><person-group person-group-type="author"><name name-style="western"><surname>Zhu</surname><given-names>F.</given-names></name><name name-style="western"><surname>Yi</surname><given-names>X.</given-names></name><name name-style="western"><surname>Abuadbba</surname><given-names>A.</given-names></name><name name-style="western"><surname>Khalil</surname><given-names>I.</given-names></name><name name-style="western"><surname>Huang</surname><given-names>X.</given-names></name><name name-style="western"><surname>Xu</surname><given-names>F.</given-names></name></person-group><article-title>A security-enhanced certificateless conditional privacy-preserving authentication scheme for vehicular ad hoc networks</article-title><source>IEEE Trans. Intell. Transp. Syst.</source><year>2023</year><volume>24</volume><fpage>10456</fpage><lpage>10466</lpage><pub-id pub-id-type="doi">10.1109/TITS.2023.3275077</pub-id></element-citation></ref><ref id="B54-sensors-25-05441"><label>54.</label><element-citation publication-type="journal"><person-group person-group-type="author"><name name-style="western"><surname>Tian</surname><given-names>J.</given-names></name><name name-style="western"><surname>Wang</surname><given-names>Y.</given-names></name><name name-style="western"><surname>Shen</surname><given-names>Y.</given-names></name></person-group><article-title>A Security-Enhanced Certificateless Anonymous Authentication Scheme with High Computational Efficiency for Mobile Edge Computing</article-title><source>IEEE Trans. Netw. Serv. Manag.</source><year>2025</year><volume>22</volume><fpage>3555</fpage><lpage>3572</lpage><pub-id pub-id-type="doi">10.1109/TNSM.2025.3563637</pub-id></element-citation></ref></ref-list></back><floats-group><fig position="float" id="sensors-25-05441-f001" orientation="portrait"><label>Figure 1</label><caption><p>A general scenario of smart car-sharing.</p></caption><graphic xmlns:xlink="http://www.w3.org/1999/xlink" position="float" orientation="portrait" xlink:href="sensors-25-05441-g001.jpg"/></fig><fig position="float" id="sensors-25-05441-f002" orientation="portrait"><label>Figure 2</label><caption><p>The system model of the proposed scheme.</p></caption><graphic xmlns:xlink="http://www.w3.org/1999/xlink" position="float" orientation="portrait" xlink:href="sensors-25-05441-g002.jpg"/></fig><fig position="float" id="sensors-25-05441-f003" orientation="portrait"><label>Figure 3</label><caption><p>The vehicle registration phase of the proposed scheme.</p></caption><graphic xmlns:xlink="http://www.w3.org/1999/xlink" position="float" orientation="portrait" xlink:href="sensors-25-05441-g003.jpg"/></fig><fig position="float" id="sensors-25-05441-f004" orientation="portrait"><label>Figure 4</label><caption><p>The user registration phase of the proposed scheme.</p></caption><graphic xmlns:xlink="http://www.w3.org/1999/xlink" position="float" orientation="portrait" xlink:href="sensors-25-05441-g004.jpg"/></fig><fig position="float" id="sensors-25-05441-f005" orientation="portrait"><label>Figure 5</label><caption><p>The authentication process of the proposed scheme.</p></caption><graphic xmlns:xlink="http://www.w3.org/1999/xlink" position="float" orientation="portrait" xlink:href="sensors-25-05441-g005.jpg"/></fig><fig position="float" id="sensors-25-05441-f006" orientation="portrait"><label>Figure 6</label><caption><p>The construction of the security reduction process.</p></caption><graphic xmlns:xlink="http://www.w3.org/1999/xlink" position="float" orientation="portrait" xlink:href="sensors-25-05441-g006.jpg"/></fig><fig position="float" id="sensors-25-05441-f007" orientation="portrait"><label>Figure 7</label><caption><p>Comparison of the computational overhead of our proposed scheme with related works [<xref rid="B48-sensors-25-05441" ref-type="bibr">48</xref>,<xref rid="B49-sensors-25-05441" ref-type="bibr">49</xref>,<xref rid="B50-sensors-25-05441" ref-type="bibr">50</xref>,<xref rid="B51-sensors-25-05441" ref-type="bibr">51</xref>,<xref rid="B52-sensors-25-05441" ref-type="bibr">52</xref>,<xref rid="B53-sensors-25-05441" ref-type="bibr">53</xref>,<xref rid="B54-sensors-25-05441" ref-type="bibr">54</xref>]: (<bold>a</bold>) signature generation phase; (<bold>b</bold>) signature verification phase.</p></caption><graphic xmlns:xlink="http://www.w3.org/1999/xlink" position="float" orientation="portrait" xlink:href="sensors-25-05441-g007.jpg"/></fig><fig position="float" id="sensors-25-05441-f008" orientation="portrait"><label>Figure 8</label><caption><p>Comparison of the communication overhead of our proposed scheme with related works [<xref rid="B48-sensors-25-05441" ref-type="bibr">48</xref>,<xref rid="B49-sensors-25-05441" ref-type="bibr">49</xref>,<xref rid="B50-sensors-25-05441" ref-type="bibr">50</xref>,<xref rid="B51-sensors-25-05441" ref-type="bibr">51</xref>,<xref rid="B52-sensors-25-05441" ref-type="bibr">52</xref>,<xref rid="B53-sensors-25-05441" ref-type="bibr">53</xref>,<xref rid="B54-sensors-25-05441" ref-type="bibr">54</xref>].</p></caption><graphic xmlns:xlink="http://www.w3.org/1999/xlink" position="float" orientation="portrait" xlink:href="sensors-25-05441-g008.jpg"/></fig><table-wrap position="float" id="sensors-25-05441-t001" orientation="portrait"><object-id pub-id-type="pii">sensors-25-05441-t001_Table 1</object-id><label>Table 1</label><caption><p>Comparative summary of the existing schemes.</p></caption><table frame="hsides" rules="groups"><thead><tr><th align="center" valign="middle" style="border-bottom:solid thin;border-top:solid thin" rowspan="1" colspan="1">Scheme</th><th align="left" valign="middle" style="border-bottom:solid thin;border-top:solid thin" rowspan="1" colspan="1">Technologies</th><th align="center" valign="middle" style="border-bottom:solid thin;border-top:solid thin" rowspan="1" colspan="1">Unforgeability</th><th align="center" valign="middle" style="border-bottom:solid thin;border-top:solid thin" rowspan="1" colspan="1">GA <sup>a</sup></th><th align="center" valign="middle" style="border-bottom:solid thin;border-top:solid thin" rowspan="1" colspan="1">DB <sup>b</sup></th></tr></thead><tbody><tr><td align="center" valign="middle" rowspan="1" colspan="1">[<xref rid="B33-sensors-25-05441" ref-type="bibr">33</xref>]</td><td align="left" valign="middle" rowspan="1" colspan="1">ECC, Short signature</td><td align="center" valign="middle" rowspan="1" colspan="1">Type II weak</td><td align="center" valign="middle" rowspan="1" colspan="1">&#10005;</td><td align="center" valign="middle" rowspan="1" colspan="1">&#10005;</td></tr><tr><td align="center" valign="middle" rowspan="1" colspan="1">[<xref rid="B34-sensors-25-05441" ref-type="bibr">34</xref>]</td><td align="left" valign="middle" rowspan="1" colspan="1">ECC, Registration-based encryption</td><td align="center" valign="middle" rowspan="1" colspan="1">&#10004;</td><td align="center" valign="middle" rowspan="1" colspan="1">&#10005;</td><td align="center" valign="middle" rowspan="1" colspan="1">&#10005;</td></tr><tr><td align="center" valign="middle" rowspan="1" colspan="1">[<xref rid="B35-sensors-25-05441" ref-type="bibr">35</xref>]</td><td align="left" valign="middle" rowspan="1" colspan="1">ECC, Private key double insurance</td><td align="center" valign="middle" rowspan="1" colspan="1">Type I weak</td><td align="center" valign="middle" rowspan="1" colspan="1">&#10005;</td><td align="center" valign="middle" rowspan="1" colspan="1">&#10005;</td></tr><tr><td align="center" valign="middle" rowspan="1" colspan="1">[<xref rid="B36-sensors-25-05441" ref-type="bibr">36</xref>]</td><td align="left" valign="middle" rowspan="1" colspan="1">ECC, Pseudonym mechanism, Low resource consumption</td><td align="center" valign="middle" rowspan="1" colspan="1">Type I weak</td><td align="center" valign="middle" rowspan="1" colspan="1">&#10005;</td><td align="center" valign="middle" rowspan="1" colspan="1">&#10005;</td></tr><tr><td align="center" valign="middle" rowspan="1" colspan="1">[<xref rid="B41-sensors-25-05441" ref-type="bibr">41</xref>]</td><td align="left" valign="middle" rowspan="1" colspan="1">ECC, Password-based auth., Vehicle membership alteration</td><td align="center" valign="middle" rowspan="1" colspan="1">&#10004;</td><td align="center" valign="middle" rowspan="1" colspan="1">&#10004;</td><td align="center" valign="middle" rowspan="1" colspan="1">&#10005;</td></tr><tr><td align="center" valign="middle" rowspan="1" colspan="1">[<xref rid="B42-sensors-25-05441" ref-type="bibr">42</xref>]</td><td align="left" valign="middle" rowspan="1" colspan="1">Chebyshev chaotic map, Fuzzy verification, Honeywords</td><td align="center" valign="middle" rowspan="1" colspan="1">&#10004;</td><td align="center" valign="middle" rowspan="1" colspan="1">&#10004;</td><td align="center" valign="middle" rowspan="1" colspan="1">&#10005;</td></tr><tr><td align="center" valign="middle" rowspan="1" colspan="1">[<xref rid="B43-sensors-25-05441" ref-type="bibr">43</xref>]</td><td align="left" valign="middle" rowspan="1" colspan="1">Bilinear mapping, CMOS memristor-based auth.</td><td align="center" valign="middle" rowspan="1" colspan="1">&#10004;</td><td align="center" valign="middle" rowspan="1" colspan="1">&#10004;</td><td align="center" valign="middle" rowspan="1" colspan="1">&#10005;</td></tr><tr><td align="center" valign="middle" style="border-bottom:solid thin" rowspan="1" colspan="1">[<xref rid="B44-sensors-25-05441" ref-type="bibr">44</xref>]</td><td align="left" valign="middle" style="border-bottom:solid thin" rowspan="1" colspan="1">ECC, Fuzzy extractor, Biometric-based auth.</td><td align="center" valign="middle" style="border-bottom:solid thin" rowspan="1" colspan="1">&#10004;</td><td align="center" valign="middle" style="border-bottom:solid thin" rowspan="1" colspan="1">&#10004;</td><td align="center" valign="middle" style="border-bottom:solid thin" rowspan="1" colspan="1">&#10005;</td></tr></tbody></table><table-wrap-foot><fn><p>&#10004;: The scheme satisfies the feature. &#10005;: The scheme does not satisfy the feature. <sup>a</sup> GA: Granular authentication. <sup>b</sup> DB: Dynamic binding.</p></fn></table-wrap-foot></table-wrap><table-wrap position="float" id="sensors-25-05441-t002" orientation="portrait"><object-id pub-id-type="pii">sensors-25-05441-t002_Table 2</object-id><label>Table 2</label><caption><p>Symbols and definitions.</p></caption><table frame="hsides" rules="groups"><thead><tr><th align="left" valign="middle" style="border-bottom:solid thin;border-top:solid thin" rowspan="1" colspan="1">Symbol</th><th align="left" valign="middle" style="border-bottom:solid thin;border-top:solid thin" rowspan="1" colspan="1">Definition</th></tr></thead><tbody><tr><td align="left" valign="middle" rowspan="1" colspan="1">
<inline-formula>
<mml:math id="mm736" overflow="scroll"><mml:mrow><mml:mi>&#955;</mml:mi></mml:mrow></mml:math>
</inline-formula>
</td><td align="left" valign="middle" rowspan="1" colspan="1">Security parameter</td></tr><tr><td align="left" valign="middle" rowspan="1" colspan="1">TA</td><td align="left" valign="middle" rowspan="1" colspan="1">Trust Authority</td></tr><tr><td align="left" valign="middle" rowspan="1" colspan="1">KGC</td><td align="left" valign="middle" rowspan="1" colspan="1">Key generation center</td></tr><tr><td align="left" valign="middle" rowspan="1" colspan="1">
<inline-formula>
<mml:math id="mm737" overflow="scroll"><mml:mrow><mml:msub><mml:mi mathvariant="italic">SV</mml:mi><mml:mi>i</mml:mi></mml:msub></mml:mrow></mml:math>
</inline-formula>
</td><td align="left" valign="middle" rowspan="1" colspan="1">Sharing vehicle</td></tr><tr><td align="left" valign="middle" rowspan="1" colspan="1">
<inline-formula>
<mml:math id="mm738" overflow="scroll"><mml:mrow><mml:msub><mml:mi mathvariant="italic">User</mml:mi><mml:mi>j</mml:mi></mml:msub></mml:mrow></mml:math>
</inline-formula>
</td><td align="left" valign="middle" rowspan="1" colspan="1">User</td></tr><tr><td align="left" valign="middle" rowspan="1" colspan="1">
<italic toggle="yes">s</italic>
</td><td align="left" valign="middle" rowspan="1" colspan="1">Secret key of KGC</td></tr><tr><td align="left" valign="middle" rowspan="1" colspan="1">
<italic toggle="yes">t</italic>
</td><td align="left" valign="middle" rowspan="1" colspan="1">Secret key of TA</td></tr><tr><td align="left" valign="middle" rowspan="1" colspan="1">
<inline-formula>
<mml:math id="mm739" overflow="scroll"><mml:mrow><mml:mrow><mml:mi>p</mml:mi><mml:mi>a</mml:mi><mml:mi>r</mml:mi><mml:mi>a</mml:mi><mml:mi>m</mml:mi><mml:mi>s</mml:mi></mml:mrow></mml:mrow></mml:math>
</inline-formula>
</td><td align="left" valign="middle" rowspan="1" colspan="1">System parameters</td></tr><tr><td align="left" valign="middle" rowspan="1" colspan="1">
<inline-formula>
<mml:math id="mm740" overflow="scroll"><mml:mrow><mml:msub><mml:mi mathvariant="italic">VID</mml:mi><mml:mi>i</mml:mi></mml:msub></mml:mrow></mml:math>
</inline-formula>
</td><td align="left" valign="middle" rowspan="1" colspan="1">Identity of the vehicle</td></tr><tr><td align="left" valign="middle" rowspan="1" colspan="1">
<inline-formula>
<mml:math id="mm741" overflow="scroll"><mml:mrow><mml:msub><mml:mi mathvariant="italic">PVID</mml:mi><mml:mi>i</mml:mi></mml:msub></mml:mrow></mml:math>
</inline-formula>
</td><td align="left" valign="middle" rowspan="1" colspan="1">Pseudonym of the vehicle</td></tr><tr><td align="left" valign="middle" rowspan="1" colspan="1">
<inline-formula>
<mml:math id="mm742" overflow="scroll"><mml:mrow><mml:msub><mml:mi mathvariant="italic">UID</mml:mi><mml:mi>j</mml:mi></mml:msub></mml:mrow></mml:math>
</inline-formula>
</td><td align="left" valign="middle" rowspan="1" colspan="1">Identity of the user</td></tr><tr><td align="left" valign="middle" rowspan="1" colspan="1">
<inline-formula>
<mml:math id="mm743" overflow="scroll"><mml:mrow><mml:msub><mml:mi mathvariant="italic">PID</mml:mi><mml:mi>j</mml:mi></mml:msub></mml:mrow></mml:math>
</inline-formula>
</td><td align="left" valign="middle" rowspan="1" colspan="1">Pseudonym of the user</td></tr><tr><td align="left" valign="middle" rowspan="1" colspan="1">
<inline-formula>
<mml:math id="mm744" overflow="scroll"><mml:mrow><mml:msub><mml:mi mathvariant="italic">PK</mml:mi><mml:mi>i</mml:mi></mml:msub></mml:mrow></mml:math>
</inline-formula>
</td><td align="left" valign="middle" rowspan="1" colspan="1">Public key of the vehicle</td></tr><tr><td align="left" valign="middle" rowspan="1" colspan="1">
<inline-formula>
<mml:math id="mm745" overflow="scroll"><mml:mrow><mml:mrow><mml:mi>s</mml:mi><mml:msub><mml:mi>k</mml:mi><mml:mi>i</mml:mi></mml:msub></mml:mrow></mml:mrow></mml:math>
</inline-formula>
</td><td align="left" valign="middle" rowspan="1" colspan="1">Private key of the vehicle</td></tr><tr><td align="left" valign="middle" rowspan="1" colspan="1">
<inline-formula>
<mml:math id="mm746" overflow="scroll"><mml:mrow><mml:msub><mml:mi>d</mml:mi><mml:mi>j</mml:mi></mml:msub></mml:mrow></mml:math>
</inline-formula>
</td><td align="left" valign="middle" rowspan="1" colspan="1">Private key of the user</td></tr><tr><td align="left" valign="middle" rowspan="1" colspan="1">
<inline-formula>
<mml:math id="mm747" overflow="scroll"><mml:mrow><mml:mrow><mml:mi>g</mml:mi><mml:mi>i</mml:mi><mml:msub><mml:mi>d</mml:mi><mml:mi>i</mml:mi></mml:msub><mml:mo>,</mml:mo><mml:mi>G</mml:mi><mml:mi>I</mml:mi><mml:msub><mml:mi>D</mml:mi><mml:mi>i</mml:mi></mml:msub></mml:mrow></mml:mrow></mml:math>
</inline-formula>
</td><td align="left" valign="middle" rowspan="1" colspan="1">Category identifier</td></tr><tr><td align="left" valign="middle" rowspan="1" colspan="1">
<italic toggle="yes">z</italic>
</td><td align="left" valign="middle" rowspan="1" colspan="1">Group identifier</td></tr><tr><td align="left" valign="middle" rowspan="1" colspan="1">
<inline-formula>
<mml:math id="mm748" overflow="scroll"><mml:mrow><mml:mi>&#963;</mml:mi></mml:mrow></mml:math>
</inline-formula>
</td><td align="left" valign="middle" rowspan="1" colspan="1">Signature</td></tr><tr><td align="left" valign="middle" rowspan="1" colspan="1">
<inline-formula>
<mml:math id="mm749" overflow="scroll"><mml:mrow><mml:msub><mml:mi>p</mml:mi><mml:mi>j</mml:mi></mml:msub></mml:mrow></mml:math>
</inline-formula>
</td><td align="left" valign="middle" rowspan="1" colspan="1">Identifier update secret</td></tr><tr><td align="left" valign="middle" style="border-bottom:solid thin" rowspan="1" colspan="1">
<inline-formula>
<mml:math id="mm750" overflow="scroll"><mml:mrow><mml:msub><mml:mi>T</mml:mi><mml:mrow><mml:mo>{</mml:mo><mml:mi>i</mml:mi><mml:mo>,</mml:mo><mml:mi>j</mml:mi><mml:mo>,</mml:mo><mml:mi>z</mml:mi><mml:mo>,</mml:mo><mml:mi>l</mml:mi><mml:mo>,</mml:mo><mml:mi>m</mml:mi><mml:mo>,</mml:mo><mml:mi>r</mml:mi><mml:mo>}</mml:mo></mml:mrow></mml:msub></mml:mrow></mml:math>
</inline-formula>
</td><td align="left" valign="middle" style="border-bottom:solid thin" rowspan="1" colspan="1">Timestamp</td></tr></tbody></table></table-wrap><table-wrap position="float" id="sensors-25-05441-t003" orientation="portrait"><object-id pub-id-type="pii">sensors-25-05441-t003_Table 3</object-id><label>Table 3</label><caption><p>Execution time of cryptographic operations.</p></caption><table frame="hsides" rules="groups"><thead><tr><th align="center" valign="middle" style="border-bottom:solid thin;border-top:solid thin" rowspan="1" colspan="1">Symbol</th><th align="center" valign="middle" style="border-bottom:solid thin;border-top:solid thin" rowspan="1" colspan="1">Meaning</th><th align="center" valign="middle" style="border-bottom:solid thin;border-top:solid thin" rowspan="1" colspan="1">Time (ms)</th></tr></thead><tbody><tr><td align="center" valign="middle" rowspan="1" colspan="1">
<inline-formula>
<mml:math id="mm751" overflow="scroll"><mml:mrow><mml:msub><mml:mi>T</mml:mi><mml:mrow><mml:mi>b</mml:mi><mml:mi>p</mml:mi></mml:mrow></mml:msub></mml:mrow></mml:math>
</inline-formula>
</td><td align="center" valign="middle" rowspan="1" colspan="1">Bilinear Pairing</td><td align="center" valign="middle" rowspan="1" colspan="1">27.844</td></tr><tr><td align="center" valign="middle" rowspan="1" colspan="1">
<inline-formula>
<mml:math id="mm752" overflow="scroll"><mml:mrow><mml:msub><mml:mi>T</mml:mi><mml:mrow><mml:mi>b</mml:mi><mml:mi>p</mml:mi><mml:mi>m</mml:mi></mml:mrow></mml:msub></mml:mrow></mml:math>
</inline-formula>
</td><td align="center" valign="middle" rowspan="1" colspan="1">Pairing-based Scalar Multiplication</td><td align="center" valign="middle" rowspan="1" colspan="1">9.027</td></tr><tr><td align="center" valign="middle" rowspan="1" colspan="1">
<inline-formula>
<mml:math id="mm753" overflow="scroll"><mml:mrow><mml:msub><mml:mi>T</mml:mi><mml:mrow><mml:mi>b</mml:mi><mml:mi>p</mml:mi><mml:mi>a</mml:mi></mml:mrow></mml:msub></mml:mrow></mml:math>
</inline-formula>
</td><td align="center" valign="middle" rowspan="1" colspan="1">Pairing-based Point Addition</td><td align="center" valign="middle" rowspan="1" colspan="1">0.055</td></tr><tr><td align="center" valign="middle" rowspan="1" colspan="1">
<inline-formula>
<mml:math id="mm754" overflow="scroll"><mml:mrow><mml:msub><mml:mi>T</mml:mi><mml:mrow><mml:mi>e</mml:mi><mml:mi>m</mml:mi></mml:mrow></mml:msub></mml:mrow></mml:math>
</inline-formula>
</td><td align="center" valign="middle" rowspan="1" colspan="1">Scalar Multiplication</td><td align="center" valign="middle" rowspan="1" colspan="1">2.632</td></tr><tr><td align="center" valign="middle" rowspan="1" colspan="1">
<inline-formula>
<mml:math id="mm755" overflow="scroll"><mml:mrow><mml:msub><mml:mi>T</mml:mi><mml:mrow><mml:mi>e</mml:mi><mml:mi>a</mml:mi></mml:mrow></mml:msub></mml:mrow></mml:math>
</inline-formula>
</td><td align="center" valign="middle" rowspan="1" colspan="1">Point Addition</td><td align="center" valign="middle" rowspan="1" colspan="1">0.018</td></tr><tr><td align="center" valign="middle" rowspan="1" colspan="1">
<inline-formula>
<mml:math id="mm756" overflow="scroll"><mml:mrow><mml:msub><mml:mi>T</mml:mi><mml:mrow><mml:mi>h</mml:mi><mml:mi>t</mml:mi><mml:mi>p</mml:mi></mml:mrow></mml:msub></mml:mrow></mml:math>
</inline-formula>
</td><td align="center" valign="middle" rowspan="1" colspan="1">Hash to Point Operation</td><td align="center" valign="middle" rowspan="1" colspan="1">5.433</td></tr><tr><td align="center" valign="middle" style="border-bottom:solid thin" rowspan="1" colspan="1">
<inline-formula>
<mml:math id="mm757" overflow="scroll"><mml:mrow><mml:msub><mml:mi>T</mml:mi><mml:mi>h</mml:mi></mml:msub></mml:mrow></mml:math>
</inline-formula>
</td><td align="center" valign="middle" style="border-bottom:solid thin" rowspan="1" colspan="1">General Secure Hash</td><td align="center" valign="middle" style="border-bottom:solid thin" rowspan="1" colspan="1">0.001</td></tr></tbody></table></table-wrap><table-wrap position="float" id="sensors-25-05441-t004" orientation="portrait"><object-id pub-id-type="pii">sensors-25-05441-t004_Table 4</object-id><label>Table 4</label><caption><p>Properties of the related schemes.</p></caption><table frame="hsides" rules="groups"><thead><tr><th align="center" valign="middle" style="border-bottom:solid thin;border-top:solid thin" rowspan="1" colspan="1">Scheme</th><th align="center" valign="middle" style="border-bottom:solid thin;border-top:solid thin" rowspan="1" colspan="1">Pairing-Free</th><th align="center" valign="middle" style="border-bottom:solid thin;border-top:solid thin" rowspan="1" colspan="1">Unforgeability</th><th align="center" valign="middle" style="border-bottom:solid thin;border-top:solid thin" rowspan="1" colspan="1">Revocation</th><th align="center" valign="middle" style="border-bottom:solid thin;border-top:solid thin" rowspan="1" colspan="1">User Decoupling</th><th align="center" valign="middle" style="border-bottom:solid thin;border-top:solid thin" rowspan="1" colspan="1">Category Range Selection</th></tr></thead><tbody><tr><td align="center" valign="middle" rowspan="1" colspan="1">[<xref rid="B48-sensors-25-05441" ref-type="bibr">48</xref>]</td><td align="center" valign="middle" rowspan="1" colspan="1">&#10005;</td><td align="center" valign="middle" rowspan="1" colspan="1">&#10004;</td><td align="center" valign="middle" rowspan="1" colspan="1">&#10005;</td><td align="center" valign="middle" rowspan="1" colspan="1">&#10005;</td><td align="center" valign="middle" rowspan="1" colspan="1">&#10005;</td></tr><tr><td align="center" valign="middle" rowspan="1" colspan="1">[<xref rid="B49-sensors-25-05441" ref-type="bibr">49</xref>]</td><td align="center" valign="middle" rowspan="1" colspan="1">&#10004;</td><td align="center" valign="middle" rowspan="1" colspan="1">&#10004;</td><td align="center" valign="middle" rowspan="1" colspan="1">&#10004;</td><td align="center" valign="middle" rowspan="1" colspan="1">&#10005;</td><td align="center" valign="middle" rowspan="1" colspan="1">&#10005;</td></tr><tr><td align="center" valign="middle" rowspan="1" colspan="1">[<xref rid="B50-sensors-25-05441" ref-type="bibr">50</xref>]</td><td align="center" valign="middle" rowspan="1" colspan="1">&#10004;</td><td align="center" valign="middle" rowspan="1" colspan="1">&#10004;</td><td align="center" valign="middle" rowspan="1" colspan="1">&#10004;</td><td align="center" valign="middle" rowspan="1" colspan="1">&#10005;</td><td align="center" valign="middle" rowspan="1" colspan="1">&#10005;</td></tr><tr><td align="center" valign="middle" rowspan="1" colspan="1">[<xref rid="B51-sensors-25-05441" ref-type="bibr">51</xref>]</td><td align="center" valign="middle" rowspan="1" colspan="1">&#10004;</td><td align="center" valign="middle" rowspan="1" colspan="1">&#10004;</td><td align="center" valign="middle" rowspan="1" colspan="1">&#10005;</td><td align="center" valign="middle" rowspan="1" colspan="1">&#10005;</td><td align="center" valign="middle" rowspan="1" colspan="1">&#10005;</td></tr><tr><td align="center" valign="middle" rowspan="1" colspan="1">[<xref rid="B52-sensors-25-05441" ref-type="bibr">52</xref>]</td><td align="center" valign="middle" rowspan="1" colspan="1">&#10004;</td><td align="center" valign="middle" rowspan="1" colspan="1">&#10005;</td><td align="center" valign="middle" rowspan="1" colspan="1">&#10005;</td><td align="center" valign="middle" rowspan="1" colspan="1">&#10005;</td><td align="center" valign="middle" rowspan="1" colspan="1">&#10005;</td></tr><tr><td align="center" valign="middle" rowspan="1" colspan="1">[<xref rid="B53-sensors-25-05441" ref-type="bibr">53</xref>]</td><td align="center" valign="middle" rowspan="1" colspan="1">&#10004;</td><td align="center" valign="middle" rowspan="1" colspan="1">&#10005;</td><td align="center" valign="middle" rowspan="1" colspan="1">&#10005;</td><td align="center" valign="middle" rowspan="1" colspan="1">&#10005;</td><td align="center" valign="middle" rowspan="1" colspan="1">&#10005;</td></tr><tr><td align="center" valign="middle" rowspan="1" colspan="1">[<xref rid="B54-sensors-25-05441" ref-type="bibr">54</xref>]</td><td align="center" valign="middle" rowspan="1" colspan="1">&#10004;</td><td align="center" valign="middle" rowspan="1" colspan="1">&#10004;</td><td align="center" valign="middle" rowspan="1" colspan="1">&#10005;</td><td align="center" valign="middle" rowspan="1" colspan="1">&#10004;</td><td align="center" valign="middle" rowspan="1" colspan="1">&#10005;</td></tr><tr><td align="center" valign="middle" style="border-bottom:solid thin" rowspan="1" colspan="1">Our scheme</td><td align="center" valign="middle" style="border-bottom:solid thin" rowspan="1" colspan="1">&#10004;</td><td align="center" valign="middle" style="border-bottom:solid thin" rowspan="1" colspan="1">&#10004;</td><td align="center" valign="middle" style="border-bottom:solid thin" rowspan="1" colspan="1">&#10004;</td><td align="center" valign="middle" style="border-bottom:solid thin" rowspan="1" colspan="1">&#10004;</td><td align="center" valign="middle" style="border-bottom:solid thin" rowspan="1" colspan="1">&#10004;</td></tr></tbody></table><table-wrap-foot><fn><p>&#10004;: The scheme satisfies the feature. &#10005;: The scheme does not satisfy the feature.</p></fn></table-wrap-foot></table-wrap><table-wrap position="float" id="sensors-25-05441-t005" orientation="portrait"><object-id pub-id-type="pii">sensors-25-05441-t005_Table 5</object-id><label>Table 5</label><caption><p>Comprehensive overhead comparison with the related schemes.</p></caption><table frame="hsides" rules="groups"><thead><tr><th rowspan="2" align="center" valign="middle" style="border-top:solid thin;border-bottom:solid thin" colspan="1">Scheme</th><th colspan="2" align="center" valign="middle" style="border-top:solid thin;border-bottom:solid thin" rowspan="1">Computational Overhead</th><th rowspan="2" align="center" valign="middle" style="border-top:solid thin;border-bottom:solid thin" colspan="1">Communication <break/> Overhead (byte)</th></tr><tr><th align="center" valign="middle" style="border-bottom:solid thin" rowspan="1" colspan="1">
Signature Generation (ms)
</th><th align="center" valign="middle" style="border-bottom:solid thin" rowspan="1" colspan="1">
Signature Validation (ms)
</th></tr></thead><tbody><tr><td align="center" valign="middle" rowspan="1" colspan="1">[<xref rid="B48-sensors-25-05441" ref-type="bibr">48</xref>]</td><td align="center" valign="middle" rowspan="1" colspan="1">
<inline-formula>
<mml:math id="mm758" overflow="scroll"><mml:mrow><mml:mrow><mml:mn>5</mml:mn><mml:msub><mml:mi>T</mml:mi><mml:mrow><mml:mi>b</mml:mi><mml:mi>p</mml:mi><mml:mi>m</mml:mi></mml:mrow></mml:msub><mml:mo>+</mml:mo><mml:mn>5</mml:mn><mml:msub><mml:mi>T</mml:mi><mml:mrow><mml:mi>b</mml:mi><mml:mi>p</mml:mi><mml:mi>a</mml:mi></mml:mrow></mml:msub><mml:mo>+</mml:mo><mml:mn>2</mml:mn><mml:msub><mml:mi>T</mml:mi><mml:mrow><mml:mi>h</mml:mi><mml:mi>t</mml:mi><mml:mi>p</mml:mi></mml:mrow></mml:msub><mml:mo>+</mml:mo><mml:mn>2</mml:mn><mml:msub><mml:mi>T</mml:mi><mml:mi>h</mml:mi></mml:msub><mml:mo>=</mml:mo><mml:mn>56.278</mml:mn></mml:mrow></mml:mrow></mml:math>
</inline-formula>
</td><td align="center" valign="middle" rowspan="1" colspan="1">
<inline-formula>
<mml:math id="mm759" overflow="scroll"><mml:mrow><mml:mrow><mml:mn>5</mml:mn><mml:msub><mml:mi>T</mml:mi><mml:mrow><mml:mi>b</mml:mi><mml:mi>p</mml:mi></mml:mrow></mml:msub><mml:mo>+</mml:mo><mml:mn>2</mml:mn><mml:msub><mml:mi>T</mml:mi><mml:mrow><mml:mi>b</mml:mi><mml:mi>p</mml:mi><mml:mi>m</mml:mi></mml:mrow></mml:msub><mml:mo>+</mml:mo><mml:mn>2</mml:mn><mml:msub><mml:mi>T</mml:mi><mml:mrow><mml:mi>b</mml:mi><mml:mi>p</mml:mi><mml:mi>a</mml:mi></mml:mrow></mml:msub><mml:mo>+</mml:mo><mml:mn>4</mml:mn><mml:msub><mml:mi>T</mml:mi><mml:mrow><mml:mi>h</mml:mi><mml:mi>t</mml:mi><mml:mi>p</mml:mi></mml:mrow></mml:msub><mml:mo>+</mml:mo><mml:mn>2</mml:mn><mml:msub><mml:mi>T</mml:mi><mml:mi>h</mml:mi></mml:msub><mml:mo>=</mml:mo><mml:mn>179.118</mml:mn></mml:mrow></mml:mrow></mml:math>
</inline-formula>
</td><td align="center" valign="middle" rowspan="1" colspan="1">
<inline-formula>
<mml:math id="mm760" overflow="scroll"><mml:mrow><mml:mrow><mml:mrow><mml:mo>|</mml:mo><mml:mn>2</mml:mn></mml:mrow><mml:msub><mml:mi mathvariant="double-struck">G</mml:mi><mml:mn>1</mml:mn></mml:msub><mml:mrow><mml:mo>|</mml:mo><mml:mo>+</mml:mo><mml:mn>3</mml:mn><mml:mo>|</mml:mo></mml:mrow><mml:msubsup><mml:mi mathvariant="double-struck">Z</mml:mi><mml:mi>q</mml:mi><mml:mo>&#8727;</mml:mo></mml:msubsup><mml:mrow><mml:mo>|</mml:mo><mml:mo>+</mml:mo><mml:mo>|</mml:mo><mml:mi>T</mml:mi><mml:mo>|</mml:mo></mml:mrow></mml:mrow></mml:mrow></mml:math>
</inline-formula>
</td></tr><tr><td align="center" valign="middle" rowspan="1" colspan="1">[<xref rid="B49-sensors-25-05441" ref-type="bibr">49</xref>]</td><td align="center" valign="middle" rowspan="1" colspan="1">
<inline-formula>
<mml:math id="mm761" overflow="scroll"><mml:mrow><mml:mrow><mml:mn>4</mml:mn><mml:msub><mml:mi>T</mml:mi><mml:mrow><mml:mi>e</mml:mi><mml:mi>m</mml:mi></mml:mrow></mml:msub><mml:mo>+</mml:mo><mml:mn>2</mml:mn><mml:msub><mml:mi>T</mml:mi><mml:mrow><mml:mi>e</mml:mi><mml:mi>a</mml:mi></mml:mrow></mml:msub><mml:mo>+</mml:mo><mml:mn>4</mml:mn><mml:msub><mml:mi>T</mml:mi><mml:mi>h</mml:mi></mml:msub><mml:mo>=</mml:mo><mml:mn>10.568</mml:mn></mml:mrow></mml:mrow></mml:math>
</inline-formula>
</td><td align="center" valign="middle" rowspan="1" colspan="1">
<inline-formula>
<mml:math id="mm762" overflow="scroll"><mml:mrow><mml:mrow><mml:mn>5</mml:mn><mml:msub><mml:mi>T</mml:mi><mml:mrow><mml:mi>e</mml:mi><mml:mi>m</mml:mi></mml:mrow></mml:msub><mml:mo>+</mml:mo><mml:mn>3</mml:mn><mml:msub><mml:mi>T</mml:mi><mml:mrow><mml:mi>e</mml:mi><mml:mi>a</mml:mi></mml:mrow></mml:msub><mml:mo>+</mml:mo><mml:mn>4</mml:mn><mml:msub><mml:mi>T</mml:mi><mml:mi>h</mml:mi></mml:msub><mml:mo>=</mml:mo><mml:mn>13.218</mml:mn></mml:mrow></mml:mrow></mml:math>
</inline-formula>
</td><td align="center" valign="middle" rowspan="1" colspan="1">
<inline-formula>
<mml:math id="mm763" overflow="scroll"><mml:mrow><mml:mrow><mml:mrow><mml:mo>|</mml:mo><mml:mi mathvariant="double-struck">G</mml:mi><mml:mo>|</mml:mo><mml:mo>+</mml:mo><mml:mn>2</mml:mn><mml:mo>|</mml:mo></mml:mrow><mml:msubsup><mml:mi mathvariant="double-struck">Z</mml:mi><mml:mi>q</mml:mi><mml:mo>&#8727;</mml:mo></mml:msubsup><mml:mrow><mml:mo>|</mml:mo><mml:mo>+</mml:mo><mml:mo>|</mml:mo><mml:mi>T</mml:mi><mml:mo>|</mml:mo></mml:mrow></mml:mrow></mml:mrow></mml:math>
</inline-formula>
</td></tr><tr><td align="center" valign="middle" rowspan="1" colspan="1">[<xref rid="B50-sensors-25-05441" ref-type="bibr">50</xref>]</td><td align="center" valign="middle" rowspan="1" colspan="1">
<inline-formula>
<mml:math id="mm764" overflow="scroll"><mml:mrow><mml:mrow><mml:mn>3</mml:mn><mml:msub><mml:mi>T</mml:mi><mml:mrow><mml:mi>e</mml:mi><mml:mi>m</mml:mi></mml:mrow></mml:msub><mml:mo>+</mml:mo><mml:msub><mml:mi>T</mml:mi><mml:mi>h</mml:mi></mml:msub><mml:mo>=</mml:mo><mml:mn>7.897</mml:mn></mml:mrow></mml:mrow></mml:math>
</inline-formula>
</td><td align="center" valign="middle" rowspan="1" colspan="1">
<inline-formula>
<mml:math id="mm765" overflow="scroll"><mml:mrow><mml:mrow><mml:mn>5</mml:mn><mml:msub><mml:mi>T</mml:mi><mml:mrow><mml:mi>e</mml:mi><mml:mi>m</mml:mi></mml:mrow></mml:msub><mml:mo>+</mml:mo><mml:mn>3</mml:mn><mml:msub><mml:mi>T</mml:mi><mml:mrow><mml:mi>e</mml:mi><mml:mi>a</mml:mi></mml:mrow></mml:msub><mml:mo>+</mml:mo><mml:msub><mml:mi>T</mml:mi><mml:mi>h</mml:mi></mml:msub><mml:mo>=</mml:mo><mml:mn>13.215</mml:mn></mml:mrow></mml:mrow></mml:math>
</inline-formula>
</td><td align="center" valign="middle" rowspan="1" colspan="1">
<inline-formula>
<mml:math id="mm766" overflow="scroll"><mml:mrow><mml:mrow><mml:mrow><mml:mn>2</mml:mn><mml:mo>|</mml:mo><mml:mi mathvariant="double-struck">G</mml:mi><mml:mo>|</mml:mo><mml:mo>+</mml:mo><mml:mn>2</mml:mn><mml:mo>|</mml:mo></mml:mrow><mml:msubsup><mml:mi mathvariant="double-struck">Z</mml:mi><mml:mi>q</mml:mi><mml:mo>&#8727;</mml:mo></mml:msubsup><mml:mrow><mml:mo>|</mml:mo><mml:mo>+</mml:mo><mml:mo>|</mml:mo><mml:mi>T</mml:mi><mml:mo>|</mml:mo></mml:mrow></mml:mrow></mml:mrow></mml:math>
</inline-formula>
</td></tr><tr><td align="center" valign="middle" rowspan="1" colspan="1">[<xref rid="B51-sensors-25-05441" ref-type="bibr">51</xref>]</td><td align="center" valign="middle" rowspan="1" colspan="1">
<inline-formula>
<mml:math id="mm767" overflow="scroll"><mml:mrow><mml:mrow><mml:msub><mml:mi>T</mml:mi><mml:mrow><mml:mi>e</mml:mi><mml:mi>m</mml:mi></mml:mrow></mml:msub><mml:mo>+</mml:mo><mml:mn>2</mml:mn><mml:msub><mml:mi>T</mml:mi><mml:mi>h</mml:mi></mml:msub><mml:mo>=</mml:mo><mml:mn>2.634</mml:mn></mml:mrow></mml:mrow></mml:math>
</inline-formula>
</td><td align="center" valign="middle" rowspan="1" colspan="1">
<inline-formula>
<mml:math id="mm768" overflow="scroll"><mml:mrow><mml:mrow><mml:mn>4</mml:mn><mml:msub><mml:mi>T</mml:mi><mml:mrow><mml:mi>e</mml:mi><mml:mi>m</mml:mi></mml:mrow></mml:msub><mml:mo>+</mml:mo><mml:mn>3</mml:mn><mml:msub><mml:mi>T</mml:mi><mml:mrow><mml:mi>e</mml:mi><mml:mi>a</mml:mi></mml:mrow></mml:msub><mml:mo>+</mml:mo><mml:mn>3</mml:mn><mml:msub><mml:mi>T</mml:mi><mml:mi>h</mml:mi></mml:msub><mml:mo>=</mml:mo><mml:mn>10.585</mml:mn></mml:mrow></mml:mrow></mml:math>
</inline-formula>
</td><td align="center" valign="middle" rowspan="1" colspan="1">
<inline-formula>
<mml:math id="mm769" overflow="scroll"><mml:mrow><mml:mrow><mml:mrow><mml:mo>|</mml:mo><mml:mi mathvariant="double-struck">G</mml:mi><mml:mo>|</mml:mo><mml:mo>+</mml:mo><mml:mn>2</mml:mn><mml:mo>|</mml:mo></mml:mrow><mml:msubsup><mml:mi mathvariant="double-struck">Z</mml:mi><mml:mi>q</mml:mi><mml:mo>&#8727;</mml:mo></mml:msubsup><mml:mrow><mml:mo>|</mml:mo><mml:mo>+</mml:mo><mml:mo>|</mml:mo><mml:mi>T</mml:mi><mml:mo>|</mml:mo></mml:mrow></mml:mrow></mml:mrow></mml:math>
</inline-formula>
</td></tr><tr><td align="center" valign="middle" rowspan="1" colspan="1">[<xref rid="B52-sensors-25-05441" ref-type="bibr">52</xref>]</td><td align="center" valign="middle" rowspan="1" colspan="1">
<inline-formula>
<mml:math id="mm770" overflow="scroll"><mml:mrow><mml:mrow><mml:msub><mml:mi>T</mml:mi><mml:mrow><mml:mi>e</mml:mi><mml:mi>m</mml:mi></mml:mrow></mml:msub><mml:mo>+</mml:mo><mml:msub><mml:mi>T</mml:mi><mml:mi>h</mml:mi></mml:msub><mml:mo>=</mml:mo><mml:mn>2.633</mml:mn></mml:mrow></mml:mrow></mml:math>
</inline-formula>
</td><td align="center" valign="middle" rowspan="1" colspan="1">
<inline-formula>
<mml:math id="mm771" overflow="scroll"><mml:mrow><mml:mrow><mml:mn>5</mml:mn><mml:msub><mml:mi>T</mml:mi><mml:mrow><mml:mi>e</mml:mi><mml:mi>m</mml:mi></mml:mrow></mml:msub><mml:mo>+</mml:mo><mml:mn>3</mml:mn><mml:msub><mml:mi>T</mml:mi><mml:mrow><mml:mi>e</mml:mi><mml:mi>a</mml:mi></mml:mrow></mml:msub><mml:mo>+</mml:mo><mml:mn>2</mml:mn><mml:msub><mml:mi>T</mml:mi><mml:mi>h</mml:mi></mml:msub><mml:mo>=</mml:mo><mml:mn>13.216</mml:mn></mml:mrow></mml:mrow></mml:math>
</inline-formula>
</td><td align="center" valign="middle" rowspan="1" colspan="1">
<inline-formula>
<mml:math id="mm772" overflow="scroll"><mml:mrow><mml:mrow><mml:mrow><mml:mo>|</mml:mo><mml:mi mathvariant="double-struck">G</mml:mi><mml:mo>|</mml:mo><mml:mo>+</mml:mo><mml:mn>2</mml:mn><mml:mo>|</mml:mo></mml:mrow><mml:msubsup><mml:mi mathvariant="double-struck">Z</mml:mi><mml:mi>q</mml:mi><mml:mo>&#8727;</mml:mo></mml:msubsup><mml:mrow><mml:mo>|</mml:mo><mml:mo>+</mml:mo><mml:mo>|</mml:mo><mml:mi>T</mml:mi><mml:mo>|</mml:mo></mml:mrow></mml:mrow></mml:mrow></mml:math>
</inline-formula>
</td></tr><tr><td align="center" valign="middle" rowspan="1" colspan="1">[<xref rid="B53-sensors-25-05441" ref-type="bibr">53</xref>]</td><td align="center" valign="middle" rowspan="1" colspan="1">
<inline-formula>
<mml:math id="mm773" overflow="scroll"><mml:mrow><mml:mrow><mml:msub><mml:mi>T</mml:mi><mml:mrow><mml:mi>e</mml:mi><mml:mi>m</mml:mi></mml:mrow></mml:msub><mml:mo>+</mml:mo><mml:mn>2</mml:mn><mml:msub><mml:mi>T</mml:mi><mml:mi>h</mml:mi></mml:msub><mml:mo>=</mml:mo><mml:mn>2.634</mml:mn></mml:mrow></mml:mrow></mml:math>
</inline-formula>
</td><td align="center" valign="middle" rowspan="1" colspan="1">
<inline-formula>
<mml:math id="mm774" overflow="scroll"><mml:mrow><mml:mrow><mml:mn>4</mml:mn><mml:msub><mml:mi>T</mml:mi><mml:mrow><mml:mi>e</mml:mi><mml:mi>m</mml:mi></mml:mrow></mml:msub><mml:mo>+</mml:mo><mml:mn>3</mml:mn><mml:msub><mml:mi>T</mml:mi><mml:mrow><mml:mi>e</mml:mi><mml:mi>a</mml:mi></mml:mrow></mml:msub><mml:mo>+</mml:mo><mml:mn>3</mml:mn><mml:msub><mml:mi>T</mml:mi><mml:mi>h</mml:mi></mml:msub><mml:mo>=</mml:mo><mml:mn>10.585</mml:mn></mml:mrow></mml:mrow></mml:math>
</inline-formula>
</td><td align="center" valign="middle" rowspan="1" colspan="1">
<inline-formula>
<mml:math id="mm775" overflow="scroll"><mml:mrow><mml:mrow><mml:mrow><mml:mo>|</mml:mo><mml:mi mathvariant="double-struck">G</mml:mi><mml:mo>|</mml:mo><mml:mo>+</mml:mo><mml:mn>2</mml:mn><mml:mo>|</mml:mo></mml:mrow><mml:msubsup><mml:mi mathvariant="double-struck">Z</mml:mi><mml:mi>q</mml:mi><mml:mo>&#8727;</mml:mo></mml:msubsup><mml:mrow><mml:mo>|</mml:mo><mml:mo>+</mml:mo><mml:mo>|</mml:mo><mml:mi>T</mml:mi><mml:mo>|</mml:mo></mml:mrow></mml:mrow></mml:mrow></mml:math>
</inline-formula>
</td></tr><tr><td align="center" valign="middle" rowspan="1" colspan="1">[<xref rid="B54-sensors-25-05441" ref-type="bibr">54</xref>]</td><td align="center" valign="middle" rowspan="1" colspan="1">
<inline-formula>
<mml:math id="mm776" overflow="scroll"><mml:mrow><mml:mrow><mml:mn>2</mml:mn><mml:msub><mml:mi>T</mml:mi><mml:mrow><mml:mi>e</mml:mi><mml:mi>m</mml:mi></mml:mrow></mml:msub><mml:mo>+</mml:mo><mml:mn>2</mml:mn><mml:msub><mml:mi>T</mml:mi><mml:mrow><mml:mi>e</mml:mi><mml:mi>a</mml:mi></mml:mrow></mml:msub><mml:mo>+</mml:mo><mml:mn>2</mml:mn><mml:msub><mml:mi>T</mml:mi><mml:mi>h</mml:mi></mml:msub><mml:mo>+</mml:mo><mml:msub><mml:mi>T</mml:mi><mml:mrow><mml:mi>h</mml:mi><mml:mi>t</mml:mi><mml:mi>p</mml:mi></mml:mrow></mml:msub><mml:mo>=</mml:mo><mml:mn>10.735</mml:mn></mml:mrow></mml:mrow></mml:math>
</inline-formula>
</td><td align="center" valign="middle" rowspan="1" colspan="1">
<inline-formula>
<mml:math id="mm777" overflow="scroll"><mml:mrow><mml:mrow><mml:mn>4</mml:mn><mml:msub><mml:mi>T</mml:mi><mml:mrow><mml:mi>e</mml:mi><mml:mi>m</mml:mi></mml:mrow></mml:msub><mml:mo>+</mml:mo><mml:mn>3</mml:mn><mml:msub><mml:mi>T</mml:mi><mml:mrow><mml:mi>e</mml:mi><mml:mi>a</mml:mi></mml:mrow></mml:msub><mml:mo>+</mml:mo><mml:mn>2</mml:mn><mml:msub><mml:mi>T</mml:mi><mml:mi>h</mml:mi></mml:msub><mml:mo>+</mml:mo><mml:msub><mml:mi>T</mml:mi><mml:mrow><mml:mi>h</mml:mi><mml:mi>t</mml:mi><mml:mi>p</mml:mi></mml:mrow></mml:msub><mml:mo>=</mml:mo><mml:mn>16.017</mml:mn></mml:mrow></mml:mrow></mml:math>
</inline-formula>
</td><td align="center" valign="middle" rowspan="1" colspan="1">
<inline-formula>
<mml:math id="mm778" overflow="scroll"><mml:mrow><mml:mrow><mml:mrow><mml:mn>2</mml:mn><mml:mo>|</mml:mo><mml:mi mathvariant="double-struck">G</mml:mi><mml:mo>|</mml:mo><mml:mo>+</mml:mo><mml:mo>|</mml:mo></mml:mrow><mml:msubsup><mml:mi mathvariant="double-struck">Z</mml:mi><mml:mi>q</mml:mi><mml:mo>&#8727;</mml:mo></mml:msubsup><mml:mrow><mml:mo>|</mml:mo><mml:mo>+</mml:mo><mml:mo>|</mml:mo><mml:mi>T</mml:mi><mml:mo>|</mml:mo></mml:mrow></mml:mrow></mml:mrow></mml:math>
</inline-formula>
</td></tr><tr><td align="center" valign="middle" style="border-bottom:solid thin" rowspan="1" colspan="1">Our scheme</td><td align="center" valign="middle" style="border-bottom:solid thin" rowspan="1" colspan="1">
<inline-formula>
<mml:math id="mm779" overflow="scroll"><mml:mrow><mml:mrow><mml:msub><mml:mi>T</mml:mi><mml:mrow><mml:mi>e</mml:mi><mml:mi>m</mml:mi></mml:mrow></mml:msub><mml:mo>+</mml:mo><mml:mn>2</mml:mn><mml:msub><mml:mi>T</mml:mi><mml:mi>h</mml:mi></mml:msub><mml:mo>=</mml:mo><mml:mn>2.634</mml:mn></mml:mrow></mml:mrow></mml:math>
</inline-formula>
</td><td align="center" valign="middle" style="border-bottom:solid thin" rowspan="1" colspan="1">
<inline-formula>
<mml:math id="mm780" overflow="scroll"><mml:mrow><mml:mrow><mml:mn>4</mml:mn><mml:msub><mml:mi>T</mml:mi><mml:mrow><mml:mi>e</mml:mi><mml:mi>m</mml:mi></mml:mrow></mml:msub><mml:mo>+</mml:mo><mml:mn>4</mml:mn><mml:msub><mml:mi>T</mml:mi><mml:mrow><mml:mi>e</mml:mi><mml:mi>a</mml:mi></mml:mrow></mml:msub><mml:mo>+</mml:mo><mml:mn>4</mml:mn><mml:msub><mml:mi>T</mml:mi><mml:mi>h</mml:mi></mml:msub><mml:mo>=</mml:mo><mml:mn>10.604</mml:mn></mml:mrow></mml:mrow></mml:math>
</inline-formula>
</td><td align="center" valign="middle" style="border-bottom:solid thin" rowspan="1" colspan="1">
<inline-formula>
<mml:math id="mm781" overflow="scroll"><mml:mrow><mml:mrow><mml:mrow><mml:mo>|</mml:mo><mml:mi mathvariant="double-struck">G</mml:mi><mml:mo>|</mml:mo><mml:mo>+</mml:mo><mml:mn>2</mml:mn><mml:mo>|</mml:mo></mml:mrow><mml:msubsup><mml:mi mathvariant="double-struck">Z</mml:mi><mml:mi>q</mml:mi><mml:mo>&#8727;</mml:mo></mml:msubsup><mml:mrow><mml:mo>|</mml:mo><mml:mo>+</mml:mo><mml:mo>|</mml:mo><mml:mi>T</mml:mi><mml:mo>|</mml:mo></mml:mrow></mml:mrow></mml:mrow></mml:math>
</inline-formula>
</td></tr></tbody></table></table-wrap><table-wrap position="float" id="sensors-25-05441-t006" orientation="portrait"><object-id pub-id-type="pii">sensors-25-05441-t006_Table 6</object-id><label>Table 6</label><caption><p>Comparison of the revocation feature.</p></caption><table frame="hsides" rules="groups"><thead><tr><th align="center" valign="middle" style="border-bottom:solid thin;border-top:solid thin" rowspan="1" colspan="1">Scheme</th><th align="center" valign="middle" style="border-bottom:solid thin;border-top:solid thin" rowspan="1" colspan="1">Support Revocation</th><th align="center" valign="middle" style="border-bottom:solid thin;border-top:solid thin" rowspan="1" colspan="1">Method</th><th align="center" valign="middle" style="border-bottom:solid thin;border-top:solid thin" rowspan="1" colspan="1">Overhead Complexity</th></tr></thead><tbody><tr><td align="center" valign="middle" rowspan="1" colspan="1">[<xref rid="B48-sensors-25-05441" ref-type="bibr">48</xref>]</td><td align="center" valign="middle" rowspan="1" colspan="1">&#10005;</td><td align="center" valign="middle" rowspan="1" colspan="1">N/A</td><td align="center" valign="middle" rowspan="1" colspan="1">N/A</td></tr><tr><td align="center" valign="middle" rowspan="1" colspan="1">[<xref rid="B49-sensors-25-05441" ref-type="bibr">49</xref>]</td><td align="center" valign="middle" rowspan="1" colspan="1">&#10004;</td><td align="center" valign="middle" rowspan="1" colspan="1">Revocation list</td><td align="center" valign="middle" rowspan="1" colspan="1">Linear</td></tr><tr><td align="center" valign="middle" rowspan="1" colspan="1">[<xref rid="B50-sensors-25-05441" ref-type="bibr">50</xref>]</td><td align="center" valign="middle" rowspan="1" colspan="1">&#10004;</td><td align="center" valign="middle" rowspan="1" colspan="1">Blockchain database</td><td align="center" valign="middle" rowspan="1" colspan="1">Linear</td></tr><tr><td align="center" valign="middle" rowspan="1" colspan="1">[<xref rid="B51-sensors-25-05441" ref-type="bibr">51</xref>]</td><td align="center" valign="middle" rowspan="1" colspan="1">&#10005;</td><td align="center" valign="middle" rowspan="1" colspan="1">N/A</td><td align="center" valign="middle" rowspan="1" colspan="1">N/A</td></tr><tr><td align="center" valign="middle" rowspan="1" colspan="1">[<xref rid="B52-sensors-25-05441" ref-type="bibr">52</xref>]</td><td align="center" valign="middle" rowspan="1" colspan="1">&#10004;</td><td align="center" valign="middle" rowspan="1" colspan="1">Revocation list</td><td align="center" valign="middle" rowspan="1" colspan="1">Linear</td></tr><tr><td align="center" valign="middle" rowspan="1" colspan="1">[<xref rid="B53-sensors-25-05441" ref-type="bibr">53</xref>]</td><td align="center" valign="middle" rowspan="1" colspan="1">&#10005;</td><td align="center" valign="middle" rowspan="1" colspan="1">N/A</td><td align="center" valign="middle" rowspan="1" colspan="1">N/A</td></tr><tr><td align="center" valign="middle" rowspan="1" colspan="1">[<xref rid="B54-sensors-25-05441" ref-type="bibr">54</xref>]</td><td align="center" valign="middle" rowspan="1" colspan="1">&#10005;</td><td align="center" valign="middle" rowspan="1" colspan="1">N/A</td><td align="center" valign="middle" rowspan="1" colspan="1">N/A</td></tr><tr><td align="center" valign="middle" style="border-bottom:solid thin" rowspan="1" colspan="1">Our scheme</td><td align="center" valign="middle" style="border-bottom:solid thin" rowspan="1" colspan="1">&#10004;</td><td align="center" valign="middle" style="border-bottom:solid thin" rowspan="1" colspan="1">CRT</td><td align="center" valign="middle" style="border-bottom:solid thin" rowspan="1" colspan="1">Constant</td></tr></tbody></table><table-wrap-foot><fn><p>&#10004;: The scheme satisfies the feature. &#10005;: The scheme does not satisfy the feature.</p></fn></table-wrap-foot></table-wrap></floats-group></article></pmc-articleset>