<?xml version="1.0"  ?><!DOCTYPE pmc-articleset PUBLIC "-//NLM//DTD ARTICLE SET 2.0//EN" "https://dtd.nlm.nih.gov/ncbi/pmc/articleset/nlm-articleset-2.0.dtd"><pmc-articleset><article xmlns:mml="http://www.w3.org/1998/Math/MathML" xmlns:ali="http://www.niso.org/schemas/ali/1.0/" xml:lang="en" article-type="research-article" dtd-version="1.4"><processing-meta base-tagset="archiving" mathml-version="3.0" table-model="xhtml" tagset-family="jats"><restricted-by>pmc</restricted-by></processing-meta><front><journal-meta><journal-id journal-id-type="nlm-ta">Sensors (Basel)</journal-id><journal-id journal-id-type="iso-abbrev">Sensors (Basel)</journal-id><journal-id journal-id-type="pmc-domain-id">1660</journal-id><journal-id journal-id-type="pmc-domain">sensors</journal-id><journal-id journal-id-type="publisher-id">sensors</journal-id><journal-title-group><journal-title>Sensors (Basel, Switzerland)</journal-title></journal-title-group><issn pub-type="epub">1424-8220</issn><publisher><publisher-name>Multidisciplinary Digital Publishing Institute  (MDPI)</publisher-name></publisher></journal-meta><article-meta><article-id pub-id-type="pmcid">PMC12431045</article-id><article-id pub-id-type="pmcid-ver">PMC12431045.1</article-id><article-id pub-id-type="pmcaid">12431045</article-id><article-id pub-id-type="pmcaiid">12431045</article-id><article-id pub-id-type="doi">10.3390/s25175298</article-id><article-id pub-id-type="publisher-id">sensors-25-05298</article-id><article-version article-version-type="pmc-version">1</article-version><article-categories><subj-group subj-group-type="heading"><subject>Article</subject></subj-group></article-categories><title-group><article-title>Entropy Extraction from Wearable Sensors for Secure Cryptographic Key Generation in Blockchain and IoT Systems</article-title></title-group><contrib-group><contrib contrib-type="author"><contrib-id contrib-id-type="orcid" authenticated="true">https://orcid.org/0000-0003-1495-8677</contrib-id><name name-style="western"><surname>&#352;varcmajer</surname><given-names initials="M">Miljenko</given-names></name><role vocab="credit" vocab-identifier="https://credit.niso.org/" vocab-term="Conceptualization" vocab-term-identifier="https://credit.niso.org/contributor-roles/conceptualization/">Conceptualization</role><role vocab="credit" vocab-identifier="https://credit.niso.org/" vocab-term="Methodology" vocab-term-identifier="https://credit.niso.org/contributor-roles/methodology/">Methodology</role><role vocab="credit" vocab-identifier="https://credit.niso.org/" vocab-term="Software" vocab-term-identifier="https://credit.niso.org/contributor-roles/software/">Software</role><role vocab="credit" vocab-identifier="https://credit.niso.org/" vocab-term="Formal analysis" vocab-term-identifier="https://credit.niso.org/contributor-roles/formal-analysis/">Formal analysis</role><role vocab="credit" vocab-identifier="https://credit.niso.org/" vocab-term="Writing &#x2013; original draft" vocab-term-identifier="https://credit.niso.org/contributor-roles/writing-original-draft/">Writing &#8211; original draft</role><xref rid="c1-sensors-25-05298" ref-type="corresp">*</xref></contrib><contrib contrib-type="author"><contrib-id contrib-id-type="orcid" authenticated="true">https://orcid.org/0000-0002-5141-3070</contrib-id><name name-style="western"><surname>K&#246;hler</surname><given-names initials="M">Mirko</given-names></name><role vocab="credit" vocab-identifier="https://credit.niso.org/" vocab-term="Conceptualization" vocab-term-identifier="https://credit.niso.org/contributor-roles/conceptualization/">Conceptualization</role><role vocab="credit" vocab-identifier="https://credit.niso.org/" vocab-term="Validation" vocab-term-identifier="https://credit.niso.org/contributor-roles/validation/">Validation</role><role vocab="credit" vocab-identifier="https://credit.niso.org/" vocab-term="Funding acquisition" vocab-term-identifier="https://credit.niso.org/contributor-roles/funding-acquisition/">Funding acquisition</role><role vocab="credit" vocab-identifier="https://credit.niso.org/" vocab-term="Visualization" vocab-term-identifier="https://credit.niso.org/contributor-roles/visualization/">Visualization</role><role vocab="credit" vocab-identifier="https://credit.niso.org/" vocab-term="Supervision" vocab-term-identifier="https://credit.niso.org/contributor-roles/supervision/">Supervision</role></contrib><contrib contrib-type="author"><contrib-id contrib-id-type="orcid" authenticated="true">https://orcid.org/0000-0003-2517-1853</contrib-id><name name-style="western"><surname>Krpi&#263;</surname><given-names initials="Z">Zdravko</given-names></name><role vocab="credit" vocab-identifier="https://credit.niso.org/" vocab-term="Methodology" vocab-term-identifier="https://credit.niso.org/contributor-roles/methodology/">Methodology</role><role vocab="credit" vocab-identifier="https://credit.niso.org/" vocab-term="Validation" vocab-term-identifier="https://credit.niso.org/contributor-roles/validation/">Validation</role><role vocab="credit" vocab-identifier="https://credit.niso.org/" vocab-term="Writing &#x2013; review &amp; editing" vocab-term-identifier="https://credit.niso.org/contributor-roles/writing-review-editing/">Writing &#8211; review &amp; editing</role></contrib><contrib contrib-type="author"><contrib-id contrib-id-type="orcid" authenticated="true">https://orcid.org/0000-0001-7867-3385</contrib-id><name name-style="western"><surname>Luki&#263;</surname><given-names initials="I">Ivica</given-names></name><role vocab="credit" vocab-identifier="https://credit.niso.org/" vocab-term="Validation" vocab-term-identifier="https://credit.niso.org/contributor-roles/validation/">Validation</role><role vocab="credit" vocab-identifier="https://credit.niso.org/" vocab-term="Formal analysis" vocab-term-identifier="https://credit.niso.org/contributor-roles/formal-analysis/">Formal analysis</role><role vocab="credit" vocab-identifier="https://credit.niso.org/" vocab-term="Writing &#x2013; review &amp; editing" vocab-term-identifier="https://credit.niso.org/contributor-roles/writing-review-editing/">Writing &#8211; review &amp; editing</role></contrib></contrib-group><aff id="af1-sensors-25-05298">Faculty of Electrical Engineering, Computer Science and Information Technology Osijek, Osijek 31000, Croatia; <email>mirko.kohler@ferit.hr</email> (M.K.); <email>zdravko.krpic@ferit.hr</email> (Z.K.); <email>ivica.lukic@ferit.hr</email> (I.L.)</aff><author-notes><corresp id="c1-sensors-25-05298"><label>*</label>Correspondence: <email>miljenko.svarcmajer@ferit.hr</email></corresp></author-notes><pub-date pub-type="epub"><day>26</day><month>8</month><year>2025</year></pub-date><pub-date pub-type="collection"><month>9</month><year>2025</year></pub-date><volume>25</volume><issue>17</issue><issue-id pub-id-type="pmc-issue-id">496815</issue-id><elocation-id>5298</elocation-id><history><date date-type="received"><day>18</day><month>7</month><year>2025</year></date><date date-type="rev-recd"><day>19</day><month>8</month><year>2025</year></date><date date-type="accepted"><day>24</day><month>8</month><year>2025</year></date></history><pub-history><event event-type="pmc-release"><date><day>26</day><month>08</month><year>2025</year></date></event><event event-type="pmc-live"><date><day>13</day><month>09</month><year>2025</year></date></event><event event-type="pmc-last-change"><date iso-8601-date="2025-09-13 11:25:14.803"><day>13</day><month>09</month><year>2025</year></date></event></pub-history><permissions><copyright-statement>&#169; 2025 by the authors.</copyright-statement><copyright-year>2025</copyright-year><license><ali:license_ref specific-use="textmining" content-type="ccbylicense">https://creativecommons.org/licenses/by/4.0/</ali:license_ref><license-p>Licensee MDPI, Basel, Switzerland. This article is an open access article distributed under the terms and conditions of the Creative Commons Attribution (CC BY) license (<ext-link xmlns:xlink="http://www.w3.org/1999/xlink" ext-link-type="uri" xlink:href="https://creativecommons.org/licenses/by/4.0/">https://creativecommons.org/licenses/by/4.0/</ext-link>).</license-p></license></permissions><self-uri xmlns:xlink="http://www.w3.org/1999/xlink" content-type="pmc-pdf" xlink:href="sensors-25-05298.pdf"/><abstract><sec sec-type="highlights"><title>Highlights</title><p>
<bold>What are the main findings?</bold>
<list list-type="bullet"><list-item><p>Entropy generated from smartwatch sensors in shake mode reached Shannon entropy of 0.997 and min-entropy of 0.918, approaching levels of software-based RNGs.</p></list-item><list-item><p>The proposed method enables fully offline, multisensor entropy harvesting on commercial Wear OS devices using only standard APIs.</p></list-item></list>
</p><p>
<bold>What is the implication of the main finding?</bold>
<list list-type="bullet"><list-item><p>Smartwatches can serve as practical, user-controlled entropy sources for local cryptographic key generation, including blockchain transaction signing.</p></list-item><list-item><p>The approach demonstrates a low-cost, open-source alternative to specialized hardware wallets, aligned with decentralization and self-sovereign identity principles.</p></list-item></list>
</p></sec><sec><title>Abstract</title><p>The increasing demand for decentralized and user-controlled cryptographic key management in blockchain ecosystems has created interest in alternative entropy sources that do not rely on dedicated hardware. This study investigates whether commercial smartwatches can generate sufficient entropy for secure local key generation by utilizing their onboard sensors. An open-source Wear OS application was developed to harvest sensor data in two acquisition modes: still mode, where the device remains stationary, and shake mode, where data collection is triggered by motion events exceeding a predefined acceleration threshold. A total of 4800 still-mode and 4800 shake-mode samples were collected, each producing 11,400 bits of sensor-generated data. Entropy was evaluated using statistical metrics commonly employed in entropy analysis, including Shannon entropy, min-entropy, Markov dependency analysis, and compression-based redundancy estimation. The shake mode achieved Shannon entropy of 0.997 and min-entropy of 0.918, outperforming the still mode (0.991 and 0.851, respectively) and approaching the entropy levels of software-based random number generators. These results demonstrate that smartwatches can act as practical entropy sources for cryptographic applications, provided that appropriate post-processing, such as cryptographic hashing, is applied. The method offers a low-cost, transparent, and user-friendly alternative to specialized hardware wallets, aligning with the principles of decentralization and self-sovereign identity.</p></sec></abstract><kwd-group><kwd>wearable sensors</kwd><kwd>smartwatch entropy generation</kwd><kwd>cryptographic key generation</kwd><kwd>Samsung Galaxy Watch</kwd><kwd>blockchain security</kwd><kwd>physiological and environmental signals</kwd><kwd>biometric entropy</kwd><kwd>random number generation</kwd></kwd-group><funding-group><funding-statement>This research received no external funding.</funding-statement></funding-group><custom-meta-group><custom-meta><meta-name>pmc-status-qastatus</meta-name><meta-value>0</meta-value></custom-meta><custom-meta><meta-name>pmc-status-live</meta-name><meta-value>yes</meta-value></custom-meta><custom-meta><meta-name>pmc-status-embargo</meta-name><meta-value>no</meta-value></custom-meta><custom-meta><meta-name>pmc-status-released</meta-name><meta-value>yes</meta-value></custom-meta><custom-meta><meta-name>pmc-prop-open-access</meta-name><meta-value>yes</meta-value></custom-meta><custom-meta><meta-name>pmc-prop-olf</meta-name><meta-value>no</meta-value></custom-meta><custom-meta><meta-name>pmc-prop-manuscript</meta-name><meta-value>no</meta-value></custom-meta><custom-meta><meta-name>pmc-prop-legally-suppressed</meta-name><meta-value>no</meta-value></custom-meta><custom-meta><meta-name>pmc-prop-has-pdf</meta-name><meta-value>yes</meta-value></custom-meta><custom-meta><meta-name>pmc-prop-has-supplement</meta-name><meta-value>no</meta-value></custom-meta><custom-meta><meta-name>pmc-prop-pdf-only</meta-name><meta-value>no</meta-value></custom-meta><custom-meta><meta-name>pmc-prop-suppress-copyright</meta-name><meta-value>no</meta-value></custom-meta><custom-meta><meta-name>pmc-prop-is-real-version</meta-name><meta-value>no</meta-value></custom-meta><custom-meta><meta-name>pmc-prop-is-scanned-article</meta-name><meta-value>no</meta-value></custom-meta><custom-meta><meta-name>pmc-prop-preprint</meta-name><meta-value>no</meta-value></custom-meta><custom-meta><meta-name>pmc-prop-in-epmc</meta-name><meta-value>yes</meta-value></custom-meta></custom-meta-group></article-meta></front><body><sec sec-type="intro" id="sec1-sensors-25-05298"><title>1. Introduction</title><p>Wearable devices, and particularly smartwatches, have become integral to health monitoring, activity recognition, and context-aware computing due to their continuous operation and integration of diverse sensors [<xref rid="B1-sensors-25-05298" ref-type="bibr">1</xref>,<xref rid="B2-sensors-25-05298" ref-type="bibr">2</xref>]. These sensors generate high-resolution physiological, motion, and environmental data, which, beyond their primary applications, have recently been explored as potential sources of physical entropy in IoT and mobile security contexts [<xref rid="B3-sensors-25-05298" ref-type="bibr">3</xref>]. Ensuring high-quality entropy is critical not only for conventional cryptographic applications but also for emerging decentralized systems. Sensor-derived entropy offers an attractive alternative to traditional hardware or software random number generators, as it leverages naturally occurring physical variability that is difficult to replicate or predict externally [<xref rid="B4-sensors-25-05298" ref-type="bibr">4</xref>,<xref rid="B5-sensors-25-05298" ref-type="bibr">5</xref>].</p><p>The secure generation and management of cryptographic keys are foundational to the trust model of blockchain systems [<xref rid="B6-sensors-25-05298" ref-type="bibr">6</xref>]. The integrity and authenticity of transactions rely on digital signatures derived from private keys, which must be generated using high-entropy sources to ensure cryptographic strength [<xref rid="B7-sensors-25-05298" ref-type="bibr">7</xref>,<xref rid="B8-sensors-25-05298" ref-type="bibr">8</xref>]. While traditional methods employ hardware security modules (HSMs), trusted platform modules (TPMs), or cryptographically secure pseudo-random number generators (CSPRNGs), these solutions are often bound to centralized infrastructure, proprietary implementations, or specialized external devices [<xref rid="B9-sensors-25-05298" ref-type="bibr">9</xref>,<xref rid="B10-sensors-25-05298" ref-type="bibr">10</xref>].</p><p>In contrast, users of blockchain-based systems typically favor decentralized, user-controlled, and open-source solutions [<xref rid="B11-sensors-25-05298" ref-type="bibr">11</xref>,<xref rid="B12-sensors-25-05298" ref-type="bibr">12</xref>]. Privacy, autonomy, and the minimization of trust in third parties are core principles in this domain. Consequently, there is growing interest in leveraging everyday personal devices as secure cryptographic platforms. Among these, the smartwatch presents a compelling opportunity. It is continuously worn, contains diverse motion and environmental sensors, and can operate independently of centralized services [<xref rid="B13-sensors-25-05298" ref-type="bibr">13</xref>,<xref rid="B14-sensors-25-05298" ref-type="bibr">14</xref>].</p><p>The key motivation behind this work lies in bridging the gap between user expectations in blockchain ecosystems and practical cryptographic security. By using entropy derived from physical interactions captured by a smartwatch (e.g., shaking motion), it is hypothesized that sufficient randomness can be harvested to generate private keys suitable for signing blockchain transactions. The approach promotes decentralization, avoids cloud-based key handling, and uses widely available hardware.</p><p>To illustrate the alignment between blockchain user values and the proposed approach, a comparison is provided in <xref rid="sensors-25-05298-t001" ref-type="table">Table 1</xref>.</p><p>There is a clear disparity between the expectations of blockchain users and the constraints imposed by traditional key management solutions. Users of decentralized systems consistently demonstrate a preference for local control over cryptographic keys, as reliance on centralized HSMs or cloud-based services introduces risks that conflict with the core principles of decentralization and self-sovereignty [<xref rid="B6-sensors-25-05298" ref-type="bibr">6</xref>,<xref rid="B11-sensors-25-05298" ref-type="bibr">11</xref>]. The smartwatch-based method addresses this by enabling local key generation and entropy harvesting on the user&#8217;s own device.</p><p>Privacy and autonomy are strengthened by removing any dependency on external servers. This also eliminates the need for network connectivity during entropy acquisition and key generation. This aligns with the design goals of self-sovereign identity systems, which prioritize the minimization of external trust assumptions. In addition, the use of open-source software remains a critical criterion for adoption in the blockchain community, where transparency and verifiability are highly valued [<xref rid="B15-sensors-25-05298" ref-type="bibr">15</xref>]. The proposed method, being platform-accessible and implementable on open devices such as those running Wear OS, supports this requirement.</p><p>The physical characteristics of smartwatches&#8212;being always-on, body-coupled, and already integrated into daily routines&#8212;offer an ergonomic and secure environment for cryptographic operations. Compared to smartphones, smartwatches typically run fewer third-party applications and operate in a more restricted software environment, reducing the potential attack surface and exposure to malicious software. This overcomes the usability and portability limitations of traditional hardware wallets, which often require additional devices and exhibit lower user acceptance [<xref rid="B12-sensors-25-05298" ref-type="bibr">12</xref>,<xref rid="B16-sensors-25-05298" ref-type="bibr">16</xref>].</p><p>Consequently, the smartwatch is positioned as a viable and user-aligned entropy source that addresses both technical requirements and ideological expectations in blockchain ecosystems.</p><p>Beyond meeting ideological expectations, the proposed approach derives its technical viability from the unique sensing capabilities of modern smartwatches. These devices include sensors such as accelerometers, gyroscopes, barometers, heart rate monitors, and ambient light sensors. They continuously capture multi-dimensional, time-varying signals. Such signals, particularly when elicited through deliberate user motion (e.g., hand shaking), introduce high levels of physical variability that are difficult to reproduce or predict externally. When properly sampled and conditioned, this sensor data has been shown to contain sufficient entropy to support secure cryptographic key generation [<xref rid="B17-sensors-25-05298" ref-type="bibr">17</xref>,<xref rid="B18-sensors-25-05298" ref-type="bibr">18</xref>,<xref rid="B19-sensors-25-05298" ref-type="bibr">19</xref>].</p><p>This reliance on real-world, body-coupled sensor input&#8212;rather than computational pseudo-randomness&#8212;differentiates the proposed method from conventional approaches, situates it within the broader research agenda of secure entropy harvesting from physical environments. Due to their widespread adoption, ergonomic design, and advanced sensors, smartwatches are a promising but underexplored platform for cryptographic operations in decentralized systems.</p><p>The main contributions of this work are as follows:<list list-type="bullet"><list-item><p>Systematic entropy analysis on a commercial smartwatch&#8212;to the best of our knowledge, this is the first study to systematically evaluate sensor-derived entropy on a commercial smartwatch in the context of cryptographic key generation for blockchain transaction signing.</p></list-item><list-item><p>Multisensor entropy harvesting with randomized sensor selection&#8212;a novel method is proposed that increases unpredictability by dynamically selecting a subset of sensors in each acquisition session.</p></list-item><list-item><p>Quantitative evaluation using standardized metrics&#8212;entropy is analyzed using statistical measures recommended by NIST SP 800-90B [<xref rid="B4-sensors-25-05298" ref-type="bibr">4</xref>], including Shannon entropy, min-entropy, Markov dependency analysis, and compression-based redundancy estimation.</p></list-item><list-item><p>Comparison with established RNGs&#8212;results are compared against hardware- and software-based random number generators, demonstrating competitive entropy levels, particularly in motion-triggered acquisition.</p></list-item><list-item><p>Practical implementation on a commercially available device&#8212;the proposed method is implemented as an open-source Wear OS application running fully offline on a Samsung Galaxy Watch 7 (Samsung Electronics Co., Ltd., Suwon, South Korea), demonstrating that no specialized hardware is required.</p></list-item></list></p><p>The study also has several limitations:<list list-type="bullet"><list-item><p>Data were collected from a single smartwatch model and a single participant, limiting generalizability.</p></list-item><list-item><p>Only a subset of NIST-recommended tests was applied, with full SP 800-90B validation left for future work.</p></list-item><list-item><p>Per-sensor entropy contribution was not analyzed in detail, and motion sensors dominate the entropy pool due to their higher sampling rates.</p></list-item></list></p><p>The remainder of this paper is organized as follows. <xref rid="sec2-sensors-25-05298" ref-type="sec">Section 2</xref> reviews related work, providing a categorization of hardware-, software-, and sensor-based entropy generation methods. <xref rid="sec3-sensors-25-05298" ref-type="sec">Section 3</xref> presents the proposed method, describing the system architecture, sensor selection criteria, entropy acquisition protocol, and measurement procedure. <xref rid="sec4-sensors-25-05298" ref-type="sec">Section 4</xref> reports the results of entropy evaluation for still and shake acquisition modes, includes a comparative analysis with established random number generation methods, and discusses the implications of the findings. Finally, <xref rid="sec5-sensors-25-05298" ref-type="sec">Section 5</xref> concludes the study and outlines potential directions for future research.</p></sec><sec id="sec2-sensors-25-05298"><title>2. Related Work</title><p>Reliable cryptographic key generation requires access to high-quality entropy sources that are resistant to prediction, manipulation, and external influence. The generation of such entropy has been the focus of significant research across multiple domains, ranging from low-level hardware implementations to software-based pseudorandom generators and emerging approaches utilizing physiological or environmental data. Each of these methods exhibits distinct trade-offs in terms of security, transparency, hardware dependency, and suitability for mobile or decentralized contexts.</p><p>In this section, existing approaches to entropy generation are categorized into three main groups as shown in <xref rid="sensors-25-05298-f001" ref-type="fig">Figure 1</xref>. <xref rid="sec2dot1-sensors-25-05298" ref-type="sec">Section 2.1</xref> reviews hardware-based methods, which typically rely on secure elements, TPMs, and hardware wallets equipped with true random number generators (TRNGs). <xref rid="sec2dot2-sensors-25-05298" ref-type="sec">Section 2.2</xref> examines software-based methods, including cryptographically secure pseudorandom number generators (CSPRNGs), deterministic key derivation using mnemonic phrases, and entropy extraction from biometric data. Finally, <xref rid="sec2dot3-sensors-25-05298" ref-type="sec">Section 2.3</xref> focuses on wearable and sensor-based approaches, which exploit human motion, environmental variability, and embedded sensing capabilities to derive entropy directly from physical interactions.</p><sec id="sec2dot1-sensors-25-05298"><title>2.1. Hardware-Based Entropy Resources</title><p>Hardware-based methods for entropy generation rely on physical processes and dedicated components to produce random values with high unpredictability. Such systems are commonly integrated into secure computing environments through elements like hardware security modules (HSMs), trusted platform modules (TPMs), and consumer-grade hardware wallets such as the Ledger Nano or Trezor. These devices typically incorporate TRNGs that operate based on electronic noise, clock jitter, or metastable states in silicon [<xref rid="B20-sensors-25-05298" ref-type="bibr">20</xref>].</p><p>Ledger hardware wallets, for example, use a certified secure element (e.g., ST33 or ST31 chipsets) that integrates a TRNG in accordance with ISO/IEC 18031 [<xref rid="B21-sensors-25-05298" ref-type="bibr">21</xref>] and Common Criteria EAL5+ standards [<xref rid="B22-sensors-25-05298" ref-type="bibr">22</xref>,<xref rid="B23-sensors-25-05298" ref-type="bibr">23</xref>]. During device initialization, entropy is gathered internally and processed via deterministic key derivation functions to generate BIP39-compliant mnemonic phrases [<xref rid="B24-sensors-25-05298" ref-type="bibr">24</xref>,<xref rid="B25-sensors-25-05298" ref-type="bibr">25</xref>]. The seed remains confined to the secure element, thereby minimizing attack surfaces from the host system. Similarly, TPMs available in modern computing platforms can generate entropy internally and securely store cryptographic keys for applications such as full disk encryption or TLS [<xref rid="B26-sensors-25-05298" ref-type="bibr">26</xref>].</p><p>Another example of a hardware-based entropy source is Intel&#8217;s RDRAND instruction, available on modern Intel processors. It implements a digital random number generator (DRNG) based on an on-chip TRNG seeding an AES-based deterministic random bit generator (DRBG), following the NIST SP 800-90A standard [<xref rid="B9-sensors-25-05298" ref-type="bibr">9</xref>,<xref rid="B10-sensors-25-05298" ref-type="bibr">10</xref>]. Although RDRAND provides cryptographically strong randomness in theory, concerns have been raised regarding the transparency and auditability of its internal design, including potential backdoors [<xref rid="B7-sensors-25-05298" ref-type="bibr">7</xref>]. As such, its use in security-critical applications is often debated, particularly within communities that prioritize verifiability and open-source principles.</p><p>While these approaches offer high entropy quality and resistance to tampering, they present several limitations when viewed from the perspective of decentralization and user autonomy. Most hardware wallets are proprietary, closed-source systems, limiting independent verification of the entropy generation process [<xref rid="B12-sensors-25-05298" ref-type="bibr">12</xref>]. Furthermore, they require users to purchase and carry additional devices, which may not align with usability preferences in mobile-first or minimal-hardware contexts. HSMs and TPMs, while suitable for enterprise or server environments, are impractical for personal or wearable deployment due to their physical and infrastructural requirements.</p><p>In summary, hardware-based entropy sources are well-established and cryptographically robust, but their dependence on specialized components and limited transparency restricts their suitability for open, user-centric, and mobile cryptographic systems&#8212;particularly within decentralized ecosystems such as blockchain.</p></sec><sec id="sec2dot2-sensors-25-05298"><title>2.2. Software-Based Entropy Generation Methods</title><p>Software-based methods for entropy generation and random number derivation are widely employed in cryptographic systems due to their ease of deployment and platform independence. These methods generally rely on deterministic algorithms that are seeded with entropy gathered from various system-level events, user interactions, or hardware noise. Once initialized, such generators produce cryptographically secure pseudorandom numbers (CSPRNGs) that meet statistical criteria for unpredictability and uniformity [<xref rid="B10-sensors-25-05298" ref-type="bibr">10</xref>].</p><p>One of the most widely adopted software-based approaches is the/dev/urandom interface in Unix-like operating systems, which combines system entropy pools with cryptographic mixing functions to generate pseudorandom output [<xref rid="B27-sensors-25-05298" ref-type="bibr">27</xref>]. Although efficient and practical/dev/urandom is not guaranteed to be forward- or backward-secure without sufficient initial entropy, particularly in early boot stages [<xref rid="B28-sensors-25-05298" ref-type="bibr">28</xref>]. OpenSSL&#8217;s RAND_bytes() and similar functions provide CSPRNG capabilities based on NIST-recommended deterministic random bit generators (DRBGs), but inherit similar limitations regarding their dependence on the quality and availability of initial entropy sources [<xref rid="B29-sensors-25-05298" ref-type="bibr">29</xref>].</p><p>Stream cipher-based CSPRNGs, such as ChaCha20 as implemented in the libsodium library, have gained popularity due to their performance, simplicity, and resistance to side-channel attacks [<xref rid="B30-sensors-25-05298" ref-type="bibr">30</xref>]. These generators are often used for ephemeral key generation, nonce construction, and secure messaging protocols. While their internal state transitions are cryptographically robust, their unpredictability is only as strong as the entropy present in their initial seeding.</p><p>In addition to traditional software approaches, biometric and behavioral data&#8212;such as keystroke dynamics, heart rate variability, and touchscreen interactions&#8212;have been proposed as alternative entropy sources [<xref rid="B31-sensors-25-05298" ref-type="bibr">31</xref>]. Although promising, these methods typically require user-specific calibration and may exhibit limited entropy under constrained conditions or in passive collection scenarios.</p><p>Overall, software-based methods provide accessible and efficient mechanisms for entropy generation. However, they are fundamentally limited by the quality and trustworthiness of their initial seeding sources, which may themselves be hardware-dependent or opaque. This reinforces the importance of evaluating entropy sources that are both transparent and physically grounded, as explored in wearable sensor-based methods.</p></sec><sec id="sec2dot3-sensors-25-05298"><title>2.3. Wearable and Sensor-Based Approaches</title><p>Recent advances in wearable technology have enabled the integration of a wide range of sensors into compact, body-coupled devices. These sensors, originally intended for health monitoring or activity tracking, have been increasingly explored as entropy sources for cryptographic purposes. The motivation lies in their capacity to capture inherently unpredictable and user-specific physical phenomena, such as hand movements, gait, temperature fluctuations, and cardiovascular signals [<xref rid="B32-sensors-25-05298" ref-type="bibr">32</xref>].</p><p>Prior research has examined the feasibility of using accelerometer and gyroscope data to generate random sequences by exploiting the stochastic nature of human motion [<xref rid="B33-sensors-25-05298" ref-type="bibr">33</xref>]. Other studies have explored entropy extraction from photoplethysmography (PPG) signals, electrodermal activity (EDA), and skin temperature, aiming to leverage biometric variability for key generation [<xref rid="B34-sensors-25-05298" ref-type="bibr">34</xref>]. These approaches offer the advantage of continuous, real-time entropy harvesting, which aligns with the operational patterns of modern wearable devices.</p><p>Practical deployments remain limited. Many proposed systems rely on custom hardware, controlled environments, or data post-processing steps that hinder real-time applicability. Additionally, some platforms, such as proprietary smartwatches with closed firmware, restrict access to raw sensor data and reduce transparency and reproducibility. Previous studies were primarily focused on biometric authentication, secure pairing, or device identification rather than explicit cryptographic key generation, and to the best of our knowledge, no prior work has systematically evaluated entropy from commercial smartwatch sensors for this purpose.</p><p>In contrast, the present work focuses on entropy harvesting from commercially available smartwatches running open platforms (e.g., Wear OS) using native sensors and real-world user interactions. By analyzing motion data in both active (shake) and passive (still) conditions, a quantifiable entropy model is established and compared against traditional entropy sources. This sensor-based method is not only portable and decentralized but also verifiable and open for audit, traits that are particularly valued in blockchain ecosystems.</p></sec></sec><sec id="sec3-sensors-25-05298"><title>3. Proposed Method</title><p>In this section, the proposed approach for entropy harvesting from smartwatch sensors is presented. The method is designed to enable the local generation of cryptographic entropy on commercially available wearable devices, without the need for external hardware, cloud infrastructure, or platform-specific dependencies. Emphasis is placed on leveraging existing smartwatch onboard sensors to maximize compatibility, portability, and openness of the solution, as shown in <xref rid="sensors-25-05298-f002" ref-type="fig">Figure 2</xref>. The figure illustrates the complete entropy acquisition sequence: the user initiates the process through a shake gesture, multiple onboard sensors capture motion, environmental, and physiological data, the collected signals are vectorized into numerical representations, and these are subsequently processed to produce cryptographic key material.</p><sec id="sec3dot1-sensors-25-05298"><title>3.1. System Overview</title><p>The system operates locally on a commercial smartwatch and collects entropy exclusively from onboard sensors. Two acquisition modes are supported:<list list-type="bullet"><list-item><p>Still mode&#8212;data are recorded while the device remains stationary to capture environmental and physiological variability.</p></list-item><list-item><p>Shake mode&#8212;acquisition is triggered by motion events exceeding a predefined acceleration threshold, collecting short bursts of high-frequency data from motion sensors.</p></list-item></list></p><p>In both modes, sensor data are transformed into numerical vectors and processed locally. Each acquisition produces a fixed-size entropy representation and a SHA-256 digest, enabling further analysis and potential cryptographic use. No network connectivity or external hardware is required.</p></sec><sec id="sec3dot2-sensors-25-05298"><title>3.2. Sensor Selection</title><p>The selection of sensors was based on their availability on commercial smartwatches, their capacity to produce non-deterministic data streams, and their relevance to both environmental and physiological variability. Sensors were grouped into three categories according to their origin and signal dynamics:<list list-type="order"><list-item><p>Motion sensors, including the accelerometer, gyroscope, rotation vector, and linear acceleration, capture rapid, user-dependent variations during wrist movement. These sensors exhibit high temporal resolution and significant entropy potential, especially when motion is spontaneous or randomized.</p></list-item><list-item><p>Body sensors, such as the heart rate monitor and step counter, provide user-specific physiological signals. While typically more stable than motion data, their variability across time and individuals can still contribute valuable entropy, particularly in multimodal fusion contexts.</p></list-item><list-item><p>Environmental sensors, such as the barometric pressure sensor, measure external physical conditions. These signals vary subtly over time and can introduce low-frequency noise that increases unpredictability in passive (still) acquisition scenarios.</p></list-item></list></p><p>In this study, a total of eight sensors were selected based on their prevalence across modern smartwatches (especially those running Wear OS), their accessibility via standard APIs, and a preliminary review of device hardware specifications from manufacturers such as Samsung and Google. The selected sensors were as follows:<list list-type="order"><list-item><p>Accelerometer</p></list-item><list-item><p>Gyroscope</p></list-item><list-item><p>Rotation Vector Sensor</p></list-item><list-item><p>Linear Acceleration Sensor</p></list-item><list-item><p>Gravity Sensor</p></list-item><list-item><p>Barometer (Pressure Sensor)</p></list-item><list-item><p>Heart Rate Sensor</p></list-item><list-item><p>Step Counter</p></list-item></list></p><p>These sensors were chosen due to their ubiquity, dynamic behavior, and low power requirements. According to the official Android developer documentation and public specifications of devices such as the Samsung Galaxy Watch 5/6/7 and Google Pixel Watch 2 (Google LLC, Mountain View, CA, USA), these are consistently available and produce sufficient signal entropy under both still and active conditions [<xref rid="B35-sensors-25-05298" ref-type="bibr">35</xref>,<xref rid="B36-sensors-25-05298" ref-type="bibr">36</xref>]. An overview of their typical sampling frequencies and the expected number of measurements within a single 2.2 s acquisition window is provided in <xref rid="sensors-25-05298-t002" ref-type="table">Table 2</xref>.</p><p>All onboard sensors are factory-calibrated according to Samsung manufacturer specifications [<xref rid="B35-sensors-25-05298" ref-type="bibr">35</xref>], ensuring baseline measurement accuracy without the need for user-performed calibration.</p><p>The decision to utilize a randomized subset of active sensors during each session was made to increase entropy diversity and to mitigate predictability. This dynamic selection further prevents adversaries from replicating sensor access patterns or tailoring attacks to fixed data sources.</p><p>All selected sensors are accessible via the Android Wear OS SensorManager API without requiring elevated permissions, ensuring user-level deployment feasibility. Access to these sensors was managed entirely through the standard Android/Wear OS permission framework. At runtime, the system prompts the user to explicitly grant the necessary permissions (e.g., BODY_SENSORS for heart rate, ACTIVITY_RECOGNITION for motion data, and general sensor access for inertial and environmental sensors). These permissions are requested through standard Android dialog boxes, and data collection cannot proceed without user approval. Once granted, the application registers listeners through the Android SensorManager API, which delivers real-time data streams only from the sensors authorized by the user. This guarantees that all acquisitions remain subject to explicit consent, enforced at the OS level, and that no restricted or undocumented system functions are bypassed. Importantly, the combination of diverse sensor types enhances entropy quality through data fusion, as statistical correlations between sensor modalities are minimal, especially during short sampling windows.</p><p>The relative contribution of each sensor to the total amount of data collected in a single 2.2 s acquisition window is shown in <xref rid="sensors-25-05298-f003" ref-type="fig">Figure 3</xref>. Motion sensors such as the accelerometer and gyroscope dominate the data volume due to their high sampling rates, whereas environmental and physiological sensors (barometer, heart rate, and step counter) contribute significantly less.</p><p>Despite their lower sampling rates, the inclusion of these sensors is recommended because they provide heterogeneous, physically independent signal sources. This diversity increases overall entropy by introducing additional stochastic variability and reducing the risk of correlated patterns across sensor modalities.</p></sec><sec id="sec3dot3-sensors-25-05298"><title>3.3. Entropy Acquisition Protocol</title><p>The entropy acquisition process is governed by a lightweight protocol implemented entirely on the smartwatch, designed to operate autonomously and without network connectivity. Two distinct acquisition modes were defined to capture different entropy profiles:<list list-type="order"><list-item><p>Still mode: Sensor data are collected over a fixed time window starting immediately upon application launch, while the user remains stationary. This mode targets slow-changing environmental and physiological inputs such as pressure, heart rate, and gravity.</p></list-item><list-item><p>Shake mode: Acquisition is event-driven and triggered by a motion-detection threshold. In this study, the threshold for acceleration magnitude was empirically set to 8.0 m/s<sup>2</sup> based on preliminary experiments to balance sensitivity and noise rejection.</p><p>This value ensured reliable detection of intentional shake gestures while minimizing false triggers from normal wrist movements.</p><p>Upon detecting a change in acceleration magnitude, a short burst of high-frequency data is collected from selected motion sensors.</p></list-item></list></p><p>Each acquisition session begins with the randomized selection of a subset of sensors from the list defined in <xref rid="sec3dot2-sensors-25-05298" ref-type="sec">Section 3.2</xref>. This randomization introduces additional unpredictability and hinders potential adversaries from anticipating sensor combinations.</p><p>Once triggered, the application performs the following steps, shown in <xref rid="sensors-25-05298-f004" ref-type="fig">Figure 4</xref>:<list list-type="order"><list-item><p>Sampling: Raw sensor data are collected using the Android SensorManager API, with typical sampling rates ranging from 50 Hz to 200 Hz, depending on sensor type. The acquisition window was set to 2.2 s to ensure that each selected sensor provides at least one complete measurement cycle, as determined from the manufacturer&#8217;s specifications for update frequencies. An additional 0.3-s pause between sessions was introduced to ensure that sensor buffers were flushed before the next acquisition.</p></list-item><list-item><p>Vectorization: Each data frame is transformed into a structured 1D numerical vector and concatenated with a timestamp and sensor identifier. This produces a uniform and reproducible representation of heterogeneous sensor streams1.</p></list-item><list-item><p>Preprocessing: Basic normalization is applied to account for sensor scaling, and values are discretized to 8-bit resolution to align with common entropy evaluation practices (e.g., NIST SP 800-90B), reducing high-frequency sensor noise and enabling direct applicability of standardized statistical tests.</p></list-item><list-item><p>Hashing: The final vectorized output is processed through a cryptographic hash function (SHA-256) to produce a fixed-length digest, which is treated as the entropy-bearing seed or candidate cryptographic key.</p></list-item></list></p><p>All steps are performed entirely offline, and no data leaves the device at any point. Logging is used internally to record entropy metrics for evaluation purposes but remains sandboxed within the application environment. This approach ensures privacy, replicability, and full user control over the entropy generation process.</p></sec><sec id="sec3dot4-sensors-25-05298"><title>3.4. Implementation Details</title><p>The proposed entropy acquisition system was implemented as a standalone application for smartwatches running Wear OS. The application was developed using Kotlin (version 1.9.23) and Jetpack Compose (version 1.7.0), following modern Android development practices and targeting API level 30 and above. This ensured a responsive and efficient user interface suitable for low-power wearable environments.</p><p>The application&#8217;s lifecycle is minimal and fully event-driven. Upon first launch, the app detects all available onboard sensors using the SensorManager API and performs a one-time random shuffle to define the acquisition sequence. This randomized order remains fixed throughout each session to ensure consistency in entropy sampling.</p><p>For user interaction, a minimal interface is presented, displaying the message &#8220;Shake to Start&#8221; once initialization is complete. When the device detects a motion exceeding a predefined acceleration threshold, a short data acquisition window is triggered. During this window, data are collected asynchronously from the selected subset of sensors.</p><p>Each sampling session produces a single entry stored in a CSV file within the application sandbox. This entry includes the following:<list list-type="order"><list-item><p>A sequence index,</p></list-item><list-item><p>A transformed numerical representation of the collected sensor data (as a single entropy vector or derived scalar),</p></list-item><list-item><p>Timestamp (optional).</p></list-item></list></p><p>The application operates fully locally on the smartwatch, ensuring user privacy and full control over the collected data.</p><p>For entropy assessment and cryptographic relevance, each collected sensor vector is hashed using the SHA-256 algorithm, generating a fixed-length digest suitable for seeding key material. These digests are used exclusively for evaluation and remain confined to local storage.</p><p>The application was evaluated on a Samsung Galaxy Watch 7, which provided full compatibility with the Wear OS platform and offered unrestricted access to all required sensor interfaces. This smartwatch was chosen as the test device due to its exceptional suitability for entropy-related experimentation: it supports open app deployment, features a wide array of onboard sensors, and is well-documented within the Android development ecosystem.</p><p>From a security perspective, the potential attack surface is inherently reduced since all entropy harvesting, processing, and key generation steps are executed entirely on the smartwatch. No raw sensor data or intermediate entropy values are transmitted to external devices or networks, which significantly limits opportunities for interception or manipulation during the acquisition process.</p><p>The full source code is publicly available on GitHub, enabling independent verification of the data acquisition process and reproducibility of the experiments without exposing sensitive raw sensor data.</p><p><xref rid="sensors-25-05298-f005" ref-type="fig">Figure 5</xref> provides an overview of the proposed system architecture, showing the interactions between on-watch physical sensors, acquisition mode logic, and processing modules. This complements the procedural details described in <xref rid="sec3dot3-sensors-25-05298" ref-type="sec">Section 3.3</xref> and <xref rid="sec3dot4-sensors-25-05298" ref-type="sec">Section 3.4</xref>.</p></sec><sec id="sec3dot5-sensors-25-05298"><title>3.5. Measurement Procedure</title><p>The measurement procedure was conducted in two phases: an initial phase aimed at application refinement and a final phase dedicated to systematic entropy evaluation.</p><sec id="sec3dot5dot1-sensors-25-05298"><title>3.5.1. Preliminary Testing</title><p>Several iterations of the application were tested to refine sensor handling, data transformation, and motion detection logic. Approximately 1000 preliminary samples were collected during this phase. These were used exclusively for debugging and early entropy estimation and were excluded from the final statistical analysis.</p></sec><sec id="sec3dot5dot2-sensors-25-05298"><title>3.5.2. Final Measurements&#8212;Still Mode</title><p>The first final measurement phase targeted the still mode, with the smartwatch placed motionless on a desk to minimize user-induced variability. Entropy in this mode was therefore primarily derived from sensor noise and subtle environmental micro-variations.
<list list-type="bullet"><list-item><p>A total of 5000 measurements were initially recorded.</p></list-item><list-item><p>Each measurement lasted 2.2 s and produced 11,400 bits of sensor-derived data.</p></list-item><list-item><p>Successive measurements were automatically triggered with a 0.3-s delay.</p></list-item><list-item><p>Before the completion of the 5000 still-mode measurements, the smartwatch was inadvertently displaced on the desk. To ensure consistency, the last 200 measurements were excluded from the analysis, leaving 4800 valid samples, which was more than sufficient for statistical testing.</p></list-item></list></p></sec><sec id="sec3dot5dot3-sensors-25-05298"><title>3.5.3. Final Measurements&#8212;Shake Mode</title><p>In the second phase, the smartwatch was worn on the wrist of a single participant performing daily activities. Data acquisition was event-driven and triggered only when wrist motion exceeded a predefined acceleration threshold (as described in <xref rid="sec3dot3-sensors-25-05298" ref-type="sec">Section 3.3</xref>). Each trigger produced one entropy sample under the same sampling and formatting conditions as in still mode. A total of 4800 samples were collected in this mode.</p><p>All measurements were stored in CSV format, with one line per sample containing the sequence index, the numerical entropy vector, and its locally computed SHA-256 digest. No preprocessing was applied beyond normalization and discretization (<xref rid="sec3dot3-sensors-25-05298" ref-type="sec">Section 3.3</xref>), ensuring that entropy analysis reflected raw sensor variability. Datasets were exported manually for offline statistical evaluation. The experimental workflow is summarized in <xref rid="sensors-25-05298-f006" ref-type="fig">Figure 6</xref>.</p></sec></sec></sec><sec id="sec4-sensors-25-05298"><title>4. Analysis of Results</title><p>This section presents the entropy analysis of the proposed smartwatch-based method for still and shake acquisition modes. Several statistical metrics commonly used in entropy evaluation, including measures recommended by NIST SP 800-90B, were applied to assess the unpredictability of the collected data.</p><p>The obtained results are compared with established hardware- and software-based entropy sources to evaluate the cryptographic suitability of the method.</p><sec sec-type="methods" id="sec4dot1-sensors-25-05298"><title>4.1. Entropy Evaluation Methodology</title><p>The statistical evaluation of the smartwatch sensor data was conducted in accordance with widely accepted practices for assessing entropy sources, with reference to the guidelines outlined in NIST SP 800-90B [<xref rid="B4-sensors-25-05298" ref-type="bibr">4</xref>]. Since the goal of the study was to determine whether sensor-derived data could provide sufficient unpredictability for cryptographic key generation, multiple complementary metrics were employed to capture different aspects of randomness and statistical independence.</p><p>Four primary evaluation methods were applied:<list list-type="order"><list-item><p><bold>Shannon Entropy</bold></p><p>Shannon entropy was computed according to (1) to quantify the average information content per symbol in the collected sequences. This metric is widely used as an indicator of randomness quality, as it reflects how uniformly the observed symbols are distributed [<xref rid="B37-sensors-25-05298" ref-type="bibr">37</xref>]. Although NIST SP 800-90B does not recommend it as a primary security metric due to its sensitivity to distributional assumptions, it provides a valuable initial assessment of entropy sources.<disp-formula id="FD1-sensors-25-05298"><label>(1)</label><mml:math id="mm1" display="block" overflow="scroll"><mml:mrow><mml:mrow><mml:msub><mml:mi mathvariant="normal">H</mml:mi><mml:mi>Shannon</mml:mi></mml:msub><mml:mrow><mml:mo>=</mml:mo><mml:mo>&#8722;</mml:mo></mml:mrow><mml:mrow><mml:munderover><mml:mo stretchy="false">&#8721;</mml:mo><mml:mrow><mml:mi>i</mml:mi><mml:mo>=</mml:mo><mml:mn>1</mml:mn></mml:mrow><mml:mrow><mml:mi>n</mml:mi></mml:mrow></mml:munderover><mml:mrow><mml:msub><mml:mi mathvariant="normal">p</mml:mi><mml:mi mathvariant="normal">i</mml:mi></mml:msub><mml:msub><mml:mi>log</mml:mi><mml:mn>2</mml:mn></mml:msub><mml:mo>(</mml:mo><mml:mi>pi</mml:mi><mml:mo>)</mml:mo></mml:mrow></mml:mrow></mml:mrow></mml:mrow></mml:math></disp-formula></p><p>Here, <italic toggle="yes">p<sub>i</sub></italic> represents the empirical probability of symbol <italic toggle="yes">i</italic>, and <italic toggle="yes">n</italic> is the total number of distinct symbols. Higher entropy values indicate a more uniform distribution and therefore greater unpredictability.</p></list-item><list-item><p><bold>Min-Entropy</bold></p><p>Min-entropy was calculated according to (2) to estimate the worst-case unpredictability of the sensor-derived sequences. Unlike Shannon entropy, which measures the average information content, min-entropy focuses on the most probable symbol and therefore provides a conservative lower bound on the true entropy of a source. This makes it particularly relevant for cryptographic applications, as recommended by NIST SP 800-90B [<xref rid="B38-sensors-25-05298" ref-type="bibr">38</xref>].<disp-formula id="FD2-sensors-25-05298"><label>(2)</label><mml:math id="mm2" display="block" overflow="scroll"><mml:mrow><mml:mrow><mml:msub><mml:mi mathvariant="normal">H</mml:mi><mml:mi>min</mml:mi></mml:msub><mml:mo>=</mml:mo><mml:mo>&#8722;</mml:mo><mml:msub><mml:mi>log</mml:mi><mml:mn>2</mml:mn></mml:msub><mml:mo>(</mml:mo><mml:msub><mml:mi>max</mml:mi><mml:mi mathvariant="normal">i</mml:mi></mml:msub><mml:msub><mml:mi mathvariant="normal">P</mml:mi><mml:mi mathvariant="normal">i</mml:mi></mml:msub><mml:mo>)</mml:mo></mml:mrow></mml:mrow></mml:math></disp-formula></p><p>Here, max<sub>i</sub>P<sub>i</sub> is the highest empirical probability observed among all symbols. Lower maximum probabilities correspond to higher min-entropy values, indicating reduced predictability and greater suitability for secure key generation.</p></list-item><list-item><p><bold>Markov Dependency Analysis</bold></p><p>To account for potential temporal correlations between successive samples, a first-order Markov model was used to estimate the transition probabilities between states [<xref rid="B39-sensors-25-05298" ref-type="bibr">39</xref>]. This method is recommended for non-IID (non-independent and identically distributed) sources, which are typical for physical sensor measurements.</p></list-item><list-item><p><bold>Compression-Based Redundancy Estimation (GZIP Test)</bold></p><p>Compression-based methods are often used as heuristic indicators of structural regularities in data [<xref rid="B40-sensors-25-05298" ref-type="bibr">40</xref>]. In this study, a standard GZIP algorithm based on LZ77 compression was applied; sequences with higher entropy are expected to show lower compression ratios. While not formally equivalent to the compression test described in NIST SP 800-90B, the underlying principle is comparable [<xref rid="B41-sensors-25-05298" ref-type="bibr">41</xref>].</p></list-item></list></p><p>The selected metrics were chosen because they capture both global distributional properties (Shannon, GZIP) and conservative worst-case guarantees (min-entropy, Markov). More advanced NIST-defined tests, such as the most common value (MCV) test or restart/adaptive proportion tests, were not applied in this initial study and are planned for future work.</p><p>All metrics were computed on raw sensor-derived vectors exported directly from the smartwatch, without post-processing beyond the basic normalization described in <xref rid="sec3dot3-sensors-25-05298" ref-type="sec">Section 3.3</xref>.</p></sec><sec id="sec4dot2-sensors-25-05298"><title>4.2. Results&#8212;Smartwatch Entropy (Still vs. Shake)</title><p>The entropy of the collected data was evaluated separately for still and shake modes. Four statistical metrics were applied: Shannon entropy, min-entropy, Markov dependency analysis, and GZIP compression ratio. These metrics provide complementary perspectives on randomness, capturing both average information content and worst-case predictability. The results are summarized in <xref rid="sensors-25-05298-t003" ref-type="table">Table 3</xref>.</p><p>The shake mode consistently outperformed the still mode across all metrics, reflecting the higher variability and reduced temporal correlation introduced by spontaneous wrist motion. <xref rid="sensors-25-05298-f007" ref-type="fig">Figure 7</xref> shows the distribution of Shannon entropy values (computed according to (1)) for both modes, with the shake mode exhibiting a slightly higher median and a narrower interquartile range. This indicates that motion-triggered acquisition not only improves the average information content but also provides more stable randomness quality across individual samples.</p><p>The min-entropy distribution (<xref rid="sensors-25-05298-f008" ref-type="fig">Figure 8</xref>) reveals a more pronounced difference between the two modes. Still-mode samples show a wider spread and a lower median value, indicating stronger predictability and the presence of repeated patterns. In contrast, shake-mode samples cluster around higher values, demonstrating improved worst-case unpredictability, which is critical for cryptographic applications where the weakest entropy segment determines overall security.</p><p>Notably, the min-entropy of 0.918 (computed according to (2)) approaches levels typically observed in hardware-based random sources, indicating potential suitability for cryptographic applications. The lower GZIP compression ratio in still mode further confirms the presence of more regular patterns when the device is stationary.</p><p>These findings suggest that motion-driven acquisition provides significantly stronger entropy, while still-mode data may serve as a supplementary or fallback source under passive conditions.</p></sec><sec id="sec4dot3-sensors-25-05298"><title>4.3. Comparative Analysis with Other Methods</title><p>To assess the cryptographic relevance of the smartwatch-based entropy source, the obtained results were compared with representative hardware- and software-based random number generators. The comparison includes TRNGs, CSPRNGs, and commonly used operating system RNGs. Metrics for these established methods were taken from publicly available evaluations and previous studies and compared in <xref rid="sensors-25-05298-t004" ref-type="table">Table 4</xref>.</p><p>The shake mode results are competitive with operating system RNGs, showing only a minor deficit in min-entropy compared to/dev/urandom. While still below TRNG or CSPRNG levels, the smartwatch-based method demonstrates strong unpredictability given its reliance solely on locally harvested physical signals.</p><p>The still mode, although weaker, remains within acceptable entropy levels for non-critical randomness applications. Both modes benefit from decentralization, transparency, and the absence of external dependencies, which are key requirements for privacy-sensitive blockchain ecosystems.</p><p>These results demonstrate that a commodity smartwatch, without any dedicated cryptographic hardware, can deliver entropy levels approaching those of widely trusted OS RNGs and even nearing the lower range of TRNG performance. This finding is significant because it proves that secure, high-quality randomness can be sourced from devices that many blockchain users already own, thereby reducing cost barriers and removing the need for specialized external modules. The implications extend to decentralized systems and privacy-sensitive environments, where local and verifiable entropy generation directly on the user&#8217;s device mitigates supply-chain trust issues and centralization risks inherent in proprietary RNGs.</p></sec></sec><sec sec-type="discussion" id="sec5-sensors-25-05298"><title>5. Discussion</title><p>The results indicate that smartwatch sensors, particularly in motion-triggered (shake) mode, can serve as a viable source of cryptographic entropy. The observed Shannon entropy (0.997) and min-entropy (0.918) are comparable to software-based random number generators such as/dev/urandom and approach the lower bound of hardware-based TRNGs. This level of unpredictability is considered sufficient for many cryptographic operations, including key generation for blockchain transaction signing, provided that additional post-processing (e.g., cryptographic hashing or key-stretching) is applied [<xref rid="B1-sensors-25-05298" ref-type="bibr">1</xref>,<xref rid="B2-sensors-25-05298" ref-type="bibr">2</xref>].</p><p>The still mode produced weaker results, with a noticeably lower min-entropy (0.851) and higher data regularity, as confirmed by the compression analysis. Nevertheless, even this mode can supplement entropy pools in scenarios where active user interaction is not possible. Its inclusion reflects the practical need for passive entropy harvesting in wearables.</p><p>The Markov analysis confirmed that shake-mode data exhibit lower temporal correlations than still-mode data, validating the assumption that user-driven motion introduces additional randomness. This is particularly relevant for non-IID entropy sources, which are common in physical systems [<xref rid="B3-sensors-25-05298" ref-type="bibr">3</xref>].</p><p>Although human body motion or physiological indicators may seem externally observable, the entropy acquisition process is based on short 2.2-s sampling windows combined with randomized sensor subset selection. Within such a narrow time frame, it is practically infeasible to reproduce identical micro-variations in wrist acceleration, rotational dynamics, barometric pressure changes, and heart rate fluctuations. The unpredictability is further amplified by the fact that the active set of sensors differs across acquisition sessions and that their outputs are concatenated into entropy vectors according to the order in which measurements are received by the system. This results in subtle but irreproducible variations in vector structure. Consequently, even if gross user movements could be monitored from a distance, it would remain extremely difficult to replicate the exact multidimensional and temporally ordered conditions necessary to obtain the same entropy output.</p><p>Although the smartwatch-based method does not yet match the theoretical security of dedicated TRNGs or mature CSPRNGs, it offers unique advantages aligned with blockchain user requirements:<list list-type="bullet"><list-item><p>Decentralization and local control&#8212;entropy is generated and used entirely on the user&#8217;s own device, without reliance on centralized hardware or servers.</p></list-item><list-item><p>Transparency and auditability&#8212;open-source implementation allows public verification, unlike closed systems such as Intel RDRAND.</p></list-item><list-item><p>Practicality and accessibility&#8212;the method leverages existing consumer hardware, removing the need for specialized wallets or external RNG modules.</p></list-item></list></p><p>Future work will include a full NIST SP 800-90B evaluation, extended multi-user testing, and optimization of sensor fusion techniques to further improve min-entropy. These steps are expected to establish the method as a credible alternative for lightweight, user-centric cryptographic applications.</p></sec><sec sec-type="conclusions" id="sec6-sensors-25-05298"><title>6. Conclusions</title><p>This study demonstrated that commercially available smartwatches can serve as practical entropy sources for cryptographic applications, including blockchain transaction signing. By harvesting data from multiple onboard sensors, two acquisition modes&#8212;still and shake&#8212;were evaluated. The shake mode achieved Shannon entropy of 0.997 and min-entropy of 0.918, values comparable to established software-based random number generators, while the still mode, although weaker, provided a consistent supplementary entropy source.</p><p>The method offers several advantages relevant to blockchain ecosystems: it operates fully offline, requires no specialized hardware, and supports open-source implementation, aligning with the principles of decentralization and self-sovereign identity. Although the entropy levels do not yet reach those of dedicated TRNGs, the results indicate that, with appropriate post-processing (e.g., cryptographic hashing), smartwatch-generated entropy is sufficient for secure local key generation.</p><p>Several limitations should be acknowledged. The current evaluation was conducted using a single smartwatch model and participant, restricting the generalizability of the results. Only a subset of NIST SP 800-90B tests was applied, and no direct comparison with medical-grade measurement devices was performed, although the smartwatch sensors are factory-calibrated according to manufacturer specifications. A detailed security analysis was not conducted; however, the potential attack surface is significantly reduced by the fact that entropy harvesting and key generation occur entirely on the smartwatch without transmitting raw data externally.</p><p>Future work will expand testing to multi-user datasets, analyze entropy contributions of individual sensors, apply the complete NIST SP 800-90B framework, and include adversarial testing to evaluate robustness against targeted attacks. Additionally, a comparative analysis of power consumption and computational efficiency will be conducted to assess the practicality of long-term use. These steps aim to establish smartwatch-based entropy generation as a credible, user-friendly, and energy-efficient alternative to traditional key management solutions in security-critical domains.</p></sec></body><back><fn-group><fn><p><bold>Disclaimer/Publisher&#8217;s Note:</bold> The statements, opinions and data contained in all publications are solely those of the individual author(s) and contributor(s) and not of MDPI and/or the editor(s). MDPI and/or the editor(s) disclaim responsibility for any injury to people or property resulting from any ideas, methods, instructions or products referred to in the content.</p></fn></fn-group><notes><title>Author Contributions</title><p>Conceptualization, M.&#352;. and M.K.; methodology, M.&#352;. and Z.K.; software, M.&#352;.; validation, I.L., M.K. and Z.K.; formal analysis, M.&#352;. and I.L.; writing&#8212;original draft preparation, M.&#352;.; writing&#8212;review and editing, I.L. and Z.K.; visualization, M.K.; supervision, M.K.; funding acquisition, M.K. All authors have read and agreed to the published version of the manuscript.</p></notes><notes><title>Institutional Review Board Statement</title><p>Ethical review and approval were waived for this study due to its non-invasive nature and the fact that the only participant was the lead author.</p></notes><notes><title>Informed Consent Statement</title><p>Written informed consent has been obtained from the author, who was the only participant in the study.</p></notes><notes notes-type="data-availability"><title>Data Availability Statement</title><p>The data and source code supporting the findings of this study are publicly available at <uri xmlns:xlink="http://www.w3.org/1999/xlink" xlink:href="https://github.com/msvarcmajer/Entropy_samsung">https://github.com/msvarcmajer/Entropy_samsung</uri> (accessed on 25 August 2025). The repository contains all sensor datasets in CSV format and the Wear OS application source code used for data acquisition and entropy evaluation.</p></notes><notes notes-type="COI-statement"><title>Conflicts of Interest</title><p>The authors declare no conflicts of interest.</p></notes><ref-list><title>References</title><ref id="B1-sensors-25-05298"><label>1.</label><element-citation publication-type="journal"><person-group person-group-type="author"><name name-style="western"><surname>Kristoffersson</surname><given-names>A.</given-names></name><name name-style="western"><surname>Lind&#233;n</surname><given-names>M.</given-names></name></person-group><article-title>A Systematic Review of Wearable Sensors for Monitoring Physical Activity</article-title><source>Sensors</source><year>2022</year><volume>22</volume><elocation-id>573</elocation-id><pub-id pub-id-type="doi">10.3390/s22020573</pub-id><pub-id pub-id-type="pmid">35062531</pub-id><pub-id pub-id-type="pmcid">PMC8778538</pub-id></element-citation></ref><ref id="B2-sensors-25-05298"><label>2.</label><element-citation publication-type="journal"><person-group person-group-type="author"><name name-style="western"><surname>Piwek</surname><given-names>L.</given-names></name><name name-style="western"><surname>Ellis</surname><given-names>D.A.</given-names></name><name name-style="western"><surname>Andrews</surname><given-names>S.</given-names></name><name name-style="western"><surname>Joinson</surname><given-names>A.</given-names></name></person-group><article-title>The Rise of Consumer Health Wearables: Promises and Barriers</article-title><source>PLoS Med.</source><year>2016</year><volume>13</volume><elocation-id>e1001953</elocation-id><pub-id pub-id-type="doi">10.1371/journal.pmed.1001953</pub-id><pub-id pub-id-type="pmid">26836780</pub-id><pub-id pub-id-type="pmcid">PMC4737495</pub-id></element-citation></ref><ref id="B3-sensors-25-05298"><label>3.</label><element-citation publication-type="journal"><person-group person-group-type="author"><name name-style="western"><surname>Yang</surname><given-names>W.</given-names></name><name name-style="western"><surname>Wang</surname><given-names>S.</given-names></name><name name-style="western"><surname>Sahri</surname><given-names>N.M.</given-names></name><name name-style="western"><surname>Karie</surname><given-names>N.M.</given-names></name><name name-style="western"><surname>Ahmed</surname><given-names>M.</given-names></name><name name-style="western"><surname>Valli</surname><given-names>C.</given-names></name></person-group><article-title>Biometrics for Internet-of-Things Security: A Review</article-title><source>Sensors</source><year>2021</year><volume>21</volume><elocation-id>6163</elocation-id><pub-id pub-id-type="doi">10.3390/s21186163</pub-id><pub-id pub-id-type="pmid">34577370</pub-id><pub-id pub-id-type="pmcid">PMC8472874</pub-id></element-citation></ref><ref id="B4-sensors-25-05298"><label>4.</label><element-citation publication-type="book"><person-group person-group-type="author"><name name-style="western"><surname>S&#246;nmez Turan</surname><given-names>M.</given-names></name><name name-style="western"><surname>Barker</surname><given-names>E.</given-names></name><name name-style="western"><surname>Kelsey</surname><given-names>J.</given-names></name><name name-style="western"><surname>McKay</surname><given-names>K.</given-names></name><name name-style="western"><surname>Baish</surname><given-names>M.</given-names></name><name name-style="western"><surname>Boyle</surname><given-names>M.</given-names></name></person-group><source>Recommendation for the Entropy Sources Used for Random Bit Generation</source><publisher-name>National Institute of Standards and Technology</publisher-name><publisher-loc>Gaithersburg, MD, USA</publisher-loc><year>2018</year><pub-id pub-id-type="doi">10.6028/NIST.SP.800-90B</pub-id></element-citation></ref><ref id="B5-sensors-25-05298"><label>5.</label><element-citation publication-type="journal"><person-group person-group-type="author"><name name-style="western"><surname>R&#259;stoceanu</surname><given-names>F.</given-names></name><name name-style="western"><surname>Rughini&#537;</surname><given-names>R.</given-names></name><name name-style="western"><surname>Cioc&#238;rlan</surname><given-names>&#536;.-D.</given-names></name><name name-style="western"><surname>Enache</surname><given-names>M.</given-names></name></person-group><article-title>Sensor-Based Entropy Source Analysis and Validation for Use in IoT Environments</article-title><source>Electronics</source><year>2021</year><volume>10</volume><elocation-id>1173</elocation-id><pub-id pub-id-type="doi">10.3390/electronics10101173</pub-id></element-citation></ref><ref id="B6-sensors-25-05298"><label>6.</label><element-citation publication-type="book"><person-group person-group-type="author"><name name-style="western"><surname>Antonopoulos</surname><given-names>A.M.</given-names></name></person-group><source>Mastering Bitcoin: Unlocking Digital Cryptocurrencies</source><publisher-name>O&#8217;Reilly Media</publisher-name><publisher-loc>Sebastopol, CA, USA</publisher-loc><year>2014</year><isbn>978-1-4919-0264-6</isbn></element-citation></ref><ref id="B7-sensors-25-05298"><label>7.</label><element-citation publication-type="book"><person-group person-group-type="author"><name name-style="western"><surname>Narayanan</surname><given-names>A.</given-names></name><name name-style="western"><surname>Bonneau</surname><given-names>J.</given-names></name><name name-style="western"><surname>Felten</surname><given-names>E.</given-names></name><name name-style="western"><surname>Miller</surname><given-names>A.</given-names></name><name name-style="western"><surname>Goldfeder</surname><given-names>S.</given-names></name></person-group><source>Bitcoin and Cryptocurrency Technologies</source><publisher-name>Princeton University Press</publisher-name><publisher-loc>Princeton, NJ, USA</publisher-loc><year>2016</year><isbn>978-0-691-17169-2</isbn></element-citation></ref><ref id="B8-sensors-25-05298"><label>8.</label><element-citation publication-type="journal"><person-group person-group-type="author"><name name-style="western"><surname>Kshetri</surname><given-names>N.</given-names></name></person-group><article-title>Blockchain&#8217;s Roles in Strengthening Cybersecurity and Protecting Privacy</article-title><source>Telecommun. Policy</source><year>2017</year><volume>41</volume><fpage>1027</fpage><lpage>1038</lpage><pub-id pub-id-type="doi">10.1016/j.telpol.2017.09.003</pub-id></element-citation></ref><ref id="B9-sensors-25-05298"><label>9.</label><element-citation publication-type="webpage"><person-group person-group-type="author"><collab>Intel Corporation</collab></person-group><article-title>Intel<sup>&#174;</sup> Digital Random Number Generator (DRNG) Software Implementation Guide</article-title><comment>Available online: <ext-link xmlns:xlink="http://www.w3.org/1999/xlink" xlink:href="https://www.intel.com/content/www/us/en/developer/articles/guide/intel-digital-random-number-generator-drng-software-implementation-guide.html" ext-link-type="uri">https://www.intel.com/content/www/us/en/developer/articles/guide/intel-digital-random-number-generator-drng-software-implementation-guide.html</ext-link></comment><date-in-citation content-type="access-date" iso-8601-date="2025-07-16">(accessed on 16 July 2025)</date-in-citation></element-citation></ref><ref id="B10-sensors-25-05298"><label>10.</label><element-citation publication-type="book"><person-group person-group-type="author"><name name-style="western"><surname>Barker</surname><given-names>E.</given-names></name><name name-style="western"><surname>Kelsey</surname><given-names>J.</given-names></name></person-group><source>Recommendation for Random Number Generation Using Deterministic Random Bit Generators</source><comment>NIST Special Publication 800-90A Rev. 1</comment><publisher-name>National Institute of Standards and Technology</publisher-name><publisher-loc>Gaithersburg, MD, USA</publisher-loc><year>2015</year><pub-id pub-id-type="doi">10.6028/NIST.SP.800-90Ar1</pub-id></element-citation></ref><ref id="B11-sensors-25-05298"><label>11.</label><element-citation publication-type="book"><person-group person-group-type="author"><name name-style="western"><surname>Eskandari</surname><given-names>S.</given-names></name><name name-style="western"><surname>Moosavi</surname><given-names>S.</given-names></name><name name-style="western"><surname>Clark</surname><given-names>J.</given-names></name></person-group><article-title>SoK: Transparent Dishonesty: Front-Running Attacks on Blockchain</article-title><source>Financial Cryptography and Data Security, FC 2020</source><person-group person-group-type="editor"><name name-style="western"><surname>Bracciali</surname><given-names>A.</given-names></name><name name-style="western"><surname>Clark</surname><given-names>J.</given-names></name><name name-style="western"><surname>Pintore</surname><given-names>F.</given-names></name><name name-style="western"><surname>R&#248;nne</surname><given-names>P.B.</given-names></name><name name-style="western"><surname>Sala</surname><given-names>M.</given-names></name></person-group><publisher-name>Springer</publisher-name><publisher-loc>Cham, Switzerland</publisher-loc><year>2020</year><fpage>170</fpage><lpage>189</lpage><pub-id pub-id-type="doi">10.1007/978-3-030-43725-1_13</pub-id></element-citation></ref><ref id="B12-sensors-25-05298"><label>12.</label><element-citation publication-type="confproc"><person-group person-group-type="author"><name name-style="western"><surname>Krombholz</surname><given-names>K.</given-names></name><name name-style="western"><surname>Mayer</surname><given-names>W.</given-names></name><name name-style="western"><surname>Schmiedecker</surname><given-names>M.</given-names></name><name name-style="western"><surname>Weippl</surname><given-names>E.</given-names></name></person-group><article-title>&#8220;I Have No Idea What i&#8217;m Doing&#8221;: On the Usability of Deploying HTTPS</article-title><source>Proceedings of the 26th USENIX Security Symposium (USENIX Security 17)</source><conf-loc>Vancouver, BC, Canada</conf-loc><conf-date>16&#8211;18 August 2017</conf-date><fpage>1339</fpage><lpage>1356</lpage></element-citation></ref><ref id="B13-sensors-25-05298"><label>13.</label><element-citation publication-type="confproc"><person-group person-group-type="author"><name name-style="western"><surname>Das</surname><given-names>A.</given-names></name><name name-style="western"><surname>Borisov</surname><given-names>N.</given-names></name><name name-style="western"><surname>Caesar</surname><given-names>M.</given-names></name></person-group><article-title>Do You Hear What I Hear? Fingerprinting Smart Devices Through Embedded Acoustic Components</article-title><source>Proceedings of the 2014 ACM SIGSAC Conference on Computer and Communications Security (CCS &#8217;14)</source><conf-loc>Scottsdale, AZ, USA</conf-loc><conf-date>3&#8211;7 November 2014</conf-date><publisher-name>Association for Computing Machinery</publisher-name><publisher-loc>New York, NY, USA</publisher-loc><year>2014</year><fpage>441</fpage><lpage>452</lpage><pub-id pub-id-type="doi">10.1145/2660267.2660315</pub-id></element-citation></ref><ref id="B14-sensors-25-05298"><label>14.</label><element-citation publication-type="journal"><person-group person-group-type="author"><name name-style="western"><surname>Silva-Trujillo</surname><given-names>A.G.</given-names></name><name name-style="western"><surname>Gonz&#225;lez Gonz&#225;lez</surname><given-names>M.J.</given-names></name><name name-style="western"><surname>Rocha P&#233;rez</surname><given-names>L.P.</given-names></name><name name-style="western"><surname>Garc&#237;a Villalba</surname><given-names>L.J.</given-names></name></person-group><article-title>Cybersecurity Analysis of Wearable Devices: Smartwatches Passive Attack</article-title><source>Sensors</source><year>2023</year><volume>23</volume><elocation-id>5438</elocation-id><pub-id pub-id-type="doi">10.3390/s23125438</pub-id><pub-id pub-id-type="pmid">37420605</pub-id><pub-id pub-id-type="pmcid">PMC10301545</pub-id></element-citation></ref><ref id="B15-sensors-25-05298"><label>15.</label><element-citation publication-type="confproc"><person-group person-group-type="author"><name name-style="western"><surname>Gudgeon</surname><given-names>L.</given-names></name><name name-style="western"><surname>Perez</surname><given-names>D.</given-names></name><name name-style="western"><surname>Harz</surname><given-names>D.</given-names></name><name name-style="western"><surname>Livshits</surname><given-names>B.</given-names></name><name name-style="western"><surname>Gervais</surname><given-names>A.</given-names></name></person-group><article-title>The Decentralized Financial Crisis</article-title><source>Proceedings of the 2020 Crypto Valley Conference on Blockchain Technology (CVCBT)</source><conf-loc>Rotkreuz, Switzerland</conf-loc><conf-date>11&#8211;12 June 2020</conf-date><fpage>1</fpage><lpage>15</lpage><pub-id pub-id-type="doi">10.1109/CVCBT50464.2020.00005</pub-id></element-citation></ref><ref id="B16-sensors-25-05298"><label>16.</label><element-citation publication-type="journal"><person-group person-group-type="author"><name name-style="western"><surname>Ilieva</surname><given-names>G.</given-names></name><name name-style="western"><surname>Yankova</surname><given-names>T.</given-names></name><name name-style="western"><surname>Dzhabarova</surname><given-names>Y.</given-names></name><name name-style="western"><surname>Ruseva</surname><given-names>M.</given-names></name><name name-style="western"><surname>Angelov</surname><given-names>D.</given-names></name><name name-style="western"><surname>Klisarova-Belcheva</surname><given-names>S.</given-names></name></person-group><article-title>Customer Attitude toward Digital Wallet Services</article-title><source>Systems</source><year>2023</year><volume>11</volume><elocation-id>185</elocation-id><pub-id pub-id-type="doi">10.3390/systems11040185</pub-id></element-citation></ref><ref id="B17-sensors-25-05298"><label>17.</label><element-citation publication-type="book"><person-group person-group-type="author"><name name-style="western"><surname>Cornelius</surname><given-names>C.</given-names></name><name name-style="western"><surname>Kotz</surname><given-names>D.</given-names></name></person-group><article-title>Recognizing Whether Sensors Are on the Same Body</article-title><source>Pervasive Computing, Pervasive 2011</source><person-group person-group-type="editor"><name name-style="western"><surname>Lyons</surname><given-names>K.</given-names></name><name name-style="western"><surname>Hightower</surname><given-names>J.</given-names></name><name name-style="western"><surname>Huang</surname><given-names>E.M.</given-names></name></person-group><publisher-name>Springer</publisher-name><publisher-loc>Berlin/Heidelberg, Germany</publisher-loc><year>2011</year><fpage>332</fpage><lpage>349</lpage><pub-id pub-id-type="doi">10.1007/978-3-642-21726-5_21</pub-id></element-citation></ref><ref id="B18-sensors-25-05298"><label>18.</label><element-citation publication-type="book"><person-group person-group-type="author"><name name-style="western"><surname>Rukhin</surname><given-names>A.</given-names></name><name name-style="western"><surname>Soto</surname><given-names>J.</given-names></name><name name-style="western"><surname>Nechvatal</surname><given-names>J.</given-names></name><name name-style="western"><surname>Smid</surname><given-names>M.</given-names></name><name name-style="western"><surname>Barker</surname><given-names>E.</given-names></name><name name-style="western"><surname>Leigh</surname><given-names>S.</given-names></name><name name-style="western"><surname>Levenson</surname><given-names>M.</given-names></name><name name-style="western"><surname>Vangel</surname><given-names>M.</given-names></name><name name-style="western"><surname>Banks</surname><given-names>D.</given-names></name><name name-style="western"><surname>Heckert</surname><given-names>N.</given-names></name><etal/></person-group><source>A Statistical Test Suite for Random and Pseudorandom Number Generators for Cryptographic Applications</source><comment>NIST Special Publication 800-22, Rev. 1a</comment><publisher-name>National Institute of Standards and Technology</publisher-name><publisher-loc>Gaithersburg, MD, USA</publisher-loc><year>2010</year><pub-id pub-id-type="doi">10.6028/NIST.SP.800-22r1a</pub-id></element-citation></ref><ref id="B19-sensors-25-05298"><label>19.</label><element-citation publication-type="confproc"><person-group person-group-type="author"><name name-style="western"><surname>Yu</surname><given-names>H.</given-names></name><name name-style="western"><surname>Kim</surname><given-names>Y.</given-names></name></person-group><article-title>True Random Number Generator Using Bio-Related Signals in Wearable Devices</article-title><source>Proceedings of the 2018 International SoC Design Conference (ISOCC)</source><conf-loc>Daegu, Republic of Korea</conf-loc><conf-date>12&#8211;15 November 2018</conf-date><fpage>231</fpage><lpage>232</lpage><pub-id pub-id-type="doi">10.1109/ISOCC.2018.8649804</pub-id></element-citation></ref><ref id="B20-sensors-25-05298"><label>20.</label><element-citation publication-type="book"><person-group person-group-type="author"><name name-style="western"><surname>Killmann</surname><given-names>W.</given-names></name><name name-style="western"><surname>Schindler</surname><given-names>W.</given-names></name></person-group><source>A Proposal for Functionality Classes for Random Number Generators</source><publisher-name>Bundesamt f&#252;r Sicherheit in der Informationstechnik (BSI)</publisher-name><publisher-loc>Bonn, Germany</publisher-loc><year>2011</year><comment>Available online: <ext-link xmlns:xlink="http://www.w3.org/1999/xlink" xlink:href="https://www.bsi.bund.de/SharedDocs/Downloads/EN/BSI/Certification/Interpretations/AIS_31_Functionality_classes_for_random_number_generators_e.pdf?__blob=publicationFile&amp;v=7pdf.pdf" ext-link-type="uri">https://www.bsi.bund.de/SharedDocs/Downloads/EN/BSI/Certification/Interpretations/AIS_31_Functionality_classes_for_random_number_generators_e.pdf?__blob=publicationFile&amp;v=7 pdf.pdf</ext-link></comment><date-in-citation content-type="access-date" iso-8601-date="2025-07-18">(accessed on 18 July 2025)</date-in-citation></element-citation></ref><ref id="B21-sensors-25-05298"><label>21.</label><element-citation publication-type="book"><std>ISO/IEC 18031:2025</std><source>Information Technology&#8212;Security Techniques&#8212;Random Bit Generation</source><publisher-name>International Organization for Standardization/International Electrotechnical Commission</publisher-name><publisher-loc>Geneva, Switzerland</publisher-loc><year>2025</year></element-citation></ref><ref id="B22-sensors-25-05298"><label>22.</label><element-citation publication-type="book"><person-group person-group-type="author"><collab>CCMB</collab></person-group><source>Common Methodology for Information Technology Security Evaluation</source><comment>Version 3.1, Revision 5; CCMB-2017-04-004;</comment><publisher-name>Common Criteria Management Board</publisher-name><publisher-loc>Brussels, Belgium</publisher-loc><year>2017</year></element-citation></ref><ref id="B23-sensors-25-05298"><label>23.</label><element-citation publication-type="webpage"><person-group person-group-type="author"><collab>Ledger</collab></person-group><article-title>Ledger&#8217;s Security Model: How Are Ledger Devices Secured?</article-title><comment>Available online: <ext-link xmlns:xlink="http://www.w3.org/1999/xlink" xlink:href="https://www.ledger.com/academy/basic-basics/ledgers-ecosystem/why-is-ledger-nano-so-secure" ext-link-type="uri">https://www.ledger.com/academy/basic-basics/ledgers-ecosystem/why-is-ledger-nano-so-secure</ext-link></comment><date-in-citation content-type="access-date" iso-8601-date="2025-07-18">(accessed on 18 July 2025)</date-in-citation></element-citation></ref><ref id="B24-sensors-25-05298"><label>24.</label><element-citation publication-type="confproc"><person-group person-group-type="author"><name name-style="western"><surname>Sarfaraz</surname><given-names>A.</given-names></name><name name-style="western"><surname>Chakrabortty</surname><given-names>R.K.</given-names></name><name name-style="western"><surname>Aslam</surname><given-names>S.</given-names></name><name name-style="western"><surname>Rafsanjani</surname><given-names>A.S.</given-names></name></person-group><article-title>Optimized Key Recovery for Blockchain Wallets in Sustainable Supply Chains</article-title><source>Proceedings of the 2024 IEEE International Conference on Industrial Engineering and Engineering Management (IEEM)</source><conf-loc>Bangkok, Thailand</conf-loc><conf-date>15&#8211;18 December 2024</conf-date><fpage>343</fpage><lpage>347</lpage><pub-id pub-id-type="doi">10.1109/IEEM62345.2024.10857165</pub-id></element-citation></ref><ref id="B25-sensors-25-05298"><label>25.</label><element-citation publication-type="webpage"><person-group person-group-type="author"><collab>Bitcoin Community</collab></person-group><article-title>BIP-0039: Mnemonic Code for Generating Deterministic Keys</article-title><comment>Available online: <ext-link xmlns:xlink="http://www.w3.org/1999/xlink" xlink:href="https://github.com/bitcoin/bips/blob/master/bip-0039.mediawiki" ext-link-type="uri">https://github.com/bitcoin/bips/blob/master/bip-0039.mediawiki</ext-link></comment><date-in-citation content-type="access-date" iso-8601-date="2025-07-14">(accessed on 14 July 2025)</date-in-citation></element-citation></ref><ref id="B26-sensors-25-05298"><label>26.</label><element-citation publication-type="book"><person-group person-group-type="author"><collab>Trusted Computing Group</collab></person-group><source>TPM 2.0 Library Specification</source><publisher-name>Trusted Computing Group</publisher-name><publisher-loc>Beaverton, OR, USA</publisher-loc><year>2019</year><comment>Available online: <ext-link xmlns:xlink="http://www.w3.org/1999/xlink" xlink:href="https://trustedcomputinggroup.org/resource/tpm-library-specification/" ext-link-type="uri">https://trustedcomputinggroup.org/resource/tpm-library-specification/</ext-link></comment><date-in-citation content-type="access-date" iso-8601-date="2025-08-19">(accessed on 19 August 2025)</date-in-citation></element-citation></ref><ref id="B27-sensors-25-05298"><label>27.</label><element-citation publication-type="book"><person-group person-group-type="author"><name name-style="western"><surname>Eastlake</surname><given-names>D.E.</given-names><suffix>3rd</suffix></name><name name-style="western"><surname>Crocker</surname><given-names>S.</given-names></name><name name-style="western"><surname>Schiller</surname><given-names>J.I.</given-names></name></person-group><source>Randomness Requirements for Security</source><comment>RFC 4086</comment><publisher-name>Internet Engineering Task Force (IETF)</publisher-name><publisher-loc>Wilmington, NC, USA</publisher-loc><year>2005</year><pub-id pub-id-type="doi">10.17487/RFC4086</pub-id></element-citation></ref><ref id="B28-sensors-25-05298"><label>28.</label><element-citation publication-type="confproc"><person-group person-group-type="author"><name name-style="western"><surname>Gutterman</surname><given-names>Z.</given-names></name><name name-style="western"><surname>Pinkas</surname><given-names>B.</given-names></name><name name-style="western"><surname>Reinman</surname><given-names>T.</given-names></name></person-group><article-title>Analysis of the Linux Random Number Generator</article-title><source>Proceedings of the 2006 IEEE Symposium on Security and Privacy (S&amp;P&#8217;06)</source><conf-loc>Berkeley, CA, USA</conf-loc><conf-date>21&#8211;24 May 2006</conf-date><fpage>371</fpage><lpage>385</lpage><pub-id pub-id-type="doi">10.1109/SP.2006.5</pub-id></element-citation></ref><ref id="B29-sensors-25-05298"><label>29.</label><element-citation publication-type="webpage"><person-group person-group-type="author"><collab>OpenSSL Software Foundation</collab></person-group><article-title>RAND_bytes&#8212;OpenSSL Documentation</article-title><comment>Available online: <ext-link xmlns:xlink="http://www.w3.org/1999/xlink" xlink:href="https://docs.openssl.org/1.1.1/man3/RAND_bytes/" ext-link-type="uri">https://docs.openssl.org/1.1.1/man3/RAND_bytes/</ext-link></comment><date-in-citation content-type="access-date" iso-8601-date="2025-07-16">(accessed on 16 July 2025)</date-in-citation></element-citation></ref><ref id="B30-sensors-25-05298"><label>30.</label><element-citation publication-type="webpage"><person-group person-group-type="author"><name name-style="western"><surname>Bernstein</surname><given-names>D.J.</given-names></name></person-group><source>ChaCha, a Variant of Salsa20</source><comment>Workshop Record of SASC 2008: The State of the Art of Stream Ciphers</comment><year>2008</year><comment>pp. 1&#8211;14</comment><comment>Available online: <ext-link xmlns:xlink="http://www.w3.org/1999/xlink" xlink:href="https://cr.yp.to/chacha/chacha-20080128.pdf" ext-link-type="uri">https://cr.yp.to/chacha/chacha-20080128.pdf</ext-link></comment><date-in-citation content-type="access-date" iso-8601-date="2025-08-19">(accessed on 19 August 2025)</date-in-citation></element-citation></ref><ref id="B31-sensors-25-05298"><label>31.</label><element-citation publication-type="book"><person-group person-group-type="author"><name name-style="western"><surname>Song</surname><given-names>K.</given-names></name><name name-style="western"><surname>Zhu</surname><given-names>Z.</given-names></name><name name-style="western"><surname>Yang</surname><given-names>H.</given-names></name><name name-style="western"><surname>Ni</surname><given-names>T.</given-names></name><name name-style="western"><surname>Xu</surname><given-names>W.</given-names></name></person-group><article-title>MobileKey: A Fast and Robust Key Generation System for Mobile Devices</article-title><source>Adjunct Proceedings of the 2022 ACM International Joint Conference on Pervasive and Ubiquitous Computing and the 2022 ACM International Symposium on Wearable Computers (UbiComp/ISWC &#8217;22 Adjunct)</source><publisher-name>Association for Computing Machinery</publisher-name><publisher-loc>New York, NY, USA</publisher-loc><year>2022</year><fpage>427</fpage><lpage>431</lpage><pub-id pub-id-type="doi">10.1145/3544793.3560413</pub-id></element-citation></ref><ref id="B32-sensors-25-05298"><label>32.</label><element-citation publication-type="confproc"><person-group person-group-type="author"><name name-style="western"><surname>Lv</surname><given-names>N.</given-names></name><name name-style="western"><surname>Chen</surname><given-names>T.</given-names></name><name name-style="western"><surname>Ma</surname><given-names>Y.</given-names></name></person-group><article-title>A Analysis on Entropy Sources Based on Smartphone Sensors</article-title><source>Proceedings of the 2020 10th International Conference on Communication and Network Security (ICCNS &#8217;20)</source><conf-loc>Tokyo, Japan</conf-loc><conf-date>27&#8211;29 November 2020</conf-date><publisher-name>Association for Computing Machinery</publisher-name><publisher-loc>New York, NY, USA</publisher-loc><year>2020</year><fpage>21</fpage><lpage>31</lpage><pub-id pub-id-type="doi">10.1145/3442520.3442528</pub-id></element-citation></ref><ref id="B33-sensors-25-05298"><label>33.</label><element-citation publication-type="journal"><person-group person-group-type="author"><name name-style="western"><surname>Moosavi</surname><given-names>S.R.</given-names></name></person-group><article-title>PPG-KeyGen: Using Photoplethysmogram for Key Generation in Wearable Devices</article-title><source>Procedia Comput. Sci.</source><year>2021</year><volume>184</volume><fpage>291</fpage><lpage>298</lpage><pub-id pub-id-type="doi">10.1016/j.procs.2021.03.038</pub-id></element-citation></ref><ref id="B34-sensors-25-05298"><label>34.</label><element-citation publication-type="journal"><person-group person-group-type="author"><name name-style="western"><surname>Ajlan</surname><given-names>K.A.</given-names></name><name name-style="western"><surname>Alsboui</surname><given-names>T.</given-names></name><name name-style="western"><surname>Alshaikh</surname><given-names>O.</given-names></name><name name-style="western"><surname>Inuwa-Dute</surname><given-names>I.</given-names></name><name name-style="western"><surname>Khan</surname><given-names>S.</given-names></name><name name-style="western"><surname>Parkinson</surname><given-names>S.</given-names></name></person-group><article-title>The Emerging Challenges of Wearable Biometric Cryptosystems</article-title><source>Cryptography</source><year>2024</year><volume>8</volume><elocation-id>27</elocation-id><pub-id pub-id-type="doi">10.3390/cryptography8030027</pub-id></element-citation></ref><ref id="B35-sensors-25-05298"><label>35.</label><element-citation publication-type="webpage"><person-group person-group-type="author"><collab>Samsung Electronics</collab></person-group><article-title>Health Sensor Data Specifications</article-title><comment>Available online: <ext-link xmlns:xlink="http://www.w3.org/1999/xlink" xlink:href="https://developer.samsung.com/health/sensor/guide/data-specifications.html" ext-link-type="uri">https://developer.samsung.com/health/sensor/guide/data-specifications.html</ext-link></comment><date-in-citation content-type="access-date" iso-8601-date="2025-07-16">(accessed on 16 July 2025)</date-in-citation></element-citation></ref><ref id="B36-sensors-25-05298"><label>36.</label><element-citation publication-type="webpage"><person-group person-group-type="author"><collab>Google</collab></person-group><article-title>Sensor|API Reference</article-title><comment>Available online: <ext-link xmlns:xlink="http://www.w3.org/1999/xlink" xlink:href="https://developer.android.com/reference/android/hardware/Sensor" ext-link-type="uri">https://developer.android.com/reference/android/hardware/Sensor</ext-link></comment><date-in-citation content-type="access-date" iso-8601-date="2025-07-16">(accessed on 16 July 2025)</date-in-citation></element-citation></ref><ref id="B37-sensors-25-05298"><label>37.</label><element-citation publication-type="journal"><person-group person-group-type="author"><name name-style="western"><surname>Shannon</surname><given-names>C.E.</given-names></name></person-group><article-title>A Mathematical Theory of Communication</article-title><source>Bell Syst. Tech. J.</source><year>1948</year><volume>27</volume><fpage>379</fpage><lpage>423</lpage><pub-id pub-id-type="doi">10.1002/j.1538-7305.1948.tb01338.x</pub-id></element-citation></ref><ref id="B38-sensors-25-05298"><label>38.</label><element-citation publication-type="journal"><person-group person-group-type="author"><name name-style="western"><surname>Thinh</surname><given-names>L.P.</given-names></name><name name-style="western"><surname>Sheridan</surname><given-names>L.</given-names></name><name name-style="western"><surname>Scarani</surname><given-names>V.</given-names></name></person-group><article-title>Bell Tests with Min-Entropy Sources</article-title><source>Phys. Rev. A</source><year>2013</year><volume>87</volume><fpage>062121</fpage><pub-id pub-id-type="doi">10.1103/PhysRevA.87.062121</pub-id></element-citation></ref><ref id="B39-sensors-25-05298"><label>39.</label><element-citation publication-type="journal"><person-group person-group-type="author"><name name-style="western"><surname>Mettle</surname><given-names>F.O.</given-names></name><name name-style="western"><surname>Quaye</surname><given-names>E.N.B.</given-names></name><name name-style="western"><surname>Laryea</surname><given-names>R.A.</given-names></name></person-group><article-title>A Methodology for Stochastic Analysis of Share Prices as Markov Chains with Finite States</article-title><source>SpringerPlus</source><year>2014</year><volume>3</volume><fpage>657</fpage><pub-id pub-id-type="doi">10.1186/2193-1801-3-657</pub-id><pub-id pub-id-type="pmid">25520904</pub-id><pub-id pub-id-type="pmcid">PMC4247363</pub-id></element-citation></ref><ref id="B40-sensors-25-05298"><label>40.</label><element-citation publication-type="confproc"><person-group person-group-type="author"><name name-style="western"><surname>Lee</surname><given-names>T.-H.</given-names></name><name name-style="western"><surname>He</surname><given-names>J.-D.</given-names></name></person-group><article-title>Entropy-Based Profiling of Network Traffic for Detection of Security Attack</article-title><source>Proceedings of the TENCON 2009&#8212;2009 IEEE Region 10 Conference</source><conf-loc>Singapore</conf-loc><conf-date>23&#8211;26 January 2009</conf-date><fpage>1</fpage><lpage>5</lpage><pub-id pub-id-type="doi">10.1109/TENCON.2009.5396211</pub-id></element-citation></ref><ref id="B41-sensors-25-05298"><label>41.</label><element-citation publication-type="journal"><person-group person-group-type="author"><name name-style="western"><surname>Klein</surname><given-names>S.T.</given-names></name><name name-style="western"><surname>Shapira</surname><given-names>D.</given-names></name></person-group><article-title>On the Randomness of Compressed Data</article-title><source>Information</source><year>2020</year><volume>11</volume><elocation-id>196</elocation-id><pub-id pub-id-type="doi">10.3390/info11040196</pub-id></element-citation></ref></ref-list></back><floats-group><fig position="float" id="sensors-25-05298-f001" orientation="portrait"><label>Figure 1</label><caption><p>Classification of entropy sources.</p></caption><graphic xmlns:xlink="http://www.w3.org/1999/xlink" position="float" orientation="portrait" xlink:href="sensors-25-05298-g001.jpg"/></fig><fig position="float" id="sensors-25-05298-f002" orientation="portrait"><label>Figure 2</label><caption><p>Visual representation of the proposed entropy generation process on a smartwatch.</p></caption><graphic xmlns:xlink="http://www.w3.org/1999/xlink" position="float" orientation="portrait" xlink:href="sensors-25-05298-g002.jpg"/></fig><fig position="float" id="sensors-25-05298-f003" orientation="portrait"><label>Figure 3</label><caption><p>Expected percentage contribution of each sensor type to the total data volume collected during a 2.2 s acquisition window, based on typical sampling frequencies listed in <xref rid="sensors-25-05298-t002" ref-type="table">Table 2</xref>.</p></caption><graphic xmlns:xlink="http://www.w3.org/1999/xlink" position="float" orientation="portrait" xlink:href="sensors-25-05298-g003.jpg"/></fig><fig position="float" id="sensors-25-05298-f004" orientation="portrait"><label>Figure 4</label><caption><p>Flowchart of the proposed entropy acquisition pipeline for both shake and still modes.</p></caption><graphic xmlns:xlink="http://www.w3.org/1999/xlink" position="float" orientation="portrait" xlink:href="sensors-25-05298-g004.jpg"/></fig><fig position="float" id="sensors-25-05298-f005" orientation="portrait"><label>Figure 5</label><caption><p>System architecture for entropy acquisition and processing on a commercial smartwatch.</p></caption><graphic xmlns:xlink="http://www.w3.org/1999/xlink" position="float" orientation="portrait" xlink:href="sensors-25-05298-g005.jpg"/></fig><fig position="float" id="sensors-25-05298-f006" orientation="portrait"><label>Figure 6</label><caption><p>Experimental workflow for still and shake entropy acquisition.</p></caption><graphic xmlns:xlink="http://www.w3.org/1999/xlink" position="float" orientation="portrait" xlink:href="sensors-25-05298-g006.jpg"/></fig><fig position="float" id="sensors-25-05298-f007" orientation="portrait"><label>Figure 7</label><caption><p>Boxplot comparison of Shannon entropy values for shake and still acquisition modes.</p></caption><graphic xmlns:xlink="http://www.w3.org/1999/xlink" position="float" orientation="portrait" xlink:href="sensors-25-05298-g007.jpg"/></fig><fig position="float" id="sensors-25-05298-f008" orientation="portrait"><label>Figure 8</label><caption><p>Boxplot comparison of min-entropy values for shake and still acquisition modes.</p></caption><graphic xmlns:xlink="http://www.w3.org/1999/xlink" position="float" orientation="portrait" xlink:href="sensors-25-05298-g008.jpg"/></fig><table-wrap position="float" id="sensors-25-05298-t001" orientation="portrait"><object-id pub-id-type="pii">sensors-25-05298-t001_Table 1</object-id><label>Table 1</label><caption><p>Comparison of blockchain user preferences with traditional approaches and the proposed smartwatch-based method.</p></caption><table frame="hsides" rules="groups"><thead><tr><th align="center" valign="middle" style="border-top:solid thin;border-bottom:solid thin" rowspan="1" colspan="1">User
Preferences</th><th align="center" valign="middle" style="border-top:solid thin;border-bottom:solid thin" rowspan="1" colspan="1">Traditional Approach</th><th align="center" valign="middle" style="border-top:solid thin;border-bottom:solid thin" rowspan="1" colspan="1">Proposed (Smartwatch)</th></tr></thead><tbody><tr><td align="center" valign="middle" style="border-bottom:solid thin" rowspan="1" colspan="1">Decentralized key control</td><td align="center" valign="middle" style="border-bottom:solid thin" rowspan="1" colspan="1">HSM/Cloud dependent</td><td align="center" valign="middle" style="border-bottom:solid thin" rowspan="1" colspan="1">Local on device</td></tr><tr><td align="center" valign="middle" style="border-bottom:solid thin" rowspan="1" colspan="1">Privacy/no central entity</td><td align="center" valign="middle" style="border-bottom:solid thin" rowspan="1" colspan="1">May rely on servers</td><td align="center" valign="middle" style="border-bottom:solid thin" rowspan="1" colspan="1">No network dependency</td></tr><tr><td align="center" valign="middle" style="border-bottom:solid thin" rowspan="1" colspan="1">Open-source compatibility</td><td align="center" valign="middle" style="border-bottom:solid thin" rowspan="1" colspan="1">Often proprietary</td><td align="center" valign="middle" style="border-bottom:solid thin" rowspan="1" colspan="1">Fully open implementation</td></tr><tr><td align="center" valign="middle" style="border-bottom:solid thin" rowspan="1" colspan="1">No extra hardware</td><td align="center" valign="middle" style="border-bottom:solid thin" rowspan="1" colspan="1">Requires special wallet</td><td align="center" valign="middle" style="border-bottom:solid thin" rowspan="1" colspan="1">Uses existing smartwatch</td></tr><tr><td align="center" valign="middle" style="border-bottom:solid thin" rowspan="1" colspan="1">Always-on/mobile</td><td align="center" valign="middle" style="border-bottom:solid thin" rowspan="1" colspan="1">Desktop or specialized hardware required</td><td align="center" valign="middle" style="border-bottom:solid thin" rowspan="1" colspan="1">Wrist-worn, <break/>always present</td></tr></tbody></table></table-wrap><table-wrap position="float" id="sensors-25-05298-t002" orientation="portrait"><object-id pub-id-type="pii">sensors-25-05298-t002_Table 2</object-id><label>Table 2</label><caption><p>Typical sampling frequencies and expected number of measurements per 2.2 s acquisition window for each selected Galaxy watch 7 sensors.</p></caption><table frame="hsides" rules="groups"><thead><tr><th align="center" valign="middle" style="border-top:solid thin;border-bottom:solid thin" rowspan="1" colspan="1">Sensor</th><th align="center" valign="middle" style="border-top:solid thin;border-bottom:solid thin" rowspan="1" colspan="1">Typical Frequency (Hz)</th><th align="center" valign="middle" style="border-top:solid thin;border-bottom:solid thin" rowspan="1" colspan="1">Expected Samples</th></tr></thead><tbody><tr><td align="center" valign="middle" style="border-bottom:solid thin" rowspan="1" colspan="1">Accelerometer</td><td align="center" valign="middle" style="border-bottom:solid thin" rowspan="1" colspan="1">100</td><td align="center" valign="middle" style="border-bottom:solid thin" rowspan="1" colspan="1">220</td></tr><tr><td align="center" valign="middle" style="border-bottom:solid thin" rowspan="1" colspan="1">Gyroscope</td><td align="center" valign="middle" style="border-bottom:solid thin" rowspan="1" colspan="1">100</td><td align="center" valign="middle" style="border-bottom:solid thin" rowspan="1" colspan="1">220</td></tr><tr><td align="center" valign="middle" style="border-bottom:solid thin" rowspan="1" colspan="1">Rotation Vector</td><td align="center" valign="middle" style="border-bottom:solid thin" rowspan="1" colspan="1">50</td><td align="center" valign="middle" style="border-bottom:solid thin" rowspan="1" colspan="1">110</td></tr><tr><td align="center" valign="middle" style="border-bottom:solid thin" rowspan="1" colspan="1">Linear Acceleration</td><td align="center" valign="middle" style="border-bottom:solid thin" rowspan="1" colspan="1">50</td><td align="center" valign="middle" style="border-bottom:solid thin" rowspan="1" colspan="1">110</td></tr><tr><td align="center" valign="middle" style="border-bottom:solid thin" rowspan="1" colspan="1">Gravity</td><td align="center" valign="middle" style="border-bottom:solid thin" rowspan="1" colspan="1">50</td><td align="center" valign="middle" style="border-bottom:solid thin" rowspan="1" colspan="1">110</td></tr><tr><td align="center" valign="middle" style="border-bottom:solid thin" rowspan="1" colspan="1">Barometer (Pressure)</td><td align="center" valign="middle" style="border-bottom:solid thin" rowspan="1" colspan="1">5</td><td align="center" valign="middle" style="border-bottom:solid thin" rowspan="1" colspan="1">11</td></tr><tr><td align="center" valign="middle" style="border-bottom:solid thin" rowspan="1" colspan="1">Heart Rate</td><td align="center" valign="middle" style="border-bottom:solid thin" rowspan="1" colspan="1">1</td><td align="center" valign="middle" style="border-bottom:solid thin" rowspan="1" colspan="1">2</td></tr><tr><td align="center" valign="middle" style="border-bottom:solid thin" rowspan="1" colspan="1">Step Counter</td><td align="center" valign="middle" style="border-bottom:solid thin" rowspan="1" colspan="1">Event-driven (~0.5 Hz)</td><td align="center" valign="middle" style="border-bottom:solid thin" rowspan="1" colspan="1">~1</td></tr></tbody></table></table-wrap><table-wrap position="float" id="sensors-25-05298-t003" orientation="portrait"><object-id pub-id-type="pii">sensors-25-05298-t003_Table 3</object-id><label>Table 3</label><caption><p>Comparative entropy evaluation metrics for still and shake acquisition modes.</p></caption><table frame="hsides" rules="groups"><thead><tr><th align="center" valign="middle" style="border-top:solid thin;border-bottom:solid thin" rowspan="1" colspan="1">Metric</th><th align="center" valign="middle" style="border-top:solid thin;border-bottom:solid thin" rowspan="1" colspan="1">Still Mode</th><th align="center" valign="middle" style="border-top:solid thin;border-bottom:solid thin" rowspan="1" colspan="1">Shake Mode</th></tr></thead><tbody><tr><td align="center" valign="middle" rowspan="1" colspan="1">Shannon entropy (H)</td><td align="center" valign="middle" rowspan="1" colspan="1">0.991</td><td align="center" valign="middle" rowspan="1" colspan="1">0.997</td></tr><tr><td align="center" valign="middle" style="border-bottom:solid thin" rowspan="1" colspan="1">Min-entropy (Hmin)</td><td align="center" valign="middle" style="border-bottom:solid thin" rowspan="1" colspan="1">0.851</td><td align="center" valign="middle" style="border-bottom:solid thin" rowspan="1" colspan="1">0.918</td></tr><tr><td align="center" valign="middle" style="border-bottom:solid thin" rowspan="1" colspan="1">Markov dependency (avg. state prob.)</td><td align="center" valign="middle" style="border-bottom:solid thin" rowspan="1" colspan="1">Moderate correlation</td><td align="center" valign="middle" style="border-bottom:solid thin" rowspan="1" colspan="1">Low correlation</td></tr><tr><td align="center" valign="middle" style="border-bottom:solid thin" rowspan="1" colspan="1">GZIP compression ratio</td><td align="center" valign="middle" style="border-bottom:solid thin" rowspan="1" colspan="1">0.72</td><td align="center" valign="middle" style="border-bottom:solid thin" rowspan="1" colspan="1">0.95</td></tr></tbody></table></table-wrap><table-wrap position="float" id="sensors-25-05298-t004" orientation="portrait"><object-id pub-id-type="pii">sensors-25-05298-t004_Table 4</object-id><label>Table 4</label><caption><p>Comparative evaluation of the proposed smartwatch-based entropy generation approach against established entropy sources.</p></caption><table frame="hsides" rules="groups"><thead><tr><th align="center" valign="middle" style="border-top:solid thin;border-bottom:solid thin" rowspan="1" colspan="1">Method/Source</th><th align="center" valign="middle" style="border-top:solid thin;border-bottom:solid thin" rowspan="1" colspan="1">Shannon Entropy</th><th align="center" valign="middle" style="border-top:solid thin;border-bottom:solid thin" rowspan="1" colspan="1">Min-Entropy</th><th align="center" valign="middle" style="border-top:solid thin;border-bottom:solid thin" rowspan="1" colspan="1">Notes</th></tr></thead><tbody><tr><td align="center" valign="middle" style="border-bottom:solid thin" rowspan="1" colspan="1">TRNG (e.g., Intel RDRAND)</td><td align="center" valign="middle" style="border-bottom:solid thin" rowspan="1" colspan="1">&#8776;0.999</td><td align="center" valign="middle" style="border-bottom:solid thin" rowspan="1" colspan="1">&#8776;0.998</td><td align="center" valign="middle" style="border-bottom:solid thin" rowspan="1" colspan="1">Hardware, closed-source [<xref rid="B9-sensors-25-05298" ref-type="bibr">9</xref>]</td></tr><tr><td align="center" valign="middle" style="border-bottom:solid thin" rowspan="1" colspan="1">CSPRNG (ChaCha20)</td><td align="center" valign="middle" style="border-bottom:solid thin" rowspan="1" colspan="1">&#8776;0.999</td><td align="center" valign="middle" style="border-bottom:solid thin" rowspan="1" colspan="1">&#8776;0.997</td><td align="center" valign="middle" style="border-bottom:solid thin" rowspan="1" colspan="1">Software, deterministic but cryptographically secure [<xref rid="B30-sensors-25-05298" ref-type="bibr">30</xref>]</td></tr><tr><td align="center" valign="middle" style="border-bottom:solid thin" rowspan="1" colspan="1">OS RNG (/dev/urandom)</td><td align="center" valign="middle" style="border-bottom:solid thin" rowspan="1" colspan="1">&#8776;0.995</td><td align="center" valign="middle" style="border-bottom:solid thin" rowspan="1" colspan="1">&#8776;0.950</td><td align="center" valign="middle" style="border-bottom:solid thin" rowspan="1" colspan="1">Mixed hardware/software seeding [<xref rid="B28-sensors-25-05298" ref-type="bibr">28</xref>]</td></tr><tr><td align="center" valign="middle" style="border-bottom:solid thin" rowspan="1" colspan="1">Smartwatch&#8212;Still mode</td><td align="center" valign="middle" style="border-bottom:solid thin" rowspan="1" colspan="1">0.991</td><td align="center" valign="middle" style="border-bottom:solid thin" rowspan="1" colspan="1">0.851</td><td align="center" valign="middle" style="border-bottom:solid thin" rowspan="1" colspan="1">Passive, environmental, and body sensors (this work)</td></tr><tr><td align="center" valign="middle" style="border-bottom:solid thin" rowspan="1" colspan="1">Smartwatch&#8212;Shake mode</td><td align="center" valign="middle" style="border-bottom:solid thin" rowspan="1" colspan="1">0.997</td><td align="center" valign="middle" style="border-bottom:solid thin" rowspan="1" colspan="1">0.918</td><td align="center" valign="middle" style="border-bottom:solid thin" rowspan="1" colspan="1">Motion-triggered, multisensor fusion (this work)</td></tr></tbody></table></table-wrap></floats-group></article></pmc-articleset>