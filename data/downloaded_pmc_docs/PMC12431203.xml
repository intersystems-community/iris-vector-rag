<?xml version="1.0"  ?><!DOCTYPE pmc-articleset PUBLIC "-//NLM//DTD ARTICLE SET 2.0//EN" "https://dtd.nlm.nih.gov/ncbi/pmc/articleset/nlm-articleset-2.0.dtd"><pmc-articleset><article xmlns:mml="http://www.w3.org/1998/Math/MathML" xmlns:ali="http://www.niso.org/schemas/ali/1.0/" xml:lang="en" article-type="research-article" dtd-version="1.4"><processing-meta base-tagset="archiving" mathml-version="3.0" table-model="xhtml" tagset-family="jats"><restricted-by>pmc</restricted-by></processing-meta><front><journal-meta><journal-id journal-id-type="nlm-ta">Sensors (Basel)</journal-id><journal-id journal-id-type="iso-abbrev">Sensors (Basel)</journal-id><journal-id journal-id-type="pmc-domain-id">1660</journal-id><journal-id journal-id-type="pmc-domain">sensors</journal-id><journal-id journal-id-type="publisher-id">sensors</journal-id><journal-title-group><journal-title>Sensors (Basel, Switzerland)</journal-title></journal-title-group><issn pub-type="epub">1424-8220</issn><publisher><publisher-name>Multidisciplinary Digital Publishing Institute  (MDPI)</publisher-name></publisher></journal-meta><article-meta><article-id pub-id-type="pmcid">PMC12431203</article-id><article-id pub-id-type="pmcid-ver">PMC12431203.1</article-id><article-id pub-id-type="pmcaid">12431203</article-id><article-id pub-id-type="pmcaiid">12431203</article-id><article-id pub-id-type="doi">10.3390/s25175583</article-id><article-id pub-id-type="publisher-id">sensors-25-05583</article-id><article-version article-version-type="pmc-version">1</article-version><article-categories><subj-group subj-group-type="heading"><subject>Article</subject></subj-group></article-categories><title-group><article-title>A Multidimensional Matrix Completion Method for 2-D DOA Estimation with L-Shaped Array</article-title></title-group><contrib-group><contrib contrib-type="author"><contrib-id contrib-id-type="orcid" authenticated="true">https://orcid.org/0009-0003-9221-7847</contrib-id><name name-style="western"><surname>Zhang</surname><given-names initials="H">Haoyue</given-names></name><role vocab="credit" vocab-identifier="https://credit.niso.org/" vocab-term="Methodology" vocab-term-identifier="https://credit.niso.org/contributor-roles/methodology/">Methodology</role><role vocab="credit" vocab-identifier="https://credit.niso.org/" vocab-term="Writing &#x2013; original draft" vocab-term-identifier="https://credit.niso.org/contributor-roles/writing-original-draft/">Writing &#8211; original draft</role></contrib><contrib contrib-type="author"><name name-style="western"><surname>Shi</surname><given-names initials="J">Junpeng</given-names></name><role vocab="credit" vocab-identifier="https://credit.niso.org/" vocab-term="Writing &#x2013; review &amp; editing" vocab-term-identifier="https://credit.niso.org/contributor-roles/writing-review-editing/">Writing &#8211; review &amp; editing</role><role vocab="credit" vocab-identifier="https://credit.niso.org/" vocab-term="Supervision" vocab-term-identifier="https://credit.niso.org/contributor-roles/supervision/">Supervision</role><xref rid="c1-sensors-25-05583" ref-type="corresp">*</xref></contrib><contrib contrib-type="author"><contrib-id contrib-id-type="orcid" authenticated="true">https://orcid.org/0000-0003-0188-1842</contrib-id><name name-style="western"><surname>Li</surname><given-names initials="Z">Zhihui</given-names></name><role vocab="credit" vocab-identifier="https://credit.niso.org/" vocab-term="Writing &#x2013; review &amp; editing" vocab-term-identifier="https://credit.niso.org/contributor-roles/writing-review-editing/">Writing &#8211; review &amp; editing</role></contrib><contrib contrib-type="author"><name name-style="western"><surname>Shi</surname><given-names initials="S">Shuyun</given-names></name><role vocab="credit" vocab-identifier="https://credit.niso.org/" vocab-term="Formal analysis" vocab-term-identifier="https://credit.niso.org/contributor-roles/formal-analysis/">Formal analysis</role></contrib></contrib-group><contrib-group><contrib contrib-type="editor"><name name-style="western"><surname>Sun</surname><given-names initials="G">Guangcai</given-names></name><role>Academic Editor</role></contrib></contrib-group><aff id="af1-sensors-25-05583">College of Electronic Countermeasure, National University of Defense Technology, Hefei 230037, China; <email>zhanghaoyue23@163.com</email> (H.Z.); <email>lizhihui_16@163.com</email> (Z.L.); <email>13478699873@163.com</email> (S.S.)</aff><author-notes><corresp id="c1-sensors-25-05583"><label>*</label>Correspondence: <email>shijunpeng20@nudt.edu.cn</email></corresp></author-notes><pub-date pub-type="epub"><day>07</day><month>9</month><year>2025</year></pub-date><pub-date pub-type="collection"><month>9</month><year>2025</year></pub-date><volume>25</volume><issue>17</issue><issue-id pub-id-type="pmc-issue-id">496815</issue-id><elocation-id>5583</elocation-id><history><date date-type="received"><day>11</day><month>8</month><year>2025</year></date><date date-type="rev-recd"><day>03</day><month>9</month><year>2025</year></date><date date-type="accepted"><day>05</day><month>9</month><year>2025</year></date></history><pub-history><event event-type="pmc-release"><date><day>07</day><month>09</month><year>2025</year></date></event><event event-type="pmc-live"><date><day>13</day><month>09</month><year>2025</year></date></event><event event-type="pmc-last-change"><date iso-8601-date="2025-09-13 17:25:36.317"><day>13</day><month>09</month><year>2025</year></date></event></pub-history><permissions><copyright-statement>&#169; 2025 by the authors.</copyright-statement><copyright-year>2025</copyright-year><license><ali:license_ref specific-use="textmining" content-type="ccbylicense">https://creativecommons.org/licenses/by/4.0/</ali:license_ref><license-p>Licensee MDPI, Basel, Switzerland. This article is an open access article distributed under the terms and conditions of the Creative Commons Attribution (CC BY) license (<ext-link xmlns:xlink="http://www.w3.org/1999/xlink" ext-link-type="uri" xlink:href="https://creativecommons.org/licenses/by/4.0/">https://creativecommons.org/licenses/by/4.0/</ext-link>).</license-p></license></permissions><self-uri xmlns:xlink="http://www.w3.org/1999/xlink" content-type="pmc-pdf" xlink:href="sensors-25-05583.pdf"/><abstract><p>This paper focuses on two-dimensional (2-D) direction-of-arrival (DOA) estimation for an L-shaped array. While recent studies have explored sparse methods for this problem, most exploit only the cross-correlation matrix, neglecting self-correlation information and resulting accuracy degradation. We propose a multidimensional matrix completion method that employs joint sparsity and redundant correlation information embedded in the covariance matrix to reconstruct a structured matrix compactly coupling the two DOA parameters. A semidefinite program problem formulated via covariance fitting criteria is proved equivalent to the atomic norm minimization framework. The alternating direction method of multipliers is designed to reduce computational costs. Numerical results corroborate the analysis and demonstrate the superior estimation accuracy, identifiability, and resolution of the proposed method.</p></abstract><kwd-group><kwd>L-shaped array</kwd><kwd>2-D DOA estimation</kwd><kwd>multidimensional matrix completion</kwd><kwd>sparse covariance fitting</kwd></kwd-group><funding-group><award-group><funding-source>National Natural Science Foundation of China</funding-source><award-id>62071476</award-id></award-group><funding-statement>This research was funded by the National Natural Science Foundation of China under grant 62071476.</funding-statement></funding-group><custom-meta-group><custom-meta><meta-name>pmc-status-qastatus</meta-name><meta-value>0</meta-value></custom-meta><custom-meta><meta-name>pmc-status-live</meta-name><meta-value>yes</meta-value></custom-meta><custom-meta><meta-name>pmc-status-embargo</meta-name><meta-value>no</meta-value></custom-meta><custom-meta><meta-name>pmc-status-released</meta-name><meta-value>yes</meta-value></custom-meta><custom-meta><meta-name>pmc-prop-open-access</meta-name><meta-value>yes</meta-value></custom-meta><custom-meta><meta-name>pmc-prop-olf</meta-name><meta-value>no</meta-value></custom-meta><custom-meta><meta-name>pmc-prop-manuscript</meta-name><meta-value>no</meta-value></custom-meta><custom-meta><meta-name>pmc-prop-legally-suppressed</meta-name><meta-value>no</meta-value></custom-meta><custom-meta><meta-name>pmc-prop-has-pdf</meta-name><meta-value>yes</meta-value></custom-meta><custom-meta><meta-name>pmc-prop-has-supplement</meta-name><meta-value>no</meta-value></custom-meta><custom-meta><meta-name>pmc-prop-pdf-only</meta-name><meta-value>no</meta-value></custom-meta><custom-meta><meta-name>pmc-prop-suppress-copyright</meta-name><meta-value>no</meta-value></custom-meta><custom-meta><meta-name>pmc-prop-is-real-version</meta-name><meta-value>no</meta-value></custom-meta><custom-meta><meta-name>pmc-prop-is-scanned-article</meta-name><meta-value>no</meta-value></custom-meta><custom-meta><meta-name>pmc-prop-preprint</meta-name><meta-value>no</meta-value></custom-meta><custom-meta><meta-name>pmc-prop-in-epmc</meta-name><meta-value>yes</meta-value></custom-meta></custom-meta-group></article-meta></front><body><sec sec-type="intro" id="sec1-sensors-25-05583"><title>1. Introduction</title><p>Two-dimensional (2-D) direction-of-arrival (DOA) estimation is a fundamental problem in array signal processing, with applications in radar, sonar, and wireless communications [<xref rid="B1-sensors-25-05583" ref-type="bibr">1</xref>,<xref rid="B2-sensors-25-05583" ref-type="bibr">2</xref>,<xref rid="B3-sensors-25-05583" ref-type="bibr">3</xref>,<xref rid="B4-sensors-25-05583" ref-type="bibr">4</xref>,<xref rid="B5-sensors-25-05583" ref-type="bibr">5</xref>,<xref rid="B6-sensors-25-05583" ref-type="bibr">6</xref>]. Various array geometries have been exploited for 2-D DOA estimation, including the uniform rectangular arrays (URAs), the uniform circular arrays (UCAs), L-shaped arrays, etc. Compared to a URA or a UCA, an L-shaped array achieves satisfactory estimation performance with significantly fewer sensors, reducing hardware cost and computational complexity. Therefore, the 2-D DOA estimation for L-shaped arrays has attracted considerable attention.</p><p>Research on 2-D DOA estimation for L-shaped arrays originated with [<xref rid="B7-sensors-25-05583" ref-type="bibr">7</xref>] and has since evolved through diverse approaches. Compared to 1-D DOA estimation, the increased dimensionality inherently imposes a higher computational burden [<xref rid="B8-sensors-25-05583" ref-type="bibr">8</xref>]. Numerous methods have been proposed to mitigate this problem [<xref rid="B9-sensors-25-05583" ref-type="bibr">9</xref>,<xref rid="B10-sensors-25-05583" ref-type="bibr">10</xref>,<xref rid="B11-sensors-25-05583" ref-type="bibr">11</xref>,<xref rid="B12-sensors-25-05583" ref-type="bibr">12</xref>,<xref rid="B13-sensors-25-05583" ref-type="bibr">13</xref>]. A category of approaches applies 1-D DOA estimation separately to each subarray followed by a pairing procedure [<xref rid="B14-sensors-25-05583" ref-type="bibr">14</xref>], which may lead to performance degradation or failure. Subsequently, methods with automatic pairing were devised based on the cross-correlation matrix (CCM), such as joint singular value decomposition [<xref rid="B15-sensors-25-05583" ref-type="bibr">15</xref>], a decoupled method based on Jacobi-Anger expansion [<xref rid="B16-sensors-25-05583" ref-type="bibr">16</xref>] and parallel factor analysis [<xref rid="B17-sensors-25-05583" ref-type="bibr">17</xref>]. Since most methods overlook the multidimensional signal structure, a tensor-based 2-D DOA estimation method [<xref rid="B18-sensors-25-05583" ref-type="bibr">18</xref>] is developed, removing the cross-term generated from the correlated co-array signal and noise components with enhanced&#160;accuracy.</p><p>Although CCM-based methods reduce computational complexity, most face an inherent limitation that they cannot identify sources exceeding the number of sensors in each subarray. An aperture and snapshots extension technique [<xref rid="B19-sensors-25-05583" ref-type="bibr">19</xref>] increased the maximum identifiable sources for L-shaped arrays to <inline-formula><mml:math id="mm1" overflow="scroll"><mml:mrow><mml:mrow><mml:msub><mml:mi>M</mml:mi><mml:mi>total</mml:mi></mml:msub><mml:mo>&#8722;</mml:mo><mml:mn>2</mml:mn></mml:mrow></mml:mrow></mml:math></inline-formula> (where <inline-formula><mml:math id="mm2" overflow="scroll"><mml:mrow><mml:msub><mml:mi>M</mml:mi><mml:mi>total</mml:mi></mml:msub></mml:mrow></mml:math></inline-formula> is the total number of sensors), yet only one subarray fully leveraged all data for improved accuracy. The authors [<xref rid="B20-sensors-25-05583" ref-type="bibr">20</xref>] proposed a canonical polyadic decomposition-based approach to achieve approximately <inline-formula><mml:math id="mm3" overflow="scroll"><mml:mrow><mml:mrow><mml:mn>0.34</mml:mn><mml:msup><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:msub><mml:mi>M</mml:mi><mml:mi>total</mml:mi></mml:msub><mml:mo>/</mml:mo><mml:mn>2</mml:mn><mml:mo>+</mml:mo><mml:mn>1</mml:mn><mml:mo stretchy="false">)</mml:mo></mml:mrow><mml:mn>2</mml:mn></mml:msup></mml:mrow></mml:mrow></mml:math></inline-formula> degrees of freedom, significantly improving the identifiability. Sparse arrays [<xref rid="B21-sensors-25-05583" ref-type="bibr">21</xref>,<xref rid="B22-sensors-25-05583" ref-type="bibr">22</xref>,<xref rid="B23-sensors-25-05583" ref-type="bibr">23</xref>] are also designed as the subarrays of an L-shaped array to increase the degrees of freedom of the system.</p><p>Compressed sensing has spurred significant interest in sparse methods for DOA estimation [<xref rid="B24-sensors-25-05583" ref-type="bibr">24</xref>,<xref rid="B25-sensors-25-05583" ref-type="bibr">25</xref>,<xref rid="B26-sensors-25-05583" ref-type="bibr">26</xref>,<xref rid="B27-sensors-25-05583" ref-type="bibr">27</xref>], exhibiting enhanced robustness under limited snapshots or low signal-to-noise (SNR). These methods discretize the parameter domain into a finite grid, assuming targets lie on these points, framing DOA estimation as a sparse recovery problem [<xref rid="B28-sensors-25-05583" ref-type="bibr">28</xref>,<xref rid="B29-sensors-25-05583" ref-type="bibr">29</xref>]. The continuous nature of the domain causes grid mismatch, while excessively dense grids induce robustness issues due to high inter-atom correlation. Consequently, gridless methods operating in the continuous domain were developed to maintain high resolution under challenging conditions where subspace methods degrade [<xref rid="B30-sensors-25-05583" ref-type="bibr">30</xref>,<xref rid="B31-sensors-25-05583" ref-type="bibr">31</xref>]. Prominent gridless approaches include deterministic methods, such as atomic norm minimization (ANM) and its variants [<xref rid="B32-sensors-25-05583" ref-type="bibr">32</xref>], and covariance fitting methods [<xref rid="B33-sensors-25-05583" ref-type="bibr">33</xref>,<xref rid="B34-sensors-25-05583" ref-type="bibr">34</xref>].</p><p>Although the ANM framework has been extended to multidimensional problems [<xref rid="B35-sensors-25-05583" ref-type="bibr">35</xref>,<xref rid="B36-sensors-25-05583" ref-type="bibr">36</xref>,<xref rid="B37-sensors-25-05583" ref-type="bibr">37</xref>], these extensions are primarily designed for URA or MIMO systems with sufficient data. For L-shaped arrays, the parameters of two subarrays are completely decoupled in the covariance matrix. Most CCM-based sparse methods [<xref rid="B21-sensors-25-05583" ref-type="bibr">21</xref>,<xref rid="B37-sensors-25-05583" ref-type="bibr">37</xref>] exploit only cross-correlation information. Furthermore, vectorizing the covariance matrix [<xref rid="B21-sensors-25-05583" ref-type="bibr">21</xref>] neglects the inherent joint sparsity across snapshots. Therefore, it is desirable to design a sparse method fully utilizing all available data to improve identifiability and accuracy.</p><p>In this paper, we propose a sparse covariance fitting method for 2-D DOA estimation using L-shaped arrays. Drawing on the connection between the multidimensional structured covariance matrix and the multilevel Toeplitz (MLT) structure [<xref rid="B36-sensors-25-05583" ref-type="bibr">36</xref>], the method leverages the joint sparsity and redundant information across subarrays to recover the structured matrix and enhance estimation performance. The main contributions are summarized as follows:<list list-type="bullet"><list-item><p>We propose a matrix completion method leveraging the intrinsic connection between the covariance matrix and MLT structure. It simultaneously captures the joint sparsity and the coherence between signals received by the two subarrays. An efficient alternating direction method of multipliers (ADMM) algorithm is further developed to reduce computational complexity. The proposed method extends the virtual aperture through an interpolation-like mechanism, thereby improving estimation accuracy and identifiability (see <xref rid="sec3-sensors-25-05583" ref-type="sec">Section 3</xref> and <xref rid="sec4-sensors-25-05583" ref-type="sec">Section 4</xref>).</p></list-item><list-item><p>Extensive simulation results demonstrate the superior performance of the proposed method in terms of identifiability and statistic estimation accuracy benchmarked by the Cram&#233;r-Rao bound (CRB). The computational efficiency gained by the ADMM implementation is also empirically verified (see <xref rid="sec6-sensors-25-05583" ref-type="sec">Section 6</xref>).</p></list-item></list></p><p><italic toggle="yes">Notations</italic>: Boldface lowercase/uppercase letters denote vectors/matrices. <inline-formula><mml:math id="mm4" overflow="scroll"><mml:mrow><mml:mi mathvariant="double-struck">R</mml:mi></mml:mrow></mml:math></inline-formula> and <inline-formula><mml:math id="mm5" overflow="scroll"><mml:mrow><mml:mi mathvariant="double-struck">C</mml:mi></mml:mrow></mml:math></inline-formula> represent the sets of real and complex numbers. <inline-formula><mml:math id="mm6" overflow="scroll"><mml:mrow><mml:msup><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mo>&#183;</mml:mo><mml:mo stretchy="false">)</mml:mo></mml:mrow><mml:mi>T</mml:mi></mml:msup></mml:mrow></mml:math></inline-formula>, <inline-formula><mml:math id="mm7" overflow="scroll"><mml:mrow><mml:msup><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mo>&#183;</mml:mo><mml:mo stretchy="false">)</mml:mo></mml:mrow><mml:mo>*</mml:mo></mml:msup></mml:mrow></mml:math></inline-formula>, <inline-formula><mml:math id="mm8" overflow="scroll"><mml:mrow><mml:msup><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mo>&#183;</mml:mo><mml:mo stretchy="false">)</mml:mo></mml:mrow><mml:mi>H</mml:mi></mml:msup></mml:mrow></mml:math></inline-formula> denote the transpose, complex conjugate, conjugate transpose operator. <inline-formula><mml:math id="mm9" overflow="scroll"><mml:mrow><mml:msub><mml:mfenced open="&#x2225;" close="&#x2225;"><mml:mo>&#183;</mml:mo></mml:mfenced><mml:mn>2</mml:mn></mml:msub></mml:mrow></mml:math></inline-formula>, <inline-formula><mml:math id="mm10" overflow="scroll"><mml:mrow><mml:msub><mml:mfenced open="&#x2225;" close="&#x2225;"><mml:mo>&#183;</mml:mo></mml:mfenced><mml:mi mathvariant="normal">F</mml:mi></mml:msub></mml:mrow></mml:math></inline-formula> denote the <inline-formula><mml:math id="mm11" overflow="scroll"><mml:mrow><mml:msub><mml:mo>&#8467;</mml:mo><mml:mn>2</mml:mn></mml:msub></mml:mrow></mml:math></inline-formula> norm and Frobenius norm. Key matrix operations comprise the trace <inline-formula><mml:math id="mm12" overflow="scroll"><mml:mrow><mml:mrow><mml:mi>tr</mml:mi><mml:mo stretchy="false">(</mml:mo><mml:mo>&#183;</mml:mo><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:mrow></mml:math></inline-formula>, rank <inline-formula><mml:math id="mm13" overflow="scroll"><mml:mrow><mml:mrow><mml:mi>rank</mml:mi><mml:mo stretchy="false">(</mml:mo><mml:mo>&#183;</mml:mo><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:mrow></mml:math></inline-formula>, diagonal matrix formation <inline-formula><mml:math id="mm14" overflow="scroll"><mml:mrow><mml:mrow><mml:mi>diag</mml:mi><mml:mo stretchy="false">(</mml:mo><mml:mo>&#183;</mml:mo><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:mrow></mml:math></inline-formula>, and the real-valued inner product <inline-formula><mml:math id="mm15" overflow="scroll"><mml:mrow><mml:mrow><mml:msub><mml:mrow><mml:mo>&#9001;</mml:mo><mml:mi mathvariant="bold-italic">X</mml:mi><mml:mo>,</mml:mo><mml:mi mathvariant="bold-italic">Y</mml:mi><mml:mo>&#9002;</mml:mo></mml:mrow><mml:mi mathvariant="double-struck">R</mml:mi></mml:msub><mml:mo>=</mml:mo><mml:mo>&#8476;</mml:mo><mml:mrow><mml:mo>{</mml:mo><mml:mi>tr</mml:mi><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:msup><mml:mi mathvariant="bold-italic">X</mml:mi><mml:mi>H</mml:mi></mml:msup><mml:mi mathvariant="bold-italic">Y</mml:mi><mml:mo stretchy="false">)</mml:mo></mml:mrow><mml:mo>}</mml:mo></mml:mrow></mml:mrow></mml:mrow></mml:math></inline-formula>. Matrix indexing uses <inline-formula><mml:math id="mm16" overflow="scroll"><mml:mrow><mml:mrow><mml:msub><mml:mi mathvariant="bold-italic">X</mml:mi><mml:mrow><mml:mi>i</mml:mi><mml:mo>,</mml:mo><mml:mo>:</mml:mo></mml:mrow></mml:msub><mml:mo>/</mml:mo><mml:mi mathvariant="bold-italic">X</mml:mi><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mi>i</mml:mi><mml:mo>,</mml:mo><mml:mo>:</mml:mo><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:mrow></mml:mrow></mml:math></inline-formula> for the <italic toggle="yes">i</italic>-th row, <inline-formula><mml:math id="mm17" overflow="scroll"><mml:mrow><mml:mrow><mml:msub><mml:mi mathvariant="bold-italic">X</mml:mi><mml:mrow><mml:mo>:</mml:mo><mml:mo>,</mml:mo><mml:mi>j</mml:mi></mml:mrow></mml:msub><mml:mo>/</mml:mo><mml:mi mathvariant="bold-italic">X</mml:mi><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mo>:</mml:mo><mml:mo>,</mml:mo><mml:mi>j</mml:mi><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:mrow></mml:mrow></mml:math></inline-formula> for the <italic toggle="yes">j</italic>-th column, and <inline-formula><mml:math id="mm18" overflow="scroll"><mml:mrow><mml:msub><mml:mi>X</mml:mi><mml:mrow><mml:mi>i</mml:mi><mml:mo>,</mml:mo><mml:mi>j</mml:mi></mml:mrow></mml:msub></mml:mrow></mml:math></inline-formula> for the <inline-formula><mml:math id="mm19" overflow="scroll"><mml:mrow><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mi>i</mml:mi><mml:mo>,</mml:mo><mml:mi>j</mml:mi><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:mrow></mml:math></inline-formula>-th element. <inline-formula><mml:math id="mm20" overflow="scroll"><mml:mrow><mml:mrow><mml:mo>&#8855;</mml:mo><mml:mo>,</mml:mo><mml:mo>&#8857;</mml:mo><mml:mo>,</mml:mo><mml:mo>&#8728;</mml:mo></mml:mrow></mml:mrow></mml:math></inline-formula> denote the Kronecker, Hadamard and Khatri-Rao product. <inline-formula><mml:math id="mm21" overflow="scroll"><mml:mrow><mml:msub><mml:mi mathvariant="bold-italic">I</mml:mi><mml:mi>n</mml:mi></mml:msub></mml:mrow></mml:math></inline-formula> is an <inline-formula><mml:math id="mm22" overflow="scroll"><mml:mrow><mml:mrow><mml:mi>n</mml:mi><mml:mo>&#215;</mml:mo><mml:mi>n</mml:mi></mml:mrow></mml:mrow></mml:math></inline-formula> identity matrix and <inline-formula><mml:math id="mm23" overflow="scroll"><mml:mrow><mml:mrow><mml:mi mathvariant="bold-italic">X</mml:mi><mml:mo>&#10928;</mml:mo><mml:mn mathvariant="bold">0</mml:mn></mml:mrow></mml:mrow></mml:math></inline-formula> denotes a Hermitian positive semidefinite (PSD) matrix. <inline-formula><mml:math id="mm24" overflow="scroll"><mml:mrow><mml:mrow><mml:mo>&#8476;</mml:mo><mml:mo>{</mml:mo><mml:mo>&#183;</mml:mo><mml:mo>}</mml:mo></mml:mrow></mml:mrow></mml:math></inline-formula> and <inline-formula><mml:math id="mm25" overflow="scroll"><mml:mrow><mml:mrow><mml:mo>&#8465;</mml:mo><mml:mo>{</mml:mo><mml:mo>&#183;</mml:mo><mml:mo>}</mml:mo></mml:mrow></mml:mrow></mml:math></inline-formula> denote the real and imaginary part of a complex number.</p></sec><sec id="sec2-sensors-25-05583"><title>2. Preliminaries</title><sec id="sec2dot1-sensors-25-05583"><title>2.1. Basic Model</title><p>We consider an L-shaped array configured with two orthogonal ULAs with <inline-formula><mml:math id="mm26" overflow="scroll"><mml:mrow><mml:msub><mml:mi>M</mml:mi><mml:mi>x</mml:mi></mml:msub></mml:mrow></mml:math></inline-formula> and <inline-formula><mml:math id="mm27" overflow="scroll"><mml:mrow><mml:msub><mml:mi>M</mml:mi><mml:mi>z</mml:mi></mml:msub></mml:mrow></mml:math></inline-formula> sensors at x-axis and z-axis, respectively. The spacing of sensors is assumed to be half of the wavelength and <italic toggle="yes">K</italic> uncorrelated narrowband sources impinge on the array with azimuth angles <inline-formula><mml:math id="mm28" overflow="scroll"><mml:mrow><mml:mrow><mml:mi mathvariant="bold-italic">&#981;</mml:mi><mml:mo>=</mml:mo><mml:mo>{</mml:mo><mml:msub><mml:mi>&#981;</mml:mi><mml:mn>1</mml:mn></mml:msub><mml:mo>,</mml:mo><mml:mo>&#8230;</mml:mo><mml:mo>,</mml:mo><mml:msub><mml:mi>&#981;</mml:mi><mml:mi>K</mml:mi></mml:msub><mml:mo>}</mml:mo></mml:mrow></mml:mrow></mml:math></inline-formula> and elevation angles <inline-formula><mml:math id="mm29" overflow="scroll"><mml:mrow><mml:mrow><mml:mi mathvariant="bold-italic">&#952;</mml:mi><mml:mo>=</mml:mo><mml:mo>{</mml:mo><mml:msub><mml:mi>&#952;</mml:mi><mml:mn>1</mml:mn></mml:msub><mml:mo>,</mml:mo><mml:mo>&#8230;</mml:mo><mml:mo>,</mml:mo><mml:msub><mml:mi>&#952;</mml:mi><mml:mi>K</mml:mi></mml:msub><mml:mo>}</mml:mo></mml:mrow></mml:mrow></mml:math></inline-formula> as <xref rid="sensors-25-05583-f001" ref-type="fig">Figure 1</xref>. The received signal with <italic toggle="yes">L</italic> snapshots can be represented as follows:<disp-formula id="FD1-sensors-25-05583"><label>(1)</label><mml:math id="mm30" display="block" overflow="scroll"><mml:mrow><mml:mtable displaystyle="true"><mml:mtr><mml:mtd columnalign="right"><mml:mi mathvariant="bold-italic">X</mml:mi></mml:mtd><mml:mtd columnalign="left"><mml:mrow><mml:mo>=</mml:mo><mml:munderover><mml:mo>&#8721;</mml:mo><mml:mrow><mml:mi>k</mml:mi><mml:mo>=</mml:mo><mml:mn>1</mml:mn></mml:mrow><mml:mi>K</mml:mi></mml:munderover><mml:msub><mml:mi mathvariant="bold-italic">a</mml:mi><mml:mi>x</mml:mi></mml:msub><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:msub><mml:mi>&#981;</mml:mi><mml:mi>k</mml:mi></mml:msub><mml:mo stretchy="false">)</mml:mo></mml:mrow><mml:msub><mml:mi mathvariant="bold-italic">s</mml:mi><mml:mi>k</mml:mi></mml:msub><mml:mo>+</mml:mo><mml:msub><mml:mi mathvariant="bold-italic">E</mml:mi><mml:mi>x</mml:mi></mml:msub><mml:mo>=</mml:mo><mml:msub><mml:mi mathvariant="bold-italic">A</mml:mi><mml:mi>x</mml:mi></mml:msub><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mi mathvariant="bold-italic">&#981;</mml:mi><mml:mo stretchy="false">)</mml:mo></mml:mrow><mml:mi mathvariant="bold-italic">S</mml:mi><mml:mo>+</mml:mo><mml:msub><mml:mi mathvariant="bold-italic">E</mml:mi><mml:mi>x</mml:mi></mml:msub><mml:mo>,</mml:mo></mml:mrow></mml:mtd></mml:mtr><mml:mtr><mml:mtd columnalign="right"><mml:mi mathvariant="bold-italic">Z</mml:mi></mml:mtd><mml:mtd columnalign="left"><mml:mrow><mml:mo>=</mml:mo><mml:munderover><mml:mo>&#8721;</mml:mo><mml:mrow><mml:mi>k</mml:mi><mml:mo>=</mml:mo><mml:mn>1</mml:mn></mml:mrow><mml:mi>K</mml:mi></mml:munderover><mml:msub><mml:mi mathvariant="bold-italic">a</mml:mi><mml:mi>z</mml:mi></mml:msub><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:msub><mml:mi>&#952;</mml:mi><mml:mi>k</mml:mi></mml:msub><mml:mo stretchy="false">)</mml:mo></mml:mrow><mml:msub><mml:mi mathvariant="bold-italic">s</mml:mi><mml:mi>k</mml:mi></mml:msub><mml:mo>+</mml:mo><mml:msub><mml:mi mathvariant="bold-italic">E</mml:mi><mml:mi>z</mml:mi></mml:msub><mml:mo>=</mml:mo><mml:msub><mml:mi mathvariant="bold-italic">A</mml:mi><mml:mi>z</mml:mi></mml:msub><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mi mathvariant="bold-italic">&#952;</mml:mi><mml:mo stretchy="false">)</mml:mo></mml:mrow><mml:mi mathvariant="bold-italic">S</mml:mi><mml:mo>+</mml:mo><mml:msub><mml:mi mathvariant="bold-italic">E</mml:mi><mml:mi>z</mml:mi></mml:msub><mml:mo>,</mml:mo></mml:mrow></mml:mtd></mml:mtr></mml:mtable></mml:mrow></mml:math></disp-formula>
where <inline-formula><mml:math id="mm31" overflow="scroll"><mml:mrow><mml:mrow><mml:msub><mml:mi mathvariant="bold-italic">A</mml:mi><mml:mi>x</mml:mi></mml:msub><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mi mathvariant="bold-italic">&#981;</mml:mi><mml:mo stretchy="false">)</mml:mo></mml:mrow><mml:mo>=</mml:mo><mml:mrow><mml:mo>[</mml:mo><mml:msub><mml:mi mathvariant="bold-italic">a</mml:mi><mml:mi>x</mml:mi></mml:msub><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:msub><mml:mi>&#981;</mml:mi><mml:mn>1</mml:mn></mml:msub><mml:mo stretchy="false">)</mml:mo></mml:mrow><mml:mo>,</mml:mo><mml:mo>&#8230;</mml:mo><mml:mo>,</mml:mo><mml:msub><mml:mi mathvariant="bold-italic">a</mml:mi><mml:mi>x</mml:mi></mml:msub><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:msub><mml:mi>&#981;</mml:mi><mml:mi>K</mml:mi></mml:msub><mml:mo stretchy="false">)</mml:mo></mml:mrow><mml:mo>]</mml:mo></mml:mrow></mml:mrow></mml:mrow></mml:math></inline-formula> and <inline-formula><mml:math id="mm32" overflow="scroll"><mml:mrow><mml:mrow><mml:msub><mml:mi mathvariant="bold-italic">A</mml:mi><mml:mi>z</mml:mi></mml:msub><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mi mathvariant="bold-italic">&#952;</mml:mi><mml:mo stretchy="false">)</mml:mo></mml:mrow><mml:mo>=</mml:mo><mml:mrow><mml:mo>[</mml:mo><mml:msub><mml:mi mathvariant="bold-italic">a</mml:mi><mml:mi>z</mml:mi></mml:msub><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:msub><mml:mi>&#952;</mml:mi><mml:mn>1</mml:mn></mml:msub><mml:mo stretchy="false">)</mml:mo></mml:mrow><mml:mo>,</mml:mo><mml:mo>&#8230;</mml:mo><mml:mo>,</mml:mo><mml:msub><mml:mi mathvariant="bold-italic">a</mml:mi><mml:mi>z</mml:mi></mml:msub><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:msub><mml:mi>&#952;</mml:mi><mml:mi>K</mml:mi></mml:msub><mml:mo stretchy="false">)</mml:mo></mml:mrow><mml:mo>]</mml:mo></mml:mrow></mml:mrow></mml:mrow></mml:math></inline-formula> are manifold matrices of subarrays, <inline-formula><mml:math id="mm33" overflow="scroll"><mml:mrow><mml:mrow><mml:msub><mml:mi mathvariant="bold-italic">a</mml:mi><mml:mi>x</mml:mi></mml:msub><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:msub><mml:mi>&#981;</mml:mi><mml:mi>k</mml:mi></mml:msub><mml:mo stretchy="false">)</mml:mo></mml:mrow><mml:mo>=</mml:mo><mml:msup><mml:mrow><mml:mo>[</mml:mo><mml:mn>1</mml:mn><mml:mo>,</mml:mo><mml:msup><mml:mi>e</mml:mi><mml:mrow><mml:mi>i</mml:mi><mml:mi>&#960;</mml:mi><mml:mi>cos</mml:mi><mml:msub><mml:mi>&#981;</mml:mi><mml:mi>k</mml:mi></mml:msub></mml:mrow></mml:msup><mml:mo>,</mml:mo><mml:mo>&#8230;</mml:mo><mml:mo>,</mml:mo><mml:msup><mml:mi>e</mml:mi><mml:mrow><mml:mi>i</mml:mi><mml:mi>&#960;</mml:mi><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:msub><mml:mi>M</mml:mi><mml:mi>x</mml:mi></mml:msub><mml:mo>&#8722;</mml:mo><mml:mn>1</mml:mn><mml:mo stretchy="false">)</mml:mo></mml:mrow><mml:mi>cos</mml:mi><mml:msub><mml:mi>&#981;</mml:mi><mml:mi>k</mml:mi></mml:msub></mml:mrow></mml:msup><mml:mo>]</mml:mo></mml:mrow><mml:mi>T</mml:mi></mml:msup><mml:mo>&#8712;</mml:mo><mml:msup><mml:mi mathvariant="double-struck">C</mml:mi><mml:msub><mml:mi>M</mml:mi><mml:mi>x</mml:mi></mml:msub></mml:msup></mml:mrow></mml:mrow></mml:math></inline-formula> and <inline-formula><mml:math id="mm34" overflow="scroll"><mml:mrow><mml:mrow><mml:msub><mml:mi mathvariant="bold-italic">a</mml:mi><mml:mi>z</mml:mi></mml:msub><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:msub><mml:mi>&#952;</mml:mi><mml:mi>k</mml:mi></mml:msub><mml:mo stretchy="false">)</mml:mo></mml:mrow><mml:mo>=</mml:mo><mml:msup><mml:mrow><mml:mo>[</mml:mo><mml:msup><mml:mi>e</mml:mi><mml:mrow><mml:mi>i</mml:mi><mml:mi>&#960;</mml:mi><mml:mi>cos</mml:mi><mml:msub><mml:mi>&#952;</mml:mi><mml:mi>k</mml:mi></mml:msub></mml:mrow></mml:msup><mml:mo>,</mml:mo><mml:mo>&#8230;</mml:mo><mml:mo>,</mml:mo><mml:msup><mml:mi>e</mml:mi><mml:mrow><mml:mi>i</mml:mi><mml:mi>&#960;</mml:mi><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:msub><mml:mi>M</mml:mi><mml:mi>z</mml:mi></mml:msub><mml:mo>&#8722;</mml:mo><mml:mn>1</mml:mn><mml:mo stretchy="false">)</mml:mo></mml:mrow><mml:mi>cos</mml:mi><mml:msub><mml:mi>&#952;</mml:mi><mml:mi>k</mml:mi></mml:msub></mml:mrow></mml:msup><mml:mo>]</mml:mo></mml:mrow><mml:mi>T</mml:mi></mml:msup><mml:mo>&#8712;</mml:mo><mml:msup><mml:mi mathvariant="double-struck">C</mml:mi><mml:mrow><mml:msub><mml:mi>M</mml:mi><mml:mi>z</mml:mi></mml:msub><mml:mo>&#8722;</mml:mo><mml:mn>1</mml:mn></mml:mrow></mml:msup></mml:mrow></mml:mrow></mml:math></inline-formula>; <inline-formula><mml:math id="mm35" overflow="scroll"><mml:mrow><mml:mrow><mml:mi mathvariant="bold-italic">S</mml:mi><mml:mo>=</mml:mo><mml:msup><mml:mrow><mml:mo>[</mml:mo><mml:msub><mml:mi mathvariant="bold-italic">s</mml:mi><mml:mn>1</mml:mn></mml:msub><mml:mo>,</mml:mo><mml:mo>&#8230;</mml:mo><mml:mo>,</mml:mo><mml:msub><mml:mi mathvariant="bold-italic">s</mml:mi><mml:mi>K</mml:mi></mml:msub><mml:mo>]</mml:mo></mml:mrow><mml:mi>T</mml:mi></mml:msup></mml:mrow></mml:mrow></mml:math></inline-formula> denote the uncorrelated source signals; <inline-formula><mml:math id="mm36" overflow="scroll"><mml:mrow><mml:mrow><mml:mi mathvariant="bold-italic">E</mml:mi><mml:mo>=</mml:mo><mml:msup><mml:mrow><mml:mo>[</mml:mo><mml:msubsup><mml:mi mathvariant="bold-italic">E</mml:mi><mml:mi>x</mml:mi><mml:mi>T</mml:mi></mml:msubsup><mml:mo>,</mml:mo><mml:msubsup><mml:mi mathvariant="bold-italic">E</mml:mi><mml:mi>z</mml:mi><mml:mi>T</mml:mi></mml:msubsup><mml:mo>]</mml:mo></mml:mrow><mml:mi>T</mml:mi></mml:msup></mml:mrow></mml:mrow></mml:math></inline-formula> is the spatially and temporally independent Gaussian white noise with variance <inline-formula><mml:math id="mm37" overflow="scroll"><mml:mrow><mml:msup><mml:mi>&#963;</mml:mi><mml:mn>2</mml:mn></mml:msup></mml:mrow></mml:math></inline-formula>. The signals are concatenated as follows:<disp-formula id="FD2-sensors-25-05583"><label>(2)</label><mml:math id="mm38" display="block" overflow="scroll"><mml:mrow><mml:mtable displaystyle="true"><mml:mtr><mml:mtd columnalign="right"><mml:mrow><mml:mi mathvariant="bold-italic">Y</mml:mi><mml:mo>=</mml:mo><mml:mfenced open="[" close="]"><mml:mtable><mml:mtr><mml:mtd><mml:mrow><mml:msub><mml:mi mathvariant="bold-italic">A</mml:mi><mml:mi>x</mml:mi></mml:msub><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mi>&#981;</mml:mi><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:mrow></mml:mtd></mml:mtr><mml:mtr><mml:mtd><mml:mrow><mml:msub><mml:mi mathvariant="bold-italic">A</mml:mi><mml:mi>z</mml:mi></mml:msub><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mi>&#952;</mml:mi><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:mrow></mml:mtd></mml:mtr></mml:mtable></mml:mfenced><mml:mi mathvariant="bold-italic">S</mml:mi><mml:mo>+</mml:mo><mml:mi mathvariant="bold-italic">E</mml:mi><mml:mo>&#8712;</mml:mo><mml:msup><mml:mi mathvariant="double-struck">C</mml:mi><mml:mrow><mml:mi>M</mml:mi><mml:mo>&#215;</mml:mo><mml:mi>L</mml:mi></mml:mrow></mml:msup><mml:mo>,</mml:mo></mml:mrow></mml:mtd></mml:mtr></mml:mtable></mml:mrow></mml:math></disp-formula>
where <inline-formula><mml:math id="mm39" overflow="scroll"><mml:mrow><mml:mrow><mml:mi>M</mml:mi><mml:mspace width="-0.166667em"/><mml:mo>=</mml:mo><mml:mspace width="-0.166667em"/><mml:msub><mml:mi>M</mml:mi><mml:mi>x</mml:mi></mml:msub><mml:mo>+</mml:mo><mml:msub><mml:mi>M</mml:mi><mml:mi>z</mml:mi></mml:msub><mml:mo>&#8722;</mml:mo><mml:mn>1</mml:mn></mml:mrow></mml:mrow></mml:math></inline-formula> is the total number of sensors. For notational simplicity, we will write <inline-formula><mml:math id="mm40" overflow="scroll"><mml:mrow><mml:mrow><mml:msub><mml:mi mathvariant="bold-italic">A</mml:mi><mml:mi>x</mml:mi></mml:msub><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mi mathvariant="bold-italic">&#981;</mml:mi><mml:mo stretchy="false">)</mml:mo></mml:mrow><mml:mo>,</mml:mo><mml:msub><mml:mi mathvariant="bold-italic">A</mml:mi><mml:mi>z</mml:mi></mml:msub><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mi mathvariant="bold-italic">&#952;</mml:mi><mml:mo stretchy="false">)</mml:mo></mml:mrow><mml:mo>,</mml:mo><mml:msub><mml:mi mathvariant="bold-italic">a</mml:mi><mml:mi>x</mml:mi></mml:msub><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:msub><mml:mi>&#981;</mml:mi><mml:mi>k</mml:mi></mml:msub><mml:mo stretchy="false">)</mml:mo></mml:mrow><mml:mo>,</mml:mo><mml:msub><mml:mi mathvariant="bold-italic">a</mml:mi><mml:mi>z</mml:mi></mml:msub><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:msub><mml:mi>&#952;</mml:mi><mml:mi>k</mml:mi></mml:msub><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:mrow></mml:mrow></mml:math></inline-formula> as <inline-formula><mml:math id="mm41" overflow="scroll"><mml:mrow><mml:mrow><mml:msub><mml:mi mathvariant="bold-italic">A</mml:mi><mml:mi>x</mml:mi></mml:msub><mml:mo>,</mml:mo><mml:msub><mml:mi mathvariant="bold-italic">A</mml:mi><mml:mi>z</mml:mi></mml:msub><mml:mo>,</mml:mo><mml:msub><mml:mi mathvariant="bold-italic">a</mml:mi><mml:mrow><mml:mi>x</mml:mi><mml:mi>k</mml:mi></mml:mrow></mml:msub><mml:mo>,</mml:mo><mml:msub><mml:mi mathvariant="bold-italic">a</mml:mi><mml:mrow><mml:mi>z</mml:mi><mml:mi>k</mml:mi></mml:mrow></mml:msub></mml:mrow></mml:mrow></mml:math></inline-formula> hereafter.</p><p>The covariance matrix of <inline-formula><mml:math id="mm42" overflow="scroll"><mml:mrow><mml:mi mathvariant="bold-italic">Y</mml:mi></mml:mrow></mml:math></inline-formula> is denoted as follows:<disp-formula id="FD3-sensors-25-05583"><label>(3)</label><mml:math id="mm43" display="block" overflow="scroll"><mml:mrow><mml:mrow><mml:mover accent="true"><mml:mi mathvariant="bold-italic">R</mml:mi><mml:mo stretchy="false">^</mml:mo></mml:mover><mml:mo>=</mml:mo><mml:mfenced open="[" close="]"><mml:mtable><mml:mtr><mml:mtd><mml:msub><mml:mi mathvariant="bold-italic">A</mml:mi><mml:mi>x</mml:mi></mml:msub></mml:mtd></mml:mtr><mml:mtr><mml:mtd><mml:msub><mml:mi mathvariant="bold-italic">A</mml:mi><mml:mi>z</mml:mi></mml:msub></mml:mtd></mml:mtr></mml:mtable></mml:mfenced><mml:mi mathvariant="bold-italic">P</mml:mi><mml:msup><mml:mfenced open="[" close="]"><mml:mtable><mml:mtr><mml:mtd><mml:msub><mml:mi mathvariant="bold-italic">A</mml:mi><mml:mi>x</mml:mi></mml:msub></mml:mtd></mml:mtr><mml:mtr><mml:mtd><mml:msub><mml:mi mathvariant="bold-italic">A</mml:mi><mml:mi>z</mml:mi></mml:msub></mml:mtd></mml:mtr></mml:mtable></mml:mfenced><mml:mi>H</mml:mi></mml:msup><mml:mo>+</mml:mo><mml:msup><mml:mi>&#963;</mml:mi><mml:mn>2</mml:mn></mml:msup><mml:msub><mml:mi mathvariant="bold-italic">I</mml:mi><mml:mi>M</mml:mi></mml:msub><mml:mo>=</mml:mo><mml:mfenced open="[" close="]"><mml:mtable><mml:mtr><mml:mtd><mml:msub><mml:mi mathvariant="bold-italic">R</mml:mi><mml:mi>x</mml:mi></mml:msub></mml:mtd><mml:mtd><mml:msub><mml:mi mathvariant="bold-italic">R</mml:mi><mml:mrow><mml:mi>x</mml:mi><mml:mi>z</mml:mi></mml:mrow></mml:msub></mml:mtd></mml:mtr><mml:mtr><mml:mtd><mml:msubsup><mml:mi mathvariant="bold-italic">R</mml:mi><mml:mrow><mml:mi>x</mml:mi><mml:mi>z</mml:mi></mml:mrow><mml:mi>H</mml:mi></mml:msubsup></mml:mtd><mml:mtd><mml:msub><mml:mi mathvariant="bold-italic">R</mml:mi><mml:mi>z</mml:mi></mml:msub></mml:mtd></mml:mtr></mml:mtable></mml:mfenced><mml:mo>+</mml:mo><mml:msup><mml:mi>&#963;</mml:mi><mml:mn>2</mml:mn></mml:msup><mml:msub><mml:mi mathvariant="bold-italic">I</mml:mi><mml:mi>M</mml:mi></mml:msub><mml:mo>=</mml:mo><mml:mi mathvariant="bold-italic">R</mml:mi><mml:mo>+</mml:mo><mml:msup><mml:mi>&#963;</mml:mi><mml:mn>2</mml:mn></mml:msup><mml:msub><mml:mi mathvariant="bold-italic">I</mml:mi><mml:mi>M</mml:mi></mml:msub><mml:mo>,</mml:mo></mml:mrow></mml:mrow></mml:math></disp-formula>
where <inline-formula><mml:math id="mm44" overflow="scroll"><mml:mrow><mml:mrow><mml:mi mathvariant="bold-italic">P</mml:mi><mml:mo>=</mml:mo><mml:mi>diag</mml:mi><mml:mo stretchy="false">(</mml:mo><mml:msub><mml:mi>p</mml:mi><mml:mn>1</mml:mn></mml:msub><mml:mo>,</mml:mo><mml:mo>&#8943;</mml:mo><mml:mo>,</mml:mo><mml:msub><mml:mi>p</mml:mi><mml:mi>K</mml:mi></mml:msub><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:mrow></mml:math></inline-formula> and <inline-formula><mml:math id="mm45" overflow="scroll"><mml:mrow><mml:mrow><mml:msub><mml:mi>p</mml:mi><mml:mi>k</mml:mi></mml:msub><mml:mo>&gt;</mml:mo><mml:mn>0</mml:mn></mml:mrow></mml:mrow></mml:math></inline-formula> represents the power of the <italic toggle="yes">k</italic>-th source. <inline-formula><mml:math id="mm46" overflow="scroll"><mml:mrow><mml:msub><mml:mi mathvariant="bold-italic">R</mml:mi><mml:mi>x</mml:mi></mml:msub></mml:mrow></mml:math></inline-formula>, <inline-formula><mml:math id="mm47" overflow="scroll"><mml:mrow><mml:msub><mml:mi mathvariant="bold-italic">R</mml:mi><mml:mi>z</mml:mi></mml:msub></mml:mrow></mml:math></inline-formula> are noise-free self-correlation matrices of <inline-formula><mml:math id="mm48" overflow="scroll"><mml:mrow><mml:mi mathvariant="bold-italic">X</mml:mi></mml:mrow></mml:math></inline-formula> and <inline-formula><mml:math id="mm49" overflow="scroll"><mml:mrow><mml:mi mathvariant="bold-italic">Z</mml:mi></mml:mrow></mml:math></inline-formula>, and <inline-formula><mml:math id="mm50" overflow="scroll"><mml:mrow><mml:msub><mml:mi mathvariant="bold-italic">R</mml:mi><mml:mrow><mml:mi>x</mml:mi><mml:mi>z</mml:mi></mml:mrow></mml:msub></mml:mrow></mml:math></inline-formula> is the cross-correlation matrix between <inline-formula><mml:math id="mm51" overflow="scroll"><mml:mrow><mml:mi mathvariant="bold-italic">X</mml:mi></mml:mrow></mml:math></inline-formula> and <inline-formula><mml:math id="mm52" overflow="scroll"><mml:mrow><mml:mi mathvariant="bold-italic">Z</mml:mi></mml:mrow></mml:math></inline-formula>. For the case of infinite snapshots, the sample covariance matrix can be calculated as follows:<disp-formula id="FD4-sensors-25-05583"><label>(4)</label><mml:math id="mm53" display="block" overflow="scroll"><mml:mrow><mml:mtable displaystyle="true"><mml:mtr><mml:mtd columnalign="right"><mml:mrow><mml:mover accent="true"><mml:mi mathvariant="bold-italic">R</mml:mi><mml:mo stretchy="false">&#732;</mml:mo></mml:mover><mml:mo>=</mml:mo><mml:mstyle scriptlevel="0" displaystyle="true"><mml:mfrac><mml:mn>1</mml:mn><mml:mi>L</mml:mi></mml:mfrac></mml:mstyle><mml:mi mathvariant="bold-italic">Y</mml:mi><mml:msup><mml:mi mathvariant="bold-italic">Y</mml:mi><mml:mi>H</mml:mi></mml:msup><mml:mo>.</mml:mo></mml:mrow></mml:mtd></mml:mtr></mml:mtable></mml:mrow></mml:math></disp-formula></p></sec><sec id="sec2dot2-sensors-25-05583"><title>2.2. Joint Sparse Recovery Framework</title><p>The signals sampled at two subarrays share identical complex amplitude <inline-formula><mml:math id="mm54" overflow="scroll"><mml:mrow><mml:mi mathvariant="bold-italic">S</mml:mi></mml:mrow></mml:math></inline-formula>, and we can exploit their correlation to define the atomic set as follows [<xref rid="B38-sensors-25-05583" ref-type="bibr">38</xref>]:<disp-formula id="FD5-sensors-25-05583"><label>(5)</label><mml:math id="mm55" display="block" overflow="scroll"><mml:mrow><mml:mtable displaystyle="true"><mml:mtr><mml:mtd columnalign="right"><mml:mrow><mml:mi mathvariant="script">A</mml:mi><mml:mo>:</mml:mo><mml:mo>=</mml:mo><mml:mo>{</mml:mo><mml:mi mathvariant="bold-italic">a</mml:mi><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mi>&#981;</mml:mi><mml:mo>,</mml:mo><mml:mi>&#952;</mml:mi><mml:mo>,</mml:mo><mml:mi mathvariant="bold-italic">&#968;</mml:mi><mml:mo stretchy="false">)</mml:mo></mml:mrow><mml:mo>=</mml:mo><mml:mfenced open="[" close="]"><mml:mtable><mml:mtr><mml:mtd><mml:mrow><mml:msub><mml:mi mathvariant="bold-italic">a</mml:mi><mml:mi>x</mml:mi></mml:msub><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mi>&#981;</mml:mi><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:mrow></mml:mtd></mml:mtr><mml:mtr><mml:mtd><mml:mrow><mml:msub><mml:mi mathvariant="bold-italic">a</mml:mi><mml:mi>z</mml:mi></mml:msub><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mi>&#952;</mml:mi><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:mrow></mml:mtd></mml:mtr></mml:mtable></mml:mfenced><mml:mi mathvariant="bold-italic">&#968;</mml:mi><mml:mo>=</mml:mo><mml:mi mathvariant="bold-italic">a</mml:mi><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mi>&#981;</mml:mi><mml:mo>,</mml:mo><mml:mi>&#952;</mml:mi><mml:mo stretchy="false">)</mml:mo></mml:mrow><mml:mi mathvariant="bold-italic">&#968;</mml:mi><mml:mo>}</mml:mo></mml:mrow></mml:mtd></mml:mtr></mml:mtable></mml:mrow></mml:math></disp-formula>
where <inline-formula><mml:math id="mm56" overflow="scroll"><mml:mrow><mml:mrow><mml:mi mathvariant="bold-italic">&#968;</mml:mi><mml:mo>&#8712;</mml:mo><mml:msup><mml:mi mathvariant="double-struck">C</mml:mi><mml:mrow><mml:mn>1</mml:mn><mml:mo>&#215;</mml:mo><mml:mi>L</mml:mi></mml:mrow></mml:msup><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:msub><mml:mfenced open="&#x2225;" close="&#x2225;"><mml:mi mathvariant="bold-italic">&#968;</mml:mi></mml:mfenced><mml:mn>2</mml:mn></mml:msub><mml:mo>=</mml:mo><mml:mn>1</mml:mn><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:mrow></mml:mrow></mml:math></inline-formula> embeds the joint sparsity across snapshots and <inline-formula><mml:math id="mm57" overflow="scroll"><mml:mrow><mml:mrow><mml:mi mathvariant="bold-italic">a</mml:mi><mml:mo stretchy="false">(</mml:mo><mml:mi>&#981;</mml:mi><mml:mo>,</mml:mo><mml:mi>&#952;</mml:mi><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:mrow></mml:math></inline-formula> couples parameters of two subarrays. The joint sparse recovery (JSR) framework is formulated based on a 2-D overcomplete dictionary composed of atoms in the set as follows:<disp-formula id="FD6-sensors-25-05583"><label>(6)</label><mml:math id="mm58" display="block" overflow="scroll"><mml:mrow><mml:mtable displaystyle="true"><mml:mtr><mml:mtd columnalign="right"><mml:mspace width="1.em"/></mml:mtd><mml:mtd columnalign="left"><mml:mrow><mml:munder><mml:mi>min</mml:mi><mml:mi mathvariant="bold-italic">S</mml:mi></mml:munder><mml:mstyle scriptlevel="0" displaystyle="true"><mml:mfrac><mml:mn>1</mml:mn><mml:mn>2</mml:mn></mml:mfrac></mml:mstyle><mml:mrow><mml:mo stretchy="false">&#8741;</mml:mo><mml:mi mathvariant="bold-italic">Y</mml:mi><mml:mo>&#8722;</mml:mo></mml:mrow><mml:msub><mml:mi mathvariant="bold-italic">A</mml:mi><mml:mn>0</mml:mn></mml:msub><mml:msubsup><mml:mrow><mml:mi mathvariant="bold-italic">S</mml:mi><mml:mo stretchy="false">&#8741;</mml:mo></mml:mrow><mml:mrow><mml:mi mathvariant="normal">F</mml:mi></mml:mrow><mml:mn>2</mml:mn></mml:msubsup><mml:mo>+</mml:mo><mml:mi>&#955;</mml:mi><mml:msub><mml:mrow><mml:mo stretchy="false">&#8741;</mml:mo><mml:mi mathvariant="bold-italic">S</mml:mi><mml:mo stretchy="false">&#8741;</mml:mo></mml:mrow><mml:mrow><mml:mn>2</mml:mn><mml:mo>,</mml:mo><mml:mn>1</mml:mn></mml:mrow></mml:msub><mml:mo>,</mml:mo></mml:mrow></mml:mtd></mml:mtr></mml:mtable></mml:mrow></mml:math></disp-formula>
where <inline-formula><mml:math id="mm59" overflow="scroll"><mml:mrow><mml:mrow><mml:msub><mml:mi mathvariant="bold-italic">A</mml:mi><mml:mn>0</mml:mn></mml:msub><mml:mo>=</mml:mo><mml:msup><mml:mfenced open="[" close="]"><mml:mtable><mml:mtr><mml:mtd><mml:mrow><mml:msub><mml:mi mathvariant="bold-italic">A</mml:mi><mml:mi>x</mml:mi></mml:msub><mml:msup><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:msub><mml:mi mathvariant="bold-italic">&#981;</mml:mi><mml:mn>0</mml:mn></mml:msub><mml:mo stretchy="false">)</mml:mo></mml:mrow><mml:mi>T</mml:mi></mml:msup><mml:mo>,</mml:mo><mml:msub><mml:mi mathvariant="bold-italic">A</mml:mi><mml:mi>z</mml:mi></mml:msub><mml:msup><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:msub><mml:mi mathvariant="bold-italic">&#952;</mml:mi><mml:mn>0</mml:mn></mml:msub><mml:mo stretchy="false">)</mml:mo></mml:mrow><mml:mi>T</mml:mi></mml:msup></mml:mrow></mml:mtd></mml:mtr></mml:mtable></mml:mfenced><mml:mi>T</mml:mi></mml:msup></mml:mrow></mml:mrow></mml:math></inline-formula> is the dictionary matrix composed of <inline-formula><mml:math id="mm60" overflow="scroll"><mml:mrow><mml:msub><mml:mi>N</mml:mi><mml:mn>0</mml:mn></mml:msub></mml:mrow></mml:math></inline-formula> candidate atoms with the regularization parameter <inline-formula><mml:math id="mm61" overflow="scroll"><mml:mrow><mml:mi>&#955;</mml:mi></mml:mrow></mml:math></inline-formula> set as [<xref rid="B39-sensors-25-05583" ref-type="bibr">39</xref>], <inline-formula><mml:math id="mm62" overflow="scroll"><mml:mrow><mml:msub><mml:mi mathvariant="bold-italic">&#952;</mml:mi><mml:mn>0</mml:mn></mml:msub></mml:mrow></mml:math></inline-formula> and <inline-formula><mml:math id="mm63" overflow="scroll"><mml:mrow><mml:msub><mml:mi mathvariant="bold-italic">&#981;</mml:mi><mml:mn>0</mml:mn></mml:msub></mml:mrow></mml:math></inline-formula> denote the azimuth and elevation angles of candidate atoms in the dictionary. The former item measures the data fidelity and correlation while the latter item constrains the joint sparsity via the <inline-formula><mml:math id="mm64" overflow="scroll"><mml:mrow><mml:msub><mml:mo>&#8467;</mml:mo><mml:mrow><mml:mn>2</mml:mn><mml:mo>,</mml:mo><mml:mn>1</mml:mn></mml:mrow></mml:msub></mml:mrow></mml:math></inline-formula> norm. Although the framework exploits inter-signal correlation and joint sparsity to enhance estimation performance, it exhibits all characteristic limitations of grid-based sparse methods [<xref rid="B38-sensors-25-05583" ref-type="bibr">38</xref>].</p></sec></sec><sec id="sec3-sensors-25-05583"><title>3. Multidimensional Matrix Completion Method</title><p>It is intuitive to formulate the covariance fitting criteria for <inline-formula><mml:math id="mm65" overflow="scroll"><mml:mrow><mml:mover accent="true"><mml:mi mathvariant="bold-italic">R</mml:mi><mml:mo stretchy="false">^</mml:mo></mml:mover></mml:mrow></mml:math></inline-formula> in (<xref rid="FD3-sensors-25-05583" ref-type="disp-formula">3</xref>) from the generalized least squares framework [<xref rid="B29-sensors-25-05583" ref-type="bibr">29</xref>,<xref rid="B40-sensors-25-05583" ref-type="bibr">40</xref>], written as follows:<disp-formula id="FD7-sensors-25-05583"><label>(7)</label><mml:math id="mm66" display="block" overflow="scroll"><mml:mrow><mml:mtable displaystyle="true"><mml:mtr><mml:mtd columnalign="right"><mml:mrow><mml:msub><mml:mi>h</mml:mi><mml:mn>1</mml:mn></mml:msub><mml:mo>=</mml:mo><mml:mfenced separators="" open="{" close=""><mml:mtable><mml:mtr><mml:mtd columnalign="left"><mml:mrow><mml:mrow><mml:mo stretchy="false">&#8741;</mml:mo></mml:mrow><mml:msup><mml:mover accent="true"><mml:mi mathvariant="bold-italic">R</mml:mi><mml:mo stretchy="false">^</mml:mo></mml:mover><mml:mrow><mml:mo>&#8722;</mml:mo><mml:mfrac><mml:mn>1</mml:mn><mml:mn>2</mml:mn></mml:mfrac></mml:mrow></mml:msup><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mover accent="true"><mml:mi mathvariant="bold-italic">R</mml:mi><mml:mo stretchy="false">&#732;</mml:mo></mml:mover><mml:mo>&#8722;</mml:mo><mml:mover accent="true"><mml:mi mathvariant="bold-italic">R</mml:mi><mml:mo stretchy="false">^</mml:mo></mml:mover><mml:mo stretchy="false">)</mml:mo></mml:mrow><mml:msup><mml:mover accent="true"><mml:mi mathvariant="bold-italic">R</mml:mi><mml:mo stretchy="false">&#732;</mml:mo></mml:mover><mml:mrow><mml:mo>&#8722;</mml:mo><mml:mfrac><mml:mn>1</mml:mn><mml:mn>2</mml:mn></mml:mfrac></mml:mrow></mml:msup><mml:msubsup><mml:mrow><mml:mo stretchy="false">&#8741;</mml:mo></mml:mrow><mml:mrow><mml:mi mathvariant="normal">F</mml:mi></mml:mrow><mml:mn>2</mml:mn></mml:msubsup><mml:mo>,</mml:mo></mml:mrow></mml:mtd><mml:mtd columnalign="left"><mml:mrow><mml:mi>L</mml:mi><mml:mo>&#8805;</mml:mo><mml:mi>M</mml:mi></mml:mrow></mml:mtd></mml:mtr><mml:mtr><mml:mtd columnalign="left"><mml:mrow><mml:mrow><mml:mo stretchy="false">&#8741;</mml:mo></mml:mrow><mml:msup><mml:mover accent="true"><mml:mi mathvariant="bold-italic">R</mml:mi><mml:mo stretchy="false">^</mml:mo></mml:mover><mml:mrow><mml:mo>&#8722;</mml:mo><mml:mfrac><mml:mn>1</mml:mn><mml:mn>2</mml:mn></mml:mfrac></mml:mrow></mml:msup><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mover accent="true"><mml:mi mathvariant="bold-italic">R</mml:mi><mml:mo stretchy="false">&#732;</mml:mo></mml:mover><mml:mo>&#8722;</mml:mo><mml:mover accent="true"><mml:mi mathvariant="bold-italic">R</mml:mi><mml:mo stretchy="false">^</mml:mo></mml:mover><mml:mo stretchy="false">)</mml:mo></mml:mrow><mml:msubsup><mml:mrow><mml:mo stretchy="false">&#8741;</mml:mo></mml:mrow><mml:mrow><mml:mi mathvariant="normal">F</mml:mi></mml:mrow><mml:mn>2</mml:mn></mml:msubsup><mml:mo>,</mml:mo></mml:mrow></mml:mtd><mml:mtd columnalign="left"><mml:mrow><mml:mi>L</mml:mi><mml:mo>&lt;</mml:mo><mml:mi>M</mml:mi></mml:mrow></mml:mtd></mml:mtr></mml:mtable></mml:mfenced><mml:mo>.</mml:mo></mml:mrow></mml:mtd></mml:mtr></mml:mtable></mml:mrow></mml:math></disp-formula>Considering the case of <inline-formula><mml:math id="mm67" overflow="scroll"><mml:mrow><mml:mrow><mml:mi>L</mml:mi><mml:mo>&#8805;</mml:mo><mml:mi>M</mml:mi></mml:mrow></mml:mrow></mml:math></inline-formula>, the objective function can be simplified as follows:<disp-formula id="FD8-sensors-25-05583"><label>(8)</label><mml:math id="mm68" display="block" overflow="scroll"><mml:mrow><mml:mtable displaystyle="true"><mml:mtr><mml:mtd columnalign="right"><mml:msub><mml:mi>h</mml:mi><mml:mn>1</mml:mn></mml:msub></mml:mtd><mml:mtd columnalign="left"><mml:mrow><mml:mo>=</mml:mo><mml:mi>tr</mml:mi><mml:mo stretchy="false">[</mml:mo><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:msub><mml:mi mathvariant="bold-italic">I</mml:mi><mml:mi>M</mml:mi></mml:msub><mml:mo>&#8722;</mml:mo><mml:msup><mml:mover accent="true"><mml:mi mathvariant="bold-italic">R</mml:mi><mml:mo stretchy="false">&#732;</mml:mo></mml:mover><mml:mrow><mml:mo>&#8722;</mml:mo><mml:mn>1</mml:mn></mml:mrow></mml:msup><mml:mover accent="true"><mml:mi mathvariant="bold-italic">R</mml:mi><mml:mo stretchy="false">^</mml:mo></mml:mover><mml:mo stretchy="false">)</mml:mo></mml:mrow><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:msup><mml:mover accent="true"><mml:mi mathvariant="bold-italic">R</mml:mi><mml:mo stretchy="false">^</mml:mo></mml:mover><mml:mrow><mml:mo>&#8722;</mml:mo><mml:mn>1</mml:mn></mml:mrow></mml:msup><mml:mover accent="true"><mml:mi mathvariant="bold-italic">R</mml:mi><mml:mo stretchy="false">&#732;</mml:mo></mml:mover><mml:mo>&#8722;</mml:mo><mml:msub><mml:mi mathvariant="bold-italic">I</mml:mi><mml:mi>M</mml:mi></mml:msub><mml:mo stretchy="false">)</mml:mo></mml:mrow><mml:mo stretchy="false">]</mml:mo></mml:mrow></mml:mtd></mml:mtr><mml:mtr><mml:mtd columnalign="right"><mml:mspace width="1.em"/></mml:mtd><mml:mtd columnalign="left"><mml:mrow><mml:mo>=</mml:mo><mml:mi>tr</mml:mi><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:msup><mml:mover accent="true"><mml:mi mathvariant="bold-italic">R</mml:mi><mml:mo stretchy="false">&#732;</mml:mo></mml:mover><mml:mrow><mml:mo>&#8722;</mml:mo><mml:mn>1</mml:mn></mml:mrow></mml:msup><mml:mover accent="true"><mml:mi mathvariant="bold-italic">R</mml:mi><mml:mo stretchy="false">^</mml:mo></mml:mover><mml:mo stretchy="false">)</mml:mo></mml:mrow><mml:mo>+</mml:mo><mml:mi>tr</mml:mi><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:msup><mml:mover accent="true"><mml:mi mathvariant="bold-italic">R</mml:mi><mml:mo stretchy="false">&#732;</mml:mo></mml:mover><mml:mfrac><mml:mn>1</mml:mn><mml:mn>2</mml:mn></mml:mfrac></mml:msup><mml:msup><mml:mover accent="true"><mml:mi mathvariant="bold-italic">R</mml:mi><mml:mo stretchy="false">^</mml:mo></mml:mover><mml:mrow><mml:mo>&#8722;</mml:mo><mml:mn>1</mml:mn></mml:mrow></mml:msup><mml:msup><mml:mover accent="true"><mml:mi mathvariant="bold-italic">R</mml:mi><mml:mo stretchy="false">&#732;</mml:mo></mml:mover><mml:mfrac><mml:mn>1</mml:mn><mml:mn>2</mml:mn></mml:mfrac></mml:msup><mml:mo stretchy="false">)</mml:mo></mml:mrow><mml:mo>&#8722;</mml:mo><mml:mn>2</mml:mn><mml:mi>M</mml:mi><mml:mo>.</mml:mo></mml:mrow></mml:mtd></mml:mtr></mml:mtable></mml:mrow></mml:math></disp-formula></p><p>The MLT structure [<xref rid="B36-sensors-25-05583" ref-type="bibr">36</xref>] enables reparameterizing <inline-formula><mml:math id="mm69" overflow="scroll"><mml:mrow><mml:mover accent="true"><mml:mi mathvariant="bold-italic">R</mml:mi><mml:mo stretchy="false">^</mml:mo></mml:mover></mml:mrow></mml:math></inline-formula> as a linear function of the DOAs. This parameterization relies fundamentally on the Vandermonde decomposition theorem for a MLT matrix as follows:</p><statement><label><bold>Theorem</bold>&#160;<bold>1</bold></label><p>([<xref rid="B36-sensors-25-05583" ref-type="bibr">36</xref>])<bold>.</bold>
<italic toggle="yes">A PSD N-level Toeplitz matrix <inline-formula><mml:math id="mm70" overflow="scroll"><mml:mrow><mml:msub><mml:mi mathvariant="bold-italic">T</mml:mi><mml:mi>N</mml:mi></mml:msub></mml:mrow></mml:math></inline-formula> can be decomposed as follows:</italic><disp-formula id="FD9-sensors-25-05583"><label>(9)</label><mml:math id="mm71" display="block" overflow="scroll"><mml:mrow><mml:mtable displaystyle="true"><mml:mtr><mml:mtd columnalign="right"><mml:mrow><mml:msub><mml:mi mathvariant="bold-italic">T</mml:mi><mml:mi>N</mml:mi></mml:msub><mml:mo>=</mml:mo><mml:msub><mml:mover accent="true"><mml:mi mathvariant="bold-italic">A</mml:mi><mml:mo stretchy="false">^</mml:mo></mml:mover><mml:mi>N</mml:mi></mml:msub><mml:mi mathvariant="bold-italic">P</mml:mi><mml:msubsup><mml:mover accent="true"><mml:mi mathvariant="bold-italic">A</mml:mi><mml:mo stretchy="false">^</mml:mo></mml:mover><mml:mi>N</mml:mi><mml:mi>H</mml:mi></mml:msubsup><mml:mo>,</mml:mo><mml:mspace width="0.166667em"/><mml:mspace width="0.166667em"/><mml:msub><mml:mover accent="true"><mml:mi mathvariant="bold-italic">A</mml:mi><mml:mo stretchy="false">^</mml:mo></mml:mover><mml:mi>N</mml:mi></mml:msub><mml:mo>=</mml:mo><mml:msub><mml:mi mathvariant="bold-italic">A</mml:mi><mml:mi>N</mml:mi></mml:msub><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:msub><mml:mi mathvariant="bold-italic">f</mml:mi><mml:mi>N</mml:mi></mml:msub><mml:mo stretchy="false">)</mml:mo></mml:mrow><mml:mo>&#8728;</mml:mo><mml:mo>&#8943;</mml:mo><mml:mo>&#8728;</mml:mo><mml:msub><mml:mi mathvariant="bold-italic">A</mml:mi><mml:mn>1</mml:mn></mml:msub><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:msub><mml:mi mathvariant="bold-italic">f</mml:mi><mml:mn>1</mml:mn></mml:msub><mml:mo stretchy="false">)</mml:mo></mml:mrow><mml:mo>,</mml:mo></mml:mrow></mml:mtd></mml:mtr></mml:mtable></mml:mrow></mml:math></disp-formula><italic toggle="yes">where <inline-formula><mml:math id="mm72" overflow="scroll"><mml:mrow><mml:mrow><mml:mi mathvariant="bold-italic">P</mml:mi><mml:mo>=</mml:mo><mml:mi>diag</mml:mi><mml:mo stretchy="false">(</mml:mo><mml:msub><mml:mi>p</mml:mi><mml:mn>1</mml:mn></mml:msub><mml:mo>,</mml:mo><mml:mo>&#8230;</mml:mo><mml:mo>,</mml:mo><mml:msub><mml:mi>p</mml:mi><mml:mi>r</mml:mi></mml:msub><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:mrow></mml:math></inline-formula>, <inline-formula><mml:math id="mm73" overflow="scroll"><mml:mrow><mml:mrow><mml:msub><mml:mi>p</mml:mi><mml:mi>i</mml:mi></mml:msub><mml:mo>&gt;</mml:mo><mml:mn>0</mml:mn></mml:mrow></mml:mrow></mml:math></inline-formula> and <inline-formula><mml:math id="mm74" overflow="scroll"><mml:mrow><mml:mrow><mml:mi>rank</mml:mi><mml:mo stretchy="false">(</mml:mo><mml:msub><mml:mi mathvariant="bold-italic">T</mml:mi><mml:mi>N</mml:mi></mml:msub><mml:mo stretchy="false">)</mml:mo><mml:mo>=</mml:mo><mml:mi>r</mml:mi></mml:mrow></mml:mrow></mml:math></inline-formula>. The manifold matrices <inline-formula><mml:math id="mm75" overflow="scroll"><mml:mrow><mml:msubsup><mml:mrow><mml:mo>{</mml:mo><mml:msub><mml:mi mathvariant="bold-italic">A</mml:mi><mml:mi>i</mml:mi></mml:msub><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:msub><mml:mi mathvariant="bold-italic">f</mml:mi><mml:mi>i</mml:mi></mml:msub><mml:mo stretchy="false">)</mml:mo></mml:mrow><mml:mo>}</mml:mo></mml:mrow><mml:mrow><mml:mi>i</mml:mi><mml:mo>=</mml:mo><mml:mn>1</mml:mn></mml:mrow><mml:mi>N</mml:mi></mml:msubsup></mml:mrow></mml:math></inline-formula> have Vandermonde structure as <inline-formula><mml:math id="mm76" overflow="scroll"><mml:mrow><mml:mrow><mml:msub><mml:mi mathvariant="bold-italic">A</mml:mi><mml:mi>x</mml:mi></mml:msub><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mi>&#981;</mml:mi><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:mrow></mml:mrow></mml:math></inline-formula> with distinct <inline-formula><mml:math id="mm77" overflow="scroll"><mml:mrow><mml:mrow><mml:msub><mml:mi mathvariant="bold-italic">f</mml:mi><mml:mi>i</mml:mi></mml:msub><mml:mo>=</mml:mo><mml:msubsup><mml:mrow><mml:mo>{</mml:mo><mml:msub><mml:mi>f</mml:mi><mml:mrow><mml:mi>i</mml:mi><mml:mi>k</mml:mi></mml:mrow></mml:msub><mml:mo>}</mml:mo></mml:mrow><mml:mrow><mml:mi>k</mml:mi><mml:mo>=</mml:mo><mml:mn>1</mml:mn></mml:mrow><mml:mi>r</mml:mi></mml:msubsup></mml:mrow></mml:mrow></mml:math></inline-formula> corresponding to <inline-formula><mml:math id="mm78" overflow="scroll"><mml:mrow><mml:msubsup><mml:mrow><mml:mo>{</mml:mo><mml:mi>cos</mml:mi><mml:msub><mml:mi>&#981;</mml:mi><mml:mi>k</mml:mi></mml:msub><mml:mo>}</mml:mo></mml:mrow><mml:mrow><mml:mi>k</mml:mi><mml:mo>=</mml:mo><mml:mn>1</mml:mn></mml:mrow><mml:mi>K</mml:mi></mml:msubsup></mml:mrow></mml:math></inline-formula> in the steering vector. The sufficient condition to guarantee the uniqueness of decomposition is <inline-formula><mml:math id="mm79" overflow="scroll"><mml:mrow><mml:mrow><mml:mi>r</mml:mi><mml:mo>&lt;</mml:mo><mml:mi>min</mml:mi><mml:msubsup><mml:mrow><mml:mo>{</mml:mo><mml:msub><mml:mi>M</mml:mi><mml:mi>n</mml:mi></mml:msub><mml:mo>}</mml:mo></mml:mrow><mml:mrow><mml:mi>n</mml:mi><mml:mo>=</mml:mo><mml:mn>1</mml:mn></mml:mrow><mml:mi>N</mml:mi></mml:msubsup></mml:mrow></mml:mrow></mml:math></inline-formula>.</italic></p></statement><p>The relationship between <inline-formula><mml:math id="mm80" overflow="scroll"><mml:mrow><mml:mover accent="true"><mml:mi mathvariant="bold-italic">R</mml:mi><mml:mo stretchy="false">^</mml:mo></mml:mover></mml:mrow></mml:math></inline-formula> and an MLT matrix is established as follows:</p><statement><label><bold>Proposition</bold>&#160;<bold>1.</bold></label><p>
<italic toggle="yes">Assuming the matrix <inline-formula><mml:math id="mm81" overflow="scroll"><mml:mrow><mml:msub><mml:mi mathvariant="bold-italic">T</mml:mi><mml:mi>N</mml:mi></mml:msub></mml:mrow></mml:math></inline-formula> has unique Vandermode decomposition as (<xref rid="FD9-sensors-25-05583" ref-type="disp-formula">9</xref>), the following holds:</italic>
<disp-formula id="FD10-sensors-25-05583"><label>(10)</label><mml:math id="mm82" display="block" overflow="scroll"><mml:mrow><mml:mtable displaystyle="true"><mml:mtr><mml:mtd columnalign="right"><mml:msub><mml:mi mathvariant="bold-italic">R</mml:mi><mml:mrow><mml:mi>m</mml:mi><mml:mi>n</mml:mi></mml:mrow></mml:msub></mml:mtd><mml:mtd columnalign="left"><mml:mrow><mml:mo>=</mml:mo><mml:msub><mml:mi mathvariant="bold-italic">A</mml:mi><mml:mi>m</mml:mi></mml:msub><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:msub><mml:mi mathvariant="bold-italic">f</mml:mi><mml:mi>m</mml:mi></mml:msub><mml:mo stretchy="false">)</mml:mo></mml:mrow><mml:mi mathvariant="bold-italic">P</mml:mi><mml:msubsup><mml:mi mathvariant="bold-italic">A</mml:mi><mml:mi>n</mml:mi><mml:mi>H</mml:mi></mml:msubsup><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:msub><mml:mi mathvariant="bold-italic">f</mml:mi><mml:mi>n</mml:mi></mml:msub><mml:mo stretchy="false">)</mml:mo></mml:mrow><mml:mo>=</mml:mo><mml:msub><mml:mi mathvariant="bold-italic">T</mml:mi><mml:mi>N</mml:mi></mml:msub><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mn>1</mml:mn><mml:mo>:</mml:mo><mml:msub><mml:mi>N</mml:mi><mml:mrow><mml:mi>m</mml:mi><mml:mo>&#8722;</mml:mo><mml:mn>1</mml:mn></mml:mrow></mml:msub><mml:mo>:</mml:mo><mml:msub><mml:mi>N</mml:mi><mml:mi>m</mml:mi></mml:msub><mml:mo>,</mml:mo><mml:mn>1</mml:mn><mml:mo>:</mml:mo><mml:msub><mml:mi>N</mml:mi><mml:mrow><mml:mi>n</mml:mi><mml:mo>&#8722;</mml:mo><mml:mn>1</mml:mn></mml:mrow></mml:msub><mml:mo>:</mml:mo><mml:msub><mml:mi>N</mml:mi><mml:mi>n</mml:mi></mml:msub><mml:mo stretchy="false">)</mml:mo></mml:mrow><mml:mo>,</mml:mo></mml:mrow></mml:mtd></mml:mtr></mml:mtable></mml:mrow></mml:math></disp-formula>
<italic toggle="yes">where <inline-formula><mml:math id="mm83" overflow="scroll"><mml:mrow><mml:mrow><mml:msub><mml:mi>N</mml:mi><mml:mi>q</mml:mi></mml:msub><mml:mo>=</mml:mo><mml:mfenced separators="" open="{" close=""><mml:mtable><mml:mtr><mml:mtd columnalign="left"><mml:mrow><mml:msubsup><mml:mo>&#8719;</mml:mo><mml:mrow><mml:mi>p</mml:mi><mml:mo>=</mml:mo><mml:mn>1</mml:mn></mml:mrow><mml:mi>q</mml:mi></mml:msubsup><mml:msub><mml:mi>M</mml:mi><mml:mi>p</mml:mi></mml:msub><mml:mo>,</mml:mo></mml:mrow></mml:mtd><mml:mtd columnalign="left"><mml:mrow><mml:mi>q</mml:mi><mml:mo>&#8805;</mml:mo><mml:mn>1</mml:mn></mml:mrow></mml:mtd></mml:mtr><mml:mtr><mml:mtd columnalign="left"><mml:mrow><mml:mn>1</mml:mn><mml:mo>,</mml:mo></mml:mrow></mml:mtd><mml:mtd columnalign="left"><mml:mrow><mml:mi>q</mml:mi><mml:mo>=</mml:mo><mml:mn>0</mml:mn></mml:mrow></mml:mtd></mml:mtr></mml:mtable></mml:mfenced></mml:mrow></mml:mrow></mml:math></inline-formula>.</italic>
</p></statement><statement><label><bold>Proof.</bold>&#160;</label><p>See <xref rid="app1-sensors-25-05583" ref-type="app">Appendix A</xref>. &#160;&#160;&#160;&#9633;</p></statement><p>The ideal covariance matrix <inline-formula><mml:math id="mm84" overflow="scroll"><mml:mrow><mml:mi mathvariant="bold-italic">R</mml:mi></mml:mrow></mml:math></inline-formula> in (<xref rid="FD3-sensors-25-05583" ref-type="disp-formula">3</xref>) can be reparameterized from a two-level MLT matrix <inline-formula><mml:math id="mm85" overflow="scroll"><mml:mrow><mml:mrow><mml:msub><mml:mi mathvariant="bold-italic">T</mml:mi><mml:mn>2</mml:mn></mml:msub><mml:mo>&#8712;</mml:mo><mml:msup><mml:mi mathvariant="double-struck">C</mml:mi><mml:mrow><mml:msub><mml:mi>M</mml:mi><mml:mn>1</mml:mn></mml:msub><mml:msub><mml:mi>M</mml:mi><mml:mn>2</mml:mn></mml:msub><mml:mo>&#215;</mml:mo><mml:msub><mml:mi>M</mml:mi><mml:mn>1</mml:mn></mml:msub><mml:msub><mml:mi>M</mml:mi><mml:mn>2</mml:mn></mml:msub></mml:mrow></mml:msup></mml:mrow></mml:mrow></mml:math></inline-formula> with <inline-formula><mml:math id="mm86" overflow="scroll"><mml:mrow><mml:mrow><mml:msub><mml:mi>M</mml:mi><mml:mn>1</mml:mn></mml:msub><mml:mo>=</mml:mo><mml:msub><mml:mi>M</mml:mi><mml:mi>x</mml:mi></mml:msub><mml:mo>,</mml:mo><mml:msub><mml:mi>M</mml:mi><mml:mn>2</mml:mn></mml:msub><mml:mo>=</mml:mo><mml:msub><mml:mi>M</mml:mi><mml:mi>z</mml:mi></mml:msub></mml:mrow></mml:mrow></mml:math></inline-formula> as follows:<disp-formula id="FD11-sensors-25-05583"><label>(11)</label><mml:math id="mm87" display="block" overflow="scroll"><mml:mrow><mml:mtable displaystyle="true"><mml:mtr><mml:mtd columnalign="right"><mml:msub><mml:mi mathvariant="bold-italic">R</mml:mi><mml:mi>x</mml:mi></mml:msub></mml:mtd><mml:mtd columnalign="left"><mml:mrow><mml:mo>=</mml:mo><mml:msub><mml:mi mathvariant="bold-italic">A</mml:mi><mml:mi>x</mml:mi></mml:msub><mml:mi mathvariant="bold-italic">P</mml:mi><mml:msubsup><mml:mi mathvariant="bold-italic">A</mml:mi><mml:mi>x</mml:mi><mml:mi>H</mml:mi></mml:msubsup><mml:mo>=</mml:mo><mml:msub><mml:mi mathvariant="bold-italic">T</mml:mi><mml:mn>2</mml:mn></mml:msub><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mn>1</mml:mn><mml:mo>:</mml:mo><mml:msub><mml:mi>M</mml:mi><mml:mn>1</mml:mn></mml:msub><mml:mo>,</mml:mo><mml:mn>1</mml:mn><mml:mo>:</mml:mo><mml:msub><mml:mi>M</mml:mi><mml:mn>1</mml:mn></mml:msub><mml:mo stretchy="false">)</mml:mo></mml:mrow><mml:mo>=</mml:mo><mml:msub><mml:mi mathvariant="bold-italic">A</mml:mi><mml:mn>1</mml:mn></mml:msub><mml:mi mathvariant="bold-italic">P</mml:mi><mml:msubsup><mml:mi mathvariant="bold-italic">A</mml:mi><mml:mn>1</mml:mn><mml:mi>H</mml:mi></mml:msubsup><mml:mo>,</mml:mo></mml:mrow></mml:mtd></mml:mtr><mml:mtr><mml:mtd columnalign="right"><mml:msub><mml:mi mathvariant="bold-italic">R</mml:mi><mml:mrow><mml:mi>x</mml:mi><mml:mi>z</mml:mi></mml:mrow></mml:msub></mml:mtd><mml:mtd columnalign="left"><mml:mrow><mml:mo>=</mml:mo><mml:msub><mml:mi mathvariant="bold-italic">A</mml:mi><mml:mi>x</mml:mi></mml:msub><mml:mi mathvariant="bold-italic">P</mml:mi><mml:msubsup><mml:mi mathvariant="bold-italic">A</mml:mi><mml:mi>z</mml:mi><mml:mi>H</mml:mi></mml:msubsup><mml:mo>=</mml:mo><mml:msub><mml:mi mathvariant="bold-italic">T</mml:mi><mml:mn>2</mml:mn></mml:msub><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mn>1</mml:mn><mml:mo>:</mml:mo><mml:msub><mml:mi>M</mml:mi><mml:mn>1</mml:mn></mml:msub><mml:mo>,</mml:mo><mml:msub><mml:mi>M</mml:mi><mml:mn>1</mml:mn></mml:msub><mml:mo>+</mml:mo><mml:mn>1</mml:mn><mml:mo>:</mml:mo><mml:msub><mml:mi>M</mml:mi><mml:mn>1</mml:mn></mml:msub><mml:mo>:</mml:mo><mml:msub><mml:mi>M</mml:mi><mml:mn>1</mml:mn></mml:msub><mml:msub><mml:mi>M</mml:mi><mml:mn>2</mml:mn></mml:msub><mml:mo stretchy="false">)</mml:mo></mml:mrow><mml:mo>=</mml:mo><mml:msub><mml:mi mathvariant="bold-italic">A</mml:mi><mml:mn>1</mml:mn></mml:msub><mml:mi mathvariant="bold-italic">P</mml:mi><mml:msub><mml:mi mathvariant="bold-italic">A</mml:mi><mml:mn>2</mml:mn></mml:msub><mml:msup><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mn>2</mml:mn><mml:mo>:</mml:mo><mml:msub><mml:mi>M</mml:mi><mml:mn>2</mml:mn></mml:msub><mml:mo>,</mml:mo><mml:mo>:</mml:mo><mml:mo stretchy="false">)</mml:mo></mml:mrow><mml:mi>H</mml:mi></mml:msup><mml:mo>,</mml:mo></mml:mrow></mml:mtd></mml:mtr><mml:mtr><mml:mtd columnalign="right"><mml:msub><mml:mi mathvariant="bold-italic">R</mml:mi><mml:mi>z</mml:mi></mml:msub></mml:mtd><mml:mtd columnalign="left"><mml:mrow><mml:mo>=</mml:mo><mml:msub><mml:mi mathvariant="bold-italic">A</mml:mi><mml:mi>z</mml:mi></mml:msub><mml:mi mathvariant="bold-italic">P</mml:mi><mml:msubsup><mml:mi mathvariant="bold-italic">A</mml:mi><mml:mi>z</mml:mi><mml:mi>H</mml:mi></mml:msubsup><mml:mo>=</mml:mo><mml:msub><mml:mi mathvariant="bold-italic">T</mml:mi><mml:mn>2</mml:mn></mml:msub><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:msub><mml:mi>M</mml:mi><mml:mn>1</mml:mn></mml:msub><mml:mo>+</mml:mo><mml:mn>1</mml:mn><mml:mo>:</mml:mo><mml:msub><mml:mi>M</mml:mi><mml:mn>1</mml:mn></mml:msub><mml:mo>:</mml:mo><mml:msub><mml:mi>M</mml:mi><mml:mn>1</mml:mn></mml:msub><mml:msub><mml:mi>M</mml:mi><mml:mn>2</mml:mn></mml:msub><mml:mo>,</mml:mo><mml:msub><mml:mi>M</mml:mi><mml:mn>1</mml:mn></mml:msub><mml:mo>+</mml:mo><mml:mn>1</mml:mn><mml:mo>:</mml:mo><mml:msub><mml:mi>M</mml:mi><mml:mn>1</mml:mn></mml:msub><mml:mo>:</mml:mo><mml:msub><mml:mi>M</mml:mi><mml:mn>1</mml:mn></mml:msub><mml:msub><mml:mi>M</mml:mi><mml:mn>2</mml:mn></mml:msub><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:mrow></mml:mtd></mml:mtr><mml:mtr><mml:mtd/><mml:mtd columnalign="left"><mml:mrow><mml:mo>=</mml:mo><mml:msub><mml:mi mathvariant="bold-italic">A</mml:mi><mml:mn>2</mml:mn></mml:msub><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mn>2</mml:mn><mml:mo>:</mml:mo><mml:msub><mml:mi>M</mml:mi><mml:mn>2</mml:mn></mml:msub><mml:mo>,</mml:mo><mml:mo>:</mml:mo><mml:mo stretchy="false">)</mml:mo></mml:mrow><mml:mi mathvariant="bold-italic">P</mml:mi><mml:msub><mml:mi mathvariant="bold-italic">A</mml:mi><mml:mn>2</mml:mn></mml:msub><mml:msup><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mn>2</mml:mn><mml:mo>:</mml:mo><mml:msub><mml:mi>M</mml:mi><mml:mn>2</mml:mn></mml:msub><mml:mo>,</mml:mo><mml:mo>:</mml:mo><mml:mo stretchy="false">)</mml:mo></mml:mrow><mml:mi>H</mml:mi></mml:msup><mml:mo>.</mml:mo></mml:mrow></mml:mtd></mml:mtr></mml:mtable></mml:mrow></mml:math></disp-formula>Then function in (<xref rid="FD8-sensors-25-05583" ref-type="disp-formula">8</xref>) is formulated as a semidefinite program (SDP) problem, written as&#160;follows:<disp-formula id="FD12-sensors-25-05583"><label>(12)</label><mml:math id="mm88" display="block" overflow="scroll"><mml:mrow><mml:mtable displaystyle="true"><mml:mtr><mml:mtd columnalign="right"><mml:mstyle scriptlevel="0" displaystyle="true"><mml:mrow/></mml:mstyle></mml:mtd><mml:mtd columnalign="left"><mml:mrow><mml:munder><mml:mi>min</mml:mi><mml:mrow><mml:mi mathvariant="bold-italic">X</mml:mi><mml:mo>,</mml:mo><mml:msub><mml:mi mathvariant="bold-italic">T</mml:mi><mml:mn>2</mml:mn></mml:msub><mml:mo>,</mml:mo><mml:mi>&#963;</mml:mi></mml:mrow></mml:munder><mml:mi>tr</mml:mi><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mi mathvariant="bold-italic">X</mml:mi><mml:mo stretchy="false">)</mml:mo></mml:mrow><mml:mo>+</mml:mo><mml:mi>tr</mml:mi><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:msup><mml:mover accent="true"><mml:mi mathvariant="bold-italic">R</mml:mi><mml:mo stretchy="false">&#732;</mml:mo></mml:mover><mml:mrow><mml:mo>&#8722;</mml:mo><mml:mn>1</mml:mn></mml:mrow></mml:msup><mml:mover accent="true"><mml:mi mathvariant="bold-italic">R</mml:mi><mml:mo stretchy="false">^</mml:mo></mml:mover><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:mrow></mml:mtd></mml:mtr><mml:mtr><mml:mtd columnalign="right"><mml:mspace width="1.em"/></mml:mtd><mml:mtd columnalign="left"><mml:mrow><mml:mrow><mml:mi mathvariant="normal">s</mml:mi><mml:mo>.</mml:mo><mml:mi mathvariant="normal">t</mml:mi><mml:mo>.</mml:mo></mml:mrow><mml:mfenced open="[" close="]"><mml:mtable><mml:mtr><mml:mtd><mml:mi mathvariant="bold-italic">X</mml:mi></mml:mtd><mml:mtd><mml:msup><mml:mover accent="true"><mml:mi mathvariant="bold-italic">R</mml:mi><mml:mo stretchy="false">&#732;</mml:mo></mml:mover><mml:mfrac><mml:mn>1</mml:mn><mml:mn>2</mml:mn></mml:mfrac></mml:msup></mml:mtd></mml:mtr><mml:mtr><mml:mtd><mml:msup><mml:mover accent="true"><mml:mi mathvariant="bold-italic">R</mml:mi><mml:mo stretchy="false">&#732;</mml:mo></mml:mover><mml:mfrac><mml:mn>1</mml:mn><mml:mn>2</mml:mn></mml:mfrac></mml:msup></mml:mtd><mml:mtd><mml:mover accent="true"><mml:mi mathvariant="bold-italic">R</mml:mi><mml:mo stretchy="false">^</mml:mo></mml:mover></mml:mtd></mml:mtr></mml:mtable></mml:mfenced><mml:mo>&#10928;</mml:mo><mml:mn mathvariant="bold">0</mml:mn><mml:mo>,</mml:mo><mml:msub><mml:mi mathvariant="bold-italic">T</mml:mi><mml:mn>2</mml:mn></mml:msub><mml:mspace width="-0.166667em"/><mml:mo>&#10928;</mml:mo><mml:mspace width="-0.166667em"/><mml:mn mathvariant="bold">0</mml:mn><mml:mo>,</mml:mo><mml:mi>rank</mml:mi><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:msub><mml:mi mathvariant="bold-italic">T</mml:mi><mml:mn>2</mml:mn></mml:msub><mml:mo stretchy="false">)</mml:mo></mml:mrow><mml:mspace width="-0.166667em"/><mml:mo>&#8804;</mml:mo><mml:mspace width="-0.166667em"/><mml:mi>min</mml:mi><mml:msubsup><mml:mrow><mml:mo>{</mml:mo><mml:msub><mml:mi>M</mml:mi><mml:mi>n</mml:mi></mml:msub><mml:mo>}</mml:mo></mml:mrow><mml:mrow><mml:mi>n</mml:mi><mml:mo>=</mml:mo><mml:mn>1</mml:mn></mml:mrow><mml:mn>2</mml:mn></mml:msubsup><mml:mo>&#8722;</mml:mo><mml:mn>1</mml:mn><mml:mo>,</mml:mo></mml:mrow></mml:mtd></mml:mtr></mml:mtable></mml:mrow></mml:math></disp-formula>
where the rank constraint is non-convex and limits identifiable targets. Therefore, we consider relaxing the rank constraint and derive the optimal solution <inline-formula><mml:math id="mm89" overflow="scroll"><mml:mrow><mml:msubsup><mml:mi mathvariant="bold-italic">T</mml:mi><mml:mn>2</mml:mn><mml:mo>*</mml:mo></mml:msubsup></mml:mrow></mml:math></inline-formula> and <inline-formula><mml:math id="mm90" overflow="scroll"><mml:mrow><mml:msup><mml:mi>&#963;</mml:mi><mml:mo>*</mml:mo></mml:msup></mml:mrow></mml:math></inline-formula>. Similar to SPA in [<xref rid="B33-sensors-25-05583" ref-type="bibr">33</xref>], there exists one redundant variable at the principal diagonal of <inline-formula><mml:math id="mm91" overflow="scroll"><mml:mrow><mml:mover accent="true"><mml:mi mathvariant="bold-italic">R</mml:mi><mml:mo stretchy="false">^</mml:mo></mml:mover></mml:mrow></mml:math></inline-formula>, indicating <inline-formula><mml:math id="mm92" overflow="scroll"><mml:mrow><mml:msubsup><mml:mi mathvariant="bold-italic">T</mml:mi><mml:mn>2</mml:mn><mml:mo>*</mml:mo></mml:msubsup></mml:mrow></mml:math></inline-formula> can be represented as follows:<disp-formula id="FD13-sensors-25-05583"><label>(13)</label><mml:math id="mm93" display="block" overflow="scroll"><mml:mrow><mml:mtable displaystyle="true"><mml:mtr><mml:mtd columnalign="right"><mml:mrow><mml:msubsup><mml:mi mathvariant="bold-italic">T</mml:mi><mml:mn>2</mml:mn><mml:mo>*</mml:mo></mml:msubsup><mml:mo>=</mml:mo><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:msub><mml:mi mathvariant="bold-italic">A</mml:mi><mml:mn>2</mml:mn></mml:msub><mml:mo>&#8728;</mml:mo><mml:msub><mml:mi mathvariant="bold-italic">A</mml:mi><mml:mn>1</mml:mn></mml:msub><mml:mo stretchy="false">)</mml:mo></mml:mrow><mml:mi mathvariant="bold-italic">P</mml:mi><mml:msup><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:msub><mml:mi mathvariant="bold-italic">A</mml:mi><mml:mn>2</mml:mn></mml:msub><mml:mo>&#8728;</mml:mo><mml:msub><mml:mi mathvariant="bold-italic">A</mml:mi><mml:mn>1</mml:mn></mml:msub><mml:mo stretchy="false">)</mml:mo></mml:mrow><mml:mi>H</mml:mi></mml:msup><mml:mo>+</mml:mo><mml:mi>&#948;</mml:mi><mml:mi mathvariant="bold-italic">I</mml:mi><mml:mo>,</mml:mo></mml:mrow></mml:mtd></mml:mtr></mml:mtable></mml:mrow></mml:math></disp-formula>
where <inline-formula><mml:math id="mm94" overflow="scroll"><mml:mrow><mml:mrow><mml:mi>&#948;</mml:mi><mml:mo>=</mml:mo><mml:msup><mml:mi>&#963;</mml:mi><mml:mn>2</mml:mn></mml:msup><mml:mo>&#8722;</mml:mo><mml:msup><mml:mi>&#963;</mml:mi><mml:mrow><mml:mo>*</mml:mo><mml:mn>2</mml:mn></mml:mrow></mml:msup></mml:mrow></mml:mrow></mml:math></inline-formula> is the redundant variable. It follows that <inline-formula><mml:math id="mm95" overflow="scroll"><mml:mrow><mml:mrow><mml:mi>rank</mml:mi><mml:mo stretchy="false">(</mml:mo><mml:msubsup><mml:mi mathvariant="bold-italic">T</mml:mi><mml:mn>2</mml:mn><mml:mo>*</mml:mo></mml:msubsup><mml:mo stretchy="false">)</mml:mo><mml:mo>&#8805;</mml:mo><mml:mi>K</mml:mi></mml:mrow></mml:mrow></mml:math></inline-formula> and the solution of (<xref rid="FD12-sensors-25-05583" ref-type="disp-formula">12</xref>) is a special realization with <inline-formula><mml:math id="mm96" overflow="scroll"><mml:mrow><mml:mrow><mml:mi>&#948;</mml:mi><mml:mo>=</mml:mo><mml:mn>0</mml:mn></mml:mrow></mml:mrow></mml:math></inline-formula>. It is imperative to perform post-processing on <inline-formula><mml:math id="mm97" overflow="scroll"><mml:mrow><mml:msubsup><mml:mi mathvariant="bold-italic">T</mml:mi><mml:mn>2</mml:mn><mml:mo>*</mml:mo></mml:msubsup></mml:mrow></mml:math></inline-formula>, typically via <italic toggle="yes">K</italic>-order truncated eigendecomposition, to retain only the signal subspace. Furthermore, the classical multidimensional ESPRIT (MD-ESPRIT) algorithm can be applied for 2-D angles extraction and auto-pairing [<xref rid="B41-sensors-25-05583" ref-type="bibr">41</xref>].</p><p>The shared amplitude <inline-formula><mml:math id="mm98" overflow="scroll"><mml:mrow><mml:mi mathvariant="bold-italic">S</mml:mi></mml:mrow></mml:math></inline-formula> establishes a bridge from the covariance matrix into a structured matrix with compactly coupled parameters. The optimization induces an interpolation-like effect, extending the virtual aperture to enhance identifiability. Crucially, the quantifiable identifiability of the proposed method is governed by the necessary and sufficient conditions for unique Vandermonde decomposition of <inline-formula><mml:math id="mm99" overflow="scroll"><mml:mrow><mml:msub><mml:mi mathvariant="bold-italic">T</mml:mi><mml:mn>2</mml:mn></mml:msub></mml:mrow></mml:math></inline-formula>, which can be weaker than in Theorem 1 [<xref rid="B36-sensors-25-05583" ref-type="bibr">36</xref>] with rigorous verification remaining an open problem. Therefore, we have not theoretically verified the maximum identifiable sources, but we will demonstrate its superiority over existing methods through simulations in <xref rid="sec6dot1-sensors-25-05583" ref-type="sec">Section 6.1</xref>.</p><statement><label><bold>Remark</bold>&#160;<bold>1.</bold></label><p>
<italic toggle="yes">Similar to the GLS method in 1-D DOA estimation [<xref rid="B42-sensors-25-05583" ref-type="bibr">42</xref>], the proposed method has close connection to the ANM framework as follows:</italic>
</p></statement><statement><label><bold>Corollary</bold>&#160;<bold>1.</bold></label><p>
<italic toggle="yes">The SDP problem in (<xref rid="FD12-sensors-25-05583" ref-type="disp-formula">12</xref>), after rank constraint relaxation, is equivalent to the following reweighted ANM (RAM) [<xref rid="B43-sensors-25-05583" ref-type="bibr">43</xref>] formulation as follows:</italic>
<disp-formula id="FD14-sensors-25-05583"><label>(14)</label><mml:math id="mm100" display="block" overflow="scroll"><mml:mrow><mml:mtable displaystyle="true"><mml:mtr><mml:mtd columnalign="right"><mml:mrow><mml:munder><mml:mi>min</mml:mi><mml:mi mathvariant="bold-italic">Z</mml:mi></mml:munder><mml:msqrt><mml:mi>M</mml:mi></mml:msqrt><mml:msub><mml:mrow><mml:mo stretchy="false">&#8741;</mml:mo><mml:mi mathvariant="bold-italic">Z</mml:mi><mml:mo stretchy="false">&#8741;</mml:mo></mml:mrow><mml:msup><mml:mi mathvariant="script">A</mml:mi><mml:mi>w</mml:mi></mml:msup></mml:msub><mml:mo>+</mml:mo><mml:munderover><mml:mo>&#8721;</mml:mo><mml:mrow><mml:mi>i</mml:mi><mml:mo>=</mml:mo><mml:mn>1</mml:mn></mml:mrow><mml:mi>M</mml:mi></mml:munderover><mml:msqrt><mml:msub><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:msup><mml:mover accent="true"><mml:mi mathvariant="bold-italic">R</mml:mi><mml:mo stretchy="false">&#732;</mml:mo></mml:mover><mml:mrow><mml:mo>&#8722;</mml:mo><mml:mn>1</mml:mn></mml:mrow></mml:msup><mml:mo stretchy="false">)</mml:mo></mml:mrow><mml:mrow><mml:mi>i</mml:mi><mml:mo>,</mml:mo><mml:mi>i</mml:mi></mml:mrow></mml:msub></mml:msqrt><mml:msub><mml:mrow><mml:mo stretchy="false">&#8741;</mml:mo><mml:msub><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:msup><mml:mover accent="true"><mml:mi mathvariant="bold-italic">R</mml:mi><mml:mo stretchy="false">&#732;</mml:mo></mml:mover><mml:mfrac><mml:mn>1</mml:mn><mml:mn>2</mml:mn></mml:mfrac></mml:msup><mml:mo>&#8722;</mml:mo><mml:mi mathvariant="bold-italic">Z</mml:mi><mml:mo stretchy="false">)</mml:mo></mml:mrow><mml:mrow><mml:mi>i</mml:mi><mml:mo>,</mml:mo><mml:mo>:</mml:mo></mml:mrow></mml:msub><mml:mo stretchy="false">&#8741;</mml:mo></mml:mrow><mml:mn>2</mml:mn></mml:msub><mml:mo>,</mml:mo></mml:mrow></mml:mtd></mml:mtr></mml:mtable></mml:mrow></mml:math></disp-formula>
<italic toggle="yes">where <inline-formula><mml:math id="mm101" overflow="scroll"><mml:mrow><mml:msub><mml:mrow><mml:mo stretchy="false">&#8741;</mml:mo><mml:mi mathvariant="bold-italic">Z</mml:mi><mml:mo stretchy="false">&#8741;</mml:mo></mml:mrow><mml:msup><mml:mi mathvariant="script">A</mml:mi><mml:mi>w</mml:mi></mml:msup></mml:msub></mml:mrow></mml:math></inline-formula> denotes the weighted atomic norm defined as follows:</italic>
<disp-formula id="FD15-sensors-25-05583"><label>(15)</label><mml:math id="mm102" display="block" overflow="scroll"><mml:mrow><mml:mtable displaystyle="true"><mml:mtr><mml:mtd columnalign="right"><mml:mrow><mml:msub><mml:mrow><mml:mo stretchy="false">&#8741;</mml:mo><mml:mi mathvariant="bold-italic">Z</mml:mi><mml:mo stretchy="false">&#8741;</mml:mo></mml:mrow><mml:msup><mml:mi mathvariant="script">A</mml:mi><mml:mi>w</mml:mi></mml:msup></mml:msub><mml:mo>:</mml:mo><mml:mo>=</mml:mo><mml:munder><mml:mo movablelimits="true" form="prefix">inf</mml:mo><mml:mrow><mml:mi mathvariant="bold-italic">&#981;</mml:mi><mml:mo>,</mml:mo><mml:mi mathvariant="bold-italic">&#952;</mml:mi><mml:mo>,</mml:mo><mml:msub><mml:mi mathvariant="bold-italic">s</mml:mi><mml:mi>k</mml:mi></mml:msub></mml:mrow></mml:munder><mml:mrow><mml:mo stretchy="false">{</mml:mo><mml:munderover><mml:mo>&#8721;</mml:mo><mml:mrow><mml:mi>k</mml:mi><mml:mo>=</mml:mo><mml:mn>1</mml:mn></mml:mrow><mml:mi>K</mml:mi></mml:munderover><mml:mstyle scriptlevel="0" displaystyle="true"><mml:mfrac><mml:mrow><mml:mrow><mml:mo stretchy="false">&#8741;</mml:mo></mml:mrow><mml:msub><mml:mi mathvariant="bold-italic">s</mml:mi><mml:mi>k</mml:mi></mml:msub><mml:msub><mml:mrow><mml:mo stretchy="false">&#8741;</mml:mo></mml:mrow><mml:mn>2</mml:mn></mml:msub></mml:mrow><mml:msub><mml:mi>w</mml:mi><mml:mi>k</mml:mi></mml:msub></mml:mfrac></mml:mstyle><mml:mo>:</mml:mo><mml:mi mathvariant="bold-italic">Z</mml:mi><mml:mo>=</mml:mo><mml:munderover><mml:mo>&#8721;</mml:mo><mml:mrow><mml:mi>k</mml:mi><mml:mo>=</mml:mo><mml:mn>1</mml:mn></mml:mrow><mml:mi>K</mml:mi></mml:munderover><mml:mi mathvariant="bold-italic">a</mml:mi><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:msub><mml:mi>&#981;</mml:mi><mml:mi>k</mml:mi></mml:msub><mml:mo>,</mml:mo><mml:msub><mml:mi>&#952;</mml:mi><mml:mi>k</mml:mi></mml:msub><mml:mo stretchy="false">)</mml:mo></mml:mrow><mml:msub><mml:mi mathvariant="bold-italic">s</mml:mi><mml:mi>k</mml:mi></mml:msub><mml:mo stretchy="false">}</mml:mo></mml:mrow><mml:mo>,</mml:mo></mml:mrow></mml:mtd></mml:mtr></mml:mtable></mml:mrow></mml:math></disp-formula>
<italic toggle="yes">with</italic>
<disp-formula id="FD16-sensors-25-05583"><label>(16)</label><mml:math id="mm103" display="block" overflow="scroll"><mml:mrow><mml:mtable displaystyle="true"><mml:mtr><mml:mtd columnalign="right"><mml:mrow><mml:msub><mml:mi>w</mml:mi><mml:mi>k</mml:mi></mml:msub><mml:mo>=</mml:mo><mml:msup><mml:mrow><mml:mo>[</mml:mo><mml:mstyle scriptlevel="0" displaystyle="true"><mml:mfrac><mml:mn>1</mml:mn><mml:mi>M</mml:mi></mml:mfrac></mml:mstyle><mml:mi mathvariant="bold-italic">a</mml:mi><mml:msup><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:msub><mml:mi>&#981;</mml:mi><mml:mi>k</mml:mi></mml:msub><mml:mo>,</mml:mo><mml:msub><mml:mi>&#952;</mml:mi><mml:mi>k</mml:mi></mml:msub><mml:mo stretchy="false">)</mml:mo></mml:mrow><mml:mi>H</mml:mi></mml:msup><mml:mi mathvariant="bold-italic">W</mml:mi><mml:mi mathvariant="bold-italic">a</mml:mi><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:msub><mml:mi>&#981;</mml:mi><mml:mi>k</mml:mi></mml:msub><mml:mo>,</mml:mo><mml:msub><mml:mi>&#952;</mml:mi><mml:mi>k</mml:mi></mml:msub><mml:mo stretchy="false">)</mml:mo></mml:mrow><mml:mo>]</mml:mo></mml:mrow><mml:mrow><mml:mo>&#8722;</mml:mo><mml:mfrac><mml:mn>1</mml:mn><mml:mn>2</mml:mn></mml:mfrac></mml:mrow></mml:msup><mml:mo>,</mml:mo><mml:mi mathvariant="bold-italic">W</mml:mi><mml:mo>=</mml:mo><mml:msup><mml:mover accent="true"><mml:mi mathvariant="bold-italic">R</mml:mi><mml:mo stretchy="false">&#732;</mml:mo></mml:mover><mml:mrow><mml:mo>&#8722;</mml:mo><mml:mn>1</mml:mn></mml:mrow></mml:msup><mml:mo>.</mml:mo></mml:mrow></mml:mtd></mml:mtr></mml:mtable></mml:mrow></mml:math></disp-formula>
</p><p>
<italic toggle="yes">The problem can also be transformed to the joint sparse framework in (<xref rid="FD6-sensors-25-05583" ref-type="disp-formula">6</xref>) with <inline-formula><mml:math id="mm104" overflow="scroll"><mml:mrow><mml:mover accent="true"><mml:mi mathvariant="bold-italic">R</mml:mi><mml:mo stretchy="false">^</mml:mo></mml:mover></mml:mrow></mml:math></inline-formula> in (<xref rid="FD12-sensors-25-05583" ref-type="disp-formula">12</xref>) set as <inline-formula><mml:math id="mm105" overflow="scroll"><mml:mrow><mml:mrow><mml:mi mathvariant="bold-italic">R</mml:mi><mml:mo>+</mml:mo><mml:mi>&#955;</mml:mi><mml:msub><mml:mi mathvariant="bold-italic">I</mml:mi><mml:mi>M</mml:mi></mml:msub></mml:mrow></mml:mrow></mml:math></inline-formula> and the joint sparse metric substituted as follows:</italic>
<disp-formula id="FD17-sensors-25-05583"><label>(17)</label><mml:math id="mm106" display="block" overflow="scroll"><mml:mrow><mml:mtable displaystyle="true"><mml:mtr><mml:mtd columnalign="right"><mml:mrow><mml:msub><mml:mrow><mml:mo stretchy="false">&#8741;</mml:mo><mml:mi mathvariant="bold-italic">S</mml:mi><mml:mo stretchy="false">&#8741;</mml:mo></mml:mrow><mml:mrow><mml:mn>2</mml:mn><mml:mo>,</mml:mo><mml:mi>w</mml:mi></mml:mrow></mml:msub><mml:mo>=</mml:mo><mml:munderover><mml:mo>&#8721;</mml:mo><mml:mrow><mml:mi>i</mml:mi><mml:mo>=</mml:mo><mml:mn>1</mml:mn></mml:mrow><mml:msub><mml:mi>N</mml:mi><mml:mn>0</mml:mn></mml:msub></mml:munderover><mml:mstyle scriptlevel="0" displaystyle="true"><mml:mfrac><mml:mrow><mml:mrow><mml:mo stretchy="false">&#8741;</mml:mo></mml:mrow><mml:msub><mml:mi mathvariant="bold-italic">s</mml:mi><mml:mi>i</mml:mi></mml:msub><mml:msub><mml:mrow><mml:mo stretchy="false">&#8741;</mml:mo></mml:mrow><mml:mn>2</mml:mn></mml:msub></mml:mrow><mml:msub><mml:mi>w</mml:mi><mml:mi>i</mml:mi></mml:msub></mml:mfrac></mml:mstyle><mml:mo>,</mml:mo></mml:mrow></mml:mtd></mml:mtr></mml:mtable></mml:mrow></mml:math></disp-formula>
<italic toggle="yes">where <inline-formula><mml:math id="mm107" overflow="scroll"><mml:mrow><mml:msub><mml:mi>N</mml:mi><mml:mn>0</mml:mn></mml:msub></mml:mrow></mml:math></inline-formula> denotes the number of selectable grid points in the 2-D overcomplete dictionary matrix and <inline-formula><mml:math id="mm108" overflow="scroll"><mml:mrow><mml:msub><mml:mi>w</mml:mi><mml:mi>i</mml:mi></mml:msub></mml:mrow></mml:math></inline-formula> is defined in (<xref rid="FD16-sensors-25-05583" ref-type="disp-formula">16</xref>).</italic>
</p><p>
<italic toggle="yes">It follows that the joint sparsity is effectively exploited and the atom weight is capable of adjusting the influence of different sources.</italic>
</p></statement><statement><label><bold>Remark</bold>&#160;<bold>2.</bold></label><p>
<italic toggle="yes">It is desirable to analyze the atom weight of the k-th target <inline-formula><mml:math id="mm109" overflow="scroll"><mml:mrow><mml:msub><mml:mi>w</mml:mi><mml:mi>k</mml:mi></mml:msub></mml:mrow></mml:math></inline-formula> in (<xref rid="FD16-sensors-25-05583" ref-type="disp-formula">16</xref>) as it provides some insights into the proposed method.</italic>
</p><statement><label><bold>Theorem</bold>&#160;<bold>2.</bold></label><p>
<italic toggle="yes">Suppose that <inline-formula><mml:math id="mm110" overflow="scroll"><mml:mrow><mml:mrow><mml:mi mathvariant="bold-italic">W</mml:mi><mml:mo>=</mml:mo><mml:msup><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mi mathvariant="bold-italic">R</mml:mi><mml:mo>+</mml:mo><mml:mi>&#1013;</mml:mi><mml:mi mathvariant="bold-italic">I</mml:mi><mml:mo stretchy="false">)</mml:mo></mml:mrow><mml:mrow><mml:mo>&#8722;</mml:mo><mml:mn>1</mml:mn></mml:mrow></mml:msup></mml:mrow></mml:mrow></mml:math></inline-formula>, which is the ideal form of sample covariance matrix, then <inline-formula><mml:math id="mm111" overflow="scroll"><mml:mrow><mml:msub><mml:mi>w</mml:mi><mml:mi>k</mml:mi></mml:msub></mml:mrow></mml:math></inline-formula> in (<xref rid="FD16-sensors-25-05583" ref-type="disp-formula">16</xref>) can be calculated as follows:</italic>
<disp-formula id="FD18-sensors-25-05583"><label>(18)</label><mml:math id="mm112" display="block" overflow="scroll"><mml:mrow><mml:mtable displaystyle="true"><mml:mtr><mml:mtd columnalign="right"><mml:mrow><mml:msub><mml:mi>w</mml:mi><mml:mi>k</mml:mi></mml:msub><mml:mo>=</mml:mo><mml:msqrt><mml:mi>&#1013;</mml:mi></mml:msqrt><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mn>1</mml:mn><mml:mo>&#8722;</mml:mo></mml:mrow><mml:mstyle scriptlevel="0" displaystyle="true"><mml:mfrac><mml:mn>1</mml:mn><mml:mi>M</mml:mi></mml:mfrac></mml:mstyle><mml:mrow><mml:mo stretchy="false">&#8741;</mml:mo></mml:mrow><mml:msup><mml:mi mathvariant="bold-italic">Q</mml:mi><mml:mrow><mml:mo>&#8722;</mml:mo><mml:mfrac><mml:mn>1</mml:mn><mml:mn>2</mml:mn></mml:mfrac></mml:mrow></mml:msup><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:msubsup><mml:mi mathvariant="bold-italic">A</mml:mi><mml:mi>x</mml:mi><mml:mi>H</mml:mi></mml:msubsup><mml:msub><mml:mi mathvariant="bold-italic">a</mml:mi><mml:mrow><mml:mi>x</mml:mi><mml:mi>k</mml:mi></mml:mrow></mml:msub><mml:mo>+</mml:mo><mml:msubsup><mml:mi mathvariant="bold-italic">A</mml:mi><mml:mi>z</mml:mi><mml:mi>H</mml:mi></mml:msubsup><mml:msub><mml:mi mathvariant="bold-italic">a</mml:mi><mml:mrow><mml:mi>z</mml:mi><mml:mi>k</mml:mi></mml:mrow></mml:msub><mml:mo stretchy="false">)</mml:mo></mml:mrow><mml:msup><mml:mrow><mml:msubsup><mml:mo stretchy="false">&#8741;</mml:mo><mml:mn>2</mml:mn><mml:mn>2</mml:mn></mml:msubsup><mml:mo stretchy="false">)</mml:mo></mml:mrow><mml:mrow><mml:mo>&#8722;</mml:mo><mml:mfrac><mml:mn>1</mml:mn><mml:mn>2</mml:mn></mml:mfrac></mml:mrow></mml:msup><mml:mo>,</mml:mo></mml:mrow></mml:mtd></mml:mtr></mml:mtable></mml:mrow></mml:math></disp-formula>
<italic toggle="yes">where <inline-formula><mml:math id="mm113" overflow="scroll"><mml:mrow><mml:mrow><mml:mi mathvariant="bold-italic">Q</mml:mi><mml:mo>=</mml:mo><mml:mi>&#1013;</mml:mi><mml:msup><mml:mi mathvariant="bold-italic">P</mml:mi><mml:mrow><mml:mo>&#8722;</mml:mo><mml:mn>1</mml:mn></mml:mrow></mml:msup><mml:mo>+</mml:mo><mml:mi>M</mml:mi><mml:msub><mml:mi mathvariant="bold-italic">I</mml:mi><mml:mi>K</mml:mi></mml:msub></mml:mrow></mml:mrow></mml:math></inline-formula>, <inline-formula><mml:math id="mm114" overflow="scroll"><mml:mrow><mml:mrow><mml:mi mathvariant="bold-italic">A</mml:mi><mml:mo>=</mml:mo><mml:msup><mml:mrow><mml:mo>[</mml:mo><mml:msubsup><mml:mi mathvariant="bold-italic">A</mml:mi><mml:mi>x</mml:mi><mml:mi>T</mml:mi></mml:msubsup><mml:mo>,</mml:mo><mml:msubsup><mml:mi mathvariant="bold-italic">A</mml:mi><mml:mi>z</mml:mi><mml:mi>T</mml:mi></mml:msubsup><mml:mo>]</mml:mo></mml:mrow><mml:mi>T</mml:mi></mml:msup></mml:mrow></mml:mrow></mml:math></inline-formula> is the manifold of <inline-formula><mml:math id="mm115" overflow="scroll"><mml:mrow><mml:mi mathvariant="bold-italic">R</mml:mi></mml:mrow></mml:math></inline-formula> in <inline-formula><mml:math id="mm116" overflow="scroll"><mml:mrow><mml:mi mathvariant="bold-italic">W</mml:mi></mml:mrow></mml:math></inline-formula>.</italic>
</p></statement><statement><label><bold>Proof.</bold>&#160;</label><p>See <xref rid="app2-sensors-25-05583" ref-type="app">Appendix B</xref>. &#160;&#160;&#160;&#9633;</p></statement><p>It follows that the atom weights actually depend on the correlation between the atoms to be chosen and all the atoms embedded in <inline-formula><mml:math id="mm117" overflow="scroll"><mml:mrow><mml:mi mathvariant="bold-italic">W</mml:mi></mml:mrow></mml:math></inline-formula>, which means that the DOAs around the corresponding atoms in <inline-formula><mml:math id="mm118" overflow="scroll"><mml:mrow><mml:mi mathvariant="bold-italic">W</mml:mi></mml:mrow></mml:math></inline-formula> are more likely to be selected. Besides, the weights of different sources are also influenced by <inline-formula><mml:math id="mm119" overflow="scroll"><mml:mrow><mml:mi mathvariant="bold-italic">Q</mml:mi></mml:mrow></mml:math></inline-formula> embedding the power of sources. The analysis above shows that the proposed method is capable of utilizing the correlation of different subarrays by the weighted atom norm while allowing for the assignment of distinct weights to different atoms.</p></statement><statement><label><bold>Remark</bold>&#160;<bold>3.</bold></label><p>
<italic toggle="yes">Suppose <inline-formula><mml:math id="mm120" overflow="scroll"><mml:mrow><mml:mrow><mml:mi>P</mml:mi><mml:mo>=</mml:mo><mml:mn>2</mml:mn><mml:msub><mml:mi>M</mml:mi><mml:mi>x</mml:mi></mml:msub><mml:msub><mml:mi>M</mml:mi><mml:mi>z</mml:mi></mml:msub><mml:mo>&#8722;</mml:mo><mml:msub><mml:mi>M</mml:mi><mml:mi>x</mml:mi></mml:msub><mml:mo>&#8722;</mml:mo><mml:msub><mml:mi>M</mml:mi><mml:mi>z</mml:mi></mml:msub><mml:mo>+</mml:mo><mml:mn>1</mml:mn></mml:mrow></mml:mrow></mml:math></inline-formula> denotes the number of variables in <inline-formula><mml:math id="mm121" overflow="scroll"><mml:mrow><mml:msub><mml:mi mathvariant="bold-italic">T</mml:mi><mml:mn>2</mml:mn></mml:msub></mml:mrow></mml:math></inline-formula>, the proposed method has the complexity of <inline-formula><mml:math id="mm122" overflow="scroll"><mml:mrow><mml:mrow><mml:mi mathvariant="script">O</mml:mi><mml:mo stretchy="false">(</mml:mo><mml:msubsup><mml:mi>n</mml:mi><mml:mn>1</mml:mn><mml:mn>2</mml:mn></mml:msubsup><mml:msubsup><mml:mi>n</mml:mi><mml:mn>2</mml:mn><mml:mrow><mml:mn>2.5</mml:mn></mml:mrow></mml:msubsup><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:mrow></mml:math></inline-formula>, where <inline-formula><mml:math id="mm123" overflow="scroll"><mml:mrow><mml:mrow><mml:msub><mml:mi>n</mml:mi><mml:mn>1</mml:mn></mml:msub><mml:mo>=</mml:mo><mml:msup><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:msub><mml:mi>M</mml:mi><mml:mi>x</mml:mi></mml:msub><mml:mo>+</mml:mo><mml:msub><mml:mi>M</mml:mi><mml:mi>z</mml:mi></mml:msub><mml:mo>&#8722;</mml:mo><mml:mn>1</mml:mn><mml:mo stretchy="false">)</mml:mo></mml:mrow><mml:mn>2</mml:mn></mml:msup><mml:mo>+</mml:mo><mml:mi>P</mml:mi></mml:mrow></mml:mrow></mml:math></inline-formula> and <inline-formula><mml:math id="mm124" overflow="scroll"><mml:mrow><mml:mrow><mml:msub><mml:mi>n</mml:mi><mml:mn>2</mml:mn></mml:msub><mml:mo>=</mml:mo><mml:msub><mml:mi>M</mml:mi><mml:mi>x</mml:mi></mml:msub><mml:mo>+</mml:mo><mml:msub><mml:mi>M</mml:mi><mml:mi>z</mml:mi></mml:msub><mml:mo>&#8722;</mml:mo><mml:mn>1</mml:mn><mml:mo>+</mml:mo><mml:msub><mml:mi>M</mml:mi><mml:mi>x</mml:mi></mml:msub><mml:msub><mml:mi>M</mml:mi><mml:mi>z</mml:mi></mml:msub></mml:mrow></mml:mrow></mml:math></inline-formula>. It can be seen that the complexity of the proposed method only depends on the number of sensors in the array.</italic>
</p></statement></sec><sec id="sec4-sensors-25-05583"><title>4. Efficient Implementation via ADMM</title><p>Although the non-convex constraint can be tackled by post-processing, the reuse of elements in the MLT matrix <inline-formula><mml:math id="mm125" overflow="scroll"><mml:mrow><mml:msub><mml:mi mathvariant="bold-italic">T</mml:mi><mml:mn>2</mml:mn></mml:msub></mml:mrow></mml:math></inline-formula> still leads to high computational cost, which means that the general SDP3 solver is not suitable for practical use. ADMM [<xref rid="B44-sensors-25-05583" ref-type="bibr">44</xref>] is an effective approach for reducing the computational complexity of SDP problems [<xref rid="B24-sensors-25-05583" ref-type="bibr">24</xref>]. Therefore, we will apply it to the optimization model in (<xref rid="FD14-sensors-25-05583" ref-type="disp-formula">14</xref>) with the separable variables.</p><sec id="sec4dot1-sensors-25-05583"><title>4.1. Algorithm Framework</title><p>The auxiliary variables <inline-formula><mml:math id="mm126" overflow="scroll"><mml:mrow><mml:msub><mml:mi mathvariant="bold-italic">Q</mml:mi><mml:mn>1</mml:mn></mml:msub></mml:mrow></mml:math></inline-formula>, <inline-formula><mml:math id="mm127" overflow="scroll"><mml:mrow><mml:msub><mml:mi mathvariant="bold-italic">Q</mml:mi><mml:mn>2</mml:mn></mml:msub></mml:mrow></mml:math></inline-formula> are introduced to reformulate (<xref rid="FD14-sensors-25-05583" ref-type="disp-formula">14</xref>) as follows:<disp-formula id="FD19-sensors-25-05583"><label>(19)</label><mml:math id="mm128" display="block" overflow="scroll"><mml:mrow><mml:mtable displaystyle="true"><mml:mtr><mml:mtd columnalign="right"><mml:munder><mml:mi>min</mml:mi><mml:mrow><mml:mi mathvariant="bold-italic">X</mml:mi><mml:mo>,</mml:mo><mml:mi mathvariant="bold-italic">Z</mml:mi><mml:mo>,</mml:mo><mml:mi mathvariant="bold-italic">R</mml:mi><mml:mo>,</mml:mo><mml:msub><mml:mi mathvariant="bold-italic">Q</mml:mi><mml:mn>1</mml:mn></mml:msub><mml:mo>,</mml:mo><mml:msub><mml:mi mathvariant="bold-italic">Q</mml:mi><mml:mn>2</mml:mn></mml:msub></mml:mrow></mml:munder></mml:mtd><mml:mtd columnalign="left"><mml:mrow><mml:mstyle scriptlevel="0" displaystyle="true"><mml:mfrac><mml:mn>1</mml:mn><mml:mn>2</mml:mn></mml:mfrac></mml:mstyle><mml:mrow><mml:mo stretchy="false">[</mml:mo><mml:mi>tr</mml:mi><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mi mathvariant="bold-italic">X</mml:mi><mml:mo stretchy="false">)</mml:mo></mml:mrow><mml:mo>+</mml:mo><mml:mi>tr</mml:mi><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:msup><mml:mover accent="true"><mml:mi mathvariant="bold-italic">R</mml:mi><mml:mo stretchy="false">&#732;</mml:mo></mml:mover><mml:mrow><mml:mo>&#8722;</mml:mo><mml:mn>1</mml:mn></mml:mrow></mml:msup><mml:mi mathvariant="bold-italic">R</mml:mi><mml:mo stretchy="false">)</mml:mo></mml:mrow><mml:mo stretchy="false">]</mml:mo></mml:mrow><mml:mo>+</mml:mo><mml:msub><mml:mi>&#948;</mml:mi><mml:msub><mml:mi mathvariant="double-struck">S</mml:mi><mml:mo>+</mml:mo></mml:msub></mml:msub><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:msub><mml:mi mathvariant="bold-italic">Q</mml:mi><mml:mn>1</mml:mn></mml:msub><mml:mo stretchy="false">)</mml:mo></mml:mrow><mml:mo>+</mml:mo><mml:msub><mml:mi>&#948;</mml:mi><mml:msub><mml:mi mathvariant="double-struck">S</mml:mi><mml:mo>+</mml:mo></mml:msub></mml:msub><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:msub><mml:mi mathvariant="bold-italic">Q</mml:mi><mml:mn>2</mml:mn></mml:msub><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:mrow></mml:mtd></mml:mtr><mml:mtr><mml:mtd/><mml:mtd columnalign="left"><mml:mrow><mml:mo>+</mml:mo><mml:munderover><mml:mo>&#8721;</mml:mo><mml:mrow><mml:mi>i</mml:mi><mml:mo>=</mml:mo><mml:mn>1</mml:mn></mml:mrow><mml:mi>M</mml:mi></mml:munderover><mml:msqrt><mml:msub><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:msup><mml:mover accent="true"><mml:mi mathvariant="bold-italic">R</mml:mi><mml:mo stretchy="false">&#732;</mml:mo></mml:mover><mml:mrow><mml:mo>&#8722;</mml:mo><mml:mn>1</mml:mn></mml:mrow></mml:msup><mml:mo stretchy="false">)</mml:mo></mml:mrow><mml:mrow><mml:mi>i</mml:mi><mml:mo>,</mml:mo><mml:mi>i</mml:mi></mml:mrow></mml:msub></mml:msqrt><mml:msub><mml:mrow><mml:mo stretchy="false">&#8741;</mml:mo><mml:msub><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:msup><mml:mover accent="true"><mml:mi mathvariant="bold-italic">R</mml:mi><mml:mo stretchy="false">&#732;</mml:mo></mml:mover><mml:mfrac><mml:mn>1</mml:mn><mml:mn>2</mml:mn></mml:mfrac></mml:msup><mml:mo>&#8722;</mml:mo><mml:mi mathvariant="bold-italic">Z</mml:mi><mml:mo stretchy="false">)</mml:mo></mml:mrow><mml:mrow><mml:mi>i</mml:mi><mml:mo>,</mml:mo><mml:mo>:</mml:mo></mml:mrow></mml:msub><mml:mo stretchy="false">&#8741;</mml:mo></mml:mrow><mml:mn>2</mml:mn></mml:msub></mml:mrow></mml:mtd></mml:mtr><mml:mtr><mml:mtd/><mml:mtd columnalign="left"><mml:mrow><mml:mrow><mml:mi mathvariant="normal">s</mml:mi><mml:mo>.</mml:mo><mml:mi mathvariant="normal">t</mml:mi><mml:mo>.</mml:mo></mml:mrow><mml:mspace width="1.em"/><mml:msub><mml:mi mathvariant="bold-italic">Q</mml:mi><mml:mn>1</mml:mn></mml:msub><mml:mo>=</mml:mo><mml:mfenced open="[" close="]"><mml:mtable><mml:mtr><mml:mtd><mml:mi mathvariant="bold-italic">X</mml:mi></mml:mtd><mml:mtd><mml:msup><mml:mi mathvariant="bold-italic">Z</mml:mi><mml:mi>H</mml:mi></mml:msup></mml:mtd></mml:mtr><mml:mtr><mml:mtd><mml:mi mathvariant="bold-italic">Z</mml:mi></mml:mtd><mml:mtd><mml:mi mathvariant="bold-italic">R</mml:mi></mml:mtd></mml:mtr></mml:mtable></mml:mfenced><mml:mo>,</mml:mo><mml:msub><mml:mi mathvariant="bold-italic">Q</mml:mi><mml:mn>2</mml:mn></mml:msub><mml:mo>=</mml:mo><mml:msub><mml:mi mathvariant="bold-italic">T</mml:mi><mml:mn>2</mml:mn></mml:msub><mml:mo>,</mml:mo></mml:mrow></mml:mtd></mml:mtr></mml:mtable></mml:mrow></mml:math></disp-formula>
where <inline-formula><mml:math id="mm129" overflow="scroll"><mml:mrow><mml:mrow><mml:msub><mml:mi>&#948;</mml:mi><mml:msub><mml:mi mathvariant="double-struck">S</mml:mi><mml:mo>+</mml:mo></mml:msub></mml:msub><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mo>&#183;</mml:mo><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:mrow></mml:mrow></mml:math></inline-formula> is the indicator function of the PSD matrices set, i.e., <inline-formula><mml:math id="mm130" overflow="scroll"><mml:mrow><mml:mrow><mml:msub><mml:mi>&#948;</mml:mi><mml:msub><mml:mi mathvariant="double-struck">S</mml:mi><mml:mo>+</mml:mo></mml:msub></mml:msub><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:msub><mml:mi mathvariant="bold-italic">Q</mml:mi><mml:mi>i</mml:mi></mml:msub><mml:mo stretchy="false">)</mml:mo></mml:mrow><mml:mo>=</mml:mo><mml:mn>0</mml:mn></mml:mrow></mml:mrow></mml:math></inline-formula> if <inline-formula><mml:math id="mm131" overflow="scroll"><mml:mrow><mml:mrow><mml:msub><mml:mi mathvariant="bold-italic">Q</mml:mi><mml:mi>i</mml:mi></mml:msub><mml:mo>&#10928;</mml:mo><mml:mn mathvariant="bold">0</mml:mn><mml:mo>,</mml:mo><mml:mi>i</mml:mi><mml:mo>=</mml:mo><mml:mn>1</mml:mn><mml:mo>,</mml:mo><mml:mn>2</mml:mn></mml:mrow></mml:mrow></mml:math></inline-formula> or <italic toggle="yes">&#8734;</italic> otherwise.</p><p>Assume the Toeplitz operator is defined as follows:<disp-formula><mml:math id="mm132" display="block" overflow="scroll"><mml:mrow><mml:mtable displaystyle="true"><mml:mtr><mml:mtd columnalign="right"><mml:mrow><mml:mi mathvariant="script">T</mml:mi><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mi mathvariant="bold-italic">u</mml:mi><mml:mo stretchy="false">)</mml:mo></mml:mrow><mml:mo>=</mml:mo><mml:mfenced open="[" close="]"><mml:mtable><mml:mtr><mml:mtd><mml:msub><mml:mi>u</mml:mi><mml:mn>0</mml:mn></mml:msub></mml:mtd><mml:mtd><mml:msub><mml:mi>u</mml:mi><mml:mn>1</mml:mn></mml:msub></mml:mtd><mml:mtd><mml:mo>&#8943;</mml:mo></mml:mtd><mml:mtd><mml:msub><mml:mi>u</mml:mi><mml:mrow><mml:mi>n</mml:mi><mml:mo>&#8722;</mml:mo><mml:mn>1</mml:mn></mml:mrow></mml:msub></mml:mtd></mml:mtr><mml:mtr><mml:mtd><mml:msub><mml:mi>u</mml:mi><mml:mrow><mml:mo>&#8722;</mml:mo><mml:mn>1</mml:mn></mml:mrow></mml:msub></mml:mtd><mml:mtd><mml:msub><mml:mi>u</mml:mi><mml:mn>0</mml:mn></mml:msub></mml:mtd><mml:mtd><mml:mo>&#8943;</mml:mo></mml:mtd><mml:mtd><mml:msub><mml:mi>u</mml:mi><mml:mrow><mml:mi>n</mml:mi><mml:mo>&#8722;</mml:mo><mml:mn>2</mml:mn></mml:mrow></mml:msub></mml:mtd></mml:mtr><mml:mtr><mml:mtd><mml:mo>&#8942;</mml:mo></mml:mtd><mml:mtd><mml:mo>&#8942;</mml:mo></mml:mtd><mml:mtd><mml:mo>&#8945;</mml:mo></mml:mtd><mml:mtd><mml:mo>&#8942;</mml:mo></mml:mtd></mml:mtr><mml:mtr><mml:mtd><mml:msub><mml:mi>u</mml:mi><mml:mrow><mml:mn>1</mml:mn><mml:mo>&#8722;</mml:mo><mml:mi>n</mml:mi></mml:mrow></mml:msub></mml:mtd><mml:mtd><mml:msub><mml:mi>u</mml:mi><mml:mrow><mml:mn>2</mml:mn><mml:mo>&#8722;</mml:mo><mml:mi>n</mml:mi></mml:mrow></mml:msub></mml:mtd><mml:mtd><mml:mo>&#8943;</mml:mo></mml:mtd><mml:mtd><mml:msub><mml:mi>u</mml:mi><mml:mn>0</mml:mn></mml:msub></mml:mtd></mml:mtr></mml:mtable></mml:mfenced><mml:mo>,</mml:mo><mml:mi mathvariant="bold-italic">u</mml:mi><mml:mo>=</mml:mo><mml:msup><mml:mrow><mml:mo>[</mml:mo><mml:msub><mml:mi>u</mml:mi><mml:mrow><mml:mn>1</mml:mn><mml:mo>&#8722;</mml:mo><mml:mi>n</mml:mi></mml:mrow></mml:msub><mml:mo>,</mml:mo><mml:mo>&#8943;</mml:mo><mml:mo>,</mml:mo><mml:msub><mml:mi>u</mml:mi><mml:mn>0</mml:mn></mml:msub><mml:mo>,</mml:mo><mml:mo>&#8943;</mml:mo><mml:mo>,</mml:mo><mml:msub><mml:mi>u</mml:mi><mml:mrow><mml:mi>n</mml:mi><mml:mo>&#8722;</mml:mo><mml:mn>1</mml:mn></mml:mrow></mml:msub><mml:mo>]</mml:mo></mml:mrow><mml:mi>T</mml:mi></mml:msup><mml:mo>&#8712;</mml:mo><mml:msup><mml:mi mathvariant="double-struck">C</mml:mi><mml:mrow><mml:mn>2</mml:mn><mml:mi>n</mml:mi><mml:mo>&#8722;</mml:mo><mml:mn>1</mml:mn></mml:mrow></mml:msup><mml:mo>,</mml:mo></mml:mrow></mml:mtd></mml:mtr></mml:mtable></mml:mrow></mml:math></disp-formula>
and <inline-formula><mml:math id="mm133" overflow="scroll"><mml:mrow><mml:msub><mml:mi mathvariant="bold-italic">T</mml:mi><mml:mn>2</mml:mn></mml:msub></mml:mrow></mml:math></inline-formula> is composed of the elements in a PSD matrix <inline-formula><mml:math id="mm134" overflow="scroll"><mml:mrow><mml:mrow><mml:mi mathvariant="bold-italic">T</mml:mi><mml:mo>&#8712;</mml:mo><mml:msup><mml:mi mathvariant="double-struck">C</mml:mi><mml:mrow><mml:msub><mml:mi>M</mml:mi><mml:mn>2</mml:mn></mml:msub><mml:mo>&#215;</mml:mo><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mn>2</mml:mn><mml:msub><mml:mi>M</mml:mi><mml:mn>1</mml:mn></mml:msub><mml:mo>&#8722;</mml:mo><mml:mn>1</mml:mn><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:mrow></mml:msup></mml:mrow></mml:mrow></mml:math></inline-formula> as follows:<disp-formula id="FD20-sensors-25-05583"><label>(20)</label><mml:math id="mm135" display="block" overflow="scroll"><mml:mrow><mml:mtable displaystyle="true"><mml:mtr><mml:mtd columnalign="right"><mml:mrow><mml:msub><mml:mi mathvariant="bold-italic">T</mml:mi><mml:mn>2</mml:mn></mml:msub><mml:mspace width="-0.166667em"/><mml:mo>=</mml:mo><mml:mspace width="-0.166667em"/><mml:mfenced open="[" close="]"><mml:mtable><mml:mtr><mml:mtd><mml:mrow><mml:mi mathvariant="script">T</mml:mi><mml:mo stretchy="false">(</mml:mo><mml:msub><mml:mi mathvariant="bold-italic">T</mml:mi><mml:mrow><mml:mn>1</mml:mn><mml:mo>,</mml:mo><mml:mo>:</mml:mo></mml:mrow></mml:msub><mml:mo stretchy="false">)</mml:mo><mml:mspace width="-0.166667em"/></mml:mrow></mml:mtd><mml:mtd><mml:mrow><mml:mspace width="-0.166667em"/><mml:msup><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mi mathvariant="script">T</mml:mi><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:msub><mml:mi mathvariant="bold-italic">T</mml:mi><mml:mrow><mml:mn>2</mml:mn><mml:mo>,</mml:mo><mml:mo>:</mml:mo></mml:mrow></mml:msub><mml:mo stretchy="false">)</mml:mo></mml:mrow><mml:mo stretchy="false">)</mml:mo></mml:mrow><mml:mi>H</mml:mi></mml:msup><mml:mspace width="-0.166667em"/></mml:mrow></mml:mtd><mml:mtd><mml:mrow><mml:mspace width="-0.166667em"/><mml:mo>&#8943;</mml:mo><mml:mspace width="-0.166667em"/></mml:mrow></mml:mtd><mml:mtd><mml:mrow><mml:mspace width="-0.166667em"/><mml:msup><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mi mathvariant="script">T</mml:mi><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:msub><mml:mi mathvariant="bold-italic">T</mml:mi><mml:mrow><mml:msub><mml:mi>M</mml:mi><mml:mn>2</mml:mn></mml:msub><mml:mo>,</mml:mo><mml:mo>:</mml:mo></mml:mrow></mml:msub><mml:mo stretchy="false">)</mml:mo></mml:mrow><mml:mo stretchy="false">)</mml:mo></mml:mrow><mml:mi>H</mml:mi></mml:msup></mml:mrow></mml:mtd></mml:mtr><mml:mtr><mml:mtd><mml:mrow><mml:mi mathvariant="script">T</mml:mi><mml:mo stretchy="false">(</mml:mo><mml:msub><mml:mi mathvariant="bold-italic">T</mml:mi><mml:mrow><mml:mn>2</mml:mn><mml:mo>,</mml:mo><mml:mo>:</mml:mo></mml:mrow></mml:msub><mml:mo stretchy="false">)</mml:mo><mml:mspace width="-0.166667em"/></mml:mrow></mml:mtd><mml:mtd><mml:mrow><mml:mspace width="-0.166667em"/><mml:mi mathvariant="script">T</mml:mi><mml:mo stretchy="false">(</mml:mo><mml:msub><mml:mi mathvariant="bold-italic">T</mml:mi><mml:mrow><mml:mn>1</mml:mn><mml:mo>,</mml:mo><mml:mo>:</mml:mo></mml:mrow></mml:msub><mml:mo stretchy="false">)</mml:mo><mml:mspace width="-0.166667em"/></mml:mrow></mml:mtd><mml:mtd><mml:mrow><mml:mspace width="-0.166667em"/><mml:mo>&#8943;</mml:mo><mml:mspace width="-0.166667em"/></mml:mrow></mml:mtd><mml:mtd><mml:mrow><mml:mspace width="-0.166667em"/><mml:msup><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mi mathvariant="script">T</mml:mi><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:msub><mml:mi mathvariant="bold-italic">T</mml:mi><mml:mrow><mml:msub><mml:mi>M</mml:mi><mml:mn>2</mml:mn></mml:msub><mml:mo>&#8722;</mml:mo><mml:mn>1</mml:mn><mml:mo>,</mml:mo><mml:mo>:</mml:mo></mml:mrow></mml:msub><mml:mo stretchy="false">)</mml:mo></mml:mrow><mml:mo stretchy="false">)</mml:mo></mml:mrow><mml:mi>H</mml:mi></mml:msup></mml:mrow></mml:mtd></mml:mtr><mml:mtr><mml:mtd><mml:mrow><mml:mo>&#8942;</mml:mo><mml:mspace width="-0.166667em"/></mml:mrow></mml:mtd><mml:mtd><mml:mrow><mml:mspace width="-0.166667em"/><mml:mo>&#8942;</mml:mo><mml:mspace width="-0.166667em"/></mml:mrow></mml:mtd><mml:mtd><mml:mrow><mml:mspace width="-0.166667em"/><mml:mo>&#8945;</mml:mo><mml:mspace width="-0.166667em"/></mml:mrow></mml:mtd><mml:mtd><mml:mrow><mml:mspace width="-0.166667em"/><mml:mo>&#8942;</mml:mo></mml:mrow></mml:mtd></mml:mtr><mml:mtr><mml:mtd><mml:mrow><mml:mi mathvariant="script">T</mml:mi><mml:mo stretchy="false">(</mml:mo><mml:msub><mml:mi mathvariant="bold-italic">T</mml:mi><mml:mrow><mml:msub><mml:mi>M</mml:mi><mml:mn>2</mml:mn></mml:msub><mml:mo>,</mml:mo><mml:mo>:</mml:mo></mml:mrow></mml:msub><mml:mo stretchy="false">)</mml:mo><mml:mspace width="-0.166667em"/></mml:mrow></mml:mtd><mml:mtd><mml:mrow><mml:mspace width="-0.166667em"/><mml:mi mathvariant="script">T</mml:mi><mml:mo stretchy="false">(</mml:mo><mml:msub><mml:mi mathvariant="bold-italic">T</mml:mi><mml:mrow><mml:msub><mml:mi>M</mml:mi><mml:mn>2</mml:mn></mml:msub><mml:mo>&#8722;</mml:mo><mml:mn>1</mml:mn><mml:mo>,</mml:mo><mml:mo>:</mml:mo></mml:mrow></mml:msub><mml:mo stretchy="false">)</mml:mo><mml:mspace width="-0.166667em"/></mml:mrow></mml:mtd><mml:mtd><mml:mrow><mml:mspace width="-0.166667em"/><mml:mo>&#8943;</mml:mo><mml:mspace width="-0.166667em"/></mml:mrow></mml:mtd><mml:mtd><mml:mrow><mml:mspace width="-0.166667em"/><mml:mi mathvariant="script">T</mml:mi><mml:mo stretchy="false">(</mml:mo><mml:msub><mml:mi mathvariant="bold-italic">T</mml:mi><mml:mrow><mml:mn>1</mml:mn><mml:mo>,</mml:mo><mml:mo>:</mml:mo></mml:mrow></mml:msub><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:mtd></mml:mtr></mml:mtable></mml:mfenced><mml:mo>,</mml:mo></mml:mrow></mml:mtd></mml:mtr></mml:mtable></mml:mrow></mml:math></disp-formula>
then <inline-formula><mml:math id="mm136" overflow="scroll"><mml:mrow><mml:mi mathvariant="bold-italic">R</mml:mi></mml:mrow></mml:math></inline-formula> can be reparameterized by <inline-formula><mml:math id="mm137" overflow="scroll"><mml:mrow><mml:mi mathvariant="bold-italic">T</mml:mi></mml:mrow></mml:math></inline-formula> according to (<xref rid="FD11-sensors-25-05583" ref-type="disp-formula">11</xref>) and (<xref rid="FD20-sensors-25-05583" ref-type="disp-formula">20</xref>).</p><p>It follows that the augmented Lagrangian function of (<xref rid="FD19-sensors-25-05583" ref-type="disp-formula">19</xref>) is given by the following:<disp-formula id="FD21-sensors-25-05583"><label>(21)</label><mml:math id="mm138" display="block" overflow="scroll"><mml:mrow><mml:mtable displaystyle="true"><mml:mtr><mml:mtd columnalign="right"><mml:mspace width="1.em"/></mml:mtd><mml:mtd columnalign="left"><mml:mrow><mml:mi mathvariant="script">L</mml:mi><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mi mathvariant="bold-italic">Q</mml:mi><mml:mo>,</mml:mo><mml:mi mathvariant="bold-italic">X</mml:mi><mml:mo>,</mml:mo><mml:mi mathvariant="bold-italic">Z</mml:mi><mml:mo>,</mml:mo><mml:mi mathvariant="bold-italic">T</mml:mi><mml:mo>,</mml:mo><mml:mo mathvariant="bold">&#923;</mml:mo><mml:mo stretchy="false">)</mml:mo></mml:mrow><mml:mo>=</mml:mo><mml:mstyle scriptlevel="0" displaystyle="true"><mml:mfrac><mml:mn>1</mml:mn><mml:mn>2</mml:mn></mml:mfrac></mml:mstyle><mml:mrow><mml:mo stretchy="false">[</mml:mo><mml:mi>tr</mml:mi><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mi mathvariant="bold-italic">X</mml:mi><mml:mo stretchy="false">)</mml:mo></mml:mrow><mml:mo>+</mml:mo><mml:mi>tr</mml:mi><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:msup><mml:mover accent="true"><mml:mi mathvariant="bold-italic">R</mml:mi><mml:mo stretchy="false">&#732;</mml:mo></mml:mover><mml:mrow><mml:mo>&#8722;</mml:mo><mml:mn>1</mml:mn></mml:mrow></mml:msup><mml:mi mathvariant="bold-italic">R</mml:mi><mml:mo stretchy="false">)</mml:mo></mml:mrow><mml:mo stretchy="false">]</mml:mo></mml:mrow><mml:mo>+</mml:mo><mml:munderover><mml:mo>&#8721;</mml:mo><mml:mrow><mml:mi>i</mml:mi><mml:mo>=</mml:mo><mml:mn>1</mml:mn></mml:mrow><mml:mi>M</mml:mi></mml:munderover><mml:msqrt><mml:msub><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:msup><mml:mover accent="true"><mml:mi mathvariant="bold-italic">R</mml:mi><mml:mo stretchy="false">&#732;</mml:mo></mml:mover><mml:mrow><mml:mo>&#8722;</mml:mo><mml:mn>1</mml:mn></mml:mrow></mml:msup><mml:mo stretchy="false">)</mml:mo></mml:mrow><mml:mrow><mml:mi>i</mml:mi><mml:mo>,</mml:mo><mml:mi>i</mml:mi></mml:mrow></mml:msub></mml:msqrt><mml:msub><mml:mrow><mml:mo stretchy="false">&#8741;</mml:mo><mml:msub><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:msup><mml:mover accent="true"><mml:mi mathvariant="bold-italic">R</mml:mi><mml:mo stretchy="false">&#732;</mml:mo></mml:mover><mml:mfrac><mml:mn>1</mml:mn><mml:mn>2</mml:mn></mml:mfrac></mml:msup><mml:mo>&#8722;</mml:mo><mml:mi mathvariant="bold-italic">Z</mml:mi><mml:mo stretchy="false">)</mml:mo></mml:mrow><mml:mrow><mml:mi>i</mml:mi><mml:mo>,</mml:mo><mml:mo>:</mml:mo></mml:mrow></mml:msub><mml:mo stretchy="false">&#8741;</mml:mo></mml:mrow><mml:mn>2</mml:mn></mml:msub></mml:mrow></mml:mtd></mml:mtr><mml:mtr><mml:mtd/><mml:mtd columnalign="left"><mml:mrow><mml:mo>+</mml:mo><mml:msub><mml:mi>&#948;</mml:mi><mml:msub><mml:mi mathvariant="double-struck">S</mml:mi><mml:mo>+</mml:mo></mml:msub></mml:msub><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:msub><mml:mi mathvariant="bold-italic">Q</mml:mi><mml:mn>1</mml:mn></mml:msub><mml:mo stretchy="false">)</mml:mo></mml:mrow><mml:mo>+</mml:mo><mml:msub><mml:mi>&#948;</mml:mi><mml:msub><mml:mi mathvariant="double-struck">S</mml:mi><mml:mo>+</mml:mo></mml:msub></mml:msub><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:msub><mml:mi mathvariant="bold-italic">Q</mml:mi><mml:mn>2</mml:mn></mml:msub><mml:mo stretchy="false">)</mml:mo></mml:mrow><mml:mo>+</mml:mo><mml:mstyle scriptlevel="0" displaystyle="true"><mml:mfrac><mml:msub><mml:mi>&#956;</mml:mi><mml:mn>1</mml:mn></mml:msub><mml:mn>2</mml:mn></mml:mfrac></mml:mstyle><mml:mrow><mml:mo stretchy="false">&#8741;</mml:mo></mml:mrow><mml:msub><mml:mi mathvariant="bold-italic">Q</mml:mi><mml:mn>1</mml:mn></mml:msub><mml:mo>&#8722;</mml:mo><mml:mfenced open="[" close="]"><mml:mtable><mml:mtr><mml:mtd><mml:mi mathvariant="bold-italic">X</mml:mi></mml:mtd><mml:mtd><mml:msup><mml:mi mathvariant="bold-italic">Z</mml:mi><mml:mi>H</mml:mi></mml:msup></mml:mtd></mml:mtr><mml:mtr><mml:mtd><mml:mi mathvariant="bold-italic">Z</mml:mi></mml:mtd><mml:mtd><mml:mi mathvariant="bold-italic">R</mml:mi></mml:mtd></mml:mtr></mml:mtable></mml:mfenced><mml:mo>+</mml:mo><mml:msubsup><mml:mi>&#956;</mml:mi><mml:mn>1</mml:mn><mml:mrow><mml:mo>&#8722;</mml:mo><mml:mn>1</mml:mn></mml:mrow></mml:msubsup><mml:msub><mml:mo mathvariant="bold">&#923;</mml:mo><mml:mn>1</mml:mn></mml:msub><mml:msubsup><mml:mrow><mml:mo stretchy="false">&#8741;</mml:mo></mml:mrow><mml:mrow><mml:mi mathvariant="normal">F</mml:mi></mml:mrow><mml:mn>2</mml:mn></mml:msubsup><mml:mo>&#8722;</mml:mo><mml:mstyle scriptlevel="0" displaystyle="true"><mml:mfrac><mml:mn>1</mml:mn><mml:mrow><mml:mn>2</mml:mn><mml:msub><mml:mi>&#956;</mml:mi><mml:mn>1</mml:mn></mml:msub></mml:mrow></mml:mfrac></mml:mstyle><mml:msubsup><mml:mrow><mml:mo stretchy="false">&#8741;</mml:mo><mml:msub><mml:mo mathvariant="bold">&#923;</mml:mo><mml:mn>1</mml:mn></mml:msub><mml:mo stretchy="false">&#8741;</mml:mo></mml:mrow><mml:mrow><mml:mi mathvariant="normal">F</mml:mi></mml:mrow><mml:mn>2</mml:mn></mml:msubsup></mml:mrow></mml:mtd></mml:mtr><mml:mtr><mml:mtd columnalign="right"><mml:mspace width="1.em"/></mml:mtd><mml:mtd columnalign="left"><mml:mrow><mml:mo>+</mml:mo><mml:mstyle scriptlevel="0" displaystyle="true"><mml:mfrac><mml:msub><mml:mi>&#956;</mml:mi><mml:mn>2</mml:mn></mml:msub><mml:mn>2</mml:mn></mml:mfrac></mml:mstyle><mml:mrow><mml:mo stretchy="false">&#8741;</mml:mo></mml:mrow><mml:msub><mml:mi mathvariant="bold-italic">Q</mml:mi><mml:mn>2</mml:mn></mml:msub><mml:mo>&#8722;</mml:mo><mml:msub><mml:mi mathvariant="bold-italic">T</mml:mi><mml:mn>2</mml:mn></mml:msub><mml:mo>+</mml:mo><mml:msubsup><mml:mi>&#956;</mml:mi><mml:mn>2</mml:mn><mml:mrow><mml:mo>&#8722;</mml:mo><mml:mn>1</mml:mn></mml:mrow></mml:msubsup><mml:msub><mml:mo mathvariant="bold">&#923;</mml:mo><mml:mn>2</mml:mn></mml:msub><mml:msubsup><mml:mrow><mml:mo stretchy="false">&#8741;</mml:mo></mml:mrow><mml:mrow><mml:mi mathvariant="normal">F</mml:mi></mml:mrow><mml:mn>2</mml:mn></mml:msubsup><mml:mo>&#8722;</mml:mo><mml:mstyle scriptlevel="0" displaystyle="true"><mml:mfrac><mml:mn>1</mml:mn><mml:mrow><mml:mn>2</mml:mn><mml:msub><mml:mi>&#956;</mml:mi><mml:mn>2</mml:mn></mml:msub></mml:mrow></mml:mfrac></mml:mstyle><mml:msubsup><mml:mrow><mml:mo stretchy="false">&#8741;</mml:mo><mml:msub><mml:mo mathvariant="bold">&#923;</mml:mo><mml:mn>2</mml:mn></mml:msub><mml:mo stretchy="false">&#8741;</mml:mo></mml:mrow><mml:mrow><mml:mi mathvariant="normal">F</mml:mi></mml:mrow><mml:mn>2</mml:mn></mml:msubsup><mml:mo>,</mml:mo></mml:mrow></mml:mtd></mml:mtr></mml:mtable></mml:mrow></mml:math></disp-formula>
where <inline-formula><mml:math id="mm139" overflow="scroll"><mml:mrow><mml:msub><mml:mi>&#956;</mml:mi><mml:mn>1</mml:mn></mml:msub></mml:mrow></mml:math></inline-formula>, <inline-formula><mml:math id="mm140" overflow="scroll"><mml:mrow><mml:msub><mml:mi>&#956;</mml:mi><mml:mn>2</mml:mn></mml:msub></mml:mrow></mml:math></inline-formula> are penalty parameters and <inline-formula><mml:math id="mm141" overflow="scroll"><mml:mrow><mml:msub><mml:mo mathvariant="bold">&#923;</mml:mo><mml:mn>1</mml:mn></mml:msub></mml:mrow></mml:math></inline-formula>, <inline-formula><mml:math id="mm142" overflow="scroll"><mml:mrow><mml:msub><mml:mo mathvariant="bold">&#923;</mml:mo><mml:mn>2</mml:mn></mml:msub></mml:mrow></mml:math></inline-formula> are Lagrangian multipliers.</p><p>The ADMM is implemented by equating the derivative of the objective function in (<xref rid="FD21-sensors-25-05583" ref-type="disp-formula">21</xref>) with respect to each variable to be zero. Therefore, the algorithm iterates the following&#160;steps: &#160;&#160;<disp-formula id="FD22-sensors-25-05583"><label>(22)</label><mml:math id="mm143" display="block" overflow="scroll"><mml:mrow><mml:mtable displaystyle="true"><mml:mtr><mml:mtd columnalign="right"><mml:mrow><mml:msubsup><mml:mi mathvariant="bold-italic">Q</mml:mi><mml:mn>1</mml:mn><mml:mrow><mml:mi>l</mml:mi><mml:mo>+</mml:mo><mml:mn>1</mml:mn></mml:mrow></mml:msubsup><mml:mo>=</mml:mo><mml:msub><mml:mi mathvariant="script">P</mml:mi><mml:msub><mml:mi mathvariant="double-struck">S</mml:mi><mml:mo>+</mml:mo></mml:msub></mml:msub><mml:mrow><mml:mo stretchy="false">(</mml:mo></mml:mrow><mml:mfenced open="[" close="]"><mml:mtable><mml:mtr><mml:mtd><mml:msup><mml:mi mathvariant="bold-italic">X</mml:mi><mml:mi>l</mml:mi></mml:msup></mml:mtd><mml:mtd><mml:msup><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:msup><mml:mi mathvariant="bold-italic">Z</mml:mi><mml:mi>l</mml:mi></mml:msup><mml:mo stretchy="false">)</mml:mo></mml:mrow><mml:mi>H</mml:mi></mml:msup></mml:mtd></mml:mtr><mml:mtr><mml:mtd><mml:msup><mml:mi mathvariant="bold-italic">Z</mml:mi><mml:mi>l</mml:mi></mml:msup></mml:mtd><mml:mtd><mml:msup><mml:mi mathvariant="bold-italic">R</mml:mi><mml:mi>l</mml:mi></mml:msup></mml:mtd></mml:mtr></mml:mtable></mml:mfenced><mml:mspace width="1.em"/></mml:mrow></mml:mtd><mml:mtd columnalign="left"><mml:mrow><mml:mo>&#8722;</mml:mo><mml:msubsup><mml:mi>&#956;</mml:mi><mml:mn>1</mml:mn><mml:mrow><mml:mo>&#8722;</mml:mo><mml:mn>1</mml:mn></mml:mrow></mml:msubsup><mml:msubsup><mml:mo mathvariant="bold">&#923;</mml:mo><mml:mn>1</mml:mn><mml:mi>l</mml:mi></mml:msubsup><mml:mrow><mml:mo stretchy="false">)</mml:mo><mml:mo>,</mml:mo><mml:mspace width="1.em"/></mml:mrow><mml:msubsup><mml:mi mathvariant="bold-italic">Q</mml:mi><mml:mn>2</mml:mn><mml:mrow><mml:mi>l</mml:mi><mml:mo>+</mml:mo><mml:mn>1</mml:mn></mml:mrow></mml:msubsup><mml:mo>=</mml:mo><mml:msub><mml:mi mathvariant="script">P</mml:mi><mml:msub><mml:mi mathvariant="double-struck">S</mml:mi><mml:mo>+</mml:mo></mml:msub></mml:msub><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:msubsup><mml:mi mathvariant="bold-italic">T</mml:mi><mml:mn>2</mml:mn><mml:mi>l</mml:mi></mml:msubsup><mml:mo>&#8722;</mml:mo><mml:msubsup><mml:mi>&#956;</mml:mi><mml:mn>2</mml:mn><mml:mrow><mml:mo>&#8722;</mml:mo><mml:mn>1</mml:mn></mml:mrow></mml:msubsup><mml:msubsup><mml:mo mathvariant="bold">&#923;</mml:mo><mml:mn>2</mml:mn><mml:mi>l</mml:mi></mml:msubsup><mml:mo stretchy="false">)</mml:mo></mml:mrow><mml:mo>,</mml:mo></mml:mrow></mml:mtd></mml:mtr><mml:mtr><mml:mtd columnalign="right"><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:msup><mml:mi mathvariant="bold-italic">X</mml:mi><mml:mrow><mml:mi>l</mml:mi><mml:mo>+</mml:mo><mml:mn>1</mml:mn></mml:mrow></mml:msup><mml:mo>,</mml:mo><mml:msup><mml:mi mathvariant="bold-italic">Z</mml:mi><mml:mrow><mml:mi>l</mml:mi><mml:mo>+</mml:mo><mml:mn>1</mml:mn></mml:mrow></mml:msup><mml:mo>,</mml:mo><mml:msup><mml:mi mathvariant="bold-italic">T</mml:mi><mml:mrow><mml:mi>l</mml:mi><mml:mo>+</mml:mo><mml:mn>1</mml:mn></mml:mrow></mml:msup><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:mtd><mml:mtd columnalign="left"><mml:mrow><mml:mo>=</mml:mo><mml:munder><mml:mrow><mml:mi>arg</mml:mi><mml:mi>min</mml:mi></mml:mrow><mml:mrow><mml:mi mathvariant="bold-italic">X</mml:mi><mml:mo>,</mml:mo><mml:mi mathvariant="bold-italic">Z</mml:mi><mml:mo>,</mml:mo><mml:mi mathvariant="bold-italic">T</mml:mi></mml:mrow></mml:munder><mml:mi mathvariant="script">L</mml:mi><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:msubsup><mml:mi mathvariant="bold-italic">Q</mml:mi><mml:mn>1</mml:mn><mml:mrow><mml:mi>l</mml:mi><mml:mo>+</mml:mo><mml:mn>1</mml:mn></mml:mrow></mml:msubsup><mml:mo>,</mml:mo><mml:msubsup><mml:mi mathvariant="bold-italic">Q</mml:mi><mml:mn>2</mml:mn><mml:mrow><mml:mi>l</mml:mi><mml:mo>+</mml:mo><mml:mn>1</mml:mn></mml:mrow></mml:msubsup><mml:mo>,</mml:mo><mml:mi mathvariant="bold-italic">X</mml:mi><mml:mo>,</mml:mo><mml:mi mathvariant="bold-italic">Z</mml:mi><mml:mo>,</mml:mo><mml:mi mathvariant="bold-italic">T</mml:mi><mml:mo>,</mml:mo><mml:msubsup><mml:mo mathvariant="bold">&#923;</mml:mo><mml:mn>1</mml:mn><mml:mi>l</mml:mi></mml:msubsup><mml:mo>,</mml:mo><mml:msubsup><mml:mo mathvariant="bold">&#923;</mml:mo><mml:mn>2</mml:mn><mml:mi>l</mml:mi></mml:msubsup><mml:mo stretchy="false">)</mml:mo></mml:mrow><mml:mo>,</mml:mo></mml:mrow></mml:mtd></mml:mtr><mml:mtr><mml:mtd columnalign="right"><mml:msubsup><mml:mo mathvariant="bold">&#923;</mml:mo><mml:mn>1</mml:mn><mml:mrow><mml:mi>l</mml:mi><mml:mo>+</mml:mo><mml:mn>1</mml:mn></mml:mrow></mml:msubsup></mml:mtd><mml:mtd columnalign="left"><mml:mrow><mml:mo>=</mml:mo><mml:msubsup><mml:mo mathvariant="bold">&#923;</mml:mo><mml:mn>1</mml:mn><mml:mi>l</mml:mi></mml:msubsup><mml:mo>+</mml:mo><mml:msub><mml:mi>&#956;</mml:mi><mml:mn>1</mml:mn></mml:msub><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:msubsup><mml:mi mathvariant="bold-italic">Q</mml:mi><mml:mn>1</mml:mn><mml:mrow><mml:mi>l</mml:mi><mml:mo>+</mml:mo><mml:mn>1</mml:mn></mml:mrow></mml:msubsup><mml:mo>&#8722;</mml:mo><mml:mfenced open="[" close="]"><mml:mtable><mml:mtr><mml:mtd><mml:msup><mml:mi mathvariant="bold-italic">X</mml:mi><mml:mrow><mml:mi>l</mml:mi><mml:mo>+</mml:mo><mml:mn>1</mml:mn></mml:mrow></mml:msup></mml:mtd><mml:mtd><mml:msup><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:msup><mml:mi mathvariant="bold-italic">Z</mml:mi><mml:mrow><mml:mi>l</mml:mi><mml:mo>+</mml:mo><mml:mn>1</mml:mn></mml:mrow></mml:msup><mml:mo stretchy="false">)</mml:mo></mml:mrow><mml:mi>H</mml:mi></mml:msup></mml:mtd></mml:mtr><mml:mtr><mml:mtd><mml:msup><mml:mi mathvariant="bold-italic">Z</mml:mi><mml:mrow><mml:mi>l</mml:mi><mml:mo>+</mml:mo><mml:mn>1</mml:mn></mml:mrow></mml:msup></mml:mtd><mml:mtd><mml:msup><mml:mi mathvariant="bold-italic">R</mml:mi><mml:mrow><mml:mi>l</mml:mi><mml:mo>+</mml:mo><mml:mn>1</mml:mn></mml:mrow></mml:msup></mml:mtd></mml:mtr></mml:mtable></mml:mfenced><mml:mo stretchy="false">)</mml:mo></mml:mrow><mml:mo>,</mml:mo></mml:mrow></mml:mtd></mml:mtr><mml:mtr><mml:mtd columnalign="right"><mml:msubsup><mml:mo mathvariant="bold">&#923;</mml:mo><mml:mn>2</mml:mn><mml:mrow><mml:mi>l</mml:mi><mml:mo>+</mml:mo><mml:mn>1</mml:mn></mml:mrow></mml:msubsup></mml:mtd><mml:mtd columnalign="left"><mml:mrow><mml:mo>=</mml:mo><mml:msubsup><mml:mo mathvariant="bold">&#923;</mml:mo><mml:mn>2</mml:mn><mml:mi>l</mml:mi></mml:msubsup><mml:mo>+</mml:mo><mml:msub><mml:mi>&#956;</mml:mi><mml:mn>2</mml:mn></mml:msub><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:msubsup><mml:mi mathvariant="bold-italic">Q</mml:mi><mml:mn>2</mml:mn><mml:mrow><mml:mi>l</mml:mi><mml:mo>+</mml:mo><mml:mn>1</mml:mn></mml:mrow></mml:msubsup><mml:mo>&#8722;</mml:mo><mml:msubsup><mml:mi mathvariant="bold-italic">T</mml:mi><mml:mn>2</mml:mn><mml:mrow><mml:mi>l</mml:mi><mml:mo>+</mml:mo><mml:mn>1</mml:mn></mml:mrow></mml:msubsup><mml:mo stretchy="false">)</mml:mo></mml:mrow><mml:mo>,</mml:mo></mml:mrow></mml:mtd></mml:mtr></mml:mtable></mml:mrow></mml:math></disp-formula>
where <inline-formula><mml:math id="mm144" overflow="scroll"><mml:mrow><mml:mrow><mml:msub><mml:mi mathvariant="script">P</mml:mi><mml:msub><mml:mi mathvariant="double-struck">S</mml:mi><mml:mo>+</mml:mo></mml:msub></mml:msub><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mo>&#183;</mml:mo><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:mrow></mml:mrow></mml:math></inline-formula> is the projection onto the set of PSD matrices and it is implemented by eigendecomposition with only positive eigenvalues preserved. The iteration is terminated when primal residuals <inline-formula><mml:math id="mm145" overflow="scroll"><mml:mrow><mml:msub><mml:mi>&#1013;</mml:mi><mml:mi>p</mml:mi></mml:msub></mml:mrow></mml:math></inline-formula> and dual residuals <inline-formula><mml:math id="mm146" overflow="scroll"><mml:mrow><mml:msub><mml:mi>&#1013;</mml:mi><mml:mi>d</mml:mi></mml:msub></mml:mrow></mml:math></inline-formula> satisfy the stopping criteria [<xref rid="B44-sensors-25-05583" ref-type="bibr">44</xref>], i.e., <inline-formula><mml:math id="mm147" overflow="scroll"><mml:mrow><mml:mrow><mml:msub><mml:mi>&#1013;</mml:mi><mml:mi>p</mml:mi></mml:msub><mml:mo>&lt;</mml:mo><mml:msup><mml:mi>&#1013;</mml:mi><mml:mi>pri</mml:mi></mml:msup><mml:mo>,</mml:mo><mml:msub><mml:mi>&#1013;</mml:mi><mml:mi>d</mml:mi></mml:msub><mml:mo>&lt;</mml:mo><mml:msup><mml:mi>&#1013;</mml:mi><mml:mi>dual</mml:mi></mml:msup></mml:mrow></mml:mrow></mml:math></inline-formula>, or the number of iterations reaches a pre-defined limit. The closed-form solutions for <inline-formula><mml:math id="mm148" overflow="scroll"><mml:mrow><mml:mrow><mml:mi mathvariant="bold-italic">X</mml:mi><mml:mo>,</mml:mo><mml:mi mathvariant="bold-italic">Z</mml:mi><mml:mo>,</mml:mo><mml:mi>a</mml:mi><mml:mi>n</mml:mi><mml:mi>d</mml:mi><mml:mo>&#160;</mml:mo><mml:mi mathvariant="bold-italic">T</mml:mi></mml:mrow></mml:mrow></mml:math></inline-formula> in (<xref rid="FD22-sensors-25-05583" ref-type="disp-formula">22</xref>) are provided in the next section.</p></sec><sec id="sec4dot2-sensors-25-05583"><title>4.2. Closed-Form Solution of Subproblem</title><p>Write the Hermitian matrix <inline-formula><mml:math id="mm149" overflow="scroll"><mml:mrow><mml:msub><mml:mi mathvariant="bold-italic">Q</mml:mi><mml:mn>1</mml:mn></mml:msub></mml:mrow></mml:math></inline-formula> as follows:<disp-formula id="FD23-sensors-25-05583"><label>(23)</label><mml:math id="mm150" display="block" overflow="scroll"><mml:mrow><mml:mtable displaystyle="true"><mml:mtr><mml:mtd columnalign="right"><mml:mrow><mml:msub><mml:mi mathvariant="bold-italic">Q</mml:mi><mml:mn>1</mml:mn></mml:msub><mml:mo>=</mml:mo><mml:mfenced open="[" close="]"><mml:mtable><mml:mtr><mml:mtd><mml:msub><mml:mi mathvariant="bold-italic">Q</mml:mi><mml:mn>11</mml:mn></mml:msub></mml:mtd><mml:mtd><mml:msubsup><mml:mi mathvariant="bold-italic">Q</mml:mi><mml:mrow><mml:mn>21</mml:mn></mml:mrow><mml:mi>H</mml:mi></mml:msubsup></mml:mtd></mml:mtr><mml:mtr><mml:mtd><mml:msub><mml:mi mathvariant="bold-italic">Q</mml:mi><mml:mn>21</mml:mn></mml:msub></mml:mtd><mml:mtd><mml:msub><mml:mi mathvariant="bold-italic">Q</mml:mi><mml:mn>22</mml:mn></mml:msub></mml:mtd></mml:mtr></mml:mtable></mml:mfenced><mml:mo>,</mml:mo></mml:mrow></mml:mtd></mml:mtr></mml:mtable></mml:mrow></mml:math></disp-formula>
and the matrix <inline-formula><mml:math id="mm151" overflow="scroll"><mml:mrow><mml:msub><mml:mo mathvariant="bold">&#923;</mml:mo><mml:mn>1</mml:mn></mml:msub></mml:mrow></mml:math></inline-formula> is partitioned similarly.</p><p>Since the variables <inline-formula><mml:math id="mm152" overflow="scroll"><mml:mrow><mml:mi mathvariant="bold-italic">X</mml:mi></mml:mrow></mml:math></inline-formula>, <inline-formula><mml:math id="mm153" overflow="scroll"><mml:mrow><mml:mi mathvariant="bold-italic">Z</mml:mi></mml:mrow></mml:math></inline-formula>, and <inline-formula><mml:math id="mm154" overflow="scroll"><mml:mrow><mml:mi mathvariant="bold-italic">T</mml:mi></mml:mrow></mml:math></inline-formula> are separable, they can be separately calculated by solving subproblems in (<xref rid="FD22-sensors-25-05583" ref-type="disp-formula">22</xref>) with other variables fixed. Then we can get the solution in closed form via equating the derivative of the objective function with respect to <inline-formula><mml:math id="mm155" overflow="scroll"><mml:mrow><mml:mrow><mml:mo>{</mml:mo><mml:mi mathvariant="bold-italic">X</mml:mi><mml:mo>,</mml:mo><mml:mi mathvariant="bold-italic">Z</mml:mi><mml:mo>}</mml:mo></mml:mrow></mml:mrow></mml:math></inline-formula> to be zero as follows:<disp-formula id="FD24-sensors-25-05583"><label>(24)</label><mml:math id="mm156" display="block" overflow="scroll"><mml:mrow><mml:mtable displaystyle="true"><mml:mtr><mml:mtd columnalign="right"><mml:mrow><mml:msup><mml:mi mathvariant="bold-italic">X</mml:mi><mml:mrow><mml:mi>l</mml:mi><mml:mo>+</mml:mo><mml:mn>1</mml:mn></mml:mrow></mml:msup><mml:mo>=</mml:mo><mml:msubsup><mml:mi mathvariant="bold-italic">Q</mml:mi><mml:mrow><mml:mn>11</mml:mn></mml:mrow><mml:mrow><mml:mi>l</mml:mi><mml:mo>+</mml:mo><mml:mn>1</mml:mn></mml:mrow></mml:msubsup><mml:mo>+</mml:mo><mml:msubsup><mml:mi>&#956;</mml:mi><mml:mn>1</mml:mn><mml:mrow><mml:mo>&#8722;</mml:mo><mml:mn>1</mml:mn></mml:mrow></mml:msubsup><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:msubsup><mml:mo mathvariant="bold">&#923;</mml:mo><mml:mrow><mml:mn>11</mml:mn></mml:mrow><mml:mi>l</mml:mi></mml:msubsup><mml:mo>&#8722;</mml:mo><mml:msub><mml:mi mathvariant="bold-italic">I</mml:mi><mml:mi>M</mml:mi></mml:msub><mml:mo>/</mml:mo><mml:mn>2</mml:mn><mml:mo stretchy="false">)</mml:mo></mml:mrow><mml:mo>,</mml:mo></mml:mrow></mml:mtd></mml:mtr></mml:mtable></mml:mrow></mml:math></disp-formula><disp-formula id="FD25-sensors-25-05583"><label>(25)</label><mml:math id="mm157" display="block" overflow="scroll"><mml:mrow><mml:mtable displaystyle="true"><mml:mtr><mml:mtd columnalign="right"><mml:mrow><mml:msup><mml:mi mathvariant="bold-italic">Z</mml:mi><mml:mrow><mml:mi>l</mml:mi><mml:mo>+</mml:mo><mml:mn>1</mml:mn></mml:mrow></mml:msup><mml:mspace width="-0.166667em"/><mml:mo>=</mml:mo><mml:mspace width="-0.166667em"/><mml:msup><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mo>&#931;</mml:mo><mml:mo>&#8722;</mml:mo><mml:msub><mml:mi>&#956;</mml:mi><mml:mn>1</mml:mn></mml:msub><mml:mi mathvariant="bold-italic">I</mml:mi><mml:mo stretchy="false">)</mml:mo></mml:mrow><mml:mrow><mml:mo>&#8722;</mml:mo><mml:mn>1</mml:mn></mml:mrow></mml:msup><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mo>&#931;</mml:mo><mml:msup><mml:mover accent="true"><mml:mi mathvariant="bold-italic">R</mml:mi><mml:mo stretchy="false">&#732;</mml:mo></mml:mover><mml:mfrac><mml:mn>1</mml:mn><mml:mn>2</mml:mn></mml:mfrac></mml:msup><mml:mo>&#8722;</mml:mo><mml:msub><mml:mi>&#956;</mml:mi><mml:mn>1</mml:mn></mml:msub><mml:msubsup><mml:mi mathvariant="bold-italic">Q</mml:mi><mml:mrow><mml:mn>21</mml:mn></mml:mrow><mml:mrow><mml:mi>l</mml:mi><mml:mo>+</mml:mo><mml:mn>1</mml:mn></mml:mrow></mml:msubsup><mml:mo>&#8722;</mml:mo><mml:msubsup><mml:mo mathvariant="bold">&#923;</mml:mo><mml:mrow><mml:mn>21</mml:mn></mml:mrow><mml:mi>l</mml:mi></mml:msubsup><mml:mo stretchy="false">)</mml:mo></mml:mrow><mml:mo>,</mml:mo></mml:mrow></mml:mtd></mml:mtr></mml:mtable></mml:mrow></mml:math></disp-formula>
where <inline-formula><mml:math id="mm158" overflow="scroll"><mml:mrow><mml:mo>&#931;</mml:mo></mml:mrow></mml:math></inline-formula> is a diagonal matrix with the <italic toggle="yes">i</italic>-th element as follows:<disp-formula id="FD26-sensors-25-05583"><label>(26)</label><mml:math id="mm159" display="block" overflow="scroll"><mml:mrow><mml:mtable displaystyle="true"><mml:mtr><mml:mtd columnalign="right"><mml:mrow><mml:msub><mml:mi>&#951;</mml:mi><mml:mi>i</mml:mi></mml:msub><mml:mo>=</mml:mo><mml:mo>&#8722;</mml:mo><mml:mstyle scriptlevel="0" displaystyle="true"><mml:mfrac><mml:msqrt><mml:msub><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:msup><mml:mover accent="true"><mml:mi mathvariant="bold-italic">R</mml:mi><mml:mo stretchy="false">&#732;</mml:mo></mml:mover><mml:mrow><mml:mo>&#8722;</mml:mo><mml:mn>1</mml:mn></mml:mrow></mml:msup><mml:mo stretchy="false">)</mml:mo></mml:mrow><mml:mrow><mml:mi>i</mml:mi><mml:mo>,</mml:mo><mml:mi>i</mml:mi></mml:mrow></mml:msub></mml:msqrt><mml:mrow><mml:mrow><mml:mn>2</mml:mn><mml:mo stretchy="false">&#8741;</mml:mo></mml:mrow><mml:msub><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:msup><mml:mover accent="true"><mml:mi mathvariant="bold-italic">R</mml:mi><mml:mo stretchy="false">&#732;</mml:mo></mml:mover><mml:mfrac><mml:mn>1</mml:mn><mml:mn>2</mml:mn></mml:mfrac></mml:msup><mml:mo>&#8722;</mml:mo><mml:mi mathvariant="bold-italic">Z</mml:mi><mml:mo stretchy="false">)</mml:mo></mml:mrow><mml:mrow><mml:mi>i</mml:mi><mml:mo>,</mml:mo><mml:mo>:</mml:mo></mml:mrow></mml:msub><mml:msub><mml:mrow><mml:mo stretchy="false">&#8741;</mml:mo></mml:mrow><mml:mn>2</mml:mn></mml:msub></mml:mrow></mml:mfrac></mml:mstyle><mml:mo>,</mml:mo></mml:mrow></mml:mtd></mml:mtr></mml:mtable></mml:mrow></mml:math></disp-formula>
and we may use <inline-formula><mml:math id="mm160" overflow="scroll"><mml:mrow><mml:msup><mml:mi mathvariant="bold-italic">Z</mml:mi><mml:mi>l</mml:mi></mml:msup></mml:mrow></mml:math></inline-formula> here as an approximation.</p><p>Since elements of <inline-formula><mml:math id="mm161" overflow="scroll"><mml:mrow><mml:mi mathvariant="bold-italic">T</mml:mi></mml:mrow></mml:math></inline-formula> depend on both <inline-formula><mml:math id="mm162" overflow="scroll"><mml:mrow><mml:mi mathvariant="bold-italic">R</mml:mi></mml:mrow></mml:math></inline-formula> and <inline-formula><mml:math id="mm163" overflow="scroll"><mml:mrow><mml:msub><mml:mi mathvariant="bold-italic">T</mml:mi><mml:mn>2</mml:mn></mml:msub></mml:mrow></mml:math></inline-formula>, the subproblem is written as follows:<disp-formula id="FD27-sensors-25-05583"><label>(27)</label><mml:math id="mm164" display="block" overflow="scroll"><mml:mrow><mml:mtable displaystyle="true"><mml:mtr><mml:mtd columnalign="right"><mml:msup><mml:mi mathvariant="bold-italic">T</mml:mi><mml:mrow><mml:mi>l</mml:mi><mml:mo>+</mml:mo><mml:mn>1</mml:mn></mml:mrow></mml:msup></mml:mtd><mml:mtd columnalign="left"><mml:mrow><mml:mo>=</mml:mo><mml:munder><mml:mrow><mml:mi>arg</mml:mi><mml:mi>min</mml:mi></mml:mrow><mml:mi mathvariant="bold-italic">T</mml:mi></mml:munder><mml:mi>tr</mml:mi><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:msup><mml:mover accent="true"><mml:mi mathvariant="bold-italic">R</mml:mi><mml:mo stretchy="false">&#732;</mml:mo></mml:mover><mml:mrow><mml:mo>&#8722;</mml:mo><mml:mn>1</mml:mn></mml:mrow></mml:msup><mml:mi mathvariant="bold-italic">R</mml:mi><mml:mo stretchy="false">)</mml:mo></mml:mrow><mml:mo>+</mml:mo><mml:msub><mml:mi>&#956;</mml:mi><mml:mn>1</mml:mn></mml:msub><mml:msubsup><mml:mrow><mml:mo stretchy="false">&#8741;</mml:mo><mml:msubsup><mml:mi mathvariant="bold-italic">Q</mml:mi><mml:mrow><mml:mn>22</mml:mn></mml:mrow><mml:mrow><mml:mi>l</mml:mi><mml:mo>+</mml:mo><mml:mn>1</mml:mn></mml:mrow></mml:msubsup><mml:mo>&#8722;</mml:mo><mml:mi mathvariant="bold-italic">R</mml:mi><mml:mo>+</mml:mo><mml:msubsup><mml:mi>&#956;</mml:mi><mml:mn>1</mml:mn><mml:mrow><mml:mo>&#8722;</mml:mo><mml:mn>1</mml:mn></mml:mrow></mml:msubsup><mml:msubsup><mml:mo mathvariant="bold">&#923;</mml:mo><mml:mrow><mml:mn>22</mml:mn></mml:mrow><mml:mi>l</mml:mi></mml:msubsup><mml:mo stretchy="false">&#8741;</mml:mo></mml:mrow><mml:mrow><mml:mi mathvariant="normal">F</mml:mi></mml:mrow><mml:mn>2</mml:mn></mml:msubsup></mml:mrow></mml:mtd></mml:mtr><mml:mtr><mml:mtd/><mml:mtd columnalign="left"><mml:mrow><mml:mo>+</mml:mo><mml:msub><mml:mi>&#956;</mml:mi><mml:mn>2</mml:mn></mml:msub><mml:msubsup><mml:mrow><mml:mo stretchy="false">&#8741;</mml:mo><mml:msubsup><mml:mi mathvariant="bold-italic">Q</mml:mi><mml:mn>2</mml:mn><mml:mrow><mml:mi>l</mml:mi><mml:mo>+</mml:mo><mml:mn>1</mml:mn></mml:mrow></mml:msubsup><mml:mo>&#8722;</mml:mo><mml:msub><mml:mi mathvariant="bold-italic">T</mml:mi><mml:mn>2</mml:mn></mml:msub><mml:mo>+</mml:mo><mml:msubsup><mml:mi>&#956;</mml:mi><mml:mn>2</mml:mn><mml:mrow><mml:mo>&#8722;</mml:mo><mml:mn>1</mml:mn></mml:mrow></mml:msubsup><mml:msubsup><mml:mo mathvariant="bold">&#923;</mml:mo><mml:mn>2</mml:mn><mml:mi>l</mml:mi></mml:msubsup><mml:mo stretchy="false">&#8741;</mml:mo></mml:mrow><mml:mrow><mml:mi mathvariant="normal">F</mml:mi></mml:mrow><mml:mn>2</mml:mn></mml:msubsup><mml:mo>.</mml:mo></mml:mrow></mml:mtd></mml:mtr></mml:mtable></mml:mrow></mml:math></disp-formula></p><p>The variables <inline-formula><mml:math id="mm165" overflow="scroll"><mml:mrow><mml:mrow><mml:mi mathvariant="bold-italic">u</mml:mi><mml:mo>=</mml:mo><mml:msup><mml:mfenced open="[" close="]"><mml:mtable><mml:mtr><mml:mtd><mml:mrow><mml:msubsup><mml:mi mathvariant="bold-italic">u</mml:mi><mml:mn>1</mml:mn><mml:mi>T</mml:mi></mml:msubsup><mml:mo>,</mml:mo><mml:msubsup><mml:mi mathvariant="bold-italic">u</mml:mi><mml:mn>2</mml:mn><mml:mi>T</mml:mi></mml:msubsup></mml:mrow></mml:mtd></mml:mtr></mml:mtable></mml:mfenced><mml:mi>T</mml:mi></mml:msup></mml:mrow></mml:mrow></mml:math></inline-formula> in <inline-formula><mml:math id="mm166" overflow="scroll"><mml:mrow><mml:mi mathvariant="bold-italic">R</mml:mi></mml:mrow></mml:math></inline-formula> can be represented as follows:<disp-formula id="FD28-sensors-25-05583"><label>(28)</label><mml:math id="mm167" display="block" overflow="scroll"><mml:mrow><mml:mtable displaystyle="true"><mml:mtr><mml:mtd columnalign="right"><mml:msub><mml:mi mathvariant="bold-italic">u</mml:mi><mml:mn>1</mml:mn></mml:msub></mml:mtd><mml:mtd columnalign="left"><mml:mrow><mml:mo>=</mml:mo><mml:msub><mml:mi mathvariant="bold-italic">R</mml:mi><mml:mi>x</mml:mi></mml:msub><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mo>:</mml:mo><mml:mo>,</mml:mo><mml:mn>1</mml:mn><mml:mo stretchy="false">)</mml:mo></mml:mrow><mml:mo>=</mml:mo><mml:msup><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:msub><mml:mi mathvariant="bold-italic">T</mml:mi><mml:mrow><mml:mn>1</mml:mn><mml:mo>,</mml:mo><mml:msub><mml:mi>M</mml:mi><mml:mn>1</mml:mn></mml:msub><mml:mo>:</mml:mo><mml:mo>&#8722;</mml:mo><mml:mn>1</mml:mn><mml:mo>:</mml:mo><mml:mn>1</mml:mn></mml:mrow></mml:msub><mml:mo stretchy="false">)</mml:mo></mml:mrow><mml:mi>T</mml:mi></mml:msup><mml:mo>,</mml:mo><mml:mspace width="1.em"/><mml:msub><mml:mi mathvariant="bold-italic">u</mml:mi><mml:mn>2</mml:mn></mml:msub><mml:mo>=</mml:mo><mml:mi>vec</mml:mi><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:msubsup><mml:mi mathvariant="bold-italic">R</mml:mi><mml:mrow><mml:mi>x</mml:mi><mml:mi>z</mml:mi></mml:mrow><mml:mi>H</mml:mi></mml:msubsup><mml:mo stretchy="false">)</mml:mo></mml:mrow><mml:mo>=</mml:mo><mml:mi>vec</mml:mi><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:msub><mml:mi mathvariant="bold-italic">T</mml:mi><mml:mrow><mml:mn>2</mml:mn><mml:mo>:</mml:mo><mml:msub><mml:mi>M</mml:mi><mml:mn>2</mml:mn></mml:msub><mml:mo>,</mml:mo><mml:msub><mml:mi>M</mml:mi><mml:mn>1</mml:mn></mml:msub><mml:mo>:</mml:mo><mml:mn>2</mml:mn><mml:msub><mml:mi>M</mml:mi><mml:mn>1</mml:mn></mml:msub><mml:mo>&#8722;</mml:mo><mml:mn>1</mml:mn></mml:mrow></mml:msub><mml:mo stretchy="false">)</mml:mo></mml:mrow><mml:mo>,</mml:mo></mml:mrow></mml:mtd></mml:mtr></mml:mtable></mml:mrow></mml:math></disp-formula>
and <inline-formula><mml:math id="mm168" overflow="scroll"><mml:mrow><mml:mrow><mml:msub><mml:mi mathvariant="bold-italic">R</mml:mi><mml:mi>z</mml:mi></mml:msub><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mo>:</mml:mo><mml:mo>,</mml:mo><mml:mn>1</mml:mn><mml:mo stretchy="false">)</mml:mo></mml:mrow><mml:mo>=</mml:mo><mml:msup><mml:mrow><mml:mo>[</mml:mo><mml:msub><mml:mi mathvariant="bold-italic">u</mml:mi><mml:mn>1</mml:mn></mml:msub><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mn>1</mml:mn><mml:mo stretchy="false">)</mml:mo></mml:mrow><mml:mo>,</mml:mo><mml:msub><mml:mi mathvariant="bold-italic">u</mml:mi><mml:mn>2</mml:mn></mml:msub><mml:msup><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mn>1</mml:mn><mml:mo>:</mml:mo><mml:msub><mml:mi>M</mml:mi><mml:mn>2</mml:mn></mml:msub><mml:mo>&#8722;</mml:mo><mml:mn>2</mml:mn><mml:mo stretchy="false">)</mml:mo></mml:mrow><mml:mi>T</mml:mi></mml:msup><mml:mo>]</mml:mo></mml:mrow><mml:mi>T</mml:mi></mml:msup></mml:mrow></mml:mrow></mml:math></inline-formula>. Suppose <inline-formula><mml:math id="mm169" overflow="scroll"><mml:mrow><mml:mrow><mml:mi mathvariant="script">R</mml:mi><mml:mo stretchy="false">(</mml:mo><mml:mo>&#183;</mml:mo><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:mrow></mml:math></inline-formula> is the adjoint operator with<disp-formula id="FD29-sensors-25-05583"><label>(29)</label><mml:math id="mm170" display="block" overflow="scroll"><mml:mrow><mml:mtable displaystyle="true"><mml:mtr><mml:mtd columnalign="right"><mml:mrow><mml:mi>tr</mml:mi><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mi mathvariant="bold-italic">G</mml:mi><mml:mi mathvariant="bold-italic">R</mml:mi><mml:mo stretchy="false">)</mml:mo></mml:mrow><mml:mo>=</mml:mo><mml:msub><mml:mrow><mml:mo>&#9001;</mml:mo><mml:mi mathvariant="script">R</mml:mi><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mi mathvariant="bold-italic">G</mml:mi><mml:mo stretchy="false">)</mml:mo></mml:mrow><mml:mo>,</mml:mo><mml:mi mathvariant="bold-italic">u</mml:mi><mml:mo>&#9002;</mml:mo></mml:mrow><mml:mi mathvariant="double-struck">R</mml:mi></mml:msub><mml:mo>,</mml:mo></mml:mrow></mml:mtd></mml:mtr></mml:mtable></mml:mrow></mml:math></disp-formula>
where <inline-formula><mml:math id="mm171" overflow="scroll"><mml:mrow><mml:mi mathvariant="bold-italic">G</mml:mi></mml:mrow></mml:math></inline-formula> is an <inline-formula><mml:math id="mm172" overflow="scroll"><mml:mrow><mml:mrow><mml:mi>M</mml:mi><mml:mo>&#215;</mml:mo><mml:mi>M</mml:mi></mml:mrow></mml:mrow></mml:math></inline-formula> Hermitian matrix, then <inline-formula><mml:math id="mm173" overflow="scroll"><mml:mrow><mml:mrow><mml:mi mathvariant="bold-italic">g</mml:mi><mml:mo>=</mml:mo><mml:mi mathvariant="script">R</mml:mi><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mi mathvariant="bold-italic">G</mml:mi><mml:mo stretchy="false">)</mml:mo></mml:mrow><mml:mo>=</mml:mo><mml:msup><mml:mfenced open="[" close="]"><mml:mtable><mml:mtr><mml:mtd><mml:mrow><mml:msubsup><mml:mi mathvariant="bold-italic">g</mml:mi><mml:mn>1</mml:mn><mml:mi>T</mml:mi></mml:msubsup><mml:mo>,</mml:mo><mml:msubsup><mml:mi mathvariant="bold-italic">g</mml:mi><mml:mn>2</mml:mn><mml:mi>T</mml:mi></mml:msubsup></mml:mrow></mml:mtd></mml:mtr></mml:mtable></mml:mfenced><mml:mi>T</mml:mi></mml:msup></mml:mrow></mml:mrow></mml:math></inline-formula> can be calculated as&#160;follows: &#160;&#160;<disp-formula id="FD30-sensors-25-05583"><label>(30)</label><mml:math id="mm174" display="block" overflow="scroll"><mml:mrow><mml:mtable displaystyle="true"><mml:mtr><mml:mtd columnalign="right"><mml:mrow><mml:msub><mml:mi mathvariant="bold-italic">g</mml:mi><mml:mn>1</mml:mn></mml:msub><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mi>l</mml:mi><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:mrow></mml:mtd><mml:mtd columnalign="left"><mml:mrow><mml:mo>=</mml:mo><mml:mfenced separators="" open="{" close=""><mml:mtable><mml:mtr><mml:mtd columnalign="left"><mml:mrow><mml:munderover><mml:mo>&#8721;</mml:mo><mml:mrow><mml:mi>i</mml:mi><mml:mo>=</mml:mo><mml:mi>j</mml:mi><mml:mo>=</mml:mo><mml:mn>1</mml:mn></mml:mrow><mml:mrow><mml:msub><mml:mi>M</mml:mi><mml:mn>1</mml:mn></mml:msub><mml:mo>+</mml:mo><mml:mn>1</mml:mn></mml:mrow></mml:munderover><mml:msub><mml:mi>G</mml:mi><mml:mrow><mml:mi>i</mml:mi><mml:mo>,</mml:mo><mml:mi>j</mml:mi></mml:mrow></mml:msub><mml:mo>,</mml:mo></mml:mrow></mml:mtd><mml:mtd columnalign="left"><mml:mrow><mml:mi>l</mml:mi><mml:mo>=</mml:mo><mml:mn>1</mml:mn></mml:mrow></mml:mtd></mml:mtr><mml:mtr><mml:mtd columnalign="left"><mml:mrow><mml:munder><mml:mo>&#8721;</mml:mo><mml:mrow><mml:mi>i</mml:mi><mml:mo>&#8722;</mml:mo><mml:mi>j</mml:mi><mml:mo>=</mml:mo><mml:mi>l</mml:mi><mml:mo>&#8722;</mml:mo><mml:mn>1</mml:mn></mml:mrow></mml:munder><mml:msub><mml:mi>G</mml:mi><mml:mrow><mml:mi>i</mml:mi><mml:mo>,</mml:mo><mml:mi>j</mml:mi></mml:mrow></mml:msub><mml:mo>,</mml:mo><mml:mspace width="0.166667em"/><mml:mspace width="0.166667em"/><mml:mi>i</mml:mi><mml:mo>,</mml:mo><mml:mi>j</mml:mi><mml:mo>&#8804;</mml:mo><mml:msub><mml:mi>M</mml:mi><mml:mn>1</mml:mn></mml:msub><mml:mo>,</mml:mo></mml:mrow></mml:mtd><mml:mtd columnalign="left"><mml:mrow><mml:mi>l</mml:mi><mml:mo>&#8712;</mml:mo><mml:mo>[</mml:mo><mml:mn>2</mml:mn><mml:mo>,</mml:mo><mml:msub><mml:mi>M</mml:mi><mml:mn>1</mml:mn></mml:msub><mml:mo>]</mml:mo></mml:mrow></mml:mtd></mml:mtr></mml:mtable></mml:mfenced><mml:mo>,</mml:mo></mml:mrow></mml:mtd></mml:mtr><mml:mtr><mml:mtd columnalign="right"><mml:mrow><mml:msub><mml:mi mathvariant="bold-italic">g</mml:mi><mml:mn>2</mml:mn></mml:msub><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mi>l</mml:mi><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:mrow></mml:mtd><mml:mtd columnalign="left"><mml:mrow><mml:mo>=</mml:mo><mml:mfenced separators="" open="{" close=""><mml:mtable><mml:mtr><mml:mtd columnalign="left"><mml:mrow><mml:munder><mml:mo>&#8721;</mml:mo><mml:mrow><mml:mi>i</mml:mi><mml:mo>&#8722;</mml:mo><mml:mi>j</mml:mi><mml:mo>=</mml:mo><mml:mi>l</mml:mi></mml:mrow></mml:munder><mml:msub><mml:mi>G</mml:mi><mml:mrow><mml:mi>i</mml:mi><mml:mo>,</mml:mo><mml:mi>j</mml:mi></mml:mrow></mml:msub><mml:mo>+</mml:mo><mml:msub><mml:mi>G</mml:mi><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:msub><mml:mi>M</mml:mi><mml:mn>1</mml:mn></mml:msub><mml:mo>+</mml:mo><mml:mi>l</mml:mi><mml:mo stretchy="false">)</mml:mo><mml:mo>,</mml:mo><mml:mn>1</mml:mn></mml:mrow></mml:msub><mml:mo>,</mml:mo><mml:mi>i</mml:mi><mml:mo>,</mml:mo><mml:mi>j</mml:mi><mml:mo>&#8805;</mml:mo><mml:msub><mml:mi>M</mml:mi><mml:mn>1</mml:mn></mml:msub><mml:mo>+</mml:mo><mml:mn>2</mml:mn><mml:mo>,</mml:mo></mml:mrow></mml:mtd><mml:mtd columnalign="left"><mml:mrow><mml:mi>l</mml:mi><mml:mo>&#8712;</mml:mo><mml:mo>[</mml:mo><mml:mn>1</mml:mn><mml:mo>,</mml:mo><mml:msub><mml:mi>M</mml:mi><mml:mn>2</mml:mn></mml:msub><mml:mo>&#8722;</mml:mo><mml:mn>2</mml:mn><mml:mo>]</mml:mo></mml:mrow></mml:mtd></mml:mtr><mml:mtr><mml:mtd columnalign="left"><mml:mrow><mml:msub><mml:mi mathvariant="bold-italic">g</mml:mi><mml:mn mathvariant="bold">0</mml:mn></mml:msub><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mi>l</mml:mi><mml:mo stretchy="false">)</mml:mo></mml:mrow><mml:mo>,</mml:mo><mml:mspace width="0.166667em"/><mml:mspace width="0.166667em"/><mml:msub><mml:mi mathvariant="bold-italic">g</mml:mi><mml:mn mathvariant="bold">0</mml:mn></mml:msub><mml:mo>=</mml:mo><mml:mi>vec</mml:mi><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:msub><mml:mi mathvariant="bold-italic">G</mml:mi><mml:mrow><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:msub><mml:mi>M</mml:mi><mml:mn>1</mml:mn></mml:msub><mml:mo>+</mml:mo><mml:mn>1</mml:mn><mml:mo stretchy="false">)</mml:mo></mml:mrow><mml:mo>:</mml:mo><mml:mi>M</mml:mi><mml:mo>,</mml:mo><mml:mn>1</mml:mn><mml:mo>:</mml:mo><mml:msub><mml:mi>M</mml:mi><mml:mn>1</mml:mn></mml:msub></mml:mrow></mml:msub><mml:mo stretchy="false">)</mml:mo></mml:mrow><mml:mo>,</mml:mo></mml:mrow></mml:mtd><mml:mtd columnalign="left"><mml:mrow><mml:mi>l</mml:mi><mml:mo>&#8805;</mml:mo><mml:msub><mml:mi>M</mml:mi><mml:mn>2</mml:mn></mml:msub><mml:mo>&#8722;</mml:mo><mml:mn>1</mml:mn></mml:mrow></mml:mtd></mml:mtr></mml:mtable></mml:mfenced><mml:mo>,</mml:mo></mml:mrow></mml:mtd></mml:mtr></mml:mtable></mml:mrow></mml:math></disp-formula>Then we reconstruct <inline-formula><mml:math id="mm175" overflow="scroll"><mml:mrow><mml:mi mathvariant="bold-italic">g</mml:mi></mml:mrow></mml:math></inline-formula> to the structure of <inline-formula><mml:math id="mm176" overflow="scroll"><mml:mrow><mml:mi mathvariant="bold-italic">T</mml:mi></mml:mrow></mml:math></inline-formula> as <inline-formula><mml:math id="mm177" overflow="scroll"><mml:mrow><mml:mrow><mml:msub><mml:mi mathvariant="script">R</mml:mi><mml:mi mathvariant="bold-italic">T</mml:mi></mml:msub><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mi mathvariant="bold-italic">G</mml:mi><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:mrow></mml:mrow></mml:math></inline-formula> according to (<xref rid="FD28-sensors-25-05583" ref-type="disp-formula">28</xref>). We can similarly define the operator <inline-formula><mml:math id="mm178" overflow="scroll"><mml:mrow><mml:mrow><mml:msub><mml:mi mathvariant="script">T</mml:mi><mml:mi mathvariant="script">N</mml:mi></mml:msub><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mo>&#183;</mml:mo><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:mrow></mml:mrow></mml:math></inline-formula> to calculate the sum of the same element in a two-level MLT matrix as (<xref rid="FD20-sensors-25-05583" ref-type="disp-formula">20</xref>) and reconstruct it to the structure of <inline-formula><mml:math id="mm179" overflow="scroll"><mml:mrow><mml:mi mathvariant="bold-italic">T</mml:mi></mml:mrow></mml:math></inline-formula>. Subsequently, the closed-form solution can be obtained by letting the derivation of the function in (<xref rid="FD27-sensors-25-05583" ref-type="disp-formula">27</xref>) be zero as follows:<disp-formula id="FD31-sensors-25-05583"><label>(31)</label><mml:math id="mm180" display="block" overflow="scroll"><mml:mrow><mml:mtable displaystyle="true"><mml:mtr><mml:mtd columnalign="right"><mml:mrow><mml:msup><mml:mi mathvariant="bold-italic">T</mml:mi><mml:mrow><mml:mi>l</mml:mi><mml:mo>+</mml:mo><mml:mn>1</mml:mn></mml:mrow></mml:msup><mml:mo>=</mml:mo><mml:msup><mml:mi mathvariant="bold-italic">D</mml:mi><mml:mrow><mml:mo>&#8728;</mml:mo><mml:mo>&#8722;</mml:mo><mml:mn>1</mml:mn></mml:mrow></mml:msup><mml:mo>&#8857;</mml:mo><mml:mrow><mml:mo>[</mml:mo><mml:msub><mml:mi mathvariant="script">R</mml:mi><mml:mi mathvariant="bold-italic">T</mml:mi></mml:msub><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:msub><mml:mi mathvariant="bold-italic">R</mml:mi><mml:mn>0</mml:mn></mml:msub><mml:mo stretchy="false">)</mml:mo></mml:mrow><mml:mo>+</mml:mo><mml:msub><mml:mi mathvariant="script">T</mml:mi><mml:mi mathvariant="script">N</mml:mi></mml:msub><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:msub><mml:mi mathvariant="bold-italic">T</mml:mi><mml:mn>0</mml:mn></mml:msub><mml:mo stretchy="false">)</mml:mo></mml:mrow><mml:mo>]</mml:mo></mml:mrow><mml:mo>,</mml:mo></mml:mrow></mml:mtd></mml:mtr><mml:mtr><mml:mtd columnalign="right"><mml:mrow><mml:msub><mml:mi mathvariant="bold-italic">R</mml:mi><mml:mn>0</mml:mn></mml:msub><mml:mo>=</mml:mo><mml:msub><mml:mi>&#956;</mml:mi><mml:mn>1</mml:mn></mml:msub><mml:msubsup><mml:mi mathvariant="bold-italic">Q</mml:mi><mml:mrow><mml:mn>22</mml:mn></mml:mrow><mml:mrow><mml:mi>l</mml:mi><mml:mo>+</mml:mo><mml:mn>1</mml:mn></mml:mrow></mml:msubsup><mml:mspace width="-0.166667em"/><mml:mo>+</mml:mo><mml:mspace width="-0.166667em"/><mml:msubsup><mml:mo mathvariant="bold">&#923;</mml:mo><mml:mrow><mml:mn>22</mml:mn></mml:mrow><mml:mi>l</mml:mi></mml:msubsup><mml:mspace width="-0.166667em"/><mml:mo>&#8722;</mml:mo><mml:mspace width="-0.166667em"/><mml:mstyle scriptlevel="0" displaystyle="true"><mml:mfrac><mml:mn>1</mml:mn><mml:mn>2</mml:mn></mml:mfrac></mml:mstyle><mml:msup><mml:mover accent="true"><mml:mi mathvariant="bold-italic">R</mml:mi><mml:mo stretchy="false">&#732;</mml:mo></mml:mover><mml:mrow><mml:mo>&#8722;</mml:mo><mml:mn>1</mml:mn></mml:mrow></mml:msup><mml:mo>,</mml:mo><mml:mspace width="1.em"/><mml:msub><mml:mi mathvariant="bold-italic">T</mml:mi><mml:mn>0</mml:mn></mml:msub><mml:mo>=</mml:mo><mml:msub><mml:mi>&#956;</mml:mi><mml:mn>2</mml:mn></mml:msub><mml:msubsup><mml:mi mathvariant="bold-italic">Q</mml:mi><mml:mn>2</mml:mn><mml:mrow><mml:mi>l</mml:mi><mml:mo>+</mml:mo><mml:mn>1</mml:mn></mml:mrow></mml:msubsup><mml:mspace width="-0.166667em"/><mml:mo>+</mml:mo><mml:mspace width="-0.166667em"/><mml:msubsup><mml:mo mathvariant="bold">&#923;</mml:mo><mml:mn>2</mml:mn><mml:mi>l</mml:mi></mml:msubsup><mml:mo>,</mml:mo></mml:mrow></mml:mtd></mml:mtr></mml:mtable></mml:mrow></mml:math></disp-formula>
where <inline-formula><mml:math id="mm181" overflow="scroll"><mml:mrow><mml:msup><mml:mi mathvariant="bold-italic">D</mml:mi><mml:mrow><mml:mo>&#8728;</mml:mo><mml:mo>&#8722;</mml:mo><mml:mn>1</mml:mn></mml:mrow></mml:msup></mml:mrow></mml:math></inline-formula> denotes the element-wise reciprocal matrix of <inline-formula><mml:math id="mm182" overflow="scroll"><mml:mrow><mml:mi mathvariant="bold-italic">D</mml:mi></mml:mrow></mml:math></inline-formula>, <inline-formula><mml:math id="mm183" overflow="scroll"><mml:mrow><mml:mrow><mml:mi mathvariant="bold-italic">D</mml:mi><mml:mo>=</mml:mo><mml:msub><mml:mi>&#956;</mml:mi><mml:mn>1</mml:mn></mml:msub><mml:msub><mml:mi mathvariant="bold-italic">D</mml:mi><mml:mn>1</mml:mn></mml:msub><mml:mo>+</mml:mo><mml:msub><mml:mi>&#956;</mml:mi><mml:mn>2</mml:mn></mml:msub><mml:msub><mml:mi mathvariant="bold-italic">D</mml:mi><mml:mn>2</mml:mn></mml:msub></mml:mrow></mml:mrow></mml:math></inline-formula>, and <inline-formula><mml:math id="mm184" overflow="scroll"><mml:mrow><mml:msub><mml:mi mathvariant="bold-italic">D</mml:mi><mml:mn>1</mml:mn></mml:msub></mml:mrow></mml:math></inline-formula>, <inline-formula><mml:math id="mm185" overflow="scroll"><mml:mrow><mml:msub><mml:mi mathvariant="bold-italic">D</mml:mi><mml:mn>2</mml:mn></mml:msub></mml:mrow></mml:math></inline-formula> are count matrices which record the number of corresponding elements in <inline-formula><mml:math id="mm186" overflow="scroll"><mml:mrow><mml:msub><mml:mi mathvariant="bold-italic">R</mml:mi><mml:mn>0</mml:mn></mml:msub></mml:mrow></mml:math></inline-formula> and <inline-formula><mml:math id="mm187" overflow="scroll"><mml:mrow><mml:msub><mml:mi mathvariant="bold-italic">T</mml:mi><mml:mn>0</mml:mn></mml:msub></mml:mrow></mml:math></inline-formula> to construct <inline-formula><mml:math id="mm188" overflow="scroll"><mml:mrow><mml:mi mathvariant="bold-italic">T</mml:mi></mml:mrow></mml:math></inline-formula>.</p><p>In summary, the proposed ADMM is presented in Algorithm 1.
<array orientation="portrait"><tbody><tr><td style="border-top:solid thin;border-bottom:solid thin" rowspan="1" colspan="1"><bold>Algorithm 1</bold>&#160;ADMM for Multidimensional Matrix Completion</td></tr><tr><td style="border-bottom:solid thin" rowspan="1" colspan="1"><bold>Input:</bold><break/>
&#160;&#160;&#160;&#160;<inline-formula><mml:math id="mm189" overflow="scroll"><mml:mrow><mml:mrow><mml:mover accent="true"><mml:mi mathvariant="bold-italic">R</mml:mi><mml:mo stretchy="false">&#732;</mml:mo></mml:mover><mml:mo>,</mml:mo><mml:msub><mml:mi>&#956;</mml:mi><mml:mn>1</mml:mn></mml:msub><mml:mo>,</mml:mo><mml:msub><mml:mi>&#956;</mml:mi><mml:mn>2</mml:mn></mml:msub></mml:mrow></mml:mrow></mml:math></inline-formula> and model order <italic toggle="yes">K</italic><break/>
<bold>Output:</bold><break/>
&#160;&#160;&#160;&#160;<inline-formula><mml:math id="mm190" overflow="scroll"><mml:mrow><mml:mrow><mml:mi mathvariant="bold-italic">&#952;</mml:mi><mml:mo>,</mml:mo><mml:mi mathvariant="bold-italic">&#981;</mml:mi></mml:mrow></mml:mrow></mml:math></inline-formula><break/>
&#160;&#160;&#160;&#160;Initialize <inline-formula><mml:math id="mm191" overflow="scroll"><mml:mrow><mml:msup><mml:mi mathvariant="bold-italic">X</mml:mi><mml:mn>0</mml:mn></mml:msup></mml:mrow></mml:math></inline-formula>,<inline-formula><mml:math id="mm192" overflow="scroll"><mml:mrow><mml:msup><mml:mi mathvariant="bold-italic">Z</mml:mi><mml:mn>0</mml:mn></mml:msup></mml:mrow></mml:math></inline-formula>,<inline-formula><mml:math id="mm193" overflow="scroll"><mml:mrow><mml:msup><mml:mi mathvariant="bold-italic">T</mml:mi><mml:mn>0</mml:mn></mml:msup></mml:mrow></mml:math></inline-formula>,<inline-formula><mml:math id="mm194" overflow="scroll"><mml:mrow><mml:mrow><mml:msubsup><mml:mo mathvariant="bold">&#923;</mml:mo><mml:mn>1</mml:mn><mml:mn>0</mml:mn></mml:msubsup><mml:mo>,</mml:mo><mml:msubsup><mml:mo mathvariant="bold">&#923;</mml:mo><mml:mn>2</mml:mn><mml:mn>0</mml:mn></mml:msubsup><mml:mo>,</mml:mo><mml:mi>l</mml:mi><mml:mo>=</mml:mo><mml:mn>0</mml:mn></mml:mrow></mml:mrow></mml:math></inline-formula>;<break/>
&#160;&#160;&#160;&#160;<bold>for</bold>&#160;
<inline-formula><mml:math id="mm195" overflow="scroll"><mml:mrow><mml:mrow><mml:mi>l</mml:mi><mml:mo>&lt;</mml:mo><mml:msub><mml:mi>l</mml:mi><mml:mi>max</mml:mi></mml:msub></mml:mrow></mml:mrow></mml:math></inline-formula>&#160;
<bold>do</bold><break/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;1: Update <inline-formula><mml:math id="mm196" overflow="scroll"><mml:mrow><mml:msubsup><mml:mi mathvariant="bold-italic">Q</mml:mi><mml:mn>1</mml:mn><mml:mrow><mml:mi>l</mml:mi><mml:mo>+</mml:mo><mml:mn>1</mml:mn></mml:mrow></mml:msubsup></mml:mrow></mml:math></inline-formula>,<inline-formula><mml:math id="mm197" overflow="scroll"><mml:mrow><mml:msubsup><mml:mi mathvariant="bold-italic">Q</mml:mi><mml:mn>2</mml:mn><mml:mrow><mml:mi>l</mml:mi><mml:mo>+</mml:mo><mml:mn>1</mml:mn></mml:mrow></mml:msubsup></mml:mrow></mml:math></inline-formula> via (<xref rid="FD22-sensors-25-05583" ref-type="disp-formula">22</xref>);<break/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;2: Update <inline-formula><mml:math id="mm198" overflow="scroll"><mml:mrow><mml:msup><mml:mi mathvariant="bold-italic">X</mml:mi><mml:mrow><mml:mi>l</mml:mi><mml:mo>+</mml:mo><mml:mn>1</mml:mn></mml:mrow></mml:msup></mml:mrow></mml:math></inline-formula> via (<xref rid="FD24-sensors-25-05583" ref-type="disp-formula">24</xref>);<break/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;3: Update <inline-formula><mml:math id="mm199" overflow="scroll"><mml:mrow><mml:msup><mml:mi mathvariant="bold-italic">Z</mml:mi><mml:mrow><mml:mi>l</mml:mi><mml:mo>+</mml:mo><mml:mn>1</mml:mn></mml:mrow></mml:msup></mml:mrow></mml:math></inline-formula> via (<xref rid="FD25-sensors-25-05583" ref-type="disp-formula">25</xref>) with <inline-formula><mml:math id="mm200" overflow="scroll"><mml:mrow><mml:mo>&#931;</mml:mo></mml:mrow></mml:math></inline-formula> set as (<xref rid="FD26-sensors-25-05583" ref-type="disp-formula">26</xref>);<break/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;4: Calculate <inline-formula><mml:math id="mm201" overflow="scroll"><mml:mrow><mml:msub><mml:mi mathvariant="bold-italic">R</mml:mi><mml:mn>0</mml:mn></mml:msub></mml:mrow></mml:math></inline-formula> and <inline-formula><mml:math id="mm202" overflow="scroll"><mml:mrow><mml:msub><mml:mi mathvariant="bold-italic">T</mml:mi><mml:mn>0</mml:mn></mml:msub></mml:mrow></mml:math></inline-formula> via (<xref rid="FD31-sensors-25-05583" ref-type="disp-formula">31</xref>);<break/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;5: Reconstruct <inline-formula><mml:math id="mm203" overflow="scroll"><mml:mrow><mml:mrow><mml:msub><mml:mi mathvariant="script">R</mml:mi><mml:mi mathvariant="bold-italic">T</mml:mi></mml:msub><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:msub><mml:mi mathvariant="bold-italic">R</mml:mi><mml:mn>0</mml:mn></mml:msub><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:mrow></mml:mrow></mml:math></inline-formula> and <inline-formula><mml:math id="mm204" overflow="scroll"><mml:mrow><mml:mrow><mml:msub><mml:mi mathvariant="script">T</mml:mi><mml:mi mathvariant="script">N</mml:mi></mml:msub><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:msub><mml:mi mathvariant="bold-italic">T</mml:mi><mml:mn>0</mml:mn></mml:msub><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:mrow></mml:mrow></mml:math></inline-formula> via (<xref rid="FD30-sensors-25-05583" ref-type="disp-formula">30</xref>) and (<xref rid="FD20-sensors-25-05583" ref-type="disp-formula">20</xref>);<break/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;6: Update <inline-formula><mml:math id="mm205" overflow="scroll"><mml:mrow><mml:msup><mml:mi mathvariant="bold-italic">T</mml:mi><mml:mrow><mml:mi>l</mml:mi><mml:mo>+</mml:mo><mml:mn>1</mml:mn></mml:mrow></mml:msup></mml:mrow></mml:math></inline-formula> via (<xref rid="FD31-sensors-25-05583" ref-type="disp-formula">31</xref>);<break/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;7: Update <inline-formula><mml:math id="mm206" overflow="scroll"><mml:mrow><mml:msup><mml:mi mathvariant="bold-italic">T</mml:mi><mml:mrow><mml:mi>l</mml:mi><mml:mo>+</mml:mo><mml:mn>1</mml:mn></mml:mrow></mml:msup></mml:mrow></mml:math></inline-formula> via (<xref rid="FD31-sensors-25-05583" ref-type="disp-formula">31</xref>);<break/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;8: Update <inline-formula><mml:math id="mm207" overflow="scroll"><mml:mrow><mml:msubsup><mml:mo mathvariant="bold">&#923;</mml:mo><mml:mn>1</mml:mn><mml:mrow><mml:mi>l</mml:mi><mml:mo>+</mml:mo><mml:mn>1</mml:mn></mml:mrow></mml:msubsup></mml:mrow></mml:math></inline-formula>,<inline-formula><mml:math id="mm208" overflow="scroll"><mml:mrow><mml:msubsup><mml:mo mathvariant="bold">&#923;</mml:mo><mml:mn>2</mml:mn><mml:mrow><mml:mi>l</mml:mi><mml:mo>+</mml:mo><mml:mn>1</mml:mn></mml:mrow></mml:msubsup></mml:mrow></mml:math></inline-formula> via (<xref rid="FD22-sensors-25-05583" ref-type="disp-formula">22</xref>);<break/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;9: <inline-formula><mml:math id="mm209" overflow="scroll"><mml:mrow><mml:mrow><mml:mi>l</mml:mi><mml:mo>&#8592;</mml:mo><mml:mi>l</mml:mi><mml:mo>+</mml:mo><mml:mn>1</mml:mn></mml:mrow></mml:mrow></mml:math></inline-formula>;<break/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<bold>if</bold>&#160;<inline-formula><mml:math id="mm210" overflow="scroll"><mml:mrow><mml:mrow><mml:msub><mml:mi>&#1013;</mml:mi><mml:mi>p</mml:mi></mml:msub><mml:mo>&#8805;</mml:mo><mml:msup><mml:mi>&#1013;</mml:mi><mml:mi>pri</mml:mi></mml:msup><mml:mo>,</mml:mo><mml:msub><mml:mi>&#1013;</mml:mi><mml:mi>d</mml:mi></mml:msub><mml:mo>&#8805;</mml:mo><mml:msup><mml:mi>&#1013;</mml:mi><mml:mi>dual</mml:mi></mml:msup></mml:mrow></mml:mrow></mml:math></inline-formula>&#160;<bold>then</bold><break/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;break<break/>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<bold>end if</bold><break/>
<bold>&#160;&#160;&#160;&#160;end for</bold><break/>
&#160;&#160;&#160;&#160;10: Reconstruct <inline-formula><mml:math id="mm211" overflow="scroll"><mml:mrow><mml:msub><mml:mi mathvariant="bold-italic">T</mml:mi><mml:mn>2</mml:mn></mml:msub></mml:mrow></mml:math></inline-formula> via <inline-formula><mml:math id="mm212" overflow="scroll"><mml:mrow><mml:mi mathvariant="bold-italic">T</mml:mi></mml:mrow></mml:math></inline-formula> and postprocess <inline-formula><mml:math id="mm213" overflow="scroll"><mml:mrow><mml:msub><mml:mi mathvariant="bold-italic">T</mml:mi><mml:mn>2</mml:mn></mml:msub></mml:mrow></mml:math></inline-formula> with <italic toggle="yes">K</italic>-order truncated eigendecomposition to obtain <inline-formula><mml:math id="mm214" overflow="scroll"><mml:mrow><mml:msubsup><mml:mi mathvariant="bold-italic">T</mml:mi><mml:mrow><mml:mn>2</mml:mn></mml:mrow><mml:mi>K</mml:mi></mml:msubsup></mml:mrow></mml:math></inline-formula>;<break/>
&#160;&#160;&#160;&#160;11: Extract and pair the DOA groups using MD-ESPRIT algorithm;<break/>
&#160;&#160;&#160;&#160;12: <bold>return</bold>&#160;<inline-formula><mml:math id="mm215" overflow="scroll"><mml:mrow><mml:mrow><mml:mi mathvariant="bold-italic">&#952;</mml:mi><mml:mo>,</mml:mo><mml:mi mathvariant="bold-italic">&#981;</mml:mi></mml:mrow></mml:mrow></mml:math></inline-formula>.<break/>
</td></tr></tbody></array></p></sec></sec><sec id="sec5-sensors-25-05583"><title>5. CRB</title><p>The CRB is a powerful benchmark to evaluate the performance of the paramter estimators. For general 1-D homogeneous noise case, according to the research in [<xref rid="B45-sensors-25-05583" ref-type="bibr">45</xref>], the CRB can be calculated as follows:<disp-formula id="FD32-sensors-25-05583"><label>(32)</label><mml:math id="mm216" display="block" overflow="scroll"><mml:mrow><mml:mtable displaystyle="true"><mml:mtr><mml:mtd columnalign="right"><mml:mrow><mml:mi>CRB</mml:mi><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mi mathvariant="bold-italic">&#952;</mml:mi><mml:mo stretchy="false">)</mml:mo></mml:mrow><mml:mo>=</mml:mo><mml:mstyle scriptlevel="0" displaystyle="true"><mml:mfrac><mml:msup><mml:mi>&#963;</mml:mi><mml:mn>2</mml:mn></mml:msup><mml:mrow><mml:mn>2</mml:mn><mml:mi>L</mml:mi></mml:mrow></mml:mfrac></mml:mstyle><mml:msup><mml:mrow><mml:mo stretchy="false">{</mml:mo><mml:mo>&#8476;</mml:mo><mml:mrow><mml:mo stretchy="false">[</mml:mo><mml:mi mathvariant="bold-italic">H</mml:mi><mml:mo>&#8857;</mml:mo><mml:msup><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mi mathvariant="bold-italic">P</mml:mi><mml:msup><mml:mi mathvariant="bold-italic">A</mml:mi><mml:mi>H</mml:mi></mml:msup><mml:msup><mml:mover accent="true"><mml:mi mathvariant="bold-italic">R</mml:mi><mml:mo stretchy="false">^</mml:mo></mml:mover><mml:mrow><mml:mo>&#8722;</mml:mo><mml:mn>1</mml:mn></mml:mrow></mml:msup><mml:mi mathvariant="bold-italic">A</mml:mi><mml:mi mathvariant="bold-italic">P</mml:mi><mml:mo stretchy="false">)</mml:mo></mml:mrow><mml:mi>T</mml:mi></mml:msup><mml:mo stretchy="false">]</mml:mo></mml:mrow><mml:mo stretchy="false">}</mml:mo></mml:mrow><mml:mrow><mml:mo>&#8722;</mml:mo><mml:mn>1</mml:mn></mml:mrow></mml:msup><mml:mo>,</mml:mo></mml:mrow></mml:mtd></mml:mtr></mml:mtable></mml:mrow></mml:math></disp-formula>
where<disp-formula id="FD33-sensors-25-05583"><label>(33)</label><mml:math id="mm217" display="block" overflow="scroll"><mml:mrow><mml:mtable displaystyle="true"><mml:mtr><mml:mtd columnalign="right"><mml:mspace width="1.em"/></mml:mtd><mml:mtd columnalign="left"><mml:mrow><mml:mi mathvariant="bold-italic">H</mml:mi><mml:mo>=</mml:mo><mml:msup><mml:mi mathvariant="bold-italic">D</mml:mi><mml:mi>H</mml:mi></mml:msup><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mi mathvariant="bold-italic">I</mml:mi><mml:mo>&#8722;</mml:mo><mml:mi mathvariant="bold-italic">A</mml:mi><mml:msup><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:msup><mml:mi mathvariant="bold-italic">A</mml:mi><mml:mi>H</mml:mi></mml:msup><mml:mi mathvariant="bold-italic">A</mml:mi><mml:mo stretchy="false">)</mml:mo></mml:mrow><mml:mrow><mml:mo>&#8722;</mml:mo><mml:mn>1</mml:mn></mml:mrow></mml:msup><mml:msup><mml:mi mathvariant="bold-italic">A</mml:mi><mml:mi>H</mml:mi></mml:msup><mml:mo stretchy="false">)</mml:mo></mml:mrow><mml:mi mathvariant="bold-italic">D</mml:mi><mml:mo>,</mml:mo></mml:mrow></mml:mtd></mml:mtr><mml:mtr><mml:mtd columnalign="right"><mml:mspace width="1.em"/></mml:mtd><mml:mtd columnalign="left"><mml:mrow><mml:mi mathvariant="bold-italic">D</mml:mi><mml:mo>=</mml:mo><mml:mfenced open="[" close="]"><mml:mtable><mml:mtr><mml:mtd><mml:mstyle scriptlevel="0" displaystyle="true"><mml:mrow><mml:mfrac><mml:mrow><mml:mo>&#8706;</mml:mo><mml:mi mathvariant="bold-italic">a</mml:mi><mml:mo stretchy="false">(</mml:mo><mml:msub><mml:mi>&#952;</mml:mi><mml:mn>1</mml:mn></mml:msub><mml:mo stretchy="false">)</mml:mo></mml:mrow><mml:mrow><mml:mo>&#8706;</mml:mo><mml:msub><mml:mi>&#952;</mml:mi><mml:mn>1</mml:mn></mml:msub></mml:mrow></mml:mfrac><mml:mo>,</mml:mo></mml:mrow></mml:mstyle></mml:mtd><mml:mtd><mml:mrow><mml:mo>&#8230;</mml:mo><mml:mo>,</mml:mo></mml:mrow></mml:mtd><mml:mtd><mml:mstyle scriptlevel="0" displaystyle="true"><mml:mfrac><mml:mrow><mml:mo>&#8706;</mml:mo><mml:mi mathvariant="bold-italic">a</mml:mi><mml:mo stretchy="false">(</mml:mo><mml:msub><mml:mi>&#952;</mml:mi><mml:mi>K</mml:mi></mml:msub><mml:mo stretchy="false">)</mml:mo></mml:mrow><mml:mrow><mml:mo>&#8706;</mml:mo><mml:msub><mml:mi>&#952;</mml:mi><mml:mi>K</mml:mi></mml:msub></mml:mrow></mml:mfrac></mml:mstyle></mml:mtd></mml:mtr></mml:mtable></mml:mfenced><mml:mo>,</mml:mo></mml:mrow></mml:mtd></mml:mtr></mml:mtable></mml:mrow></mml:math></disp-formula>
and <inline-formula><mml:math id="mm218" overflow="scroll"><mml:mrow><mml:mrow><mml:mi mathvariant="bold-italic">P</mml:mi><mml:mo>=</mml:mo><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mn>1</mml:mn><mml:mo>/</mml:mo><mml:mi>L</mml:mi><mml:mo stretchy="false">)</mml:mo></mml:mrow><mml:mi mathvariant="bold-italic">S</mml:mi><mml:msup><mml:mi mathvariant="bold-italic">S</mml:mi><mml:mi>H</mml:mi></mml:msup></mml:mrow></mml:mrow></mml:math></inline-formula>.</p><p>Now considering the 2-D L-shaped array case with the angles for the <italic toggle="yes">k</italic>-th source as <inline-formula><mml:math id="mm219" overflow="scroll"><mml:mrow><mml:mrow><mml:msub><mml:mi>&#951;</mml:mi><mml:mi>k</mml:mi></mml:msub><mml:mo>=</mml:mo><mml:mrow><mml:mo>[</mml:mo><mml:msub><mml:mi>&#952;</mml:mi><mml:mi>k</mml:mi></mml:msub><mml:mo>,</mml:mo><mml:msub><mml:mi>&#981;</mml:mi><mml:mi>k</mml:mi></mml:msub><mml:mo>]</mml:mo></mml:mrow></mml:mrow></mml:mrow></mml:math></inline-formula>, under the stochastic signal assupmtion, we can see that <inline-formula><mml:math id="mm220" overflow="scroll"><mml:mrow><mml:mrow><mml:mi mathvariant="bold-italic">y</mml:mi><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mi>t</mml:mi><mml:mo stretchy="false">)</mml:mo></mml:mrow><mml:mo>&#8764;</mml:mo><mml:mi mathvariant="script">CN</mml:mi><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mn>0</mml:mn><mml:mo>,</mml:mo><mml:mover accent="true"><mml:mi mathvariant="bold-italic">R</mml:mi><mml:mo stretchy="false">^</mml:mo></mml:mover><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:mrow></mml:mrow></mml:math></inline-formula>. The CRB of 2-D DOA estimation for rectangular array has been analyzed in [<xref rid="B46-sensors-25-05583" ref-type="bibr">46</xref>], which has some similarity with the L-shaped array. So we can modify it in stochastic assumption to calculate the CRB for L-shaped array.</p><p>The stochastic CRB can be calculated as follows:<disp-formula id="FD34-sensors-25-05583"><label>(34)</label><mml:math id="mm221" display="block" overflow="scroll"><mml:mrow><mml:mtable displaystyle="true"><mml:mtr><mml:mtd columnalign="right"><mml:mrow><mml:mover accent="true"><mml:mi>CRB</mml:mi><mml:mo stretchy="false">^</mml:mo></mml:mover><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mi>&#951;</mml:mi><mml:mo stretchy="false">)</mml:mo></mml:mrow><mml:mo>=</mml:mo><mml:mstyle scriptlevel="0" displaystyle="true"><mml:mfrac><mml:mn>1</mml:mn><mml:mi>L</mml:mi></mml:mfrac></mml:mstyle><mml:msup><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mi mathvariant="bold-italic">F</mml:mi><mml:mo>&#8722;</mml:mo><mml:mi mathvariant="bold-italic">M</mml:mi><mml:msup><mml:mi mathvariant="bold-italic">G</mml:mi><mml:mrow><mml:mo>&#8722;</mml:mo><mml:mn>1</mml:mn></mml:mrow></mml:msup><mml:msup><mml:mi mathvariant="bold-italic">M</mml:mi><mml:mi>T</mml:mi></mml:msup><mml:mo stretchy="false">)</mml:mo></mml:mrow><mml:mrow><mml:mo>&#8722;</mml:mo><mml:mn>1</mml:mn></mml:mrow></mml:msup></mml:mrow></mml:mtd></mml:mtr></mml:mtable></mml:mrow></mml:math></disp-formula>
where<disp-formula id="FD35-sensors-25-05583"><label>(35)</label><mml:math id="mm222" display="block" overflow="scroll"><mml:mrow><mml:mtable displaystyle="true"><mml:mtr><mml:mtd columnalign="right"><mml:mrow><mml:mi mathvariant="bold-italic">F</mml:mi><mml:mo>=</mml:mo><mml:mn>2</mml:mn><mml:mo>&#8476;</mml:mo><mml:mo stretchy="false">{</mml:mo><mml:msup><mml:mi mathvariant="bold-italic">H</mml:mi><mml:mo>&#8242;</mml:mo></mml:msup><mml:mo>&#8857;</mml:mo><mml:mrow><mml:mo stretchy="false">[</mml:mo><mml:msup><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mi mathvariant="bold-italic">P</mml:mi><mml:msup><mml:mover accent="true"><mml:mi mathvariant="bold-italic">A</mml:mi><mml:mo stretchy="false">&#175;</mml:mo></mml:mover><mml:mi>H</mml:mi></mml:msup><mml:msup><mml:mover accent="true"><mml:mi mathvariant="bold-italic">R</mml:mi><mml:mo stretchy="false">&#175;</mml:mo></mml:mover><mml:mrow><mml:mo>&#8722;</mml:mo><mml:mn>1</mml:mn></mml:mrow></mml:msup><mml:mover accent="true"><mml:mi mathvariant="bold-italic">A</mml:mi><mml:mo stretchy="false">&#175;</mml:mo></mml:mover><mml:mi mathvariant="bold-italic">P</mml:mi><mml:mo stretchy="false">)</mml:mo></mml:mrow><mml:mi>T</mml:mi></mml:msup><mml:mo>&#8855;</mml:mo><mml:mo>&#916;</mml:mo><mml:mo stretchy="false">]</mml:mo></mml:mrow><mml:mo stretchy="false">}</mml:mo></mml:mrow></mml:mtd></mml:mtr></mml:mtable></mml:mrow></mml:math></disp-formula><disp-formula id="FD36-sensors-25-05583"><label>(36)</label><mml:math id="mm223" display="block" overflow="scroll"><mml:mrow><mml:mtable displaystyle="true"><mml:mtr><mml:mtd columnalign="right"><mml:mrow><mml:mi mathvariant="bold-italic">M</mml:mi><mml:mo>=</mml:mo><mml:mn>2</mml:mn><mml:mo>&#8476;</mml:mo><mml:mo stretchy="false">{</mml:mo><mml:msup><mml:mo>&#926;</mml:mo><mml:mi>T</mml:mi></mml:msup><mml:mrow><mml:mo stretchy="false">[</mml:mo><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:msup><mml:mi mathvariant="bold-italic">D</mml:mi><mml:mrow><mml:mo>&#8242;</mml:mo><mml:mi>H</mml:mi></mml:mrow></mml:msup><mml:msubsup><mml:mo mathvariant="bold">&#928;</mml:mo><mml:mrow><mml:mover accent="true"><mml:mi mathvariant="bold-italic">A</mml:mi><mml:mo stretchy="false">&#175;</mml:mo></mml:mover></mml:mrow><mml:mo>&#8869;</mml:mo></mml:msubsup><mml:mo stretchy="false">)</mml:mo></mml:mrow><mml:mo>&#8855;</mml:mo><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:msubsup><mml:mi mathvariant="bold-italic">P</mml:mi><mml:mn>2</mml:mn><mml:mi>T</mml:mi></mml:msubsup><mml:msup><mml:mover accent="true"><mml:mi mathvariant="bold-italic">A</mml:mi><mml:mo stretchy="false">&#175;</mml:mo></mml:mover><mml:mi>T</mml:mi></mml:msup><mml:msup><mml:mover accent="true"><mml:mi mathvariant="bold-italic">R</mml:mi><mml:mo stretchy="false">&#175;</mml:mo></mml:mover><mml:mrow><mml:mo>&#8722;</mml:mo><mml:mi>T</mml:mi></mml:mrow></mml:msup><mml:mo stretchy="false">)</mml:mo></mml:mrow><mml:mo stretchy="false">]</mml:mo></mml:mrow><mml:msup><mml:mo mathvariant="bold">&#923;</mml:mo><mml:mo>*</mml:mo></mml:msup><mml:mo stretchy="false">}</mml:mo></mml:mrow></mml:mtd></mml:mtr></mml:mtable></mml:mrow></mml:math></disp-formula><disp-formula id="FD37-sensors-25-05583"><label>(37)</label><mml:math id="mm224" display="block" overflow="scroll"><mml:mrow><mml:mtable displaystyle="true"><mml:mtr><mml:mtd columnalign="right"><mml:mrow><mml:mi mathvariant="bold-italic">G</mml:mi><mml:mo>=</mml:mo><mml:mn>2</mml:mn><mml:mo>&#8476;</mml:mo><mml:mrow><mml:mo stretchy="false">[</mml:mo><mml:msup><mml:mo mathvariant="bold">&#923;</mml:mo><mml:mi>H</mml:mi></mml:msup><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:msup><mml:mover accent="true"><mml:mi mathvariant="bold-italic">R</mml:mi><mml:mo stretchy="false">&#175;</mml:mo></mml:mover><mml:mrow><mml:mo>&#8722;</mml:mo><mml:mi>T</mml:mi></mml:mrow></mml:msup><mml:mo>&#8855;</mml:mo><mml:msubsup><mml:mo mathvariant="bold">&#928;</mml:mo><mml:mrow><mml:mover accent="true"><mml:mi mathvariant="bold-italic">A</mml:mi><mml:mo stretchy="false">&#175;</mml:mo></mml:mover></mml:mrow><mml:mo>&#8869;</mml:mo></mml:msubsup><mml:mo stretchy="false">)</mml:mo></mml:mrow><mml:mo mathvariant="bold">&#923;</mml:mo><mml:mo stretchy="false">]</mml:mo></mml:mrow><mml:mo>&#8722;</mml:mo><mml:msup><mml:mo mathvariant="bold">&#923;</mml:mo><mml:mi>H</mml:mi></mml:msup><mml:mrow><mml:mo stretchy="false">[</mml:mo><mml:msup><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:msubsup><mml:mo mathvariant="bold">&#928;</mml:mo><mml:mrow><mml:mover accent="true"><mml:mi mathvariant="bold-italic">A</mml:mi><mml:mo stretchy="false">&#175;</mml:mo></mml:mover></mml:mrow><mml:mo>&#8869;</mml:mo></mml:msubsup><mml:mo stretchy="false">)</mml:mo></mml:mrow><mml:mi>T</mml:mi></mml:msup><mml:mo>&#8855;</mml:mo><mml:msubsup><mml:mo mathvariant="bold">&#928;</mml:mo><mml:mrow><mml:mover accent="true"><mml:mi mathvariant="bold-italic">A</mml:mi><mml:mo stretchy="false">&#175;</mml:mo></mml:mover></mml:mrow><mml:mo>&#8869;</mml:mo></mml:msubsup><mml:mo stretchy="false">]</mml:mo></mml:mrow><mml:mo mathvariant="bold">&#923;</mml:mo></mml:mrow></mml:mtd></mml:mtr></mml:mtable></mml:mrow></mml:math></disp-formula>
where<disp-formula id="FD38-sensors-25-05583"><label>(38)</label><mml:math id="mm225" display="block" overflow="scroll"><mml:mrow><mml:mrow><mml:mover accent="true"><mml:mi mathvariant="bold-italic">A</mml:mi><mml:mo stretchy="false">&#175;</mml:mo></mml:mover><mml:mo>=</mml:mo><mml:msup><mml:mi>&#963;</mml:mi><mml:mrow><mml:mo>&#8722;</mml:mo><mml:mstyle scriptlevel="0" displaystyle="true"><mml:mfrac><mml:mn>1</mml:mn><mml:mn>2</mml:mn></mml:mfrac></mml:mstyle></mml:mrow></mml:msup><mml:mi mathvariant="bold-italic">A</mml:mi><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mi>&#981;</mml:mi><mml:mo>,</mml:mo><mml:mi>&#952;</mml:mi><mml:mo stretchy="false">)</mml:mo></mml:mrow><mml:mo>,</mml:mo><mml:mover accent="true"><mml:mi mathvariant="bold-italic">R</mml:mi><mml:mo stretchy="false">&#175;</mml:mo></mml:mover><mml:mo>=</mml:mo><mml:msup><mml:mi>&#963;</mml:mi><mml:mrow><mml:mo>&#8722;</mml:mo><mml:mn>1</mml:mn></mml:mrow></mml:msup><mml:mover accent="true"><mml:mi mathvariant="bold-italic">R</mml:mi><mml:mo stretchy="false">&#732;</mml:mo></mml:mover><mml:mo>,</mml:mo></mml:mrow></mml:mrow></mml:math></disp-formula><disp-formula id="FD39-sensors-25-05583"><label>(39)</label><mml:math id="mm226" display="block" overflow="scroll"><mml:mrow><mml:mrow><mml:msubsup><mml:mo mathvariant="bold">&#928;</mml:mo><mml:mrow><mml:mover accent="true"><mml:mi mathvariant="bold-italic">A</mml:mi><mml:mo stretchy="false">&#175;</mml:mo></mml:mover></mml:mrow><mml:mo>&#8869;</mml:mo></mml:msubsup><mml:mo>=</mml:mo><mml:msub><mml:mi mathvariant="bold-italic">I</mml:mi><mml:mi>M</mml:mi></mml:msub><mml:mo>&#8722;</mml:mo><mml:mover accent="true"><mml:mi mathvariant="bold-italic">A</mml:mi><mml:mo stretchy="false">&#175;</mml:mo></mml:mover><mml:msup><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:msup><mml:mover accent="true"><mml:mi mathvariant="bold-italic">A</mml:mi><mml:mo stretchy="false">&#175;</mml:mo></mml:mover><mml:mi>H</mml:mi></mml:msup><mml:mover accent="true"><mml:mi mathvariant="bold-italic">A</mml:mi><mml:mo stretchy="false">&#175;</mml:mo></mml:mover><mml:mo stretchy="false">)</mml:mo></mml:mrow><mml:mrow><mml:mo>&#8722;</mml:mo><mml:mn>1</mml:mn></mml:mrow></mml:msup><mml:msup><mml:mover accent="true"><mml:mi mathvariant="bold-italic">A</mml:mi><mml:mo stretchy="false">&#175;</mml:mo></mml:mover><mml:mi>H</mml:mi></mml:msup></mml:mrow></mml:mrow></mml:math></disp-formula><disp-formula id="FD40-sensors-25-05583"><label>(40)</label><mml:math id="mm227" display="block" overflow="scroll"><mml:mrow><mml:mrow><mml:msup><mml:mi mathvariant="bold-italic">H</mml:mi><mml:mo>&#8242;</mml:mo></mml:msup><mml:mo>=</mml:mo><mml:msup><mml:mi mathvariant="bold-italic">D</mml:mi><mml:mrow><mml:mo>&#8242;</mml:mo><mml:mi>H</mml:mi></mml:mrow></mml:msup><mml:msubsup><mml:mo mathvariant="bold">&#928;</mml:mo><mml:mrow><mml:mover accent="true"><mml:mi mathvariant="bold-italic">A</mml:mi><mml:mo stretchy="false">&#175;</mml:mo></mml:mover></mml:mrow><mml:mo>&#8869;</mml:mo></mml:msubsup><mml:msup><mml:mi mathvariant="bold-italic">D</mml:mi><mml:mo>&#8242;</mml:mo></mml:msup><mml:mo>,</mml:mo></mml:mrow></mml:mrow></mml:math></disp-formula><disp-formula id="FD41-sensors-25-05583"><label>(41)</label><mml:math id="mm228" display="block" overflow="scroll"><mml:mrow><mml:mrow><mml:msub><mml:mi mathvariant="bold-italic">P</mml:mi><mml:mn>2</mml:mn></mml:msub><mml:mo>=</mml:mo><mml:mi mathvariant="bold-italic">P</mml:mi><mml:mo>&#8855;</mml:mo><mml:mrow><mml:mo>[</mml:mo><mml:mn>1</mml:mn><mml:mo>,</mml:mo><mml:mn>1</mml:mn><mml:mo>]</mml:mo></mml:mrow><mml:mo>,</mml:mo><mml:mo>&#916;</mml:mo><mml:mo>=</mml:mo><mml:mfenced open="[" close="]"><mml:mtable><mml:mtr><mml:mtd><mml:mn>1</mml:mn></mml:mtd><mml:mtd><mml:mn>1</mml:mn></mml:mtd></mml:mtr><mml:mtr><mml:mtd><mml:mn>1</mml:mn></mml:mtd><mml:mtd><mml:mn>1</mml:mn></mml:mtd></mml:mtr></mml:mtable></mml:mfenced><mml:mo>,</mml:mo></mml:mrow></mml:mrow></mml:math></disp-formula><disp-formula id="FD42-sensors-25-05583"><label>(42)</label><mml:math id="mm229" display="block" overflow="scroll"><mml:mrow><mml:mtable displaystyle="true"><mml:mtr><mml:mtd columnalign="right"><mml:mrow><mml:msup><mml:mi mathvariant="bold-italic">D</mml:mi><mml:mo>&#8242;</mml:mo></mml:msup><mml:mo>=</mml:mo><mml:msup><mml:mi>&#963;</mml:mi><mml:mrow><mml:mo>&#8722;</mml:mo><mml:mfrac><mml:mn>1</mml:mn><mml:mn>2</mml:mn></mml:mfrac></mml:mrow></mml:msup><mml:mfenced open="[" close="]"><mml:mtable><mml:mtr><mml:mtd><mml:mstyle scriptlevel="0" displaystyle="true"><mml:mfrac><mml:mrow><mml:mo>&#8706;</mml:mo><mml:mi mathvariant="bold-italic">a</mml:mi><mml:mo stretchy="false">(</mml:mo><mml:msub><mml:mi>&#981;</mml:mi><mml:mn>1</mml:mn></mml:msub><mml:mo>,</mml:mo><mml:msub><mml:mi>&#952;</mml:mi><mml:mn>1</mml:mn></mml:msub><mml:mo stretchy="false">)</mml:mo></mml:mrow><mml:mrow><mml:mo>&#8706;</mml:mo><mml:msubsup><mml:mi>&#951;</mml:mi><mml:mn>1</mml:mn><mml:mi>T</mml:mi></mml:msubsup></mml:mrow></mml:mfrac></mml:mstyle></mml:mtd><mml:mtd><mml:mo>&#8943;</mml:mo></mml:mtd><mml:mtd><mml:mstyle scriptlevel="0" displaystyle="true"><mml:mfrac><mml:mrow><mml:mo>&#8706;</mml:mo><mml:mi mathvariant="bold-italic">a</mml:mi><mml:mo stretchy="false">(</mml:mo><mml:msub><mml:mi>&#981;</mml:mi><mml:mi>K</mml:mi></mml:msub><mml:mo>,</mml:mo><mml:msub><mml:mi>&#952;</mml:mi><mml:mi>K</mml:mi></mml:msub><mml:mo stretchy="false">)</mml:mo></mml:mrow><mml:mrow><mml:mo>&#8706;</mml:mo><mml:msubsup><mml:mi>&#951;</mml:mi><mml:mi>K</mml:mi><mml:mi>T</mml:mi></mml:msubsup></mml:mrow></mml:mfrac></mml:mstyle></mml:mtd></mml:mtr></mml:mtable></mml:mfenced><mml:mo>,</mml:mo></mml:mrow></mml:mtd></mml:mtr></mml:mtable></mml:mrow></mml:math></disp-formula><disp-formula id="FD43-sensors-25-05583"><label>(43)</label><mml:math id="mm230" display="block" overflow="scroll"><mml:mrow><mml:mtable displaystyle="true"><mml:mtr><mml:mtd columnalign="right"><mml:mrow><mml:mo mathvariant="bold">&#923;</mml:mo><mml:mo>=</mml:mo><mml:mfenced open="[" close="]"><mml:mtable><mml:mtr><mml:mtd><mml:mrow><mml:mi>vec</mml:mi><mml:msup><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:msub><mml:mi mathvariant="bold-italic">I</mml:mi><mml:mi>M</mml:mi></mml:msub><mml:mo stretchy="false">)</mml:mo></mml:mrow><mml:mi>T</mml:mi></mml:msup></mml:mrow></mml:mtd><mml:mtd><mml:mo>&#8943;</mml:mo></mml:mtd><mml:mtd><mml:mrow><mml:mi>vec</mml:mi><mml:msup><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:msub><mml:mi mathvariant="bold-italic">I</mml:mi><mml:mi>M</mml:mi></mml:msub><mml:mo stretchy="false">)</mml:mo></mml:mrow><mml:mi>T</mml:mi></mml:msup></mml:mrow></mml:mtd></mml:mtr></mml:mtable></mml:mfenced><mml:mo>,</mml:mo></mml:mrow></mml:mtd></mml:mtr></mml:mtable></mml:mrow></mml:math></disp-formula><disp-formula id="FD44-sensors-25-05583"><label>(44)</label><mml:math id="mm231" display="block" overflow="scroll"><mml:mrow><mml:mrow><mml:mo>&#926;</mml:mo><mml:mo>=</mml:mo><mml:mfenced open="[" close="]"><mml:mtable><mml:mtr><mml:mtd><mml:mrow><mml:mi>vec</mml:mi><mml:mo stretchy="false">(</mml:mo><mml:msub><mml:mi mathvariant="bold-italic">e</mml:mi><mml:mn>1</mml:mn></mml:msub><mml:msubsup><mml:mi mathvariant="bold-italic">e</mml:mi><mml:mn>1</mml:mn><mml:mi>T</mml:mi></mml:msubsup><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:mtd><mml:mtd><mml:mo>&#8943;</mml:mo></mml:mtd><mml:mtd><mml:mrow><mml:mi>vec</mml:mi><mml:mo stretchy="false">(</mml:mo><mml:msub><mml:mi mathvariant="bold-italic">e</mml:mi><mml:mrow><mml:mn>2</mml:mn><mml:mi>K</mml:mi></mml:mrow></mml:msub><mml:msubsup><mml:mi mathvariant="bold-italic">e</mml:mi><mml:mrow><mml:mn>2</mml:mn><mml:mi>K</mml:mi></mml:mrow><mml:mi>T</mml:mi></mml:msubsup><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:mtd></mml:mtr></mml:mtable></mml:mfenced><mml:mo>,</mml:mo></mml:mrow></mml:mrow></mml:math></disp-formula>
where <inline-formula><mml:math id="mm232" overflow="scroll"><mml:mrow><mml:msub><mml:mi mathvariant="bold-italic">e</mml:mi><mml:mi>k</mml:mi></mml:msub></mml:mrow></mml:math></inline-formula> denotes the <italic toggle="yes">k</italic>-th column of a <inline-formula><mml:math id="mm233" overflow="scroll"><mml:mrow><mml:mrow><mml:mi>K</mml:mi><mml:mo>&#215;</mml:mo><mml:mi>K</mml:mi></mml:mrow></mml:mrow></mml:math></inline-formula> identity matrix. Note that as the noise variance is equivalent to <inline-formula><mml:math id="mm234" overflow="scroll"><mml:mrow><mml:mrow><mml:mi>&#963;</mml:mi><mml:mi mathvariant="bold-italic">I</mml:mi></mml:mrow></mml:mrow></mml:math></inline-formula>, the CRB can be simplified as follows [<xref rid="B46-sensors-25-05583" ref-type="bibr">46</xref>]:<disp-formula id="FD45-sensors-25-05583"><label>(45)</label><mml:math id="mm235" display="block" overflow="scroll"><mml:mrow><mml:mrow><mml:mover accent="true"><mml:mi>CRB</mml:mi><mml:mo stretchy="false">^</mml:mo></mml:mover><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mi>&#952;</mml:mi><mml:mo>,</mml:mo><mml:mi>&#981;</mml:mi><mml:mo stretchy="false">)</mml:mo></mml:mrow><mml:mo>=</mml:mo><mml:mstyle scriptlevel="0" displaystyle="true"><mml:mfrac><mml:mn>1</mml:mn><mml:mi>L</mml:mi></mml:mfrac></mml:mstyle><mml:msup><mml:mi mathvariant="bold-italic">F</mml:mi><mml:mrow><mml:mo>&#8722;</mml:mo><mml:mn>1</mml:mn></mml:mrow></mml:msup><mml:mo>.</mml:mo></mml:mrow></mml:mrow></mml:math></disp-formula></p></sec><sec id="sec6-sensors-25-05583"><title>6. Numerical Simulations</title><p>In this section, we illustrate the performance of the proposed method in comparison with existing approaches as follows:<list list-type="order"><list-item><p>ESPRIT: The classical ESPRIT algorithm [<xref rid="B41-sensors-25-05583" ref-type="bibr">41</xref>] is directly applied to the sample covariance matrix <inline-formula><mml:math id="mm236" overflow="scroll"><mml:mrow><mml:mover accent="true"><mml:mi mathvariant="bold-italic">R</mml:mi><mml:mo stretchy="false">&#732;</mml:mo></mml:mover></mml:mrow></mml:math></inline-formula> in (<xref rid="FD4-sensors-25-05583" ref-type="disp-formula">4</xref>) with the elevation angles and azimuth angles auto-paired.</p></list-item><list-item><p>SPA [<xref rid="B33-sensors-25-05583" ref-type="bibr">33</xref>]: The SPA is separately applied to the two subarrays to estimate the elevation angles and azimuth angles, and the probable pairing error is neglected in this process.</p></list-item><list-item><p>JSR: The JSR framework is implemented as described in Corollary 1 with the regularization parameters <inline-formula><mml:math id="mm237" overflow="scroll"><mml:mrow><mml:mi>&#955;</mml:mi></mml:mrow></mml:math></inline-formula> set as [<xref rid="B39-sensors-25-05583" ref-type="bibr">39</xref>].</p></list-item><list-item><p>CRB: The average lower bounds for estimation separately implemented in two subarrays is denoted as CRB, which is calculated as (<xref rid="FD32-sensors-25-05583" ref-type="disp-formula">32</xref>).</p></list-item><list-item><p>CRB+: The lower bounds for joint 2-D DOA estimation based on the whole covariance matrix is represented as CRB+, which is calculated as (<xref rid="FD45-sensors-25-05583" ref-type="disp-formula">45</xref>).</p></list-item></list></p><p>The proposed method is implemented by the SDP3 solver [<xref rid="B47-sensors-25-05583" ref-type="bibr">47</xref>] if not stated otherwise. ADMM will be terminated if a maximum number of 2000 iterations is reached. The complex amplitude <inline-formula><mml:math id="mm238" overflow="scroll"><mml:mrow><mml:mrow><mml:mo>{</mml:mo><mml:msub><mml:mi>s</mml:mi><mml:mi>k</mml:mi></mml:msub><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mi>t</mml:mi><mml:mo stretchy="false">)</mml:mo></mml:mrow><mml:mo>}</mml:mo></mml:mrow></mml:mrow></mml:math></inline-formula> is generated randomly from a standard complex normal distribution, and different angles <inline-formula><mml:math id="mm239" overflow="scroll"><mml:mrow><mml:mrow><mml:msub><mml:mi>&#951;</mml:mi><mml:mi>k</mml:mi></mml:msub><mml:mo>=</mml:mo><mml:mrow><mml:mo>{</mml:mo><mml:msub><mml:mi>&#981;</mml:mi><mml:mi>k</mml:mi></mml:msub><mml:mo>,</mml:mo><mml:msub><mml:mi>&#952;</mml:mi><mml:mi>k</mml:mi></mml:msub><mml:mo>}</mml:mo></mml:mrow></mml:mrow></mml:mrow></mml:math></inline-formula> are set for distinct sources. The noise is complex Gaussian white noise with zero mean and the SNR is defined as <inline-formula><mml:math id="mm240" overflow="scroll"><mml:mrow><mml:mrow><mml:mn>10</mml:mn><mml:msub><mml:mi>log</mml:mi><mml:mn>10</mml:mn></mml:msub><mml:msubsup><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mo stretchy="false">&#8741;</mml:mo><mml:mi mathvariant="bold-italic">Y</mml:mi><mml:mo>&#8722;</mml:mo><mml:mi mathvariant="bold-italic">E</mml:mi><mml:mo stretchy="false">&#8741;</mml:mo></mml:mrow><mml:mrow><mml:mi mathvariant="normal">F</mml:mi></mml:mrow><mml:mn>2</mml:mn></mml:msubsup><mml:mo>/</mml:mo><mml:msubsup><mml:mrow><mml:mo stretchy="false">&#8741;</mml:mo><mml:mi mathvariant="bold-italic">E</mml:mi><mml:mo stretchy="false">&#8741;</mml:mo></mml:mrow><mml:mrow><mml:mi mathvariant="normal">F</mml:mi></mml:mrow><mml:mn>2</mml:mn></mml:msubsup><mml:mrow><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:mrow></mml:mrow></mml:math></inline-formula> dB.</p><sec id="sec6dot1-sensors-25-05583"><title>6.1. Effectiveness and Identifiability</title><p>In experiment 1, we verify the effectiveness of the proposed method by ADMM solver and attempt to estimate <inline-formula><mml:math id="mm241" overflow="scroll"><mml:mrow><mml:mrow><mml:mi>K</mml:mi><mml:mo>=</mml:mo><mml:mn>10</mml:mn></mml:mrow></mml:mrow></mml:math></inline-formula> uncorrelated targets. Moreover, we set <inline-formula><mml:math id="mm242" overflow="scroll"><mml:mrow><mml:mrow><mml:mi>L</mml:mi><mml:mo>=</mml:mo><mml:mn>200</mml:mn></mml:mrow></mml:mrow></mml:math></inline-formula>, <inline-formula><mml:math id="mm243" overflow="scroll"><mml:mrow><mml:mrow><mml:msub><mml:mi>M</mml:mi><mml:mi>x</mml:mi></mml:msub><mml:mo>=</mml:mo><mml:msub><mml:mi>M</mml:mi><mml:mi>z</mml:mi></mml:msub><mml:mo>=</mml:mo><mml:mn>15</mml:mn></mml:mrow></mml:mrow></mml:math></inline-formula>, and <inline-formula><mml:math id="mm244" overflow="scroll"><mml:mrow><mml:mrow><mml:mi>SNR</mml:mi><mml:mo>=</mml:mo><mml:mn>10</mml:mn><mml:mspace width="4.pt"/><mml:mi>dB</mml:mi></mml:mrow></mml:mrow></mml:math></inline-formula> and a number of 200 Monte Carlo runs are carried out under this condition. The estimation results are shown in <xref rid="sensors-25-05583-f002" ref-type="fig">Figure 2</xref> with the black circles indicating the true frequency groups. It is seen that frequency groups can be effectively estimated and correctly paired using the proposed method.</p><p>In experiment 2, to validate the superiority of the proposed method in terms of the maximum identifiable targets, we employ <inline-formula><mml:math id="mm245" overflow="scroll"><mml:mrow><mml:mrow><mml:msub><mml:mi>M</mml:mi><mml:mi>x</mml:mi></mml:msub><mml:mo>=</mml:mo><mml:mn>4</mml:mn><mml:mo>,</mml:mo><mml:msub><mml:mi>M</mml:mi><mml:mi>z</mml:mi></mml:msub><mml:mo>=</mml:mo><mml:mn>4</mml:mn></mml:mrow></mml:mrow></mml:math></inline-formula> sensors and <inline-formula><mml:math id="mm246" overflow="scroll"><mml:mrow><mml:mrow><mml:mi>L</mml:mi><mml:mo>=</mml:mo><mml:mn>1</mml:mn><mml:mo>&#215;</mml:mo><mml:msup><mml:mn>10</mml:mn><mml:mn>6</mml:mn></mml:msup></mml:mrow></mml:mrow></mml:math></inline-formula> snapshots in the high SNR regime as <inline-formula><mml:math id="mm247" overflow="scroll"><mml:mrow><mml:mrow><mml:mi>SNR</mml:mi><mml:mo>=</mml:mo><mml:mn>30</mml:mn><mml:mspace width="4.pt"/><mml:mi>dB</mml:mi></mml:mrow></mml:mrow></mml:math></inline-formula> to obtain a relatively ideal sample covariance matrix. <xref rid="sensors-25-05583-f003" ref-type="fig">Figure 3</xref> shows the parameter identifiability of the proposed method compared with the ESPRIT algorithm. The simulations are provided to illustrate that the maximum identifiable targets of the proposed method when <inline-formula><mml:math id="mm248" overflow="scroll"><mml:mrow><mml:mrow><mml:msub><mml:mi>M</mml:mi><mml:mi>x</mml:mi></mml:msub><mml:mo>=</mml:mo><mml:msub><mml:mi>M</mml:mi><mml:mi>z</mml:mi></mml:msub><mml:mo>=</mml:mo><mml:mn>4</mml:mn></mml:mrow></mml:mrow></mml:math></inline-formula> is <inline-formula><mml:math id="mm249" overflow="scroll"><mml:mrow><mml:mrow><mml:mi>K</mml:mi><mml:mo>=</mml:mo><mml:mn>9</mml:mn></mml:mrow></mml:mrow></mml:math></inline-formula>, while that of ESPRIT is <inline-formula><mml:math id="mm250" overflow="scroll"><mml:mrow><mml:mrow><mml:mi>K</mml:mi><mml:mo>=</mml:mo><mml:mn>3</mml:mn></mml:mrow></mml:mrow></mml:math></inline-formula>. It can be seen that when the number of sources is smaller than sensors in each subarray, the proposed method and ESPRIT both exhibit accurate estimation results, while in the case of more sources, only the proposed method still maintains successful estimation.</p></sec><sec id="sec6dot2-sensors-25-05583"><title>6.2. Statistic Performance Versus SNR and Snapshots</title><p>In experiment 3, the estimation accuracy of the proposed method versus SNR and the number of snapshots is studied. We suppose <inline-formula><mml:math id="mm251" overflow="scroll"><mml:mrow><mml:mrow><mml:mi>K</mml:mi><mml:mo>=</mml:mo><mml:mn>2</mml:mn></mml:mrow></mml:mrow></mml:math></inline-formula> uncorrelated sources are received at azimuth angles <inline-formula><mml:math id="mm252" overflow="scroll"><mml:mrow><mml:mrow><mml:mi mathvariant="bold-italic">&#981;</mml:mi><mml:mo>=</mml:mo><mml:mo>{</mml:mo><mml:mn>60</mml:mn><mml:mo>,</mml:mo><mml:mn>90</mml:mn><mml:mo>}</mml:mo></mml:mrow></mml:mrow></mml:math></inline-formula> and elevation angles <inline-formula><mml:math id="mm253" overflow="scroll"><mml:mrow><mml:mrow><mml:mi mathvariant="bold-italic">&#952;</mml:mi><mml:mo>=</mml:mo><mml:mo>{</mml:mo><mml:mn>50</mml:mn><mml:mo>,</mml:mo><mml:mn>80</mml:mn><mml:mo>}</mml:mo></mml:mrow></mml:mrow></mml:math></inline-formula>. <inline-formula><mml:math id="mm254" overflow="scroll"><mml:mrow><mml:mrow><mml:mi>J</mml:mi><mml:mo>=</mml:mo><mml:mn>200</mml:mn></mml:mrow></mml:mrow></mml:math></inline-formula> Monte Carlo trials are carried out, and the root mean square error (RMSE) of the system can be calculated as follows:<disp-formula id="FD46-sensors-25-05583"><label>(46)</label><mml:math id="mm255" display="block" overflow="scroll"><mml:mrow><mml:mtable displaystyle="true"><mml:mtr><mml:mtd columnalign="right"><mml:mrow><mml:mi>RMSE</mml:mi><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mi mathvariant="bold-italic">&#981;</mml:mi><mml:mo>,</mml:mo><mml:mi mathvariant="bold-italic">&#952;</mml:mi><mml:mo stretchy="false">)</mml:mo></mml:mrow><mml:mo>=</mml:mo><mml:mstyle scriptlevel="0" displaystyle="true"><mml:mfrac><mml:mn>1</mml:mn><mml:mi>K</mml:mi></mml:mfrac></mml:mstyle><mml:msqrt><mml:mrow><mml:mstyle scriptlevel="0" displaystyle="true"><mml:mfrac><mml:mn>1</mml:mn><mml:mi>J</mml:mi></mml:mfrac></mml:mstyle><mml:mstyle displaystyle="true"><mml:munderover><mml:mo>&#8721;</mml:mo><mml:mrow><mml:mi>j</mml:mi><mml:mo>=</mml:mo><mml:mn>1</mml:mn></mml:mrow><mml:mi>J</mml:mi></mml:munderover></mml:mstyle><mml:mstyle displaystyle="true"><mml:munderover><mml:mo>&#8721;</mml:mo><mml:mrow><mml:mi>k</mml:mi><mml:mo>=</mml:mo><mml:mn>1</mml:mn></mml:mrow><mml:mi>K</mml:mi></mml:munderover></mml:mstyle><mml:msup><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:msub><mml:mover accent="true"><mml:mi>&#981;</mml:mi><mml:mo stretchy="false">^</mml:mo></mml:mover><mml:mrow><mml:mi>j</mml:mi><mml:mi>k</mml:mi></mml:mrow></mml:msub><mml:mo>&#8722;</mml:mo><mml:msub><mml:mi>&#981;</mml:mi><mml:mi>k</mml:mi></mml:msub><mml:mo stretchy="false">)</mml:mo></mml:mrow><mml:mn>2</mml:mn></mml:msup><mml:mo>+</mml:mo><mml:msup><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:msub><mml:mover accent="true"><mml:mi>&#952;</mml:mi><mml:mo stretchy="false">^</mml:mo></mml:mover><mml:mrow><mml:mi>j</mml:mi><mml:mi>k</mml:mi></mml:mrow></mml:msub><mml:mo>&#8722;</mml:mo><mml:msub><mml:mi>&#952;</mml:mi><mml:mi>k</mml:mi></mml:msub><mml:mo stretchy="false">)</mml:mo></mml:mrow><mml:mn>2</mml:mn></mml:msup></mml:mrow></mml:msqrt><mml:mo>,</mml:mo></mml:mrow></mml:mtd></mml:mtr></mml:mtable></mml:mrow></mml:math></disp-formula>
where <inline-formula><mml:math id="mm256" overflow="scroll"><mml:mrow><mml:msub><mml:mover accent="true"><mml:mi>&#981;</mml:mi><mml:mo stretchy="false">^</mml:mo></mml:mover><mml:mrow><mml:mi>j</mml:mi><mml:mi>k</mml:mi></mml:mrow></mml:msub></mml:mrow></mml:math></inline-formula> and <inline-formula><mml:math id="mm257" overflow="scroll"><mml:mrow><mml:msub><mml:mover accent="true"><mml:mi>&#952;</mml:mi><mml:mo stretchy="false">^</mml:mo></mml:mover><mml:mrow><mml:mi>j</mml:mi><mml:mi>k</mml:mi></mml:mrow></mml:msub></mml:mrow></mml:math></inline-formula> denote the azimuth and elevation angles of the estimates of the <italic toggle="yes">k</italic>-th source in the <italic toggle="yes">j</italic>-th trial.</p><p>As a few outliers may lower the reliability of the experiments, we set a threshold to measure the success of a single experiment, which means that if there exists any source with estimate error with <inline-formula><mml:math id="mm258" overflow="scroll"><mml:mrow><mml:mrow><mml:mfenced separators="" open="|" close="|"><mml:msub><mml:mover accent="true"><mml:mi>&#952;</mml:mi><mml:mo stretchy="false">^</mml:mo></mml:mover><mml:mrow><mml:mi>j</mml:mi><mml:mi>k</mml:mi></mml:mrow></mml:msub><mml:mo>&#8722;</mml:mo><mml:msub><mml:mi>&#952;</mml:mi><mml:mi>k</mml:mi></mml:msub></mml:mfenced><mml:mo>&gt;</mml:mo><mml:msup><mml:mn>30</mml:mn><mml:mo>&#8728;</mml:mo></mml:msup></mml:mrow></mml:mrow></mml:math></inline-formula> or <inline-formula><mml:math id="mm259" overflow="scroll"><mml:mrow><mml:mrow><mml:mfenced separators="" open="|" close="|"><mml:msub><mml:mover accent="true"><mml:mi>&#981;</mml:mi><mml:mo stretchy="false">^</mml:mo></mml:mover><mml:mrow><mml:mi>j</mml:mi><mml:mi>k</mml:mi></mml:mrow></mml:msub><mml:mo>&#8722;</mml:mo><mml:msub><mml:mi>&#981;</mml:mi><mml:mi>k</mml:mi></mml:msub></mml:mfenced><mml:mo>&gt;</mml:mo><mml:msup><mml:mn>30</mml:mn><mml:mo>&#8728;</mml:mo></mml:msup></mml:mrow></mml:mrow></mml:math></inline-formula>, the experiment will be considered as a failure and it will not be included in the calculation of RMSE.</p><p>First, we fix <inline-formula><mml:math id="mm260" overflow="scroll"><mml:mrow><mml:mrow><mml:mi>L</mml:mi><mml:mo>=</mml:mo><mml:mn>200</mml:mn></mml:mrow></mml:mrow></mml:math></inline-formula>, <inline-formula><mml:math id="mm261" overflow="scroll"><mml:mrow><mml:mrow><mml:msub><mml:mi>M</mml:mi><mml:mi>x</mml:mi></mml:msub><mml:mo>=</mml:mo><mml:mn>6</mml:mn></mml:mrow></mml:mrow></mml:math></inline-formula>, <inline-formula><mml:math id="mm262" overflow="scroll"><mml:mrow><mml:mrow><mml:msub><mml:mi>M</mml:mi><mml:mi>z</mml:mi></mml:msub><mml:mo>=</mml:mo><mml:mn>6</mml:mn></mml:mrow></mml:mrow></mml:math></inline-formula>, and <inline-formula><mml:math id="mm263" overflow="scroll"><mml:mrow><mml:mrow><mml:mi>K</mml:mi><mml:mo>=</mml:mo><mml:mn>2</mml:mn></mml:mrow></mml:mrow></mml:math></inline-formula> and SNR varies over the range <inline-formula><mml:math id="mm264" overflow="scroll"><mml:mrow><mml:mrow><mml:mo>{</mml:mo><mml:mo>&#8722;</mml:mo><mml:mn>15</mml:mn><mml:mo>,</mml:mo><mml:mo>&#8722;</mml:mo><mml:mn>10</mml:mn><mml:mo>,</mml:mo><mml:mo>&#8230;</mml:mo><mml:mo>,</mml:mo><mml:mn>10</mml:mn><mml:mo>}</mml:mo></mml:mrow></mml:mrow></mml:math></inline-formula> dB. <xref rid="sensors-25-05583-f004" ref-type="fig">Figure 4</xref> displays the RMSE of the L-shaped array, the success rate and the RMSE of two subarrays. The proposed method demonstrates similar performance with JSR, consistent with theoretical analysis. Consequently, subsequent comparisons focus on the comparison of the proposed method with the other two methods. All algorithms exhibit strong performance in high SNR regimes. The proposed method outperforms others by fully exploiting redundant information embedded within the whole covariance matrix, achieving lower CRB. In moderate/low SNR regimes (<inline-formula><mml:math id="mm265" overflow="scroll"><mml:mrow><mml:mrow><mml:mi>SNR</mml:mi><mml:mo>&#8804;</mml:mo><mml:mo>&#8722;</mml:mo><mml:mn>5</mml:mn><mml:mi>dB</mml:mi></mml:mrow></mml:mrow></mml:math></inline-formula>), all methods experience RMSE degradation, though the proposed approach demonstrates superior noise robustness. Under extreme low-SNR conditions (&#8722;15 dB), while all algorithms fail to provide accurate estimates, the proposed method maintains a marginal performance advantage.</p><p>With SNR fixed at 5 dB and other parameters unchanged (<inline-formula><mml:math id="mm266" overflow="scroll"><mml:mrow><mml:mrow><mml:msub><mml:mi>M</mml:mi><mml:mi>x</mml:mi></mml:msub><mml:mo>=</mml:mo><mml:mn>6</mml:mn></mml:mrow></mml:mrow></mml:math></inline-formula>, <inline-formula><mml:math id="mm267" overflow="scroll"><mml:mrow><mml:mrow><mml:msub><mml:mi>M</mml:mi><mml:mi>z</mml:mi></mml:msub><mml:mo>=</mml:mo><mml:mn>6</mml:mn></mml:mrow></mml:mrow></mml:math></inline-formula>, <inline-formula><mml:math id="mm268" overflow="scroll"><mml:mrow><mml:mrow><mml:mi>K</mml:mi><mml:mo>=</mml:mo><mml:mn>2</mml:mn></mml:mrow></mml:mrow></mml:math></inline-formula>), <italic toggle="yes">L</italic> varies across <inline-formula><mml:math id="mm269" overflow="scroll"><mml:mrow><mml:mrow><mml:mo>{</mml:mo><mml:mn>50</mml:mn><mml:mo>,</mml:mo><mml:mn>100</mml:mn><mml:mo>,</mml:mo><mml:mo>&#8230;</mml:mo><mml:mo>,</mml:mo><mml:mn>300</mml:mn><mml:mo>}</mml:mo></mml:mrow></mml:mrow></mml:math></inline-formula>. <xref rid="sensors-25-05583-f005" ref-type="fig">Figure 5</xref> presents the RMSE for the L-shaped array and two subarrays, where all methods achieve a <inline-formula><mml:math id="mm270" overflow="scroll"><mml:mrow><mml:mrow><mml:mn>100</mml:mn><mml:mo>%</mml:mo></mml:mrow></mml:mrow></mml:math></inline-formula> success rate. Under moderate SNR, all algorithms exhibit RMSE convergence toward their respective CRB with increasing <italic toggle="yes">L</italic>. The proposed method asymptotically attains the CRB+ at large <italic toggle="yes">L</italic>, demonstrating its equivalence to a large-sample realization of the maximum likelihood estimator, and maintains consistent superiority over the other two methods, attributed to its lower CRB.</p></sec><sec id="sec6dot3-sensors-25-05583"><title>6.3. Complexity Analysis</title><p>Since the computation of the sample covariance matrix is consistent across all methods, the complexity of data preprocessing is not analyzed separately. Except for subspace-based methods, all comparative algorithms consist of two main steps, i.e., optimization and DOA extraction. Therefore, the computational complexity is analyzed in these two parts with the optimization problems all solved via SDPT3 [<xref rid="B47-sensors-25-05583" ref-type="bibr">47</xref>] and the DOA estimation performed by either ESPRIT or MD-ESPRIT. Suppose <inline-formula><mml:math id="mm271" overflow="scroll"><mml:mrow><mml:mrow><mml:msub><mml:mi>n</mml:mi><mml:mn>1</mml:mn></mml:msub><mml:mo>=</mml:mo><mml:msup><mml:mi>M</mml:mi><mml:mn>2</mml:mn></mml:msup><mml:mo>+</mml:mo><mml:mn>2</mml:mn><mml:msub><mml:mi>M</mml:mi><mml:mi>x</mml:mi></mml:msub><mml:msub><mml:mi>M</mml:mi><mml:mi>z</mml:mi></mml:msub><mml:mo>&#8722;</mml:mo><mml:mi>M</mml:mi><mml:mo>,</mml:mo><mml:msub><mml:mi>n</mml:mi><mml:mn>2</mml:mn></mml:msub><mml:mo>=</mml:mo><mml:mi>M</mml:mi><mml:mo>+</mml:mo><mml:msub><mml:mi>M</mml:mi><mml:mi>x</mml:mi></mml:msub><mml:msub><mml:mi>M</mml:mi><mml:mi>z</mml:mi></mml:msub></mml:mrow></mml:mrow></mml:math></inline-formula>; the complexity of different methods for 2-D DOA estimation is summarized as <xref rid="sensors-25-05583-t001" ref-type="table">Table 1</xref>.</p><p>It can be seen that the subspace-based method exhibits significantly lower complexity than both SPA and the proposed method, with the complexity of all the algorithms primarily influenced by the number of sensors.</p><p>In addition, this section evaluates the effectiveness of the ADMM algorithm in reducing the complexity of the optimization process through simulation experiments. <xref rid="sensors-25-05583-f006" ref-type="fig">Figure 6</xref> compares the average running time of the proposed method implemented via the SDP3 solver and ADMM with the number of sensors <inline-formula><mml:math id="mm272" overflow="scroll"><mml:mrow><mml:mrow><mml:msub><mml:mi>M</mml:mi><mml:mi>x</mml:mi></mml:msub><mml:mo>=</mml:mo><mml:mrow><mml:mo>{</mml:mo><mml:mn>3</mml:mn><mml:mo>,</mml:mo><mml:mn>5</mml:mn><mml:mo>,</mml:mo><mml:mn>7</mml:mn><mml:mo>,</mml:mo><mml:mn>8</mml:mn><mml:mo>,</mml:mo><mml:mn>11</mml:mn><mml:mo>,</mml:mo><mml:mn>13</mml:mn><mml:mo>,</mml:mo><mml:mn>15</mml:mn><mml:mo>}</mml:mo></mml:mrow><mml:mo>,</mml:mo><mml:msub><mml:mi>M</mml:mi><mml:mi>z</mml:mi></mml:msub><mml:mo>=</mml:mo><mml:msub><mml:mi>M</mml:mi><mml:mi>x</mml:mi></mml:msub></mml:mrow></mml:mrow></mml:math></inline-formula>, <inline-formula><mml:math id="mm273" overflow="scroll"><mml:mrow><mml:mrow><mml:mi>L</mml:mi><mml:mo>=</mml:mo><mml:mn>200</mml:mn></mml:mrow></mml:mrow></mml:math></inline-formula>, and <inline-formula><mml:math id="mm274" overflow="scroll"><mml:mrow><mml:mrow><mml:mi>SNR</mml:mi><mml:mspace width="-0.166667em"/><mml:mo>=</mml:mo><mml:mspace width="-0.166667em"/><mml:mrow><mml:mn>0</mml:mn><mml:mi>dB</mml:mi></mml:mrow></mml:mrow></mml:mrow></mml:math></inline-formula>. Computational costs of the ESPRIT and the SPA methods are also exhibited for comparison. Compared to the SDP3 solver, ADMM achieves significant computational savings, consistent with theoretical expectations. Besides, ADMM termination criteria critically govern accuracy&#8211;complexity tradeoffs, enabling tunable performance balancing. Although the proposed method exhibits higher complexity than others, the practical complexity gaps between SPA and the proposed method may narrow as SPA here omits pairing operations.</p></sec><sec id="sec6dot4-sensors-25-05583"><title>6.4. Resolution Performance of Closely Located Targets</title><p>Since the 2-D MUSIC method is capable of utilizing all the data in the L-shaped array, experiment 4 compares the spectral performance of the proposed method and 2-D MUSIC with limited snapshots (<inline-formula><mml:math id="mm275" overflow="scroll"><mml:mrow><mml:mrow><mml:mi>L</mml:mi><mml:mo>=</mml:mo><mml:mn>6</mml:mn></mml:mrow></mml:mrow></mml:math></inline-formula>). <inline-formula><mml:math id="mm276" overflow="scroll"><mml:mrow><mml:mrow><mml:mi>K</mml:mi><mml:mo>=</mml:mo><mml:mn>4</mml:mn></mml:mrow></mml:mrow></mml:math></inline-formula> uncorrelated targets impinge on the system with <inline-formula><mml:math id="mm277" overflow="scroll"><mml:mrow><mml:mrow><mml:msub><mml:mi>M</mml:mi><mml:mi>x</mml:mi></mml:msub><mml:mo>=</mml:mo><mml:mn>10</mml:mn></mml:mrow></mml:mrow></mml:math></inline-formula>, <inline-formula><mml:math id="mm278" overflow="scroll"><mml:mrow><mml:mrow><mml:msub><mml:mi>M</mml:mi><mml:mi>z</mml:mi></mml:msub><mml:mo>=</mml:mo><mml:mn>10</mml:mn></mml:mrow></mml:mrow></mml:math></inline-formula> sensors at <inline-formula><mml:math id="mm279" overflow="scroll"><mml:mrow><mml:mrow><mml:mi>SNR</mml:mi><mml:mo>=</mml:mo><mml:mn>20</mml:mn><mml:mspace width="4.pt"/><mml:mi>dB</mml:mi></mml:mrow></mml:mrow></mml:math></inline-formula>. Uniform grids span <inline-formula><mml:math id="mm280" overflow="scroll"><mml:mrow><mml:msup><mml:mn>0</mml:mn><mml:mo>&#8728;</mml:mo></mml:msup></mml:mrow></mml:math></inline-formula> to <inline-formula><mml:math id="mm281" overflow="scroll"><mml:mrow><mml:msup><mml:mn>180</mml:mn><mml:mo>&#8728;</mml:mo></mml:msup></mml:mrow></mml:math></inline-formula> with 1800 points per dimension, and the results are normalized for comparision. <xref rid="sensors-25-05583-f005" ref-type="fig">Figure 5</xref> depicts the spectra under varying angular separations.</p><p>Both methods demonstrate comparable performance for targets with large angular separation (<xref rid="sensors-25-05583-f007" ref-type="fig">Figure 7</xref>a,d). However, as separation decreases, performance deterioration occurs, manifesting as inaccurate target identification or partial estimation failure. It is attributed to heightened correlation between closely spaced targets. Crucially, the proposed method maintains superiority over 2-D MUSIC at moderate separations (<xref rid="sensors-25-05583-f007" ref-type="fig">Figure 7</xref>b,e). Additionally, the resolution of MUSIC depends on grid density, inducing a larger computational load for better performance.</p></sec></sec><sec sec-type="conclusions" id="sec7-sensors-25-05583"><title>7. Conclusions</title><p>This paper presents a 2-D DOA estimation method for L-shaped arrays via multidimensional structured covariance matrix completion. By exploiting the intrinsic connection between the MLT structure and the ideal covariance matrix, we formulate an SDP problem incorporating joint sparsity and low-rank constraints. Unlike existing sparse methods that rely solely on cross-correlation matrices, the proposed method leverages the redundant information embedded in the whole covariance matrix to enhance estimation accuracy. An efficient ADMM implementation reduces computational complexity. Simulation results validate that the proposed method is capable of identifying more targets than current methods and achieving higher estimation accuracy attributed to its lower CRB. Besides, the proposed method exhibits better resolution for closely spaced targets with limited snapshots compared to 2-D MUSIC. Although the ADMM algorithm is capable of lowering the computational complexity of the proposed method, its complexity is still higher than that of most current methods. In future research, we will explore methods to further reduce the complexity and study the necessary and sufficient condition for the unique Vandermonde decomposition of an MLT matrix. </p></sec></body><back><fn-group><fn><p><bold>Disclaimer/Publisher&#8217;s Note:</bold> The statements, opinions and data contained in all publications are solely those of the individual author(s) and contributor(s) and not of MDPI and/or the editor(s). MDPI and/or the editor(s) disclaim responsibility for any injury to people or property resulting from any ideas, methods, instructions or products referred to in the content.</p></fn></fn-group><notes><title>Author Contributions</title><p>Methodology and writing&#8212;original draft preparation, H.Z.; writing&#8212;review and editing and supervision, J.S.; writing&#8212;review and editing, Z.L.; formal analysis, S.S. All authors have read and agreed to the published version of the manuscript.</p></notes><notes><title>Institutional Review Board Statement</title><p>Not applicable.</p></notes><notes><title>Informed Consent Statement</title><p>Not applicable.</p></notes><notes notes-type="data-availability"><title>Data Availability Statement</title><p>Data are contained within the article.</p></notes><notes notes-type="COI-statement"><title>Conflicts of Interest</title><p>The authors declare no conflicts of interest.</p></notes><app-group><app id="app1-sensors-25-05583"><title>Appendix A. Proof of Proposition 1</title><p>For brevity, we substitute the MLT matrix <inline-formula><mml:math id="mm282" overflow="scroll"><mml:mrow><mml:msub><mml:mi mathvariant="bold-italic">T</mml:mi><mml:mi>N</mml:mi></mml:msub></mml:mrow></mml:math></inline-formula> with <inline-formula><mml:math id="mm283" overflow="scroll"><mml:mrow><mml:mi mathvariant="bold-italic">T</mml:mi></mml:mrow></mml:math></inline-formula> in this Appendix.</p><statement><label><bold>Lemma</bold>&#160;<bold>A1.</bold></label><p>
<italic toggle="yes">The following holds for arbitrary vectors <inline-formula><mml:math id="mm284" overflow="scroll"><mml:mrow><mml:msubsup><mml:mrow><mml:mo>{</mml:mo><mml:msub><mml:mi mathvariant="bold-italic">a</mml:mi><mml:mi>i</mml:mi></mml:msub><mml:mo>}</mml:mo></mml:mrow><mml:mrow><mml:mi>i</mml:mi><mml:mo>=</mml:mo><mml:mn>1</mml:mn></mml:mrow><mml:mi>n</mml:mi></mml:msubsup></mml:mrow></mml:math></inline-formula>:</italic>
<disp-formula id="FD47-sensors-25-05583"><label>(A1)</label><mml:math id="mm285" display="block" overflow="scroll"><mml:mrow><mml:mtable displaystyle="true"><mml:mtr><mml:mtd columnalign="right"><mml:mrow><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:msub><mml:mi mathvariant="bold-italic">a</mml:mi><mml:mn>1</mml:mn></mml:msub><mml:mspace width="-0.166667em"/><mml:mo>&#8855;</mml:mo><mml:mspace width="-0.166667em"/><mml:mo>&#8943;</mml:mo><mml:mspace width="-0.166667em"/><mml:mo>&#8855;</mml:mo><mml:mspace width="-0.166667em"/><mml:msub><mml:mi mathvariant="bold-italic">a</mml:mi><mml:mi>n</mml:mi></mml:msub><mml:mo stretchy="false">)</mml:mo></mml:mrow><mml:msup><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:msub><mml:mi mathvariant="bold-italic">a</mml:mi><mml:mn>1</mml:mn></mml:msub><mml:mspace width="-0.166667em"/><mml:mo>&#8855;</mml:mo><mml:mspace width="-0.166667em"/><mml:mo>&#8943;</mml:mo><mml:mspace width="-0.166667em"/><mml:mo>&#8855;</mml:mo><mml:mspace width="-0.166667em"/><mml:msub><mml:mi mathvariant="bold-italic">a</mml:mi><mml:mi>n</mml:mi></mml:msub><mml:mo stretchy="false">)</mml:mo></mml:mrow><mml:mi>H</mml:mi></mml:msup><mml:mspace width="-0.166667em"/><mml:mo>=</mml:mo><mml:mspace width="-0.166667em"/><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:msub><mml:mi mathvariant="bold-italic">a</mml:mi><mml:mn>1</mml:mn></mml:msub><mml:msubsup><mml:mi mathvariant="bold-italic">a</mml:mi><mml:mrow><mml:mn>1</mml:mn></mml:mrow><mml:mi>H</mml:mi></mml:msubsup><mml:mspace width="-0.166667em"/><mml:mo>&#8855;</mml:mo><mml:mspace width="-0.166667em"/><mml:mo>&#8943;</mml:mo><mml:mspace width="-0.166667em"/><mml:mo>&#8855;</mml:mo><mml:mspace width="-0.166667em"/><mml:msub><mml:mi mathvariant="bold-italic">a</mml:mi><mml:mi>n</mml:mi></mml:msub><mml:msubsup><mml:mi mathvariant="bold-italic">a</mml:mi><mml:mrow><mml:mi>n</mml:mi></mml:mrow><mml:mi>H</mml:mi></mml:msubsup><mml:mo stretchy="false">)</mml:mo></mml:mrow><mml:mo>.</mml:mo></mml:mrow></mml:mtd></mml:mtr></mml:mtable></mml:mrow></mml:math></disp-formula>
</p></statement><statement><label><bold>Proof</bold>&#160;<bold>of</bold>&#160;<bold>Lemma</bold>&#160;<bold>A1.</bold></label><p>Let <inline-formula><mml:math id="mm286" overflow="scroll"><mml:mrow><mml:mrow><mml:msub><mml:mi mathvariant="bold-italic">a</mml:mi><mml:mi>i</mml:mi></mml:msub><mml:msubsup><mml:mi mathvariant="bold-italic">a</mml:mi><mml:mrow><mml:mi>i</mml:mi></mml:mrow><mml:mi>H</mml:mi></mml:msubsup><mml:mo>=</mml:mo><mml:msub><mml:mi mathvariant="bold-italic">A</mml:mi><mml:mi>i</mml:mi></mml:msub></mml:mrow></mml:mrow></mml:math></inline-formula> and <inline-formula><mml:math id="mm287" overflow="scroll"><mml:mrow><mml:mrow><mml:msub><mml:mi mathvariant="bold-italic">B</mml:mi><mml:mi>i</mml:mi></mml:msub><mml:mo>=</mml:mo><mml:msub><mml:mi mathvariant="bold-italic">a</mml:mi><mml:mn>1</mml:mn></mml:msub><mml:mo>&#8855;</mml:mo><mml:mo>&#8943;</mml:mo><mml:mo>&#8855;</mml:mo><mml:msub><mml:mi mathvariant="bold-italic">a</mml:mi><mml:mi>i</mml:mi></mml:msub></mml:mrow></mml:mrow></mml:math></inline-formula> for ease of notation. We make use of the basic properties of the Kronecker product as follows:<disp-formula id="FD48-sensors-25-05583"><label>(A2)</label><mml:math id="mm288" display="block" overflow="scroll"><mml:mrow><mml:mrow><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mi mathvariant="bold-italic">A</mml:mi><mml:mi mathvariant="bold-italic">B</mml:mi><mml:mo stretchy="false">)</mml:mo></mml:mrow><mml:mo>&#8855;</mml:mo><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mi mathvariant="bold-italic">C</mml:mi><mml:mi mathvariant="bold-italic">D</mml:mi><mml:mo stretchy="false">)</mml:mo></mml:mrow><mml:mo>=</mml:mo><mml:mi mathvariant="bold-italic">AC</mml:mi><mml:mo>&#8855;</mml:mo><mml:mi mathvariant="bold-italic">BD</mml:mi><mml:mo>,</mml:mo><mml:mspace width="1.em"/><mml:msup><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mi mathvariant="bold-italic">A</mml:mi><mml:mo>&#8855;</mml:mo><mml:mi mathvariant="bold-italic">B</mml:mi><mml:mo stretchy="false">)</mml:mo></mml:mrow><mml:mi>H</mml:mi></mml:msup><mml:mo>=</mml:mo><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:msup><mml:mi mathvariant="bold-italic">A</mml:mi><mml:mi>H</mml:mi></mml:msup><mml:mo>&#8855;</mml:mo><mml:msup><mml:mi mathvariant="bold-italic">B</mml:mi><mml:mi>H</mml:mi></mml:msup><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:mrow></mml:mrow></mml:math></disp-formula></p><p>According to properties above, it is intuitive that the lemma holds for <inline-formula><mml:math id="mm289" overflow="scroll"><mml:mrow><mml:mrow><mml:mi>n</mml:mi><mml:mo>=</mml:mo><mml:mn>1</mml:mn><mml:mo>,</mml:mo><mml:mn>2</mml:mn></mml:mrow></mml:mrow></mml:math></inline-formula>, and the left equation of (<xref rid="FD47-sensors-25-05583" ref-type="disp-formula">A1</xref>) can easily be simplified as follows:<disp-formula id="FD49-sensors-25-05583"><label>(A3)</label><mml:math id="mm290" display="block" overflow="scroll"><mml:mrow><mml:mrow><mml:mi>left</mml:mi><mml:mspace width="4.pt"/><mml:mi>side</mml:mi><mml:mo>=</mml:mo><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:msub><mml:mi mathvariant="bold-italic">a</mml:mi><mml:mn>1</mml:mn></mml:msub><mml:mo>&#8855;</mml:mo><mml:mo>&#8943;</mml:mo><mml:mo>&#8855;</mml:mo><mml:msub><mml:mi mathvariant="bold-italic">a</mml:mi><mml:mi>n</mml:mi></mml:msub><mml:mo stretchy="false">)</mml:mo></mml:mrow><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:msubsup><mml:mi mathvariant="bold-italic">a</mml:mi><mml:mn>1</mml:mn><mml:mi>H</mml:mi></mml:msubsup><mml:mo>&#8855;</mml:mo><mml:mo>&#8943;</mml:mo><mml:mo>&#8855;</mml:mo><mml:msubsup><mml:mi mathvariant="bold-italic">a</mml:mi><mml:mi>n</mml:mi><mml:mi>H</mml:mi></mml:msubsup><mml:mo stretchy="false">)</mml:mo></mml:mrow><mml:mo>.</mml:mo></mml:mrow></mml:mrow></mml:math></disp-formula>Then suppose the lemma holds for <inline-formula><mml:math id="mm291" overflow="scroll"><mml:mrow><mml:mrow><mml:mi>n</mml:mi><mml:mo>=</mml:mo><mml:mi>m</mml:mi><mml:mo stretchy="false">(</mml:mo><mml:mi>m</mml:mi><mml:mo>&#8805;</mml:mo><mml:mn>2</mml:mn><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:mrow></mml:math></inline-formula>, written as follows:<disp-formula id="FD50-sensors-25-05583"><label>(A4)</label><mml:math id="mm292" display="block" overflow="scroll"><mml:mrow><mml:mrow><mml:msub><mml:mi mathvariant="bold-italic">B</mml:mi><mml:mi>m</mml:mi></mml:msub><mml:msubsup><mml:mi mathvariant="bold-italic">B</mml:mi><mml:mi>m</mml:mi><mml:mi>H</mml:mi></mml:msubsup><mml:mo>=</mml:mo><mml:msub><mml:mi mathvariant="bold-italic">A</mml:mi><mml:mn>1</mml:mn></mml:msub><mml:mo>&#8855;</mml:mo><mml:mo>&#8943;</mml:mo><mml:mo>&#8855;</mml:mo><mml:msub><mml:mi mathvariant="bold-italic">A</mml:mi><mml:mi>m</mml:mi></mml:msub><mml:mo>,</mml:mo></mml:mrow></mml:mrow></mml:math></disp-formula>
which is sufficient to prove that the lemma also holds for <inline-formula><mml:math id="mm293" overflow="scroll"><mml:mrow><mml:mrow><mml:mi>n</mml:mi><mml:mo>=</mml:mo><mml:mi>m</mml:mi><mml:mo>+</mml:mo><mml:mn>1</mml:mn></mml:mrow></mml:mrow></mml:math></inline-formula> as follows:<disp-formula id="FD51-sensors-25-05583"><label>(A5)</label><mml:math id="mm294" display="block" overflow="scroll"><mml:mrow><mml:mtable displaystyle="true"><mml:mtr><mml:mtd columnalign="right"><mml:mrow><mml:msub><mml:mi mathvariant="bold-italic">B</mml:mi><mml:mrow><mml:mi>m</mml:mi><mml:mo>+</mml:mo><mml:mn>1</mml:mn></mml:mrow></mml:msub><mml:msubsup><mml:mi mathvariant="bold-italic">B</mml:mi><mml:mrow><mml:mi>m</mml:mi><mml:mo>+</mml:mo><mml:mn>1</mml:mn></mml:mrow><mml:mi>H</mml:mi></mml:msubsup></mml:mrow></mml:mtd><mml:mtd columnalign="left"><mml:mrow><mml:mo>=</mml:mo><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:msub><mml:mi mathvariant="bold-italic">B</mml:mi><mml:mi>m</mml:mi></mml:msub><mml:mo>&#8855;</mml:mo><mml:msub><mml:mi mathvariant="bold-italic">a</mml:mi><mml:mrow><mml:mi>m</mml:mi><mml:mo>+</mml:mo><mml:mn>1</mml:mn></mml:mrow></mml:msub><mml:mo stretchy="false">)</mml:mo></mml:mrow><mml:msup><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:msub><mml:mi mathvariant="bold-italic">B</mml:mi><mml:mi>m</mml:mi></mml:msub><mml:mo>&#8855;</mml:mo><mml:msub><mml:mi mathvariant="bold-italic">a</mml:mi><mml:mrow><mml:mi>m</mml:mi><mml:mo>+</mml:mo><mml:mn>1</mml:mn></mml:mrow></mml:msub><mml:mo stretchy="false">)</mml:mo></mml:mrow><mml:mi>H</mml:mi></mml:msup></mml:mrow></mml:mtd></mml:mtr><mml:mtr><mml:mtd columnalign="right"><mml:mspace width="1.em"/></mml:mtd><mml:mtd columnalign="left"><mml:mrow><mml:mo>=</mml:mo><mml:mo stretchy="false">(</mml:mo><mml:msub><mml:mi mathvariant="bold-italic">a</mml:mi><mml:mn>1</mml:mn></mml:msub><mml:msubsup><mml:mi mathvariant="bold-italic">a</mml:mi><mml:mrow><mml:mn>1</mml:mn></mml:mrow><mml:mi>H</mml:mi></mml:msubsup><mml:mo>&#8855;</mml:mo><mml:mo>&#8943;</mml:mo><mml:mo>&#8855;</mml:mo><mml:msub><mml:mi mathvariant="bold-italic">a</mml:mi><mml:mrow><mml:mi>m</mml:mi><mml:mo>+</mml:mo><mml:mn>1</mml:mn></mml:mrow></mml:msub><mml:msubsup><mml:mi mathvariant="bold-italic">a</mml:mi><mml:mrow><mml:mi>m</mml:mi><mml:mo>+</mml:mo><mml:mn>1</mml:mn></mml:mrow><mml:mi>H</mml:mi></mml:msubsup><mml:mo stretchy="false">)</mml:mo><mml:mo>.</mml:mo></mml:mrow></mml:mtd></mml:mtr></mml:mtable></mml:mrow></mml:math></disp-formula>According to mathematical induction method, the lemma is proved. &#9633;</p></statement><p>We can prove Proposition 1 as follows. Without loss of generality, assume that <inline-formula><mml:math id="mm295" overflow="scroll"><mml:mrow><mml:mrow><mml:mi>n</mml:mi><mml:mo>&#8805;</mml:mo><mml:mi>m</mml:mi></mml:mrow></mml:mrow></mml:math></inline-formula> in <inline-formula><mml:math id="mm296" overflow="scroll"><mml:mrow><mml:msub><mml:mi mathvariant="bold-italic">R</mml:mi><mml:mrow><mml:mi>m</mml:mi><mml:mi>n</mml:mi></mml:mrow></mml:msub></mml:mrow></mml:math></inline-formula> and let <inline-formula><mml:math id="mm297" overflow="scroll"><mml:mrow><mml:mrow><mml:msub><mml:mi mathvariant="bold-italic">T</mml:mi><mml:mi>q</mml:mi></mml:msub><mml:mo>&#8712;</mml:mo><mml:msup><mml:mi mathvariant="double-struck">C</mml:mi><mml:mrow><mml:msub><mml:mi>N</mml:mi><mml:mi>q</mml:mi></mml:msub><mml:mo>&#215;</mml:mo><mml:msub><mml:mi>N</mml:mi><mml:mi>q</mml:mi></mml:msub></mml:mrow></mml:msup></mml:mrow></mml:mrow></mml:math></inline-formula> denotes a submatrix of <inline-formula><mml:math id="mm298" overflow="scroll"><mml:mrow><mml:mi mathvariant="bold-italic">T</mml:mi></mml:mrow></mml:math></inline-formula> as follows:<disp-formula id="FD52-sensors-25-05583"><label>(A6)</label><mml:math id="mm299" display="block" overflow="scroll"><mml:mrow><mml:mtable displaystyle="true"><mml:mtr><mml:mtd columnalign="right"><mml:msub><mml:mi mathvariant="bold-italic">T</mml:mi><mml:mi>q</mml:mi></mml:msub></mml:mtd><mml:mtd columnalign="left"><mml:mstyle scriptlevel="0" displaystyle="true"><mml:mrow><mml:mo>=</mml:mo><mml:mi mathvariant="bold-italic">T</mml:mi><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mn>1</mml:mn><mml:mo>:</mml:mo><mml:msub><mml:mi>N</mml:mi><mml:mi>q</mml:mi></mml:msub><mml:mo>,</mml:mo><mml:mn>1</mml:mn><mml:mo>:</mml:mo><mml:msub><mml:mi>N</mml:mi><mml:mi>q</mml:mi></mml:msub><mml:mo stretchy="false">)</mml:mo></mml:mrow><mml:mo>=</mml:mo><mml:munderover><mml:mo>&#8721;</mml:mo><mml:mrow><mml:mi>k</mml:mi><mml:mo>=</mml:mo><mml:mn>1</mml:mn></mml:mrow><mml:mi>r</mml:mi></mml:munderover><mml:msub><mml:mi>p</mml:mi><mml:mi>k</mml:mi></mml:msub><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:msub><mml:mi mathvariant="bold-italic">a</mml:mi><mml:mrow><mml:mi>q</mml:mi><mml:mi>k</mml:mi></mml:mrow></mml:msub><mml:mo>&#8855;</mml:mo><mml:mo>&#8943;</mml:mo><mml:mo>&#8855;</mml:mo><mml:msub><mml:mi mathvariant="bold-italic">a</mml:mi><mml:mrow><mml:mn>1</mml:mn><mml:mi>k</mml:mi></mml:mrow></mml:msub><mml:mo stretchy="false">)</mml:mo></mml:mrow><mml:msup><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:msub><mml:mi mathvariant="bold-italic">a</mml:mi><mml:mrow><mml:mi>q</mml:mi><mml:mi>k</mml:mi></mml:mrow></mml:msub><mml:mo>&#8855;</mml:mo><mml:mo>&#8943;</mml:mo><mml:mo>&#8855;</mml:mo><mml:msub><mml:mi mathvariant="bold-italic">a</mml:mi><mml:mrow><mml:mn>1</mml:mn><mml:mi>k</mml:mi></mml:mrow></mml:msub><mml:mo stretchy="false">)</mml:mo></mml:mrow><mml:mi>H</mml:mi></mml:msup></mml:mrow></mml:mstyle></mml:mtd></mml:mtr><mml:mtr><mml:mtd columnalign="right"><mml:mspace width="1.em"/></mml:mtd><mml:mtd columnalign="left"><mml:mstyle scriptlevel="0" displaystyle="true"><mml:mrow><mml:mo>=</mml:mo><mml:munderover><mml:mo>&#8721;</mml:mo><mml:mrow><mml:mi>k</mml:mi><mml:mo>=</mml:mo><mml:mn>1</mml:mn></mml:mrow><mml:mi>r</mml:mi></mml:munderover><mml:msub><mml:mi>p</mml:mi><mml:mi>k</mml:mi></mml:msub><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:msub><mml:mi mathvariant="bold-italic">a</mml:mi><mml:mrow><mml:mi>q</mml:mi><mml:mi>k</mml:mi></mml:mrow></mml:msub><mml:msubsup><mml:mi mathvariant="bold-italic">a</mml:mi><mml:mrow><mml:mi>q</mml:mi><mml:mi>k</mml:mi></mml:mrow><mml:mi>H</mml:mi></mml:msubsup><mml:mo>&#8855;</mml:mo><mml:mo>&#8943;</mml:mo><mml:mo>&#8855;</mml:mo><mml:msub><mml:mi mathvariant="bold-italic">a</mml:mi><mml:mrow><mml:mn>1</mml:mn><mml:mi>k</mml:mi></mml:mrow></mml:msub><mml:msubsup><mml:mi mathvariant="bold-italic">a</mml:mi><mml:mrow><mml:mn>1</mml:mn><mml:mi>k</mml:mi></mml:mrow><mml:mi>H</mml:mi></mml:msubsup><mml:mo stretchy="false">)</mml:mo></mml:mrow><mml:mo>,</mml:mo></mml:mrow></mml:mstyle></mml:mtd></mml:mtr></mml:mtable></mml:mrow></mml:math></disp-formula>
where <inline-formula><mml:math id="mm300" overflow="scroll"><mml:mrow><mml:mrow><mml:mi>rank</mml:mi><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mi mathvariant="bold-italic">T</mml:mi><mml:mo stretchy="false">)</mml:mo></mml:mrow><mml:mo>=</mml:mo><mml:mi>r</mml:mi><mml:mo>&lt;</mml:mo><mml:mi>min</mml:mi><mml:msubsup><mml:mrow><mml:mo>{</mml:mo><mml:msub><mml:mi>M</mml:mi><mml:mi>n</mml:mi></mml:msub><mml:mo>}</mml:mo></mml:mrow><mml:mrow><mml:mi>n</mml:mi><mml:mo>=</mml:mo><mml:mn>1</mml:mn></mml:mrow><mml:mi>N</mml:mi></mml:msubsup></mml:mrow></mml:mrow></mml:math></inline-formula>, then define <inline-formula><mml:math id="mm301" overflow="scroll"><mml:mrow><mml:msub><mml:mi mathvariant="bold-italic">Q</mml:mi><mml:mrow><mml:mi>q</mml:mi><mml:mi>k</mml:mi></mml:mrow></mml:msub></mml:mrow></mml:math></inline-formula> as follows:<disp-formula id="FD53-sensors-25-05583"><label>(A7)</label><mml:math id="mm302" display="block" overflow="scroll"><mml:mrow><mml:mrow><mml:msub><mml:mi mathvariant="bold-italic">Q</mml:mi><mml:mrow><mml:mi>q</mml:mi><mml:mi>k</mml:mi></mml:mrow></mml:msub><mml:mo>=</mml:mo><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:msub><mml:mi mathvariant="bold-italic">a</mml:mi><mml:mrow><mml:mi>q</mml:mi><mml:mi>k</mml:mi></mml:mrow></mml:msub><mml:msubsup><mml:mi mathvariant="bold-italic">a</mml:mi><mml:mrow><mml:mi>q</mml:mi><mml:mi>k</mml:mi></mml:mrow><mml:mi>H</mml:mi></mml:msubsup><mml:mo>&#8855;</mml:mo><mml:mo>&#8943;</mml:mo><mml:mo>&#8855;</mml:mo><mml:msub><mml:mi mathvariant="bold-italic">a</mml:mi><mml:mrow><mml:mn>1</mml:mn><mml:mi>k</mml:mi></mml:mrow></mml:msub><mml:msubsup><mml:mi mathvariant="bold-italic">a</mml:mi><mml:mrow><mml:mn>1</mml:mn><mml:mi>k</mml:mi></mml:mrow><mml:mi>H</mml:mi></mml:msubsup><mml:mo stretchy="false">)</mml:mo></mml:mrow><mml:mo>&#8712;</mml:mo><mml:msup><mml:mi mathvariant="double-struck">C</mml:mi><mml:mrow><mml:msub><mml:mi>N</mml:mi><mml:mi>q</mml:mi></mml:msub><mml:mo>&#215;</mml:mo><mml:msub><mml:mi>N</mml:mi><mml:mi>q</mml:mi></mml:msub></mml:mrow></mml:msup><mml:mo>,</mml:mo><mml:mspace width="1.em"/><mml:mi>q</mml:mi><mml:mo>&#8804;</mml:mo><mml:mi>N</mml:mi><mml:mo>,</mml:mo></mml:mrow></mml:mrow></mml:math></disp-formula>
where <inline-formula><mml:math id="mm303" overflow="scroll"><mml:mrow><mml:mrow><mml:msub><mml:mi mathvariant="bold-italic">a</mml:mi><mml:mrow><mml:mi>n</mml:mi><mml:mi>k</mml:mi></mml:mrow></mml:msub><mml:mo>=</mml:mo><mml:mrow><mml:mo>[</mml:mo><mml:mn>1</mml:mn><mml:mo>,</mml:mo><mml:msub><mml:mi>&#981;</mml:mi><mml:mrow><mml:mi>n</mml:mi><mml:mi>k</mml:mi></mml:mrow></mml:msub><mml:mo>,</mml:mo><mml:mo>&#8943;</mml:mo><mml:mo>,</mml:mo><mml:msubsup><mml:mi>&#981;</mml:mi><mml:mrow><mml:mi>n</mml:mi><mml:mi>k</mml:mi></mml:mrow><mml:mrow><mml:msub><mml:mi>M</mml:mi><mml:mi>n</mml:mi></mml:msub><mml:mo>&#8722;</mml:mo><mml:mn>1</mml:mn></mml:mrow></mml:msubsup><mml:mo>]</mml:mo></mml:mrow></mml:mrow></mml:mrow></mml:math></inline-formula>, <inline-formula><mml:math id="mm304" overflow="scroll"><mml:mrow><mml:mrow><mml:msub><mml:mi>&#981;</mml:mi><mml:mrow><mml:mi>n</mml:mi><mml:mi>k</mml:mi></mml:mrow></mml:msub><mml:mo>=</mml:mo><mml:msup><mml:mi>e</mml:mi><mml:mrow><mml:mi>i</mml:mi><mml:mn>2</mml:mn><mml:mi>&#960;</mml:mi><mml:msub><mml:mi>f</mml:mi><mml:mrow><mml:mi>n</mml:mi><mml:mi>k</mml:mi></mml:mrow></mml:msub></mml:mrow></mml:msup></mml:mrow></mml:mrow></mml:math></inline-formula>.</p><p>It is intuitive that <inline-formula><mml:math id="mm305" overflow="scroll"><mml:mrow><mml:msub><mml:mi mathvariant="bold-italic">Q</mml:mi><mml:mrow><mml:mi>n</mml:mi><mml:mi>k</mml:mi></mml:mrow></mml:msub></mml:mrow></mml:math></inline-formula> defined as (<xref rid="FD53-sensors-25-05583" ref-type="disp-formula">A7</xref>) can be calculated recursively as follows: <disp-formula id="FD54-sensors-25-05583"><label>(A8)</label><mml:math id="mm306" display="block" overflow="scroll"><mml:mrow><mml:mtable displaystyle="true"><mml:mtr><mml:mtd columnalign="right"><mml:msub><mml:mi mathvariant="bold-italic">Q</mml:mi><mml:mrow><mml:mi>n</mml:mi><mml:mi>k</mml:mi></mml:mrow></mml:msub></mml:mtd><mml:mtd columnalign="left"><mml:mrow><mml:mspace width="-0.166667em"/><mml:mo>=</mml:mo><mml:mspace width="-0.166667em"/><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:msub><mml:mi mathvariant="bold-italic">a</mml:mi><mml:mrow><mml:mi>n</mml:mi><mml:mi>k</mml:mi></mml:mrow></mml:msub><mml:msubsup><mml:mi mathvariant="bold-italic">a</mml:mi><mml:mrow><mml:mi>n</mml:mi><mml:mi>k</mml:mi></mml:mrow><mml:mi>H</mml:mi></mml:msubsup><mml:mo>&#8855;</mml:mo><mml:msub><mml:mi mathvariant="bold-italic">Q</mml:mi><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mi>n</mml:mi><mml:mo>&#8722;</mml:mo><mml:mn>1</mml:mn><mml:mo stretchy="false">)</mml:mo><mml:mi>k</mml:mi></mml:mrow></mml:msub><mml:mo stretchy="false">)</mml:mo></mml:mrow><mml:mspace width="-0.166667em"/><mml:mo>=</mml:mo><mml:mspace width="-0.166667em"/><mml:mfenced open="[" close="]"><mml:mtable><mml:mtr><mml:mtd><mml:mrow><mml:mn>1</mml:mn><mml:msub><mml:mi mathvariant="bold-italic">Q</mml:mi><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mi>n</mml:mi><mml:mo>&#8722;</mml:mo><mml:mn>1</mml:mn><mml:mo stretchy="false">)</mml:mo><mml:mi>k</mml:mi></mml:mrow></mml:msub></mml:mrow></mml:mtd><mml:mtd><mml:mrow><mml:mspace width="-0.166667em"/><mml:msubsup><mml:mi>&#981;</mml:mi><mml:mrow><mml:mi>n</mml:mi><mml:mi>k</mml:mi></mml:mrow><mml:mrow><mml:mo>&#8722;</mml:mo><mml:mn>1</mml:mn></mml:mrow></mml:msubsup><mml:msub><mml:mi mathvariant="bold-italic">Q</mml:mi><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mi>n</mml:mi><mml:mo>&#8722;</mml:mo><mml:mn>1</mml:mn><mml:mo stretchy="false">)</mml:mo><mml:mi>k</mml:mi></mml:mrow></mml:msub></mml:mrow></mml:mtd><mml:mtd><mml:mrow><mml:mspace width="-0.166667em"/><mml:mo>&#8943;</mml:mo></mml:mrow></mml:mtd><mml:mtd><mml:mrow><mml:mspace width="-0.166667em"/><mml:msubsup><mml:mi>&#981;</mml:mi><mml:mrow><mml:mi>n</mml:mi><mml:mi>k</mml:mi></mml:mrow><mml:mrow><mml:mn>1</mml:mn><mml:mo>&#8722;</mml:mo><mml:msub><mml:mi>M</mml:mi><mml:mi>n</mml:mi></mml:msub></mml:mrow></mml:msubsup><mml:msub><mml:mi mathvariant="bold-italic">Q</mml:mi><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mi>n</mml:mi><mml:mo>&#8722;</mml:mo><mml:mn>1</mml:mn><mml:mo stretchy="false">)</mml:mo><mml:mi>k</mml:mi></mml:mrow></mml:msub></mml:mrow></mml:mtd></mml:mtr><mml:mtr><mml:mtd><mml:mrow><mml:msub><mml:mi>&#981;</mml:mi><mml:mrow><mml:mi>n</mml:mi><mml:mi>k</mml:mi></mml:mrow></mml:msub><mml:msub><mml:mi mathvariant="bold-italic">Q</mml:mi><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mi>n</mml:mi><mml:mo>&#8722;</mml:mo><mml:mn>1</mml:mn><mml:mo stretchy="false">)</mml:mo><mml:mi>k</mml:mi></mml:mrow></mml:msub></mml:mrow></mml:mtd><mml:mtd><mml:mrow><mml:mspace width="-0.166667em"/><mml:mn>1</mml:mn><mml:msub><mml:mi mathvariant="bold-italic">Q</mml:mi><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mi>n</mml:mi><mml:mo>&#8722;</mml:mo><mml:mn>1</mml:mn><mml:mo stretchy="false">)</mml:mo><mml:mi>k</mml:mi></mml:mrow></mml:msub></mml:mrow></mml:mtd><mml:mtd><mml:mrow><mml:mspace width="-0.166667em"/><mml:mo>&#8943;</mml:mo></mml:mrow></mml:mtd><mml:mtd><mml:mrow><mml:mspace width="-0.166667em"/><mml:msubsup><mml:mi>&#981;</mml:mi><mml:mrow><mml:mi>n</mml:mi><mml:mi>k</mml:mi></mml:mrow><mml:mrow><mml:mn>2</mml:mn><mml:mo>&#8722;</mml:mo><mml:msub><mml:mi>M</mml:mi><mml:mi>n</mml:mi></mml:msub></mml:mrow></mml:msubsup><mml:msub><mml:mi mathvariant="bold-italic">Q</mml:mi><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mi>n</mml:mi><mml:mo>&#8722;</mml:mo><mml:mn>1</mml:mn><mml:mo stretchy="false">)</mml:mo><mml:mi>k</mml:mi></mml:mrow></mml:msub></mml:mrow></mml:mtd></mml:mtr><mml:mtr><mml:mtd><mml:mo>&#8942;</mml:mo></mml:mtd><mml:mtd><mml:mrow><mml:mspace width="-0.166667em"/><mml:mo>&#8942;</mml:mo></mml:mrow></mml:mtd><mml:mtd><mml:mrow><mml:mspace width="-0.166667em"/><mml:mo>&#8945;</mml:mo></mml:mrow></mml:mtd><mml:mtd><mml:mrow><mml:mspace width="-0.166667em"/><mml:mo>&#8942;</mml:mo></mml:mrow></mml:mtd></mml:mtr><mml:mtr><mml:mtd><mml:mrow><mml:msubsup><mml:mi>&#981;</mml:mi><mml:mrow><mml:mi>n</mml:mi><mml:mi>k</mml:mi></mml:mrow><mml:mrow><mml:msub><mml:mi>M</mml:mi><mml:mi>n</mml:mi></mml:msub><mml:mo>&#8722;</mml:mo><mml:mn>1</mml:mn></mml:mrow></mml:msubsup><mml:msub><mml:mi mathvariant="bold-italic">Q</mml:mi><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mi>n</mml:mi><mml:mo>&#8722;</mml:mo><mml:mn>1</mml:mn><mml:mo stretchy="false">)</mml:mo><mml:mi>k</mml:mi></mml:mrow></mml:msub></mml:mrow></mml:mtd><mml:mtd><mml:mrow><mml:mspace width="-0.166667em"/><mml:msubsup><mml:mi>&#981;</mml:mi><mml:mrow><mml:mi>n</mml:mi><mml:mi>k</mml:mi></mml:mrow><mml:mrow><mml:msub><mml:mi>M</mml:mi><mml:mi>n</mml:mi></mml:msub><mml:mo>&#8722;</mml:mo><mml:mn>2</mml:mn></mml:mrow></mml:msubsup><mml:msub><mml:mi mathvariant="bold-italic">Q</mml:mi><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mi>n</mml:mi><mml:mo>&#8722;</mml:mo><mml:mn>1</mml:mn><mml:mo stretchy="false">)</mml:mo><mml:mi>k</mml:mi></mml:mrow></mml:msub></mml:mrow></mml:mtd><mml:mtd><mml:mrow><mml:mspace width="-0.166667em"/><mml:mo>&#8943;</mml:mo></mml:mrow></mml:mtd><mml:mtd><mml:mrow><mml:mspace width="-0.166667em"/><mml:mn>1</mml:mn><mml:msub><mml:mi mathvariant="bold-italic">Q</mml:mi><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mi>n</mml:mi><mml:mo>&#8722;</mml:mo><mml:mn>1</mml:mn><mml:mo stretchy="false">)</mml:mo><mml:mi>k</mml:mi></mml:mrow></mml:msub></mml:mrow></mml:mtd></mml:mtr></mml:mtable></mml:mfenced><mml:mo>.</mml:mo></mml:mrow></mml:mtd></mml:mtr></mml:mtable></mml:mrow></mml:math></disp-formula></p><p>Then it is clear that the first <inline-formula><mml:math id="mm307" overflow="scroll"><mml:mrow><mml:msub><mml:mi>N</mml:mi><mml:mrow><mml:mi>n</mml:mi><mml:mo>&#8722;</mml:mo><mml:mn>1</mml:mn></mml:mrow></mml:msub></mml:mrow></mml:math></inline-formula> rows of <inline-formula><mml:math id="mm308" overflow="scroll"><mml:mrow><mml:msub><mml:mi mathvariant="bold-italic">Q</mml:mi><mml:mrow><mml:mi>n</mml:mi><mml:mi>k</mml:mi></mml:mrow></mml:msub></mml:mrow></mml:math></inline-formula> are equal to <inline-formula><mml:math id="mm309" overflow="scroll"><mml:mrow><mml:mrow><mml:msubsup><mml:mi mathvariant="bold-italic">a</mml:mi><mml:mrow><mml:mi>n</mml:mi><mml:mi>k</mml:mi></mml:mrow><mml:mi>H</mml:mi></mml:msubsup><mml:mo>&#8855;</mml:mo><mml:msub><mml:mi mathvariant="bold-italic">Q</mml:mi><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mi>n</mml:mi><mml:mo>&#8722;</mml:mo><mml:mn>1</mml:mn><mml:mo stretchy="false">)</mml:mo><mml:mi>k</mml:mi></mml:mrow></mml:msub><mml:mo>&#8712;</mml:mo><mml:msup><mml:mi mathvariant="double-struck">C</mml:mi><mml:mrow><mml:msub><mml:mi>N</mml:mi><mml:mrow><mml:mi>n</mml:mi><mml:mo>&#8722;</mml:mo><mml:mn>1</mml:mn></mml:mrow></mml:msub><mml:mo>&#215;</mml:mo><mml:msub><mml:mi>M</mml:mi><mml:mi>n</mml:mi></mml:msub></mml:mrow></mml:msup></mml:mrow></mml:mrow></mml:math></inline-formula>. Therefore, we can get <inline-formula><mml:math id="mm310" overflow="scroll"><mml:mrow><mml:msubsup><mml:mi mathvariant="bold-italic">a</mml:mi><mml:mrow><mml:mi>n</mml:mi><mml:mi>k</mml:mi></mml:mrow><mml:mi>H</mml:mi></mml:msubsup></mml:mrow></mml:math></inline-formula> by taking interval values from the first row of <inline-formula><mml:math id="mm311" overflow="scroll"><mml:mrow><mml:msub><mml:mi mathvariant="bold-italic">Q</mml:mi><mml:mrow><mml:mi>n</mml:mi><mml:mi>k</mml:mi></mml:mrow></mml:msub></mml:mrow></mml:math></inline-formula> as follows:<disp-formula id="FD55-sensors-25-05583"><label>(A9)</label><mml:math id="mm312" display="block" overflow="scroll"><mml:mrow><mml:mrow><mml:msubsup><mml:mi mathvariant="bold-italic">a</mml:mi><mml:mrow><mml:mi>n</mml:mi><mml:mi>k</mml:mi></mml:mrow><mml:mi>H</mml:mi></mml:msubsup><mml:mo>=</mml:mo><mml:msub><mml:mi mathvariant="bold-italic">Q</mml:mi><mml:mrow><mml:mi>n</mml:mi><mml:mi>k</mml:mi></mml:mrow></mml:msub><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mn>1</mml:mn><mml:mo>,</mml:mo><mml:mn>1</mml:mn><mml:mo>:</mml:mo><mml:msub><mml:mi>N</mml:mi><mml:mrow><mml:mi>n</mml:mi><mml:mo>&#8722;</mml:mo><mml:mn>1</mml:mn></mml:mrow></mml:msub><mml:mo>:</mml:mo><mml:msub><mml:mi>N</mml:mi><mml:mi>n</mml:mi></mml:msub><mml:mo stretchy="false">)</mml:mo></mml:mrow><mml:mo>.</mml:mo></mml:mrow></mml:mrow></mml:math></disp-formula>In addition, under the assumption that <inline-formula><mml:math id="mm313" overflow="scroll"><mml:mrow><mml:mrow><mml:mi>n</mml:mi><mml:mo>&#8805;</mml:mo><mml:mi>m</mml:mi></mml:mrow></mml:mrow></mml:math></inline-formula>, <inline-formula><mml:math id="mm314" overflow="scroll"><mml:mrow><mml:mrow><mml:msub><mml:mi mathvariant="bold-italic">Q</mml:mi><mml:mrow><mml:mi>m</mml:mi><mml:mi>k</mml:mi></mml:mrow></mml:msub><mml:mo>=</mml:mo><mml:msub><mml:mi mathvariant="bold-italic">Q</mml:mi><mml:mrow><mml:mi>n</mml:mi><mml:mi>k</mml:mi></mml:mrow></mml:msub><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mn>1</mml:mn><mml:mo>:</mml:mo><mml:msub><mml:mi>N</mml:mi><mml:mi>m</mml:mi></mml:msub><mml:mo>,</mml:mo><mml:mn>1</mml:mn><mml:mo>:</mml:mo><mml:msub><mml:mi>N</mml:mi><mml:mi>m</mml:mi></mml:msub><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:mrow></mml:mrow></mml:math></inline-formula>, then the following is shown:<disp-formula id="FD56-sensors-25-05583"><label>(A10)</label><mml:math id="mm315" display="block" overflow="scroll"><mml:mrow><mml:mrow><mml:msub><mml:mi mathvariant="bold-italic">a</mml:mi><mml:mrow><mml:mi>m</mml:mi><mml:mi>k</mml:mi></mml:mrow></mml:msub><mml:mo>=</mml:mo><mml:msub><mml:mi mathvariant="bold-italic">Q</mml:mi><mml:mrow><mml:mi>n</mml:mi><mml:mi>k</mml:mi></mml:mrow></mml:msub><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mn>1</mml:mn><mml:mo>:</mml:mo><mml:msub><mml:mi>N</mml:mi><mml:mrow><mml:mi>m</mml:mi><mml:mo>&#8722;</mml:mo><mml:mn>1</mml:mn></mml:mrow></mml:msub><mml:mo>:</mml:mo><mml:msub><mml:mi>N</mml:mi><mml:mi>m</mml:mi></mml:msub><mml:mo>,</mml:mo><mml:mn>1</mml:mn><mml:mo stretchy="false">)</mml:mo></mml:mrow><mml:mo>.</mml:mo></mml:mrow></mml:mrow></mml:math></disp-formula>According to the results above, the following holds: <disp-formula id="FD57-sensors-25-05583"><label>(A11)</label><mml:math id="mm316" display="block" overflow="scroll"><mml:mrow><mml:mtable displaystyle="true"><mml:mtr><mml:mtd columnalign="right"><mml:msub><mml:mi mathvariant="bold-italic">R</mml:mi><mml:mrow><mml:mi>m</mml:mi><mml:mi>n</mml:mi></mml:mrow></mml:msub></mml:mtd><mml:mtd columnalign="left"><mml:mstyle scriptlevel="0" displaystyle="true"><mml:mrow><mml:mspace width="-0.166667em"/><mml:mo>=</mml:mo><mml:mspace width="-0.166667em"/><mml:munderover><mml:mo>&#8721;</mml:mo><mml:mrow><mml:mi>k</mml:mi><mml:mo>=</mml:mo><mml:mn>1</mml:mn></mml:mrow><mml:mi>r</mml:mi></mml:munderover><mml:msub><mml:mi>p</mml:mi><mml:mi>k</mml:mi></mml:msub><mml:msub><mml:mi mathvariant="bold-italic">a</mml:mi><mml:mrow><mml:mi>m</mml:mi><mml:mi>k</mml:mi></mml:mrow></mml:msub><mml:msubsup><mml:mi mathvariant="bold-italic">a</mml:mi><mml:mrow><mml:mi>n</mml:mi><mml:mi>k</mml:mi></mml:mrow><mml:mi>H</mml:mi></mml:msubsup><mml:mspace width="-0.166667em"/><mml:mo>=</mml:mo><mml:mspace width="-0.166667em"/><mml:munderover><mml:mo>&#8721;</mml:mo><mml:mrow><mml:mi>k</mml:mi><mml:mo>=</mml:mo><mml:mn>1</mml:mn></mml:mrow><mml:mi>r</mml:mi></mml:munderover><mml:msub><mml:mi>p</mml:mi><mml:mi>k</mml:mi></mml:msub><mml:msub><mml:mi mathvariant="bold-italic">Q</mml:mi><mml:mrow><mml:mi>n</mml:mi><mml:mi>k</mml:mi></mml:mrow></mml:msub><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mn>1</mml:mn><mml:mo>:</mml:mo><mml:msub><mml:mi>N</mml:mi><mml:mrow><mml:mi>m</mml:mi><mml:mo>&#8722;</mml:mo><mml:mn>1</mml:mn></mml:mrow></mml:msub><mml:mo>:</mml:mo><mml:msub><mml:mi>N</mml:mi><mml:mi>m</mml:mi></mml:msub><mml:mo>,</mml:mo><mml:mn>1</mml:mn><mml:mo stretchy="false">)</mml:mo></mml:mrow><mml:msub><mml:mi mathvariant="bold-italic">Q</mml:mi><mml:mrow><mml:mi>n</mml:mi><mml:mi>k</mml:mi></mml:mrow></mml:msub><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mn>1</mml:mn><mml:mo>,</mml:mo><mml:mn>1</mml:mn><mml:mo>:</mml:mo><mml:msub><mml:mi>N</mml:mi><mml:mrow><mml:mi>n</mml:mi><mml:mo>&#8722;</mml:mo><mml:mn>1</mml:mn></mml:mrow></mml:msub><mml:mo>:</mml:mo><mml:msub><mml:mi>N</mml:mi><mml:mi>n</mml:mi></mml:msub><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:mrow></mml:mstyle></mml:mtd></mml:mtr><mml:mtr><mml:mtd columnalign="right"><mml:mspace width="1.em"/></mml:mtd><mml:mtd columnalign="left"><mml:mstyle scriptlevel="0" displaystyle="true"><mml:mrow><mml:mspace width="-0.166667em"/><mml:mo>=</mml:mo><mml:mspace width="-0.166667em"/><mml:munderover><mml:mo>&#8721;</mml:mo><mml:mrow><mml:mi>k</mml:mi><mml:mo>=</mml:mo><mml:mn>1</mml:mn></mml:mrow><mml:mi>r</mml:mi></mml:munderover><mml:msub><mml:mi>p</mml:mi><mml:mi>k</mml:mi></mml:msub><mml:msub><mml:mi mathvariant="bold-italic">Q</mml:mi><mml:mrow><mml:mi>N</mml:mi><mml:mi>k</mml:mi></mml:mrow></mml:msub><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mn>1</mml:mn><mml:mo>:</mml:mo><mml:msub><mml:mi>N</mml:mi><mml:mrow><mml:mi>m</mml:mi><mml:mo>&#8722;</mml:mo><mml:mn>1</mml:mn></mml:mrow></mml:msub><mml:mo>:</mml:mo><mml:msub><mml:mi>N</mml:mi><mml:mi>m</mml:mi></mml:msub><mml:mo>,</mml:mo><mml:mn>1</mml:mn><mml:mo stretchy="false">)</mml:mo></mml:mrow><mml:msub><mml:mi mathvariant="bold-italic">Q</mml:mi><mml:mrow><mml:mi>N</mml:mi><mml:mi>k</mml:mi></mml:mrow></mml:msub><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mn>1</mml:mn><mml:mo>,</mml:mo><mml:mn>1</mml:mn><mml:mo>:</mml:mo><mml:msub><mml:mi>N</mml:mi><mml:mrow><mml:mi>n</mml:mi><mml:mo>&#8722;</mml:mo><mml:mn>1</mml:mn></mml:mrow></mml:msub><mml:mo>:</mml:mo><mml:msub><mml:mi>N</mml:mi><mml:mi>n</mml:mi></mml:msub><mml:mo stretchy="false">)</mml:mo></mml:mrow><mml:mo>.</mml:mo></mml:mrow></mml:mstyle></mml:mtd></mml:mtr></mml:mtable></mml:mrow></mml:math></disp-formula></p><p>Let <inline-formula><mml:math id="mm317" overflow="scroll"><mml:mrow><mml:mrow><mml:msub><mml:mi mathvariant="bold-italic">W</mml:mi><mml:mi>k</mml:mi></mml:msub><mml:mspace width="-0.166667em"/><mml:mo>=</mml:mo><mml:mspace width="-0.166667em"/><mml:msub><mml:mi mathvariant="bold-italic">a</mml:mi><mml:mrow><mml:mi>N</mml:mi><mml:mi>k</mml:mi></mml:mrow></mml:msub><mml:mo>&#8855;</mml:mo><mml:mo>&#8943;</mml:mo><mml:mo>&#8855;</mml:mo><mml:msub><mml:mi mathvariant="bold-italic">a</mml:mi><mml:mrow><mml:mn>1</mml:mn><mml:mi>k</mml:mi></mml:mrow></mml:msub></mml:mrow></mml:mrow></mml:math></inline-formula>, and the following holds:<disp-formula id="FD58-sensors-25-05583"><label>(A12)</label><mml:math id="mm318" display="block" overflow="scroll"><mml:mrow><mml:mtable displaystyle="true"><mml:mtr><mml:mtd columnalign="right"><mml:mrow><mml:msub><mml:mi mathvariant="bold-italic">Q</mml:mi><mml:mrow><mml:mi>N</mml:mi><mml:mi>k</mml:mi></mml:mrow></mml:msub><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mi>p</mml:mi><mml:mo>,</mml:mo><mml:mn>1</mml:mn><mml:mo stretchy="false">)</mml:mo></mml:mrow><mml:mo>=</mml:mo><mml:msub><mml:mi mathvariant="bold-italic">W</mml:mi><mml:mi>k</mml:mi></mml:msub><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mi>p</mml:mi><mml:mo stretchy="false">)</mml:mo></mml:mrow><mml:mo>,</mml:mo><mml:mspace width="1.em"/><mml:msub><mml:mi mathvariant="bold-italic">Q</mml:mi><mml:mrow><mml:mi>N</mml:mi><mml:mi>k</mml:mi></mml:mrow></mml:msub><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mn>1</mml:mn><mml:mo>,</mml:mo><mml:mi>q</mml:mi><mml:mo stretchy="false">)</mml:mo></mml:mrow><mml:mo>=</mml:mo><mml:msub><mml:mi mathvariant="bold-italic">W</mml:mi><mml:mi>k</mml:mi></mml:msub><mml:msup><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mi>q</mml:mi><mml:mo stretchy="false">)</mml:mo></mml:mrow><mml:mo>*</mml:mo></mml:msup><mml:mo>,</mml:mo></mml:mrow></mml:mtd></mml:mtr></mml:mtable></mml:mrow></mml:math></disp-formula>
then for elements of <inline-formula><mml:math id="mm319" overflow="scroll"><mml:mrow><mml:mi mathvariant="bold-italic">T</mml:mi></mml:mrow></mml:math></inline-formula>, the following always holds:<disp-formula id="FD59-sensors-25-05583"><label>(A13)</label><mml:math id="mm320" display="block" overflow="scroll"><mml:mrow><mml:mtable displaystyle="true"><mml:mtr><mml:mtd columnalign="right"><mml:mrow><mml:mi mathvariant="bold-italic">T</mml:mi><mml:mo stretchy="false">(</mml:mo><mml:mi>p</mml:mi><mml:mo>,</mml:mo><mml:mi>q</mml:mi><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:mtd><mml:mtd columnalign="left"><mml:mrow><mml:mo>=</mml:mo><mml:munderover><mml:mo>&#8721;</mml:mo><mml:mrow><mml:mi>k</mml:mi><mml:mo>=</mml:mo><mml:mn>1</mml:mn></mml:mrow><mml:mi>r</mml:mi></mml:munderover><mml:msub><mml:mi>p</mml:mi><mml:mi>k</mml:mi></mml:msub><mml:msub><mml:mi mathvariant="bold-italic">W</mml:mi><mml:mi>k</mml:mi></mml:msub><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mi>p</mml:mi><mml:mo stretchy="false">)</mml:mo></mml:mrow><mml:msub><mml:mi mathvariant="bold-italic">W</mml:mi><mml:mi>k</mml:mi></mml:msub><mml:msup><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mi>q</mml:mi><mml:mo stretchy="false">)</mml:mo></mml:mrow><mml:mo>*</mml:mo></mml:msup><mml:mo>=</mml:mo><mml:munderover><mml:mo>&#8721;</mml:mo><mml:mrow><mml:mi>k</mml:mi><mml:mo>=</mml:mo><mml:mn>1</mml:mn></mml:mrow><mml:mi>r</mml:mi></mml:munderover><mml:msub><mml:mi>p</mml:mi><mml:mi>k</mml:mi></mml:msub><mml:msub><mml:mi mathvariant="bold-italic">Q</mml:mi><mml:mrow><mml:mi>N</mml:mi><mml:mi>k</mml:mi></mml:mrow></mml:msub><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mi>p</mml:mi><mml:mo>,</mml:mo><mml:mn>1</mml:mn><mml:mo stretchy="false">)</mml:mo></mml:mrow><mml:msub><mml:mi mathvariant="bold-italic">Q</mml:mi><mml:mrow><mml:mi>N</mml:mi><mml:mi>k</mml:mi></mml:mrow></mml:msub><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mn>1</mml:mn><mml:mo>,</mml:mo><mml:mi>q</mml:mi><mml:mo stretchy="false">)</mml:mo></mml:mrow><mml:mo>.</mml:mo></mml:mrow></mml:mtd></mml:mtr></mml:mtable></mml:mrow></mml:math></disp-formula>And the following holds:<disp-formula id="FD60-sensors-25-05583"><label>(A14)</label><mml:math id="mm321" display="block" overflow="scroll"><mml:mrow><mml:mtable displaystyle="true"><mml:mtr><mml:mtd columnalign="right"><mml:mrow><mml:msub><mml:mi mathvariant="bold-italic">R</mml:mi><mml:mrow><mml:mi>m</mml:mi><mml:mi>n</mml:mi></mml:mrow></mml:msub><mml:mo>=</mml:mo><mml:mi mathvariant="bold-italic">T</mml:mi><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mn>1</mml:mn><mml:mo>:</mml:mo><mml:msub><mml:mi>N</mml:mi><mml:mrow><mml:mi>m</mml:mi><mml:mo>&#8722;</mml:mo><mml:mn>1</mml:mn></mml:mrow></mml:msub><mml:mo>:</mml:mo><mml:msub><mml:mi>N</mml:mi><mml:mi>m</mml:mi></mml:msub><mml:mo>,</mml:mo><mml:mn>1</mml:mn><mml:mo>:</mml:mo><mml:msub><mml:mi>N</mml:mi><mml:mrow><mml:mi>n</mml:mi><mml:mo>&#8722;</mml:mo><mml:mn>1</mml:mn></mml:mrow></mml:msub><mml:mo>:</mml:mo><mml:msub><mml:mi>N</mml:mi><mml:mi>n</mml:mi></mml:msub><mml:mo stretchy="false">)</mml:mo></mml:mrow><mml:mo>.</mml:mo></mml:mrow></mml:mtd></mml:mtr></mml:mtable></mml:mrow></mml:math></disp-formula>Moreover, the following always holds:<disp-formula id="FD61-sensors-25-05583"><label>(A15)</label><mml:math id="mm322" display="block" overflow="scroll"><mml:mrow><mml:mrow><mml:msub><mml:mi mathvariant="bold-italic">R</mml:mi><mml:mrow><mml:mi>m</mml:mi><mml:mi>n</mml:mi></mml:mrow></mml:msub><mml:mo>=</mml:mo><mml:msubsup><mml:mi mathvariant="bold-italic">R</mml:mi><mml:mrow><mml:mi>n</mml:mi><mml:mi>m</mml:mi></mml:mrow><mml:mi>H</mml:mi></mml:msubsup><mml:mo>.</mml:mo></mml:mrow></mml:mrow></mml:math></disp-formula>Therefore, Proposition 1 is proved.</p></app><app id="app2-sensors-25-05583"><title>Appendix B. Proof of Theorem 2</title><p>Suppose that <inline-formula><mml:math id="mm323" overflow="scroll"><mml:mrow><mml:mrow><mml:mi mathvariant="bold-italic">W</mml:mi><mml:mo>=</mml:mo><mml:msup><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mi mathvariant="bold-italic">R</mml:mi><mml:mo>+</mml:mo><mml:mi>&#1013;</mml:mi><mml:mi mathvariant="bold-italic">I</mml:mi><mml:mo stretchy="false">)</mml:mo></mml:mrow><mml:mrow><mml:mo>&#8722;</mml:mo><mml:mn>1</mml:mn></mml:mrow></mml:msup></mml:mrow></mml:mrow></mml:math></inline-formula>, which can be considered the inverse of ideal covariance matrix, then according to Woodbury matrix inversion lemma [<xref rid="B48-sensors-25-05583" ref-type="bibr">48</xref>], the following holds:<disp-formula id="FD62-sensors-25-05583"><label>(A16)</label><mml:math id="mm324" display="block" overflow="scroll"><mml:mrow><mml:mtable displaystyle="true"><mml:mtr><mml:mtd columnalign="right"><mml:mrow><mml:mi mathvariant="bold-italic">W</mml:mi><mml:mo>=</mml:mo><mml:mstyle scriptlevel="0" displaystyle="true"><mml:mfrac><mml:mn>1</mml:mn><mml:mi>&#1013;</mml:mi></mml:mfrac></mml:mstyle><mml:mrow><mml:mo>[</mml:mo><mml:mi mathvariant="bold-italic">I</mml:mi><mml:mo>&#8722;</mml:mo><mml:mi mathvariant="bold-italic">A</mml:mi><mml:msup><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mi>&#1013;</mml:mi><mml:msup><mml:mi mathvariant="bold-italic">P</mml:mi><mml:mrow><mml:mo>&#8722;</mml:mo><mml:mn>1</mml:mn></mml:mrow></mml:msup><mml:mo>+</mml:mo><mml:msup><mml:mi mathvariant="bold-italic">A</mml:mi><mml:mi>H</mml:mi></mml:msup><mml:mi mathvariant="bold-italic">A</mml:mi><mml:mo stretchy="false">)</mml:mo></mml:mrow><mml:mrow><mml:mo>&#8722;</mml:mo><mml:mn>1</mml:mn></mml:mrow></mml:msup><mml:msup><mml:mi mathvariant="bold-italic">A</mml:mi><mml:mi>H</mml:mi></mml:msup><mml:mo>]</mml:mo></mml:mrow><mml:mo>,</mml:mo></mml:mrow></mml:mtd></mml:mtr></mml:mtable></mml:mrow></mml:math></disp-formula>
where <inline-formula><mml:math id="mm325" overflow="scroll"><mml:mrow><mml:mrow><mml:mi mathvariant="bold-italic">A</mml:mi><mml:mo>=</mml:mo><mml:msup><mml:mfenced open="[" close="]"><mml:mtable><mml:mtr><mml:mtd><mml:mrow><mml:msubsup><mml:mi mathvariant="bold-italic">A</mml:mi><mml:mi>x</mml:mi><mml:mi>T</mml:mi></mml:msubsup><mml:mo>,</mml:mo><mml:msubsup><mml:mi mathvariant="bold-italic">A</mml:mi><mml:mi>z</mml:mi><mml:mi>T</mml:mi></mml:msubsup></mml:mrow></mml:mtd></mml:mtr></mml:mtable></mml:mfenced><mml:mi>T</mml:mi></mml:msup></mml:mrow></mml:mrow></mml:math></inline-formula> is manifold matrix of <inline-formula><mml:math id="mm326" overflow="scroll"><mml:mrow><mml:mi mathvariant="bold-italic">R</mml:mi></mml:mrow></mml:math></inline-formula>, then the diagonal block matrices <inline-formula><mml:math id="mm327" overflow="scroll"><mml:mrow><mml:msub><mml:mi mathvariant="bold-italic">W</mml:mi><mml:mrow><mml:mi>x</mml:mi><mml:mo>/</mml:mo><mml:mi>z</mml:mi></mml:mrow></mml:msub></mml:mrow></mml:math></inline-formula> and off-diagonal block matrices <inline-formula><mml:math id="mm328" overflow="scroll"><mml:mrow><mml:msub><mml:mi mathvariant="bold-italic">W</mml:mi><mml:mrow><mml:mi>x</mml:mi><mml:mi>z</mml:mi></mml:mrow></mml:msub></mml:mrow></mml:math></inline-formula> can be represented as follows: <disp-formula id="FD63-sensors-25-05583"><label>(A17)</label><mml:math id="mm329" display="block" overflow="scroll"><mml:mrow><mml:mtable displaystyle="true"><mml:mtr><mml:mtd columnalign="right"><mml:msub><mml:mi mathvariant="bold-italic">W</mml:mi><mml:mi>x</mml:mi></mml:msub></mml:mtd><mml:mtd columnalign="left"><mml:mrow><mml:mo>=</mml:mo><mml:mstyle scriptlevel="0" displaystyle="true"><mml:mfrac><mml:mn>1</mml:mn><mml:mi>&#1013;</mml:mi></mml:mfrac></mml:mstyle><mml:mrow><mml:mo>[</mml:mo><mml:msub><mml:mi mathvariant="bold-italic">I</mml:mi><mml:msub><mml:mi>M</mml:mi><mml:mn>1</mml:mn></mml:msub></mml:msub><mml:mo>&#8722;</mml:mo><mml:msub><mml:mi mathvariant="bold-italic">A</mml:mi><mml:mi>x</mml:mi></mml:msub><mml:msup><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mi>&#1013;</mml:mi><mml:msup><mml:mi mathvariant="bold-italic">P</mml:mi><mml:mrow><mml:mo>&#8722;</mml:mo><mml:mn>1</mml:mn></mml:mrow></mml:msup><mml:mo>+</mml:mo><mml:msubsup><mml:mi mathvariant="bold-italic">A</mml:mi><mml:mi>x</mml:mi><mml:mi>H</mml:mi></mml:msubsup><mml:msub><mml:mi mathvariant="bold-italic">A</mml:mi><mml:mi>x</mml:mi></mml:msub><mml:mo stretchy="false">)</mml:mo></mml:mrow><mml:mrow><mml:mo>&#8722;</mml:mo><mml:mn>1</mml:mn></mml:mrow></mml:msup><mml:msubsup><mml:mi mathvariant="bold-italic">A</mml:mi><mml:mi>x</mml:mi><mml:mi>H</mml:mi></mml:msubsup><mml:mo>]</mml:mo></mml:mrow><mml:mo>,</mml:mo></mml:mrow></mml:mtd></mml:mtr><mml:mtr><mml:mtd columnalign="right"><mml:msub><mml:mi mathvariant="bold-italic">W</mml:mi><mml:mi>z</mml:mi></mml:msub></mml:mtd><mml:mtd columnalign="left"><mml:mrow><mml:mo>=</mml:mo><mml:mstyle scriptlevel="0" displaystyle="true"><mml:mfrac><mml:mn>1</mml:mn><mml:mi>&#1013;</mml:mi></mml:mfrac></mml:mstyle><mml:mrow><mml:mo>[</mml:mo><mml:msub><mml:mi mathvariant="bold-italic">I</mml:mi><mml:mrow><mml:msub><mml:mi>M</mml:mi><mml:mn>2</mml:mn></mml:msub><mml:mo>&#8722;</mml:mo><mml:mn>1</mml:mn></mml:mrow></mml:msub><mml:mo>&#8722;</mml:mo><mml:msub><mml:mi mathvariant="bold-italic">A</mml:mi><mml:mi>z</mml:mi></mml:msub><mml:msup><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mi>&#1013;</mml:mi><mml:msup><mml:mi mathvariant="bold-italic">P</mml:mi><mml:mrow><mml:mo>&#8722;</mml:mo><mml:mn>1</mml:mn></mml:mrow></mml:msup><mml:mo>+</mml:mo><mml:msubsup><mml:mi mathvariant="bold-italic">A</mml:mi><mml:mi>z</mml:mi><mml:mi>H</mml:mi></mml:msubsup><mml:msub><mml:mi mathvariant="bold-italic">A</mml:mi><mml:mi>z</mml:mi></mml:msub><mml:mo stretchy="false">)</mml:mo></mml:mrow><mml:mrow><mml:mo>&#8722;</mml:mo><mml:mn>1</mml:mn></mml:mrow></mml:msup><mml:msubsup><mml:mi mathvariant="bold-italic">A</mml:mi><mml:mi>z</mml:mi><mml:mi>H</mml:mi></mml:msubsup><mml:mo>]</mml:mo></mml:mrow><mml:mo>,</mml:mo></mml:mrow></mml:mtd></mml:mtr><mml:mtr><mml:mtd columnalign="right"><mml:msub><mml:mi mathvariant="bold-italic">W</mml:mi><mml:mrow><mml:mi>x</mml:mi><mml:mi>z</mml:mi></mml:mrow></mml:msub></mml:mtd><mml:mtd columnalign="left"><mml:mrow><mml:mo>=</mml:mo><mml:mo>&#8722;</mml:mo><mml:mstyle scriptlevel="0" displaystyle="true"><mml:mfrac><mml:mn>1</mml:mn><mml:mi>&#1013;</mml:mi></mml:mfrac></mml:mstyle><mml:msub><mml:mi mathvariant="bold-italic">A</mml:mi><mml:mi>x</mml:mi></mml:msub><mml:msup><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mi>&#1013;</mml:mi><mml:msup><mml:mi mathvariant="bold-italic">P</mml:mi><mml:mrow><mml:mo>&#8722;</mml:mo><mml:mn>1</mml:mn></mml:mrow></mml:msup><mml:mo>+</mml:mo><mml:msup><mml:mi mathvariant="bold-italic">A</mml:mi><mml:mi>H</mml:mi></mml:msup><mml:mi mathvariant="bold-italic">A</mml:mi><mml:mo stretchy="false">)</mml:mo></mml:mrow><mml:mrow><mml:mo>&#8722;</mml:mo><mml:mn>1</mml:mn></mml:mrow></mml:msup><mml:msubsup><mml:mi mathvariant="bold-italic">A</mml:mi><mml:mi>z</mml:mi><mml:mi>H</mml:mi></mml:msubsup><mml:mo>.</mml:mo></mml:mrow></mml:mtd></mml:mtr></mml:mtable></mml:mrow></mml:math></disp-formula>Let <inline-formula><mml:math id="mm330" overflow="scroll"><mml:mrow><mml:mrow><mml:mi mathvariant="bold-italic">Q</mml:mi><mml:mo>=</mml:mo><mml:mi>&#1013;</mml:mi><mml:msup><mml:mi mathvariant="bold-italic">P</mml:mi><mml:mrow><mml:mo>&#8722;</mml:mo><mml:mn>1</mml:mn></mml:mrow></mml:msup><mml:mo>+</mml:mo><mml:msup><mml:mi mathvariant="bold-italic">A</mml:mi><mml:mi>H</mml:mi></mml:msup><mml:mi mathvariant="bold-italic">A</mml:mi></mml:mrow></mml:mrow></mml:math></inline-formula>, then the following holds:<disp-formula id="FD64-sensors-25-05583"><label>(A18)</label><mml:math id="mm331" display="block" overflow="scroll"><mml:mrow><mml:mtable displaystyle="true"><mml:mtr><mml:mtd columnalign="right"><mml:mrow><mml:mi mathvariant="bold-italic">Q</mml:mi><mml:mo>=</mml:mo><mml:mi>&#1013;</mml:mi><mml:msup><mml:mi mathvariant="bold-italic">P</mml:mi><mml:mrow><mml:mo>&#8722;</mml:mo><mml:mn>1</mml:mn></mml:mrow></mml:msup><mml:mo>+</mml:mo><mml:msubsup><mml:mi mathvariant="bold-italic">A</mml:mi><mml:mi>x</mml:mi><mml:mi>H</mml:mi></mml:msubsup><mml:msub><mml:mi mathvariant="bold-italic">A</mml:mi><mml:mi>x</mml:mi></mml:msub><mml:mo>+</mml:mo><mml:msubsup><mml:mi mathvariant="bold-italic">A</mml:mi><mml:mi>z</mml:mi><mml:mi>H</mml:mi></mml:msubsup><mml:msub><mml:mi mathvariant="bold-italic">A</mml:mi><mml:mi>z</mml:mi></mml:msub><mml:mo>=</mml:mo><mml:mi>&#1013;</mml:mi><mml:msup><mml:mi mathvariant="bold-italic">P</mml:mi><mml:mrow><mml:mo>&#8722;</mml:mo><mml:mn>1</mml:mn></mml:mrow></mml:msup><mml:mo>+</mml:mo><mml:mi>M</mml:mi><mml:msub><mml:mi mathvariant="bold-italic">I</mml:mi><mml:mi>K</mml:mi></mml:msub></mml:mrow></mml:mtd></mml:mtr></mml:mtable></mml:mrow></mml:math></disp-formula>
for there always exists the following: <inline-formula><mml:math id="mm332" overflow="scroll"><mml:mrow><mml:mrow><mml:msubsup><mml:mi mathvariant="bold-italic">a</mml:mi><mml:mrow><mml:mi>x</mml:mi><mml:mi>k</mml:mi></mml:mrow><mml:mi>H</mml:mi></mml:msubsup><mml:msub><mml:mi mathvariant="bold-italic">a</mml:mi><mml:mrow><mml:mi>x</mml:mi><mml:mi>k</mml:mi></mml:mrow></mml:msub><mml:mo>=</mml:mo><mml:msub><mml:mi>M</mml:mi><mml:mn>1</mml:mn></mml:msub></mml:mrow></mml:mrow></mml:math></inline-formula>, <inline-formula><mml:math id="mm333" overflow="scroll"><mml:mrow><mml:mrow><mml:msubsup><mml:mi mathvariant="bold-italic">a</mml:mi><mml:mrow><mml:mi>z</mml:mi><mml:mi>k</mml:mi></mml:mrow><mml:mi>H</mml:mi></mml:msubsup><mml:msub><mml:mi mathvariant="bold-italic">a</mml:mi><mml:mrow><mml:mi>z</mml:mi><mml:mi>k</mml:mi></mml:mrow></mml:msub><mml:mo>=</mml:mo><mml:msub><mml:mi>M</mml:mi><mml:mn>2</mml:mn></mml:msub><mml:mo>&#8722;</mml:mo><mml:mn>1</mml:mn></mml:mrow></mml:mrow></mml:math></inline-formula>.</p><p>Suppose that <inline-formula><mml:math id="mm334" overflow="scroll"><mml:mrow><mml:mrow><mml:msub><mml:mi>&#948;</mml:mi><mml:mrow><mml:mi>x</mml:mi><mml:mi>k</mml:mi></mml:mrow></mml:msub><mml:mo>=</mml:mo><mml:msup><mml:mi mathvariant="bold-italic">Q</mml:mi><mml:mrow><mml:mo>&#8722;</mml:mo><mml:mfrac><mml:mn>1</mml:mn><mml:mn>2</mml:mn></mml:mfrac></mml:mrow></mml:msup><mml:msubsup><mml:mi mathvariant="bold-italic">A</mml:mi><mml:mi>x</mml:mi><mml:mi>H</mml:mi></mml:msubsup><mml:msub><mml:mi mathvariant="bold-italic">a</mml:mi><mml:mrow><mml:mi>x</mml:mi><mml:mi>k</mml:mi></mml:mrow></mml:msub></mml:mrow></mml:mrow></mml:math></inline-formula>, then we have the following:<disp-formula id="FD65-sensors-25-05583"><label>(A19)</label><mml:math id="mm335" display="block" overflow="scroll"><mml:mrow><mml:mtable displaystyle="true"><mml:mtr><mml:mtd columnalign="right"><mml:msub><mml:mi>w</mml:mi><mml:mrow><mml:mi>x</mml:mi><mml:mi>k</mml:mi></mml:mrow></mml:msub></mml:mtd><mml:mtd columnalign="left"><mml:mrow><mml:mo>=</mml:mo><mml:msubsup><mml:mi mathvariant="bold-italic">a</mml:mi><mml:mrow><mml:mi>x</mml:mi><mml:mi>k</mml:mi></mml:mrow><mml:mi>H</mml:mi></mml:msubsup><mml:msub><mml:mi mathvariant="bold-italic">W</mml:mi><mml:mi>x</mml:mi></mml:msub><mml:msub><mml:mi mathvariant="bold-italic">a</mml:mi><mml:mrow><mml:mi>x</mml:mi><mml:mi>k</mml:mi></mml:mrow></mml:msub><mml:mo>=</mml:mo><mml:mstyle scriptlevel="0" displaystyle="true"><mml:mfrac><mml:mn>1</mml:mn><mml:mi>&#1013;</mml:mi></mml:mfrac></mml:mstyle><mml:msubsup><mml:mi mathvariant="bold-italic">a</mml:mi><mml:mrow><mml:mi>x</mml:mi><mml:mi>k</mml:mi></mml:mrow><mml:mi>H</mml:mi></mml:msubsup><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mi mathvariant="bold-italic">I</mml:mi><mml:mo>&#8722;</mml:mo><mml:msub><mml:mi mathvariant="bold-italic">A</mml:mi><mml:mi>x</mml:mi></mml:msub><mml:msup><mml:mi mathvariant="bold-italic">Q</mml:mi><mml:mrow><mml:mo>&#8722;</mml:mo><mml:mn>1</mml:mn></mml:mrow></mml:msup><mml:msubsup><mml:mi mathvariant="bold-italic">A</mml:mi><mml:mi>x</mml:mi><mml:mi>H</mml:mi></mml:msubsup><mml:mo stretchy="false">)</mml:mo></mml:mrow><mml:msub><mml:mi mathvariant="bold-italic">a</mml:mi><mml:mrow><mml:mi>x</mml:mi><mml:mi>k</mml:mi></mml:mrow></mml:msub></mml:mrow></mml:mtd></mml:mtr><mml:mtr><mml:mtd columnalign="right"><mml:mspace width="1.em"/></mml:mtd><mml:mtd columnalign="left"><mml:mrow><mml:mo>=</mml:mo><mml:mstyle scriptlevel="0" displaystyle="true"><mml:mfrac><mml:mn>1</mml:mn><mml:mi>&#1013;</mml:mi></mml:mfrac></mml:mstyle><mml:mrow><mml:mo stretchy="false">(</mml:mo></mml:mrow><mml:msub><mml:mi>M</mml:mi><mml:mn>1</mml:mn></mml:msub><mml:mrow><mml:mo>&#8722;</mml:mo><mml:mo stretchy="false">&#8741;</mml:mo></mml:mrow><mml:msub><mml:mi>&#948;</mml:mi><mml:mrow><mml:mi>x</mml:mi><mml:mi>k</mml:mi></mml:mrow></mml:msub><mml:mrow><mml:msubsup><mml:mo stretchy="false">&#8741;</mml:mo><mml:mn>2</mml:mn><mml:mn>2</mml:mn></mml:msubsup><mml:mo stretchy="false">)</mml:mo></mml:mrow><mml:mo>,</mml:mo></mml:mrow></mml:mtd></mml:mtr></mml:mtable></mml:mrow></mml:math></disp-formula><disp-formula id="FD66-sensors-25-05583"><label>(A20)</label><mml:math id="mm336" display="block" overflow="scroll"><mml:mrow><mml:mtable displaystyle="true"><mml:mtr><mml:mtd columnalign="right"><mml:msub><mml:mi>w</mml:mi><mml:mrow><mml:mi>x</mml:mi><mml:mi>z</mml:mi><mml:mi>k</mml:mi></mml:mrow></mml:msub></mml:mtd><mml:mtd columnalign="left"><mml:mrow><mml:mo>=</mml:mo><mml:msubsup><mml:mi mathvariant="bold-italic">a</mml:mi><mml:mrow><mml:mi>x</mml:mi><mml:mi>k</mml:mi></mml:mrow><mml:mi>H</mml:mi></mml:msubsup><mml:msub><mml:mi mathvariant="bold-italic">W</mml:mi><mml:mrow><mml:mi>x</mml:mi><mml:mi>z</mml:mi></mml:mrow></mml:msub><mml:msub><mml:mi mathvariant="bold-italic">a</mml:mi><mml:mrow><mml:mi>z</mml:mi><mml:mi>k</mml:mi></mml:mrow></mml:msub><mml:mo>=</mml:mo><mml:mo>&#8722;</mml:mo><mml:mstyle scriptlevel="0" displaystyle="true"><mml:mfrac><mml:mn>1</mml:mn><mml:mi>&#1013;</mml:mi></mml:mfrac></mml:mstyle><mml:msubsup><mml:mi mathvariant="bold-italic">a</mml:mi><mml:mrow><mml:mi>x</mml:mi><mml:mi>k</mml:mi></mml:mrow><mml:mi>H</mml:mi></mml:msubsup><mml:msub><mml:mi mathvariant="bold-italic">A</mml:mi><mml:mi>x</mml:mi></mml:msub><mml:msup><mml:mi mathvariant="bold-italic">Q</mml:mi><mml:mrow><mml:mo>&#8722;</mml:mo><mml:mn>1</mml:mn></mml:mrow></mml:msup><mml:msubsup><mml:mi mathvariant="bold-italic">A</mml:mi><mml:mi>z</mml:mi><mml:mi>H</mml:mi></mml:msubsup><mml:msub><mml:mi mathvariant="bold-italic">a</mml:mi><mml:mrow><mml:mi>z</mml:mi><mml:mi>k</mml:mi></mml:mrow></mml:msub></mml:mrow></mml:mtd></mml:mtr><mml:mtr><mml:mtd columnalign="right"><mml:mspace width="1.em"/></mml:mtd><mml:mtd columnalign="left"><mml:mrow><mml:mo>=</mml:mo><mml:mo>&#8722;</mml:mo><mml:mstyle scriptlevel="0" displaystyle="true"><mml:mfrac><mml:mn>1</mml:mn><mml:mi>&#1013;</mml:mi></mml:mfrac></mml:mstyle><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:msubsup><mml:mi>&#948;</mml:mi><mml:mrow><mml:mi>x</mml:mi><mml:mi>k</mml:mi></mml:mrow><mml:mi>H</mml:mi></mml:msubsup><mml:msub><mml:mi>&#948;</mml:mi><mml:mrow><mml:mi>z</mml:mi><mml:mi>k</mml:mi></mml:mrow></mml:msub><mml:mo stretchy="false">)</mml:mo></mml:mrow><mml:mo>,</mml:mo></mml:mrow></mml:mtd></mml:mtr></mml:mtable></mml:mrow></mml:math></disp-formula>
and <inline-formula><mml:math id="mm337" overflow="scroll"><mml:mrow><mml:msub><mml:mi>w</mml:mi><mml:mrow><mml:mi>z</mml:mi><mml:mi>k</mml:mi></mml:mrow></mml:msub></mml:mrow></mml:math></inline-formula> can be calculated similar to <inline-formula><mml:math id="mm338" overflow="scroll"><mml:mrow><mml:msub><mml:mi>w</mml:mi><mml:mrow><mml:mi>x</mml:mi><mml:mi>k</mml:mi></mml:mrow></mml:msub></mml:mrow></mml:math></inline-formula>. Subsequently, <inline-formula><mml:math id="mm339" overflow="scroll"><mml:mrow><mml:msub><mml:mi>w</mml:mi><mml:mi>k</mml:mi></mml:msub></mml:mrow></mml:math></inline-formula> can be computed as follows:<disp-formula id="FD67-sensors-25-05583"><label>(A21)</label><mml:math id="mm340" display="block" overflow="scroll"><mml:mrow><mml:mtable displaystyle="true"><mml:mtr><mml:mtd columnalign="right"><mml:mspace width="1.em"/></mml:mtd><mml:mtd columnalign="left"><mml:mrow><mml:msub><mml:mi>w</mml:mi><mml:mi>k</mml:mi></mml:msub><mml:mo>=</mml:mo><mml:mrow><mml:mo>[</mml:mo><mml:mstyle scriptlevel="0" displaystyle="true"><mml:mfrac><mml:mn>1</mml:mn><mml:mi>M</mml:mi></mml:mfrac></mml:mstyle><mml:mo stretchy="false">(</mml:mo></mml:mrow><mml:msubsup><mml:mi mathvariant="bold-italic">a</mml:mi><mml:mrow><mml:mi>x</mml:mi><mml:mi>k</mml:mi></mml:mrow><mml:mi>H</mml:mi></mml:msubsup><mml:msub><mml:mi mathvariant="bold-italic">W</mml:mi><mml:mi>x</mml:mi></mml:msub><mml:msub><mml:mi mathvariant="bold-italic">a</mml:mi><mml:mrow><mml:mi>x</mml:mi><mml:mi>k</mml:mi></mml:mrow></mml:msub><mml:mo>+</mml:mo><mml:msubsup><mml:mi mathvariant="bold-italic">a</mml:mi><mml:mrow><mml:mi>z</mml:mi><mml:mi>k</mml:mi></mml:mrow><mml:mi>H</mml:mi></mml:msubsup><mml:msub><mml:mi mathvariant="bold-italic">W</mml:mi><mml:mi>z</mml:mi></mml:msub><mml:msub><mml:mi mathvariant="bold-italic">a</mml:mi><mml:mrow><mml:mi>z</mml:mi><mml:mi>k</mml:mi></mml:mrow></mml:msub></mml:mrow></mml:mtd></mml:mtr><mml:mtr><mml:mtd columnalign="right"><mml:mspace width="1.em"/></mml:mtd><mml:mtd columnalign="left"><mml:mrow><mml:mo>+</mml:mo><mml:msubsup><mml:mi mathvariant="bold-italic">a</mml:mi><mml:mrow><mml:mi>x</mml:mi><mml:mi>k</mml:mi></mml:mrow><mml:mi>H</mml:mi></mml:msubsup><mml:msub><mml:mi mathvariant="bold-italic">W</mml:mi><mml:mrow><mml:mi>x</mml:mi><mml:mi>z</mml:mi></mml:mrow></mml:msub><mml:msub><mml:mi mathvariant="bold-italic">a</mml:mi><mml:mrow><mml:mi>z</mml:mi><mml:mi>k</mml:mi></mml:mrow></mml:msub><mml:mo>+</mml:mo><mml:msubsup><mml:mi mathvariant="bold-italic">a</mml:mi><mml:mrow><mml:mi>z</mml:mi><mml:mi>k</mml:mi></mml:mrow><mml:mi>H</mml:mi></mml:msubsup><mml:msubsup><mml:mi mathvariant="bold-italic">W</mml:mi><mml:mrow><mml:mi>x</mml:mi><mml:mi>z</mml:mi></mml:mrow><mml:mi>H</mml:mi></mml:msubsup><mml:msub><mml:mi mathvariant="bold-italic">a</mml:mi><mml:mrow><mml:mi>x</mml:mi><mml:mi>k</mml:mi></mml:mrow></mml:msub><mml:msup><mml:mrow><mml:mo stretchy="false">)</mml:mo><mml:mo>]</mml:mo></mml:mrow><mml:mrow><mml:mo>&#8722;</mml:mo><mml:mfrac><mml:mn>1</mml:mn><mml:mn>2</mml:mn></mml:mfrac></mml:mrow></mml:msup></mml:mrow></mml:mtd></mml:mtr><mml:mtr><mml:mtd columnalign="right"><mml:mspace width="1.em"/></mml:mtd><mml:mtd columnalign="left"><mml:mrow><mml:mo>=</mml:mo><mml:msqrt><mml:mrow><mml:mi>M</mml:mi><mml:mi>&#1013;</mml:mi></mml:mrow></mml:msqrt><mml:mrow><mml:mo>[</mml:mo><mml:mo stretchy="false">(</mml:mo></mml:mrow><mml:msub><mml:mi>M</mml:mi><mml:mn>1</mml:mn></mml:msub><mml:mrow><mml:mo>&#8722;</mml:mo><mml:mo stretchy="false">&#8741;</mml:mo></mml:mrow><mml:msub><mml:mi>&#948;</mml:mi><mml:mrow><mml:mi>x</mml:mi><mml:mi>k</mml:mi></mml:mrow></mml:msub><mml:msubsup><mml:mrow><mml:mo stretchy="false">&#8741;</mml:mo></mml:mrow><mml:mn>2</mml:mn><mml:mn>2</mml:mn></mml:msubsup><mml:mrow><mml:mo stretchy="false">)</mml:mo><mml:mo>+</mml:mo><mml:mo stretchy="false">(</mml:mo></mml:mrow><mml:msub><mml:mi>M</mml:mi><mml:mn>2</mml:mn></mml:msub><mml:mrow><mml:mo>&#8722;</mml:mo><mml:mn>1</mml:mn><mml:mo>&#8722;</mml:mo><mml:mo stretchy="false">&#8741;</mml:mo></mml:mrow><mml:msub><mml:mi>&#948;</mml:mi><mml:mrow><mml:mi>z</mml:mi><mml:mi>k</mml:mi></mml:mrow></mml:msub><mml:mrow><mml:msubsup><mml:mo stretchy="false">&#8741;</mml:mo><mml:mn>2</mml:mn><mml:mn>2</mml:mn></mml:msubsup><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:mrow></mml:mtd></mml:mtr><mml:mtr><mml:mtd/><mml:mtd columnalign="left"><mml:mrow><mml:mo>&#8722;</mml:mo><mml:msubsup><mml:mi>&#948;</mml:mi><mml:mrow><mml:mi>x</mml:mi><mml:mi>k</mml:mi></mml:mrow><mml:mi>H</mml:mi></mml:msubsup><mml:msub><mml:mi>&#948;</mml:mi><mml:mrow><mml:mi>z</mml:mi><mml:mi>k</mml:mi></mml:mrow></mml:msub><mml:mo>&#8722;</mml:mo><mml:msubsup><mml:mi>&#948;</mml:mi><mml:mrow><mml:mi>z</mml:mi><mml:mi>k</mml:mi></mml:mrow><mml:mi>H</mml:mi></mml:msubsup><mml:msub><mml:mi>&#948;</mml:mi><mml:mrow><mml:mi>x</mml:mi><mml:mi>k</mml:mi></mml:mrow></mml:msub><mml:msup><mml:mrow><mml:mo>]</mml:mo></mml:mrow><mml:mrow><mml:mo>&#8722;</mml:mo><mml:mfrac><mml:mn>1</mml:mn><mml:mn>2</mml:mn></mml:mfrac></mml:mrow></mml:msup></mml:mrow></mml:mtd></mml:mtr><mml:mtr><mml:mtd columnalign="right"><mml:mspace width="1.em"/></mml:mtd><mml:mtd columnalign="left"><mml:mrow><mml:mo>=</mml:mo><mml:msqrt><mml:mrow><mml:mi>M</mml:mi><mml:mi>&#1013;</mml:mi></mml:mrow></mml:msqrt><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mi>M</mml:mi><mml:mo>&#8722;</mml:mo><mml:mo stretchy="false">&#8741;</mml:mo></mml:mrow><mml:msub><mml:mi>&#948;</mml:mi><mml:mrow><mml:mi>x</mml:mi><mml:mi>k</mml:mi></mml:mrow></mml:msub><mml:mo>+</mml:mo><mml:msub><mml:mi>&#948;</mml:mi><mml:mrow><mml:mi>z</mml:mi><mml:mi>k</mml:mi></mml:mrow></mml:msub><mml:msup><mml:mrow><mml:msubsup><mml:mo stretchy="false">&#8741;</mml:mo><mml:mn>2</mml:mn><mml:mn>2</mml:mn></mml:msubsup><mml:mo stretchy="false">)</mml:mo></mml:mrow><mml:mrow><mml:mo>&#8722;</mml:mo><mml:mfrac><mml:mn>1</mml:mn><mml:mn>2</mml:mn></mml:mfrac></mml:mrow></mml:msup></mml:mrow></mml:mtd></mml:mtr><mml:mtr><mml:mtd/><mml:mtd columnalign="left"><mml:mrow><mml:mo>=</mml:mo><mml:msqrt><mml:mi>&#1013;</mml:mi></mml:msqrt><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mn>1</mml:mn><mml:mo>&#8722;</mml:mo></mml:mrow><mml:mstyle scriptlevel="0" displaystyle="true"><mml:mfrac><mml:mn>1</mml:mn><mml:mi>M</mml:mi></mml:mfrac></mml:mstyle><mml:mrow><mml:mo stretchy="false">&#8741;</mml:mo></mml:mrow><mml:msup><mml:mi mathvariant="bold-italic">Q</mml:mi><mml:mrow><mml:mo>&#8722;</mml:mo><mml:mfrac><mml:mn>1</mml:mn><mml:mn>2</mml:mn></mml:mfrac></mml:mrow></mml:msup><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:msubsup><mml:mi mathvariant="bold-italic">A</mml:mi><mml:mi>x</mml:mi><mml:mi>H</mml:mi></mml:msubsup><mml:msub><mml:mi mathvariant="bold-italic">a</mml:mi><mml:mrow><mml:mi>x</mml:mi><mml:mi>k</mml:mi></mml:mrow></mml:msub><mml:mo>+</mml:mo><mml:msubsup><mml:mi mathvariant="bold-italic">A</mml:mi><mml:mi>z</mml:mi><mml:mi>H</mml:mi></mml:msubsup><mml:msub><mml:mi mathvariant="bold-italic">a</mml:mi><mml:mrow><mml:mi>z</mml:mi><mml:mi>k</mml:mi></mml:mrow></mml:msub><mml:mo stretchy="false">)</mml:mo></mml:mrow><mml:msup><mml:mrow><mml:msubsup><mml:mo stretchy="false">&#8741;</mml:mo><mml:mn>2</mml:mn><mml:mn>2</mml:mn></mml:msubsup><mml:mo stretchy="false">)</mml:mo></mml:mrow><mml:mrow><mml:mo>&#8722;</mml:mo><mml:mfrac><mml:mn>1</mml:mn><mml:mn>2</mml:mn></mml:mfrac></mml:mrow></mml:msup><mml:mo>.</mml:mo></mml:mrow></mml:mtd></mml:mtr></mml:mtable></mml:mrow></mml:math></disp-formula>Then Theorem 2 is proved.</p></app></app-group><ref-list><title>References</title><ref id="B1-sensors-25-05583"><label>1.</label><element-citation publication-type="journal"><person-group person-group-type="author"><name name-style="western"><surname>Yu</surname><given-names>K.</given-names></name><name name-style="western"><surname>Hudson</surname><given-names>R.E.</given-names></name><name name-style="western"><surname>Zhang</surname><given-names>Y.D.</given-names></name><name name-style="western"><surname>Yao</surname><given-names>K.</given-names></name><name name-style="western"><surname>Taylor</surname><given-names>C.</given-names></name><name name-style="western"><surname>Wang</surname><given-names>Z.</given-names></name></person-group><article-title>Low-Complexity 2D Direction-of-Arrival Estimation for Acoustic Sensor Arrays</article-title><source>IEEE Signal Process. Lett.</source><year>2016</year><volume>23</volume><fpage>1791</fpage><lpage>1795</lpage><pub-id pub-id-type="doi">10.1109/LSP.2016.2614107</pub-id></element-citation></ref><ref id="B2-sensors-25-05583"><label>2.</label><element-citation publication-type="journal"><person-group person-group-type="author"><name name-style="western"><surname>Zhang</surname><given-names>X.</given-names></name><name name-style="western"><surname>Zheng</surname><given-names>Z.</given-names></name><name name-style="western"><surname>Wang</surname><given-names>W.</given-names></name><name name-style="western"><surname>So</surname><given-names>H.C.</given-names></name></person-group><article-title>Joint DOD and DOA Estimation of Coherent Targets for Coprime MIMO Radar</article-title><source>IEEE Trans. Signal Process.</source><year>2023</year><volume>71</volume><fpage>1408</fpage><lpage>1420</lpage><pub-id pub-id-type="doi">10.1109/TSP.2023.3267991</pub-id></element-citation></ref><ref id="B3-sensors-25-05583"><label>3.</label><element-citation publication-type="journal"><person-group person-group-type="author"><name name-style="western"><surname>Su</surname><given-names>Z.</given-names></name><name name-style="western"><surname>Liu</surname><given-names>L.</given-names></name><name name-style="western"><surname>Muller</surname><given-names>M.</given-names></name><name name-style="western"><surname>Zhang</surname><given-names>J.</given-names></name><name name-style="western"><surname>Wofk</surname><given-names>D.</given-names></name><name name-style="western"><surname>Cheng</surname><given-names>M.</given-names></name><name name-style="western"><surname>Pietikainen</surname><given-names>M.</given-names></name></person-group><article-title>Rapid Salient Object Detection With Difference Convolutional Neural Networks</article-title><source>IEEE Trans. Pattern Anal. Mach. Intell.</source><year>2025</year><fpage>1</fpage><lpage>16</lpage><pub-id pub-id-type="doi">10.1109/TPAMI.2025.3583968</pub-id><pub-id pub-id-type="pmid">40614151</pub-id></element-citation></ref><ref id="B4-sensors-25-05583"><label>4.</label><element-citation publication-type="journal"><person-group person-group-type="author"><name name-style="western"><surname>Shi</surname><given-names>J.</given-names></name><name name-style="western"><surname>Hu</surname><given-names>G.</given-names></name><name name-style="western"><surname>Zhang</surname><given-names>X.</given-names></name><name name-style="western"><surname>Sun</surname><given-names>F.</given-names></name><name name-style="western"><surname>Zhou</surname><given-names>H.</given-names></name></person-group><article-title>Sparsity-Based Two-Dimensional DOA Estimation for Coprime Array: From Sum&#8211;Difference Coarray Viewpoint</article-title><source>IEEE Trans. Signal Process.</source><year>2017</year><volume>65</volume><fpage>5591</fpage><lpage>5604</lpage><pub-id pub-id-type="doi">10.1109/TSP.2017.2739105</pub-id></element-citation></ref><ref id="B5-sensors-25-05583"><label>5.</label><element-citation publication-type="journal"><person-group person-group-type="author"><name name-style="western"><surname>An</surname><given-names>J.</given-names></name><name name-style="western"><surname>Yuen</surname><given-names>C.</given-names></name><name name-style="western"><surname>Guan</surname><given-names>Y.L.</given-names></name><name name-style="western"><surname>Renzo</surname><given-names>M.D.</given-names></name><name name-style="western"><surname>Debbah</surname><given-names>M.</given-names></name><name name-style="western"><surname>Poor</surname><given-names>H.V.</given-names></name><name name-style="western"><surname>Hanzo</surname><given-names>L.</given-names></name></person-group><article-title>Two-Dimensional Direction-of-Arrival Estimation Using Stacked Intelligent Metasurfaces</article-title><source>IEEE J. Sel. Areas Commun.</source><year>2024</year><volume>42</volume><fpage>2786</fpage><lpage>2802</lpage><pub-id pub-id-type="doi">10.1109/JSAC.2024.3414613</pub-id></element-citation></ref><ref id="B6-sensors-25-05583"><label>6.</label><element-citation publication-type="journal"><person-group person-group-type="author"><name name-style="western"><surname>Xu</surname><given-names>H.</given-names></name><name name-style="western"><surname>Liu</surname><given-names>W.</given-names></name><name name-style="western"><surname>Chen</surname><given-names>H.</given-names></name><name name-style="western"><surname>Tian</surname><given-names>Y.</given-names></name></person-group><article-title>Efficient 2-D DOA Estimation for Incoherently Distributed Sources with an L-shaped Array</article-title><source>IEEE Wirel. Commun. Lett.</source><year>2025</year><volume>14</volume><fpage>1104</fpage><lpage>1108</lpage><pub-id pub-id-type="doi">10.1109/LWC.2025.3533079</pub-id></element-citation></ref><ref id="B7-sensors-25-05583"><label>7.</label><element-citation publication-type="journal"><person-group person-group-type="author"><name name-style="western"><surname>Hua</surname><given-names>Y.</given-names></name><name name-style="western"><surname>Sarkar</surname><given-names>T.</given-names></name><name name-style="western"><surname>Weiner</surname><given-names>D.</given-names></name></person-group><article-title>An L-shaped Array for Estimating 2-D Directions of Wave Arrival</article-title><source>IEEE Trans. Antennas Propag.</source><year>1991</year><volume>39</volume><fpage>143</fpage><lpage>146</lpage><pub-id pub-id-type="doi">10.1109/8.68174</pub-id></element-citation></ref><ref id="B8-sensors-25-05583"><label>8.</label><element-citation publication-type="journal"><person-group person-group-type="author"><name name-style="western"><surname>Schmidt</surname><given-names>R.</given-names></name></person-group><article-title>Multiple Emitter Location and Signal Parameter Estimation</article-title><source>IEEE Trans. Antennas Propag.</source><year>1986</year><volume>34</volume><fpage>276</fpage><lpage>280</lpage><pub-id pub-id-type="doi">10.1109/TAP.1986.1143830</pub-id></element-citation></ref><ref id="B9-sensors-25-05583"><label>9.</label><element-citation publication-type="journal"><person-group person-group-type="author"><name name-style="western"><surname>Tayem</surname><given-names>N.</given-names></name><name name-style="western"><surname>Kwon</surname><given-names>H.</given-names></name></person-group><article-title>L-Shape 2-Dimensional Arrival Angle Estimation with Propagator Method</article-title><source>IEEE Trans. Antennas Propag.</source><year>2005</year><volume>53</volume><fpage>1622</fpage><lpage>1630</lpage><pub-id pub-id-type="doi">10.1109/TAP.2005.846804</pub-id></element-citation></ref><ref id="B10-sensors-25-05583"><label>10.</label><element-citation publication-type="journal"><person-group person-group-type="author"><name name-style="western"><surname>Liu</surname><given-names>S.</given-names></name><name name-style="western"><surname>Yang</surname><given-names>L.</given-names></name><name name-style="western"><surname>Li</surname><given-names>D.</given-names></name><name name-style="western"><surname>Cao</surname><given-names>H.</given-names></name></person-group><article-title>Subspace Extension Algorithm for 2D DOA Estimation with L-shaped Sparse Array</article-title><source>Multidimens. Syst. Signal Process.</source><year>2017</year><volume>28</volume><fpage>315</fpage><lpage>327</lpage><pub-id pub-id-type="doi">10.1007/s11045-016-0406-3</pub-id></element-citation></ref><ref id="B11-sensors-25-05583"><label>11.</label><element-citation publication-type="journal"><person-group person-group-type="author"><name name-style="western"><surname>Ahmed</surname><given-names>T.</given-names></name><name name-style="western"><surname>Zhang</surname><given-names>X.</given-names></name><name name-style="western"><surname>Hassan</surname><given-names>W.U.</given-names></name></person-group><article-title>A Higher-Order Propagator Method for 2D-DOA Estimation in Massive MIMO Systems</article-title><source>IEEE Commun. Lett.</source><year>2020</year><volume>24</volume><fpage>543</fpage><lpage>547</lpage><pub-id pub-id-type="doi">10.1109/LCOMM.2019.2960341</pub-id></element-citation></ref><ref id="B12-sensors-25-05583"><label>12.</label><element-citation publication-type="journal"><person-group person-group-type="author"><name name-style="western"><surname>Wu</surname><given-names>R.</given-names></name><name name-style="western"><surname>Zhang</surname><given-names>Z.</given-names></name></person-group><article-title>Convex Optimization-Based 2-D DOA Estimation with Enhanced Virtual Aperture and Virtual Snapshots Extension for L-shaped Array</article-title><source>IEEE Trans. Veh. Technol.</source><year>2020</year><volume>69</volume><fpage>6473</fpage><lpage>6484</lpage><pub-id pub-id-type="doi">10.1109/TVT.2020.2988327</pub-id></element-citation></ref><ref id="B13-sensors-25-05583"><label>13.</label><element-citation publication-type="journal"><person-group person-group-type="author"><name name-style="western"><surname>Wen</surname><given-names>F.</given-names></name><name name-style="western"><surname>Gui</surname><given-names>G.</given-names></name><name name-style="western"><surname>Gacanin</surname><given-names>H.</given-names></name><name name-style="western"><surname>Sari</surname><given-names>H.</given-names></name></person-group><article-title>Compressive Sampling Framework for 2D-DOA and Polarization Estimation in mmWave Polarized Massive MIMO Systems</article-title><source>IEEE Trans. Wirel. Commun.</source><year>2023</year><volume>22</volume><fpage>3071</fpage><lpage>3083</lpage><pub-id pub-id-type="doi">10.1109/TWC.2022.3215965</pub-id></element-citation></ref><ref id="B14-sensors-25-05583"><label>14.</label><element-citation publication-type="journal"><person-group person-group-type="author"><name name-style="western"><surname>Wang</surname><given-names>G.</given-names></name><name name-style="western"><surname>Xin</surname><given-names>J.</given-names></name><name name-style="western"><surname>Zheng</surname><given-names>N.</given-names></name><name name-style="western"><surname>Sano</surname><given-names>A.</given-names></name></person-group><article-title>Computationally Efficient Subspace-Based Method for Two-Dimensional Direction Estimation with L-shaped Array</article-title><source>IEEE Trans. Signal Process.</source><year>2011</year><volume>59</volume><fpage>3197</fpage><lpage>3212</lpage><pub-id pub-id-type="doi">10.1109/TSP.2011.2144591</pub-id></element-citation></ref><ref id="B15-sensors-25-05583"><label>15.</label><element-citation publication-type="journal"><person-group person-group-type="author"><name name-style="western"><surname>Gu</surname><given-names>J.F.</given-names></name><name name-style="western"><surname>Wei</surname><given-names>P.</given-names></name></person-group><article-title>Joint SVD of Two Cross-Correlation Matrices to Achieve Automatic Pairing in 2-D Angle Estimation Problems</article-title><source>IEEE Antennas Wirel. Propag. Lett.</source><year>2007</year><volume>6</volume><fpage>553</fpage><lpage>556</lpage><pub-id pub-id-type="doi">10.1109/LAWP.2007.907913</pub-id></element-citation></ref><ref id="B16-sensors-25-05583"><label>16.</label><element-citation publication-type="journal"><person-group person-group-type="author"><name name-style="western"><surname>Zhang</surname><given-names>Z.</given-names></name><name name-style="western"><surname>Wang</surname><given-names>W.</given-names></name><name name-style="western"><surname>Huang</surname><given-names>Y.</given-names></name><name name-style="western"><surname>Liu</surname><given-names>S.</given-names></name></person-group><article-title>Decoupled 2-D Direction of Arrival Estimation in L-shaped Array</article-title><source>IEEE Commun. Lett.</source><year>2017</year><volume>21</volume><fpage>1989</fpage><lpage>1992</lpage><pub-id pub-id-type="doi">10.1109/LCOMM.2017.2708698</pub-id></element-citation></ref><ref id="B17-sensors-25-05583"><label>17.</label><element-citation publication-type="confproc"><person-group person-group-type="author"><name name-style="western"><surname>Ding</surname><given-names>L.</given-names></name><name name-style="western"><surname>Junli</surname><given-names>L.</given-names></name></person-group><article-title>L-Shaped Array-Based 2-D DOA Estimation Using Parallel Factor Analysis</article-title><source>Proceedings of the 2010 8th World Congress on Intelligent Control and Automation</source><conf-loc>Jinan, China</conf-loc><conf-date>7&#8211;9 July 2010</conf-date><fpage>6949</fpage><lpage>6952</lpage><pub-id pub-id-type="doi">10.1109/WCICA.2010.5554320</pub-id></element-citation></ref><ref id="B18-sensors-25-05583"><label>18.</label><element-citation publication-type="journal"><person-group person-group-type="author"><name name-style="western"><surname>Xu</surname><given-names>F.</given-names></name><name name-style="western"><surname>Zheng</surname><given-names>H.</given-names></name><name name-style="western"><surname>Vorobyov</surname><given-names>S.A.</given-names></name></person-group><article-title>Tensor-Based 2-D DOA Estimation for L-shaped Nested Array</article-title><source>IEEE Trans. Aerosp. Electron. Syst.</source><year>2024</year><volume>60</volume><fpage>604</fpage><lpage>618</lpage><pub-id pub-id-type="doi">10.1109/TAES.2023.3326793</pub-id></element-citation></ref><ref id="B19-sensors-25-05583"><label>19.</label><element-citation publication-type="journal"><person-group person-group-type="author"><name name-style="western"><surname>Dong</surname><given-names>Y.Y.</given-names></name><name name-style="western"><surname>Dong</surname><given-names>C.x.</given-names></name><name name-style="western"><surname>Liu</surname><given-names>W.</given-names></name><name name-style="western"><surname>Chen</surname><given-names>H.</given-names></name><name name-style="western"><surname>Zhao</surname><given-names>G.q.</given-names></name></person-group><article-title>2-D DOA Estimation for L-shaped Array with Array Aperture and Snapshots Extension Techniques</article-title><source>IEEE Signal Process. Lett.</source><year>2017</year><volume>24</volume><fpage>495</fpage><lpage>499</lpage><pub-id pub-id-type="doi">10.1109/LSP.2017.2676124</pub-id></element-citation></ref><ref id="B20-sensors-25-05583"><label>20.</label><element-citation publication-type="journal"><person-group person-group-type="author"><name name-style="western"><surname>Rao</surname><given-names>W.</given-names></name><name name-style="western"><surname>Li</surname><given-names>D.</given-names></name><name name-style="western"><surname>Zhang</surname><given-names>J.Q.</given-names></name></person-group><article-title>A Tensor-Based Approach to L-shaped Arrays Processing with Enhanced Degrees of Freedom</article-title><source>IEEE Signal Process. Lett.</source><year>2018</year><volume>25</volume><fpage>1</fpage><lpage>5</lpage><pub-id pub-id-type="doi">10.1109/LSP.2017.2783370</pub-id></element-citation></ref><ref id="B21-sensors-25-05583"><label>21.</label><element-citation publication-type="journal"><person-group person-group-type="author"><name name-style="western"><surname>Wu</surname><given-names>X.</given-names></name><name name-style="western"><surname>Zhu</surname><given-names>W.P.</given-names></name></person-group><article-title>On Efficient Gridless Methods for 2-D DOA Estimation with Uniform and Sparse L-shaped Arrays</article-title><source>Signal Process.</source><year>2022</year><volume>191</volume><fpage>108351</fpage><pub-id pub-id-type="doi">10.1016/j.sigpro.2021.108351</pub-id></element-citation></ref><ref id="B22-sensors-25-05583"><label>22.</label><element-citation publication-type="journal"><person-group person-group-type="author"><name name-style="western"><surname>Zhou</surname><given-names>L.</given-names></name><name name-style="western"><surname>Ye</surname><given-names>K.</given-names></name><name name-style="western"><surname>Qi</surname><given-names>J.</given-names></name><name name-style="western"><surname>Hong</surname><given-names>S.</given-names></name><name name-style="western"><surname>Feng</surname><given-names>Z.</given-names></name></person-group><article-title>2-D DOA Estimation Based on Discrete Fractional Fourier Transform for L-shaped Nested Array</article-title><source>AEU Int. J. Electron. Commun.</source><year>2024</year><volume>187</volume><fpage>155565</fpage><pub-id pub-id-type="doi">10.1016/j.aeue.2024.155565</pub-id></element-citation></ref><ref id="B23-sensors-25-05583"><label>23.</label><element-citation publication-type="journal"><person-group person-group-type="author"><name name-style="western"><surname>Zhou</surname><given-names>L.</given-names></name><name name-style="western"><surname>Ye</surname><given-names>K.</given-names></name><name name-style="western"><surname>Zhang</surname><given-names>X.</given-names></name></person-group><article-title>Two-Dimensional Direction Finding for L-shaped Coprime Array via Minimization of the Ratio of the Nuclear Norm and the Frobenius Norm</article-title><source>Remote Sens.</source><year>2024</year><volume>16</volume><elocation-id>3543</elocation-id><pub-id pub-id-type="doi">10.3390/rs16183543</pub-id></element-citation></ref><ref id="B24-sensors-25-05583"><label>24.</label><element-citation publication-type="journal"><person-group person-group-type="author"><name name-style="western"><surname>Bhaskar</surname><given-names>B.N.</given-names></name><name name-style="western"><surname>Tang</surname><given-names>G.</given-names></name><name name-style="western"><surname>Recht</surname><given-names>B.</given-names></name></person-group><article-title>Atomic Norm Denoising with Applications to Line Spectral Estimation</article-title><source>IEEE Trans. Signal Process.</source><year>2013</year><volume>61</volume><fpage>5987</fpage><lpage>5999</lpage><pub-id pub-id-type="doi">10.1109/TSP.2013.2273443</pub-id></element-citation></ref><ref id="B25-sensors-25-05583"><label>25.</label><element-citation publication-type="journal"><person-group person-group-type="author"><name name-style="western"><surname>Andersson</surname><given-names>F.</given-names></name><name name-style="western"><surname>Carlsson</surname><given-names>M.</given-names></name><name name-style="western"><surname>Tourneret</surname><given-names>J.Y.</given-names></name><name name-style="western"><surname>Wendt</surname><given-names>H.</given-names></name></person-group><article-title>A New Frequency Estimation Method for Equally and Unequally Spaced Data</article-title><source>IEEE Trans. Signal Process.</source><year>2014</year><volume>62</volume><fpage>5761</fpage><lpage>5774</lpage><pub-id pub-id-type="doi">10.1109/TSP.2014.2358961</pub-id></element-citation></ref><ref id="B26-sensors-25-05583"><label>26.</label><element-citation publication-type="book"><person-group person-group-type="author"><name name-style="western"><surname>Yang</surname><given-names>Z.</given-names></name><name name-style="western"><surname>Li</surname><given-names>J.</given-names></name><name name-style="western"><surname>Stoica</surname><given-names>P.</given-names></name><name name-style="western"><surname>Xie</surname><given-names>L.</given-names></name></person-group><article-title>Sparse Methods for Direction-of-Arrival Estimation</article-title><source>Academic Press Library in Signal Processing</source><publisher-name>Elsevier</publisher-name><publisher-loc>Amsterdam, The Netherlands</publisher-loc><year>2018</year><fpage>509</fpage><lpage>581</lpage></element-citation></ref><ref id="B27-sensors-25-05583"><label>27.</label><element-citation publication-type="journal"><person-group person-group-type="author"><name name-style="western"><surname>Wu</surname><given-names>X.</given-names></name><name name-style="western"><surname>Yang</surname><given-names>Z.</given-names></name><name name-style="western"><surname>Xu</surname><given-names>Z.</given-names></name></person-group><article-title>Multichannel Frequency Estimation in Challenging Scenarios via Structured Matrix Embedding and Recovery (StruMER)</article-title><source>IEEE Trans. Signal Process.</source><year>2023</year><volume>71</volume><fpage>3242</fpage><lpage>3256</lpage><pub-id pub-id-type="doi">10.1109/TSP.2023.3309459</pub-id></element-citation></ref><ref id="B28-sensors-25-05583"><label>28.</label><element-citation publication-type="journal"><person-group person-group-type="author"><name name-style="western"><surname>Chen</surname><given-names>J.</given-names></name><name name-style="western"><surname>Huo</surname><given-names>X.</given-names></name></person-group><article-title>Theoretical Results on Sparse Representations of Multiple-Measurement Vectors</article-title><source>IEEE Trans. Signal Process.</source><year>2006</year><volume>54</volume><fpage>4634</fpage><lpage>4643</lpage><pub-id pub-id-type="doi">10.1109/TSP.2006.881263</pub-id></element-citation></ref><ref id="B29-sensors-25-05583"><label>29.</label><element-citation publication-type="journal"><person-group person-group-type="author"><name name-style="western"><surname>Stoica</surname><given-names>P.</given-names></name><name name-style="western"><surname>Babu</surname><given-names>P.</given-names></name><name name-style="western"><surname>Li</surname><given-names>J.</given-names></name></person-group><article-title>SPICE: A Sparse Covariance-Based Estimation Method for Array Processing</article-title><source>IEEE Trans. Signal Process.</source><year>2011</year><volume>59</volume><fpage>629</fpage><lpage>638</lpage><pub-id pub-id-type="doi">10.1109/TSP.2010.2090525</pub-id></element-citation></ref><ref id="B30-sensors-25-05583"><label>30.</label><element-citation publication-type="journal"><person-group person-group-type="author"><name name-style="western"><surname>Stoica</surname><given-names>P.</given-names></name><name name-style="western"><surname>Babu</surname><given-names>P.</given-names></name></person-group><article-title>SPICE and LIKES: Two Hyperparameter-Free Methods for Sparse-Parameter Estimation</article-title><source>Signal Process.</source><year>2012</year><volume>92</volume><fpage>1580</fpage><lpage>1590</lpage><pub-id pub-id-type="doi">10.1016/j.sigpro.2011.11.010</pub-id></element-citation></ref><ref id="B31-sensors-25-05583"><label>31.</label><element-citation publication-type="journal"><person-group person-group-type="author"><name name-style="western"><surname>Wu</surname><given-names>X.</given-names></name><name name-style="western"><surname>Yang</surname><given-names>Z.</given-names></name><name name-style="western"><surname>Stoica</surname><given-names>P.</given-names></name><name name-style="western"><surname>Xu</surname><given-names>Z.</given-names></name></person-group><article-title>Maximum Likelihood Line Spectral Estimation in the Signal Domain: A Rank-Constrained Structured Matrix Recovery Approach</article-title><source>IEEE Trans. Signal Process.</source><year>2022</year><volume>70</volume><fpage>4156</fpage><lpage>4169</lpage><pub-id pub-id-type="doi">10.1109/TSP.2022.3198863</pub-id></element-citation></ref><ref id="B32-sensors-25-05583"><label>32.</label><element-citation publication-type="journal"><person-group person-group-type="author"><name name-style="western"><surname>Fang</surname><given-names>J.</given-names></name><name name-style="western"><surname>Li</surname><given-names>J.</given-names></name><name name-style="western"><surname>Shen</surname><given-names>Y.</given-names></name><name name-style="western"><surname>Li</surname><given-names>H.</given-names></name><name name-style="western"><surname>Li</surname><given-names>S.</given-names></name></person-group><article-title>Super-Resolution Compressed Sensing: An Iterative Reweighted Algorithm for Joint Parameter Learning and Sparse Signal Recovery</article-title><source>IEEE Signal Process. Lett.</source><year>2014</year><volume>21</volume><fpage>761</fpage><lpage>765</lpage><pub-id pub-id-type="doi">10.1109/LSP.2014.2316004</pub-id></element-citation></ref><ref id="B33-sensors-25-05583"><label>33.</label><element-citation publication-type="journal"><person-group person-group-type="author"><name name-style="western"><surname>Yang</surname><given-names>Z.</given-names></name><name name-style="western"><surname>Xie</surname><given-names>L.</given-names></name><name name-style="western"><surname>Zhang</surname><given-names>C.</given-names></name></person-group><article-title>A Discretization-Free Sparse and Parametric Approach for Linear Array Signal Processing</article-title><source>IEEE Trans. Signal Process.</source><year>2014</year><volume>62</volume><fpage>4959</fpage><lpage>4973</lpage><pub-id pub-id-type="doi">10.1109/TSP.2014.2339792</pub-id></element-citation></ref><ref id="B34-sensors-25-05583"><label>34.</label><element-citation publication-type="journal"><person-group person-group-type="author"><name name-style="western"><surname>Sedighi</surname><given-names>S.</given-names></name><name name-style="western"><surname>Rao</surname><given-names>B.S.M.R.</given-names></name><name name-style="western"><surname>Ottersten</surname><given-names>B.</given-names></name></person-group><article-title>An Asymptotically Efficient Weighted Least Squares Estimator for Co-Array-Based DoA Estimation</article-title><source>IEEE Trans. Signal Process.</source><year>2020</year><volume>68</volume><fpage>589</fpage><lpage>604</lpage><pub-id pub-id-type="doi">10.1109/TSP.2019.2954506</pub-id></element-citation></ref><ref id="B35-sensors-25-05583"><label>35.</label><element-citation publication-type="journal"><person-group person-group-type="author"><name name-style="western"><surname>Chi</surname><given-names>Y.</given-names></name><name name-style="western"><surname>Chen</surname><given-names>Y.</given-names></name></person-group><article-title>Compressive Two-Dimensional Harmonic Retrieval via Atomic Norm Minimization</article-title><source>IEEE Trans. Signal Process.</source><year>2015</year><volume>63</volume><fpage>1030</fpage><lpage>1042</lpage><pub-id pub-id-type="doi">10.1109/TSP.2014.2386283</pub-id></element-citation></ref><ref id="B36-sensors-25-05583"><label>36.</label><element-citation publication-type="journal"><person-group person-group-type="author"><name name-style="western"><surname>Yang</surname><given-names>Z.</given-names></name><name name-style="western"><surname>Xie</surname><given-names>L.</given-names></name><name name-style="western"><surname>Stoica</surname><given-names>P.</given-names></name></person-group><article-title>Vandermonde Decomposition of Multilevel Toeplitz Matrices with Application to Multidimensional Super-Resolution</article-title><source>IEEE Trans. Inf. Theory</source><year>2016</year><volume>62</volume><fpage>3685</fpage><lpage>3701</lpage><pub-id pub-id-type="doi">10.1109/TIT.2016.2553041</pub-id></element-citation></ref><ref id="B37-sensors-25-05583"><label>37.</label><element-citation publication-type="journal"><person-group person-group-type="author"><name name-style="western"><surname>Zhang</surname><given-names>Z.</given-names></name><name name-style="western"><surname>Wang</surname><given-names>Y.</given-names></name><name name-style="western"><surname>Tian</surname><given-names>Z.</given-names></name></person-group><article-title>Efficient Two-Dimensional Line Spectrum Estimation Based on Decoupled Atomic Norm Minimization</article-title><source>Signal Process.</source><year>2019</year><volume>163</volume><fpage>95</fpage><lpage>106</lpage><pub-id pub-id-type="doi">10.1016/j.sigpro.2019.04.024</pub-id></element-citation></ref><ref id="B38-sensors-25-05583"><label>38.</label><element-citation publication-type="journal"><person-group person-group-type="author"><name name-style="western"><surname>Yang</surname><given-names>Z.</given-names></name><name name-style="western"><surname>Xie</surname><given-names>L.</given-names></name></person-group><article-title>Exact Joint Sparse Frequency Recovery via Optimization Methods</article-title><source>IEEE Trans. Signal Process.</source><year>2016</year><volume>64</volume><fpage>5145</fpage><lpage>5157</lpage><pub-id pub-id-type="doi">10.1109/TSP.2016.2576422</pub-id></element-citation></ref><ref id="B39-sensors-25-05583"><label>39.</label><element-citation publication-type="journal"><person-group person-group-type="author"><name name-style="western"><surname>Cheng</surname><given-names>Y.</given-names></name><name name-style="western"><surname>Liu</surname><given-names>T.</given-names></name><name name-style="western"><surname>Shi</surname><given-names>J.</given-names></name><name name-style="western"><surname>Guan</surname><given-names>D.</given-names></name><name name-style="western"><surname>Liu</surname><given-names>Z.</given-names></name><name name-style="western"><surname>Liu</surname><given-names>Y.</given-names></name><name name-style="western"><surname>Li</surname><given-names>X.</given-names></name></person-group><article-title>Generalized Gridless Formulation of Reweighted <italic toggle="yes">&#8467;</italic><sub>2,1</sub> Minimization for DoA Estimation</article-title><source>IEEE Trans. Aerosp. Electron. Syst.</source><year>2024</year><volume>61</volume><fpage>2295</fpage><lpage>2308</lpage><pub-id pub-id-type="doi">10.1109/TAES.2024.3466833</pub-id></element-citation></ref><ref id="B40-sensors-25-05583"><label>40.</label><element-citation publication-type="journal"><person-group person-group-type="author"><name name-style="western"><surname>Ottersten</surname><given-names>B.</given-names></name><name name-style="western"><surname>Stoica</surname><given-names>P.</given-names></name><name name-style="western"><surname>Roy</surname><given-names>R.</given-names></name></person-group><article-title>Covariance Matching Estimation Techniques for Array Signal Processing Applications</article-title><source>Digit. Signal Process.</source><year>1998</year><volume>8</volume><fpage>185</fpage><lpage>210</lpage><pub-id pub-id-type="doi">10.1006/dspr.1998.0316</pub-id></element-citation></ref><ref id="B41-sensors-25-05583"><label>41.</label><element-citation publication-type="journal"><person-group person-group-type="author"><name name-style="western"><surname>Jinli</surname><given-names>C.</given-names></name><name name-style="western"><surname>Hong</surname><given-names>G.</given-names></name><name name-style="western"><surname>Weimin</surname><given-names>S.</given-names></name></person-group><article-title>Angle Estimation Using ESPRIT without Pairing in MIMO Radar</article-title><source>Electron. Lett.</source><year>2008</year><volume>44</volume><fpage>1422</fpage><pub-id pub-id-type="doi">10.1049/el:20089089</pub-id></element-citation></ref><ref id="B42-sensors-25-05583"><label>42.</label><element-citation publication-type="journal"><person-group person-group-type="author"><name name-style="western"><surname>Yang</surname><given-names>Z.</given-names></name><name name-style="western"><surname>Xie</surname><given-names>L.</given-names></name></person-group><article-title>On Gridless Sparse Methods for Multi-Snapshot Direction of Arrival Estimation</article-title><source>Circuits Syst. Signal Process.</source><year>2017</year><volume>36</volume><fpage>3370</fpage><lpage>3384</lpage><pub-id pub-id-type="doi">10.1007/s00034-016-0462-9</pub-id></element-citation></ref><ref id="B43-sensors-25-05583"><label>43.</label><element-citation publication-type="journal"><person-group person-group-type="author"><name name-style="western"><surname>Yang</surname><given-names>Z.</given-names></name><name name-style="western"><surname>Xie</surname><given-names>L.</given-names></name></person-group><article-title>Enhancing Sparsity and Resolution via Reweighted Atomic Norm Minimization</article-title><source>IEEE Trans. Signal Process.</source><year>2016</year><volume>64</volume><fpage>995</fpage><lpage>1006</lpage><pub-id pub-id-type="doi">10.1109/TSP.2015.2493987</pub-id></element-citation></ref><ref id="B44-sensors-25-05583"><label>44.</label><element-citation publication-type="journal"><person-group person-group-type="author"><name name-style="western"><surname>Boyd</surname><given-names>S.</given-names></name><name name-style="western"><surname>Parikh</surname><given-names>N.</given-names></name><name name-style="western"><surname>Chu</surname><given-names>E.</given-names></name><name name-style="western"><surname>Peleato</surname><given-names>B.</given-names></name><name name-style="western"><surname>Eckstein</surname><given-names>J.</given-names></name></person-group><article-title>Distributed Optimization and Statistical Learning via the Alternating Direction Method of Multipliers</article-title><source>Found. Trends Mach. Learn.</source><year>2010</year><volume>3</volume><fpage>1</fpage><lpage>122</lpage><pub-id pub-id-type="doi">10.1561/2200000016</pub-id></element-citation></ref><ref id="B45-sensors-25-05583"><label>45.</label><element-citation publication-type="journal"><person-group person-group-type="author"><name name-style="western"><surname>Stoica</surname><given-names>P.</given-names></name><name name-style="western"><surname>Nehorai</surname><given-names>A.</given-names></name></person-group><article-title>Performance Study of Conditional and Unconditional Direction-of-Arrival Estimation</article-title><source>IEEE Trans. Acoust. Speech, Signal Process.</source><year>1990</year><volume>38</volume><fpage>1783</fpage><lpage>1795</lpage><pub-id pub-id-type="doi">10.1109/29.60109</pub-id></element-citation></ref><ref id="B46-sensors-25-05583"><label>46.</label><element-citation publication-type="journal"><person-group person-group-type="author"><name name-style="western"><surname>Li</surname><given-names>T.</given-names></name><name name-style="western"><surname>Nehorai</surname><given-names>A.</given-names></name></person-group><article-title>Maximum Likelihood Direction Finding in Spatially Colored Noise Fields Using Sparse Sensor Arrays</article-title><source>IEEE Trans. Signal Process.</source><year>2011</year><volume>59</volume><fpage>1048</fpage><lpage>1062</lpage><pub-id pub-id-type="doi">10.1109/TSP.2010.2098402</pub-id></element-citation></ref><ref id="B47-sensors-25-05583"><label>47.</label><element-citation publication-type="journal"><person-group person-group-type="author"><name name-style="western"><surname>Toh</surname><given-names>K.C.</given-names></name><name name-style="western"><surname>Todd</surname><given-names>M.J.</given-names></name><name name-style="western"><surname>T&#252;t&#252;nc&#252;</surname><given-names>R.H.</given-names></name></person-group><article-title>SDPT3&#8212;A Matlab Software Package for Semidefinite Programming, Version 1.3</article-title><source>Optim. Methods Softw.</source><year>1999</year><volume>11</volume><fpage>545</fpage><lpage>581</lpage><pub-id pub-id-type="doi">10.1080/10556789908805762</pub-id></element-citation></ref><ref id="B48-sensors-25-05583"><label>48.</label><element-citation publication-type="book"><person-group person-group-type="author"><name name-style="western"><surname>Seber</surname><given-names>G.A.F.</given-names></name></person-group><source>A Matrix Handbook for Statisticians</source><edition>1st ed.</edition><publisher-name>Wiley</publisher-name><publisher-loc>Hoboken, NJ, USA</publisher-loc><year>2007</year><pub-id pub-id-type="doi">10.1002/9780470226797</pub-id></element-citation></ref></ref-list></back><floats-group><fig position="float" id="sensors-25-05583-f001" orientation="portrait"><label>Figure 1</label><caption><p>The schematic diagram of an L-shaped array.</p></caption><graphic xmlns:xlink="http://www.w3.org/1999/xlink" position="float" orientation="portrait" xlink:href="sensors-25-05583-g001.jpg"/></fig><fig position="float" id="sensors-25-05583-f002" orientation="portrait"><label>Figure 2</label><caption><p>Two-dimensional DOA estimation of ten uncorrelated components (Solid dots of different colors indicate the estimated frequency groups while the black circles indicate the true frequency groups).</p></caption><graphic xmlns:xlink="http://www.w3.org/1999/xlink" position="float" orientation="portrait" xlink:href="sensors-25-05583-g002.jpg"/></fig><fig position="float" id="sensors-25-05583-f003" orientation="portrait"><label>Figure 3</label><caption><p>Estimates of the proposed method and ESPRIT with 100 trials, where the number of sensors is set as <inline-formula><mml:math id="mm341" overflow="scroll"><mml:mrow><mml:mrow><mml:msub><mml:mi>M</mml:mi><mml:mi>x</mml:mi></mml:msub><mml:mo>=</mml:mo><mml:mn>4</mml:mn></mml:mrow></mml:mrow></mml:math></inline-formula> and <inline-formula><mml:math id="mm342" overflow="scroll"><mml:mrow><mml:mrow><mml:msub><mml:mi>M</mml:mi><mml:mi>z</mml:mi></mml:msub><mml:mo>=</mml:mo><mml:mn>4</mml:mn></mml:mrow></mml:mrow></mml:math></inline-formula> (red circles and blue crosses denote the real values and the estimates, respectively).</p></caption><graphic xmlns:xlink="http://www.w3.org/1999/xlink" position="float" orientation="portrait" xlink:href="sensors-25-05583-g003.jpg"/></fig><fig position="float" id="sensors-25-05583-f004" orientation="portrait"><label>Figure 4</label><caption><p>RMSE of estimate results of (<bold>a</bold>) the whole system, (<bold>b</bold>) success rate with threshold set as <inline-formula><mml:math id="mm343" overflow="scroll"><mml:mrow><mml:msup><mml:mn>30</mml:mn><mml:mo>&#8728;</mml:mo></mml:msup></mml:mrow></mml:math></inline-formula>, (<bold>c</bold>) x-axis, and (<bold>d</bold>) z-axis. Some settings: <inline-formula><mml:math id="mm344" overflow="scroll"><mml:mrow><mml:mrow><mml:msub><mml:mi>M</mml:mi><mml:mi>x</mml:mi></mml:msub><mml:mo>=</mml:mo><mml:mn>6</mml:mn><mml:mo>,</mml:mo><mml:msub><mml:mi>M</mml:mi><mml:mi>z</mml:mi></mml:msub><mml:mo>=</mml:mo><mml:mn>6</mml:mn></mml:mrow></mml:mrow></mml:math></inline-formula>, <inline-formula><mml:math id="mm345" overflow="scroll"><mml:mrow><mml:mrow><mml:mi>K</mml:mi><mml:mo>=</mml:mo><mml:mn>2</mml:mn></mml:mrow></mml:mrow></mml:math></inline-formula>, <inline-formula><mml:math id="mm346" overflow="scroll"><mml:mrow><mml:mrow><mml:mi>L</mml:mi><mml:mspace width="-0.166667em"/><mml:mo>=</mml:mo><mml:mspace width="-0.166667em"/><mml:mn>200</mml:mn></mml:mrow></mml:mrow></mml:math></inline-formula>, <inline-formula><mml:math id="mm347" overflow="scroll"><mml:mrow><mml:mrow><mml:msub><mml:mi mathvariant="bold-italic">&#952;</mml:mi><mml:mn>1</mml:mn></mml:msub><mml:mspace width="-0.166667em"/><mml:mo>=</mml:mo><mml:mspace width="-0.166667em"/><mml:mrow><mml:mo>{</mml:mo><mml:mn>60</mml:mn><mml:mo>,</mml:mo><mml:mn>90</mml:mn><mml:mo>}</mml:mo></mml:mrow></mml:mrow></mml:mrow></mml:math></inline-formula>, and <inline-formula><mml:math id="mm348" overflow="scroll"><mml:mrow><mml:mrow><mml:msub><mml:mi mathvariant="bold-italic">&#952;</mml:mi><mml:mn>2</mml:mn></mml:msub><mml:mspace width="-0.166667em"/><mml:mo>=</mml:mo><mml:mspace width="-0.166667em"/><mml:mrow><mml:mo>{</mml:mo><mml:mn>50</mml:mn><mml:mo>,</mml:mo><mml:mn>80</mml:mn><mml:mo>}</mml:mo></mml:mrow></mml:mrow></mml:mrow></mml:math></inline-formula>.</p></caption><graphic xmlns:xlink="http://www.w3.org/1999/xlink" position="float" orientation="portrait" xlink:href="sensors-25-05583-g004.jpg"/></fig><fig position="float" id="sensors-25-05583-f005" orientation="portrait"><label>Figure 5</label><caption><p>RMSE of estimate results of (<bold>a</bold>) the whole system, (<bold>b</bold>) x-axis, (<bold>c</bold>) z-axis. Some settings: <inline-formula><mml:math id="mm349" overflow="scroll"><mml:mrow><mml:mrow><mml:msub><mml:mi>M</mml:mi><mml:mi>x</mml:mi></mml:msub><mml:mo>=</mml:mo><mml:mn>6</mml:mn><mml:mo>,</mml:mo><mml:msub><mml:mi>M</mml:mi><mml:mi>z</mml:mi></mml:msub><mml:mo>=</mml:mo><mml:mn>6</mml:mn></mml:mrow></mml:mrow></mml:math></inline-formula>, <inline-formula><mml:math id="mm350" overflow="scroll"><mml:mrow><mml:mrow><mml:mi>K</mml:mi><mml:mo>=</mml:mo><mml:mn>2</mml:mn></mml:mrow></mml:mrow></mml:math></inline-formula>, <inline-formula><mml:math id="mm351" overflow="scroll"><mml:mrow><mml:mrow><mml:mi>SNR</mml:mi><mml:mo>=</mml:mo><mml:mn>5</mml:mn><mml:mspace width="4.pt"/><mml:mi>dB</mml:mi></mml:mrow></mml:mrow></mml:math></inline-formula>, <inline-formula><mml:math id="mm352" overflow="scroll"><mml:mrow><mml:mrow><mml:mi mathvariant="bold-italic">&#981;</mml:mi><mml:mo>=</mml:mo><mml:mo>{</mml:mo><mml:mn>60</mml:mn><mml:mo>,</mml:mo><mml:mn>90</mml:mn><mml:mo>}</mml:mo></mml:mrow></mml:mrow></mml:math></inline-formula>, and <inline-formula><mml:math id="mm353" overflow="scroll"><mml:mrow><mml:mrow><mml:mi mathvariant="bold-italic">&#952;</mml:mi><mml:mo>=</mml:mo><mml:mo>{</mml:mo><mml:mn>50</mml:mn><mml:mo>,</mml:mo><mml:mn>80</mml:mn><mml:mo>}</mml:mo></mml:mrow></mml:mrow></mml:math></inline-formula>.</p></caption><graphic xmlns:xlink="http://www.w3.org/1999/xlink" position="float" orientation="portrait" xlink:href="sensors-25-05583-g005.jpg"/></fig><fig position="float" id="sensors-25-05583-f006" orientation="portrait"><label>Figure 6</label><caption><p>Average running time of algorithms versus the number of sensors.</p></caption><graphic xmlns:xlink="http://www.w3.org/1999/xlink" position="float" orientation="portrait" xlink:href="sensors-25-05583-g006.jpg"/></fig><fig position="float" id="sensors-25-05583-f007" orientation="portrait"><label>Figure 7</label><caption><p>Spectra of the proposed method (the first row) and 2-D MUSIC (the second row) for uncorrelated targets. Simulation parameters: <inline-formula><mml:math id="mm354" overflow="scroll"><mml:mrow><mml:mrow><mml:msub><mml:mi>M</mml:mi><mml:mi>x</mml:mi></mml:msub><mml:mo>=</mml:mo><mml:mn>10</mml:mn><mml:mo>,</mml:mo><mml:msub><mml:mi>M</mml:mi><mml:mi>z</mml:mi></mml:msub><mml:mo>=</mml:mo><mml:mn>10</mml:mn></mml:mrow></mml:mrow></mml:math></inline-formula>, <inline-formula><mml:math id="mm355" overflow="scroll"><mml:mrow><mml:mrow><mml:mi>K</mml:mi><mml:mspace width="-0.166667em"/><mml:mo>=</mml:mo><mml:mspace width="-0.166667em"/><mml:mn>4</mml:mn></mml:mrow></mml:mrow></mml:math></inline-formula>, <inline-formula><mml:math id="mm356" overflow="scroll"><mml:mrow><mml:mrow><mml:mi>L</mml:mi><mml:mspace width="-0.166667em"/><mml:mo>=</mml:mo><mml:mspace width="-0.166667em"/><mml:mn>6</mml:mn></mml:mrow></mml:mrow></mml:math></inline-formula> and the angular separation is <inline-formula><mml:math id="mm357" overflow="scroll"><mml:mrow><mml:mo>&#916;</mml:mo></mml:mrow></mml:math></inline-formula> = (<bold>a</bold>,<bold>d</bold>) <inline-formula><mml:math id="mm358" overflow="scroll"><mml:mrow><mml:msup><mml:mn>20</mml:mn><mml:mo>&#8728;</mml:mo></mml:msup></mml:mrow></mml:math></inline-formula>, (<bold>b</bold>,<bold>e</bold>) <inline-formula><mml:math id="mm359" overflow="scroll"><mml:mrow><mml:msup><mml:mn>10</mml:mn><mml:mo>&#8728;</mml:mo></mml:msup></mml:mrow></mml:math></inline-formula>, and (<bold>c</bold>,<bold>f</bold>) <inline-formula><mml:math id="mm360" overflow="scroll"><mml:mrow><mml:msup><mml:mn>5</mml:mn><mml:mo>&#8728;</mml:mo></mml:msup></mml:mrow></mml:math></inline-formula> at both subarrays.</p></caption><graphic xmlns:xlink="http://www.w3.org/1999/xlink" position="float" orientation="portrait" xlink:href="sensors-25-05583-g007.jpg"/></fig><table-wrap position="float" id="sensors-25-05583-t001" orientation="portrait"><object-id pub-id-type="pii">sensors-25-05583-t001_Table 1</object-id><label>Table 1</label><caption><p>Complexity of different methods for 2-D DOA estimation.</p></caption><table frame="hsides" rules="groups"><thead><tr><th align="center" valign="middle" style="border-bottom:solid thin;border-top:solid thin" rowspan="1" colspan="1">Method</th><th align="center" valign="middle" style="border-bottom:solid thin;border-top:solid thin" rowspan="1" colspan="1">Optimization</th><th align="center" valign="middle" style="border-bottom:solid thin;border-top:solid thin" rowspan="1" colspan="1">DOA Estimation</th></tr></thead><tbody><tr><td align="center" valign="middle" rowspan="1" colspan="1">ESPRIT</td><td align="center" valign="middle" rowspan="1" colspan="1">-</td><td align="center" valign="middle" rowspan="1" colspan="1">
<inline-formula>
<mml:math id="mm361" overflow="scroll"><mml:mrow><mml:mrow><mml:mi mathvariant="script">O</mml:mi><mml:mo stretchy="false">(</mml:mo><mml:msup><mml:mi>M</mml:mi><mml:mn>3</mml:mn></mml:msup><mml:mo>+</mml:mo><mml:msup><mml:mi>K</mml:mi><mml:mn>2</mml:mn></mml:msup><mml:mi>M</mml:mi><mml:mo>+</mml:mo><mml:msup><mml:mi>K</mml:mi><mml:mn>3</mml:mn></mml:msup><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:mrow></mml:math>
</inline-formula>
</td></tr><tr><td align="center" valign="middle" rowspan="1" colspan="1">SPA</td><td align="center" valign="middle" rowspan="1" colspan="1">
<inline-formula>
<mml:math id="mm362" overflow="scroll"><mml:mrow><mml:mrow><mml:mi mathvariant="script">O</mml:mi><mml:mo stretchy="false">(</mml:mo><mml:msubsup><mml:mi>M</mml:mi><mml:mi>x</mml:mi><mml:mrow><mml:mn>6.5</mml:mn></mml:mrow></mml:msubsup><mml:mo>+</mml:mo><mml:msubsup><mml:mi>M</mml:mi><mml:mi>z</mml:mi><mml:mrow><mml:mn>6.5</mml:mn></mml:mrow></mml:msubsup><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:mrow></mml:math>
</inline-formula>
</td><td align="center" valign="middle" rowspan="1" colspan="1">
<inline-formula>
<mml:math id="mm363" overflow="scroll"><mml:mrow><mml:mrow><mml:mi mathvariant="script">O</mml:mi><mml:mo stretchy="false">(</mml:mo><mml:msubsup><mml:mi>M</mml:mi><mml:mi>x</mml:mi><mml:mn>3</mml:mn></mml:msubsup><mml:mo>+</mml:mo><mml:msubsup><mml:mi>M</mml:mi><mml:mi>z</mml:mi><mml:mn>3</mml:mn></mml:msubsup><mml:mo>+</mml:mo><mml:msup><mml:mi>K</mml:mi><mml:mn>2</mml:mn></mml:msup><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:msub><mml:mi>M</mml:mi><mml:mi>x</mml:mi></mml:msub><mml:mo>+</mml:mo><mml:msub><mml:mi>M</mml:mi><mml:mi>z</mml:mi></mml:msub><mml:mo stretchy="false">)</mml:mo></mml:mrow><mml:mo>+</mml:mo><mml:msup><mml:mi>K</mml:mi><mml:mn>3</mml:mn></mml:msup><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:mrow></mml:math>
</inline-formula>
</td></tr><tr><td align="center" valign="middle" style="border-bottom:solid thin" rowspan="1" colspan="1">Proposed method</td><td align="center" valign="middle" style="border-bottom:solid thin" rowspan="1" colspan="1">
<inline-formula>
<mml:math id="mm364" overflow="scroll"><mml:mrow><mml:mrow><mml:mi mathvariant="script">O</mml:mi><mml:mo stretchy="false">(</mml:mo><mml:msubsup><mml:mi>n</mml:mi><mml:mn>1</mml:mn><mml:mn>2</mml:mn></mml:msubsup><mml:msubsup><mml:mi>n</mml:mi><mml:mn>2</mml:mn><mml:mrow><mml:mn>2.5</mml:mn></mml:mrow></mml:msubsup><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:mrow></mml:math>
</inline-formula>
</td><td align="center" valign="middle" style="border-bottom:solid thin" rowspan="1" colspan="1">
<inline-formula>
<mml:math id="mm365" overflow="scroll"><mml:mrow><mml:mrow><mml:mi mathvariant="script">O</mml:mi><mml:mo stretchy="false">(</mml:mo><mml:msup><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:msub><mml:mi>M</mml:mi><mml:mi>x</mml:mi></mml:msub><mml:msub><mml:mi>M</mml:mi><mml:mi>z</mml:mi></mml:msub><mml:mo stretchy="false">)</mml:mo></mml:mrow><mml:mn>3</mml:mn></mml:msup><mml:mo>+</mml:mo><mml:msup><mml:mi>K</mml:mi><mml:mn>2</mml:mn></mml:msup><mml:msub><mml:mi>M</mml:mi><mml:mi>x</mml:mi></mml:msub><mml:msub><mml:mi>M</mml:mi><mml:mi>z</mml:mi></mml:msub><mml:mo>+</mml:mo><mml:msup><mml:mi>K</mml:mi><mml:mn>3</mml:mn></mml:msup><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:mrow></mml:math>
</inline-formula>
</td></tr></tbody></table></table-wrap></floats-group></article></pmc-articleset>