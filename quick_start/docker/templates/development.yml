# Development profile template for RAG Quick Start
# Development environment with hot reloading and debug features

version: '3.8'

services:
  iris:
    environment:
      - ISC_PASSWORD=${ISC_PASSWORD:-SYS}
      - ISC_DATA_DIRECTORY=/opt/irisapp/data
      - IRIS_DEBUG_MODE=true
    ports:
      - "${IRIS_PORT:-1972}:1972"
      - "${IRIS_WEB_PORT:-52773}:52773"
      - "${IRIS_DEBUG_PORT:-9092}:9092"  # Debug port
    deploy:
      resources:
        limits:
          memory: 4G
          cpus: '2.0'
        reservations:
          memory: 2G
          cpus: '1.0'

  rag_app:
    image: ${RAG_APP_IMAGE:-python:3.11-slim}
    container_name: rag_app
    ports:
      - "${RAG_APP_PORT:-8000}:8000"
      - "${RAG_DEBUG_PORT:-5678}:5678"  # Python debugger port
    working_dir: /app
    command: ["python", "-m", "debugpy", "--listen", "0.0.0.0:5678", "--wait-for-client", "-m", "iris_rag.cli"]
    volumes:
      - ./:/app
      - rag_data:/app/data
      - pip_cache:/root/.cache/pip
      - ./logs:/app/logs
    environment:
      - IRIS_HOST=iris
      - IRIS_PORT=1972
      - IRIS_USERNAME=${IRIS_USERNAME:-demo}
      - IRIS_PASSWORD=${IRIS_PASSWORD:-demo}
      - IRIS_NAMESPACE=${IRIS_NAMESPACE:-USER}
      - PYTHONPATH=/app
      - BATCH_SIZE=${BATCH_SIZE:-16}
      - MAX_WORKERS=${MAX_WORKERS:-2}
      - CHUNK_SIZE=${CHUNK_SIZE:-1000}
      - CHUNK_OVERLAP=${CHUNK_OVERLAP:-200}
      - DOCUMENT_LIMIT=100
      - PROFILE=development
      - DEBUG=true
      - LOG_LEVEL=DEBUG
      - FLASK_ENV=development
      - FLASK_DEBUG=1
      - PYTHONDONTWRITEBYTECODE=1
      - MCP_SERVER_URL=http://mcp_server:3000
    depends_on:
      iris:
        condition: service_healthy
    networks:
      - rag_network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s
    restart: unless-stopped
    deploy:
      resources:
        limits:
          memory: 2G
          cpus: '1.0'
        reservations:
          memory: 1G
          cpus: '0.5'

  mcp_server:
    image: ${MCP_IMAGE:-node:18-alpine}
    container_name: rag_mcp_server
    ports:
      - "${MCP_PORT:-3000}:3000"
      - "${MCP_DEBUG_PORT:-9229}:9229"  # Node.js debug port
    working_dir: /app
    command: ["node", "--inspect=0.0.0.0:9229", "src/index.js"]
    volumes:
      - ./nodejs:/app
      - node_modules:/app/node_modules
      - ./logs:/app/logs
    environment:
      - NODE_ENV=development
      - DEBUG=*
      - RAG_API_URL=http://rag_app:8000
      - IRIS_HOST=iris
      - IRIS_PORT=1972
      - LOG_LEVEL=debug
    depends_on:
      iris:
        condition: service_healthy
      rag_app:
        condition: service_healthy
    networks:
      - rag_network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 30s
    restart: unless-stopped
    deploy:
      resources:
        limits:
          memory: 1G
          cpus: '0.5'
        reservations:
          memory: 512M
          cpus: '0.25'

  # Development tools container
  dev_tools:
    image: ${DEV_TOOLS_IMAGE:-python:3.11-slim}
    container_name: rag_dev_tools
    working_dir: /app
    command: ["tail", "-f", "/dev/null"]  # Keep container running
    volumes:
      - ./:/app
      - pip_cache:/root/.cache/pip
    environment:
      - PYTHONPATH=/app
      - IRIS_HOST=iris
      - IRIS_PORT=1972
    depends_on:
      - iris
    networks:
      - rag_network
    profiles:
      - dev-tools
    deploy:
      resources:
        limits:
          memory: 1G
          cpus: '0.5'
        reservations:
          memory: 512M
          cpus: '0.25'

volumes:
  iris_data:
    driver: local
  rag_data:
    driver: local
  node_modules:
    driver: local
  pip_cache:
    driver: local

networks:
  rag_network:
    driver: bridge
    ipam:
      config:
        - subnet: 172.20.0.0/16