# Extended profile template for RAG Quick Start
# Full production-like setup with monitoring for 5000 documents

version: '3.8'

services:
  iris:
    environment:
      - ISC_PASSWORD=${ISC_PASSWORD:-SYS}
      - ISC_DATA_DIRECTORY=/opt/irisapp/data
    deploy:
      resources:
        limits:
          memory: 8G
          cpus: '4.0'
        reservations:
          memory: 4G
          cpus: '2.0'

  rag_app:
    environment:
      - IRIS_HOST=iris
      - IRIS_PORT=1972
      - IRIS_USERNAME=${IRIS_USERNAME:-demo}
      - IRIS_PASSWORD=${IRIS_PASSWORD:-demo}
      - IRIS_NAMESPACE=${IRIS_NAMESPACE:-USER}
      - PYTHONPATH=/app
      - BATCH_SIZE=${BATCH_SIZE:-64}
      - MAX_WORKERS=${MAX_WORKERS:-8}
      - CHUNK_SIZE=${CHUNK_SIZE:-1000}
      - CHUNK_OVERLAP=${CHUNK_OVERLAP:-200}
      - DOCUMENT_LIMIT=5000
      - PROFILE=extended
      - MCP_SERVER_URL=http://mcp_server:3000
      - PROMETHEUS_ENABLED=true
    deploy:
      resources:
        limits:
          memory: 4G
          cpus: '2.0'
        reservations:
          memory: 2G
          cpus: '1.0'

  mcp_server:
    image: ${MCP_IMAGE:-node:18-alpine}
    container_name: rag_mcp_server
    ports:
      - "${MCP_PORT:-3000}:3000"
    working_dir: /app
    command: ["npm", "start"]
    volumes:
      - ./nodejs:/app
    environment:
      - NODE_ENV=production
      - RAG_API_URL=http://rag_app:8000
      - IRIS_HOST=iris
      - IRIS_PORT=1972
      - PROMETHEUS_ENABLED=true
    depends_on:
      iris:
        condition: service_healthy
      rag_app:
        condition: service_healthy
    networks:
      - rag_network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 30s
    restart: unless-stopped
    deploy:
      resources:
        limits:
          memory: 2G
          cpus: '1.0'
        reservations:
          memory: 1G
          cpus: '0.5'

  nginx:
    image: ${NGINX_IMAGE:-nginx:alpine}
    container_name: rag_nginx
    ports:
      - "${NGINX_PORT:-80}:80"
      - "${NGINX_SSL_PORT:-443}:443"
    volumes:
      - ./config/nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./config/nginx/default.conf:/etc/nginx/conf.d/default.conf:ro
      - ./config/ssl:/etc/nginx/ssl:ro
    depends_on:
      - rag_app
      - mcp_server
    networks:
      - rag_network
    restart: unless-stopped
    deploy:
      resources:
        limits:
          memory: 512M
          cpus: '0.5'
        reservations:
          memory: 256M
          cpus: '0.25'

  prometheus:
    image: ${PROMETHEUS_IMAGE:-prom/prometheus:latest}
    container_name: rag_prometheus
    ports:
      - "${PROMETHEUS_PORT:-9090}:9090"
    volumes:
      - ./monitoring/prometheus.yml:/etc/prometheus/prometheus.yml:ro
      - prometheus_data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
      - '--storage.tsdb.retention.time=200h'
      - '--web.enable-lifecycle'
    networks:
      - rag_network
      - monitoring_network
    restart: unless-stopped
    deploy:
      resources:
        limits:
          memory: 1G
          cpus: '0.5'
        reservations:
          memory: 512M
          cpus: '0.25'

  grafana:
    image: ${GRAFANA_IMAGE:-grafana/grafana:latest}
    container_name: rag_grafana
    ports:
      - "${GRAFANA_PORT:-3001}:3000"
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=${GRAFANA_PASSWORD:-admin}
      - GF_USERS_ALLOW_SIGN_UP=false
      - GF_INSTALL_PLUGINS=grafana-piechart-panel
    volumes:
      - grafana_data:/var/lib/grafana
      - ./monitoring/grafana/dashboards:/etc/grafana/provisioning/dashboards:ro
      - ./monitoring/grafana/datasources:/etc/grafana/provisioning/datasources:ro
    depends_on:
      - prometheus
    networks:
      - rag_network
      - monitoring_network
    restart: unless-stopped
    deploy:
      resources:
        limits:
          memory: 1G
          cpus: '0.5'
        reservations:
          memory: 512M
          cpus: '0.25'

volumes:
  iris_data:
    driver: local
  rag_data:
    driver: local
  prometheus_data:
    driver: local
  grafana_data:
    driver: local

networks:
  rag_network:
    driver: bridge
    ipam:
      config:
        - subnet: 172.20.0.0/16
  monitoring_network:
    driver: bridge
    internal: true
    ipam:
      config:
        - subnet: 172.21.0.0/16