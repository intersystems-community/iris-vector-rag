[build-system]
requires = ["setuptools>=61.0", "wheel", "uv-dynamic-versioning>=0.7.0"]
build-backend = "setuptools.build_meta"

[project]
name = "rag-templates"
dynamic = ["version"]
description = "Dead-simple library for building RAG applications with InterSystems IRIS"
readme = "README.md"
license = {text = "MIT"}
authors = [
    {name = "InterSystems", email = "support@intersystems.com"}
]
maintainers = [
    {name = "InterSystems", email = "support@intersystems.com"}
]
keywords = [
    "rag",
    "retrieval-augmented-generation", 
    "intersystems",
    "iris",
    "vector-database",
    "llm",
    "ai",
    "machine-learning",
    "nlp",
    "embeddings",
    "semantic-search",
    "mcp",
    "model-context-protocol"
]
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Topic :: Scientific/Engineering :: Artificial Intelligence",
    "Topic :: Software Development :: Libraries :: Python Modules",
    "Topic :: Database",
    "Topic :: Text Processing :: Linguistic"
]
requires-python = ">=3.10"
dependencies = [
    "openai>=1.0.0",
    "anthropic>=0.25.0",
    "sentence-transformers>=2.2.0",
    "numpy>=1.21.0",
    "pandas>=1.3.0",
    "pyyaml>=6.0",
    "requests>=2.28.0",
    "tqdm>=4.64.0",
    "typing-extensions>=4.0.0",
    "psutil>=7.0.0",
    "intersystems-irispython>=5.1.2",
    "langchain-openai>=0.3.24",
    "langchain>=0.3.25",
    "python-dotenv>=1.1.0",
    "matplotlib>=3.10.3",
    "ragas>=0.2.15",
    "seaborn>=0.13.2",
    "plotly>=6.1.2",
    "jaydebeapi>=1.2.3",
]

[project.optional-dependencies]
dev = [
    "uv>=0.1.0",
    "pytest>=7.0.0",
    "pytest-asyncio>=0.21.0",
    "pytest-cov>=4.0.0",
    "black>=23.0.0",
    "isort>=5.12.0",
    "flake8>=6.0.0",
    "mypy>=1.0.0",
    "pre-commit>=3.0.0",
    "build>=0.10.0",
    "twine>=4.0.0"
]
mcp = [
    "mcp>=0.1.0",
    "fastapi>=0.100.0",
    "uvicorn>=0.23.0",
    "websockets>=11.0.0"
]
all = [
    "uv>=0.1.0",
    "pytest>=7.0.0",
    "pytest-asyncio>=0.21.0", 
    "pytest-cov>=4.0.0",
    "black>=23.0.0",
    "isort>=5.12.0",
    "flake8>=6.0.0",
    "mypy>=1.0.0",
    "pre-commit>=3.0.0",
    "build>=0.10.0",
    "twine>=4.0.0",
    "mcp>=0.1.0",
    "fastapi>=0.100.0",
    "uvicorn>=0.23.0",
    "websockets>=11.0.0"
]

[dependency-groups]
dev = [
    "uv>=0.1.0",
    "pytest>=7.0.0",
    "pytest-asyncio>=0.21.0",
    "pytest-cov>=4.0.0",
    "black>=23.0.0",
    "isort>=5.12.0",
    "flake8>=6.0.0",
    "mypy>=1.0.0",
    "pre-commit>=3.0.0",
    "build>=0.10.0",
    "twine>=4.0.0"
]
mcp = [
    "mcp>=0.1.0",
    "fastapi>=0.100.0",
    "uvicorn>=0.23.0",
    "websockets>=11.0.0"
]

[project.urls]
Homepage = "https://github.com/intersystems/rag-templates"
Documentation = "https://github.com/intersystems/rag-templates/docs"
Repository = "https://github.com/intersystems/rag-templates"
"Bug Tracker" = "https://github.com/intersystems/rag-templates/issues"
Changelog = "https://github.com/intersystems/rag-templates/blob/main/CHANGELOG.md"

[project.scripts]
rag-templates = "rag_templates.cli:main"

[tool.setuptools]
packages = ["rag_templates"]

[tool.setuptools.dynamic]
version = {attr = "rag_templates.__version__"}

[tool.setuptools.package-data]
rag_templates = [
    "config/*.yaml",
    "config/*.json", 
    "templates/*.yaml",
    "templates/*.json"
]

[tool.black]
line-length = 88
target-version = ['py38', 'py39', 'py310', 'py311', 'py312']
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | build
  | dist
)/
'''

[tool.isort]
profile = "black"
multi_line_output = 3
line_length = 88
known_first_party = ["rag_templates"]

[tool.mypy]
python_version = "3.10"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true

[[tool.mypy.overrides]]
module = [
    "intersystems_iris.*",
    "sentence_transformers.*",
    "openai.*",
    "anthropic.*"
]
ignore_missing_imports = true

[tool.pytest.ini_options]
minversion = "7.0"
addopts = "-ra -q --strict-markers --strict-config"
testpaths = ["tests"]
markers = [
    "slow: marks tests as slow (deselect with '-m \"not slow\"')",
    "integration: marks tests as integration tests",
    "unit: marks tests as unit tests",
    "mcp: marks tests as MCP integration tests"
]

[tool.coverage.run]
source = ["rag_templates"]
omit = [
    "*/tests/*",
    "*/test_*",
    "setup.py"
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "if settings.DEBUG",
    "raise AssertionError",
    "raise NotImplementedError",
    "if 0:",
    "if __name__ == .__main__.:"
]

[tool.uv-dynamic-versioning]
vcs = "git"
style = "pep440"
bump = true
fallback-version = "0.0.0"
