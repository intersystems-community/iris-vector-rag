# Authentication Schemas and Security Schemes
# FR-009 to FR-012: API key-based authentication with permissions

components:
  securitySchemes:
    ApiKeyAuth:
      type: apiKey
      in: header
      name: Authorization
      description: |
        API key authentication using Elasticsearch pattern.

        Format: `Authorization: ApiKey <base64(id:api_key)>`

        Example:
        1. Generate API key (server provides id and secret)
        2. Encode as base64: `base64("7c9e6679-7425-40de-944b-e07fc1f90ae7:my_secret_key_12345")`
        3. Send header: `Authorization: ApiKey N2M5ZTY2NzktNzQyNS00MGRlLTk0NGItZTA3ZmMxZjkwYWU3Om15X3NlY3JldF9rZXlfMTIzNDU=`

        FR-009: System MUST authenticate all API requests using API key-based authentication
        FR-010: System MUST reject unauthenticated requests with 401 Unauthorized
        FR-011: System MUST support permission-based authorization (read, write, admin)
        FR-012: System MUST log all authentication failures for security monitoring

  schemas:
    ApiKeyCredentials:
      type: object
      required:
        - id
        - secret
      properties:
        id:
          type: string
          format: uuid
          description: API key identifier
          example: 7c9e6679-7425-40de-944b-e07fc1f90ae7
        secret:
          type: string
          minLength: 32
          maxLength: 128
          description: API key secret (never logged or returned after creation)
          example: my_secret_key_12345_do_not_share

    ApiKeyResponse:
      type: object
      required:
        - key_id
        - name
        - permissions
        - rate_limit_tier
        - created_at
      properties:
        key_id:
          type: string
          format: uuid
          description: API key identifier
        name:
          type: string
          minLength: 1
          maxLength: 100
          description: Human-readable key name
        permissions:
          type: array
          items:
            type: string
            enum: [read, write, admin]
          minItems: 1
          description: Allowed operations for this key
        rate_limit_tier:
          type: string
          enum: [basic, premium, enterprise]
          description: Rate limiting tier
        requests_per_minute:
          type: integer
          minimum: 1
          maximum: 10000
          description: Max requests per minute
        requests_per_hour:
          type: integer
          minimum: 1
          maximum: 100000
          description: Max requests per hour
        created_at:
          type: string
          format: date-time
          description: When key was created
        expires_at:
          type: string
          format: date-time
          description: Key expiration time (optional)
        is_active:
          type: boolean
          description: Whether key is currently active
      example:
        key_id: 7c9e6679-7425-40de-944b-e07fc1f90ae7
        name: production-app-key
        permissions: [read, write]
        rate_limit_tier: premium
        requests_per_minute: 100
        requests_per_hour: 5000
        created_at: '2025-01-15T08:00:00.000Z'
        expires_at: '2026-01-15T08:00:00.000Z'
        is_active: true

    AuthenticationError:
      type: object
      required:
        - error
      properties:
        error:
          type: object
          required:
            - type
            - reason
          properties:
            type:
              type: string
              enum: [authentication_error, authorization_error, invalid_api_key, expired_api_key]
              description: Specific authentication error type
            reason:
              type: string
              description: Human-readable error message
            details:
              type: object
              properties:
                key_id:
                  type: string
                  description: Parsed key ID (if available)
                required_permissions:
                  type: array
                  items:
                    type: string
                  description: Permissions required for this operation
                current_permissions:
                  type: array
                  items:
                    type: string
                  description: Permissions the key currently has
      examples:
        missing_header:
          value:
            error:
              type: authentication_error
              reason: Missing Authorization header
              details:
                message: API requests must include 'Authorization: ApiKey <base64(id:secret)>' header

        invalid_format:
          value:
            error:
              type: authentication_error
              reason: Invalid Authorization header format
              details:
                message: Expected format 'Authorization: ApiKey <base64(id:secret)>'

        invalid_key:
          value:
            error:
              type: invalid_api_key
              reason: API key not found or invalid
              details:
                key_id: 7c9e6679-7425-40de-944b-e07fc1f90ae7

        expired_key:
          value:
            error:
              type: expired_api_key
              reason: API key has expired
              details:
                key_id: 7c9e6679-7425-40de-944b-e07fc1f90ae7
                expired_at: '2025-01-15T08:00:00.000Z'

        insufficient_permissions:
          value:
            error:
              type: authorization_error
              reason: Insufficient permissions for this operation
              details:
                required_permissions: [write]
                current_permissions: [read]

  responses:
    Unauthorized:
      description: |
        Authentication failed - missing, invalid, or expired API key.

        FR-010: System MUST reject unauthenticated requests with 401 Unauthorized status
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/AuthenticationError'
          examples:
            missing_header:
              $ref: '#/components/schemas/AuthenticationError/examples/missing_header'
            invalid_format:
              $ref: '#/components/schemas/AuthenticationError/examples/invalid_format'
            invalid_key:
              $ref: '#/components/schemas/AuthenticationError/examples/invalid_key'
            expired_key:
              $ref: '#/components/schemas/AuthenticationError/examples/expired_key'

    Forbidden:
      description: |
        Authorization failed - API key lacks required permissions.

        FR-011: System MUST support permission-based authorization where each API key has associated permissions
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/AuthenticationError'
          example:
            error:
              type: authorization_error
              reason: Insufficient permissions for this operation
              details:
                required_permissions: [write, admin]
                current_permissions: [read]
