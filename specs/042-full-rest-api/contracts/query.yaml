# Query Endpoint Contracts
# FR-001 to FR-004: Query processing with multiple pipeline types

paths:
  /basic/_search:
    post:
      summary: Query basic RAG pipeline
      description: |
        Query the basic RAG pipeline using standard vector similarity search.

        FR-001: System MUST accept query requests with query text, pipeline selection, and optional parameters
        FR-002: System MUST return structured responses with answer, documents, sources, metadata
      operationId: queryBasicPipeline
      tags:
        - Query
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/QueryRequest'
      responses:
        '200':
          $ref: '#/components/responses/QuerySuccess'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '../auth.yaml#/components/responses/Unauthorized'
        '422':
          $ref: '#/components/responses/ValidationError'
        '429':
          $ref: '#/components/responses/RateLimitExceeded'
        '500':
          $ref: '#/components/responses/InternalServerError'
        '503':
          $ref: '#/components/responses/ServiceUnavailable'

  /basic_rerank/_search:
    post:
      summary: Query basic RAG with reranking
      description: Vector search with cross-encoder reranking for improved relevance
      operationId: queryBasicRerankPipeline
      tags:
        - Query
      requestBody:
        $ref: '#/components/requestBodies/QueryRequestBody'
      responses:
        '200':
          $ref: '#/components/responses/QuerySuccess'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '../auth.yaml#/components/responses/Unauthorized'
        '422':
          $ref: '#/components/responses/ValidationError'
        '429':
          $ref: '#/components/responses/RateLimitExceeded'
        '503':
          $ref: '#/components/responses/ServiceUnavailable'

  /crag/_search:
    post:
      summary: Query CRAG pipeline
      description: Corrective RAG with self-evaluation and retrieval refinement
      operationId: queryCRAGPipeline
      tags:
        - Query
      requestBody:
        $ref: '#/components/requestBodies/QueryRequestBody'
      responses:
        '200':
          $ref: '#/components/responses/QuerySuccess'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '../auth.yaml#/components/responses/Unauthorized'
        '422':
          $ref: '#/components/responses/ValidationError'
        '429':
          $ref: '#/components/responses/RateLimitExceeded'
        '503':
          $ref: '#/components/responses/ServiceUnavailable'

  /graphrag/_search:
    post:
      summary: Query GraphRAG pipeline
      description: Hybrid search combining vector, text, graph traversal with RRF fusion
      operationId: queryGraphRAGPipeline
      tags:
        - Query
      requestBody:
        $ref: '#/components/requestBodies/QueryRequestBody'
      responses:
        '200':
          $ref: '#/components/responses/QuerySuccess'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '../auth.yaml#/components/responses/Unauthorized'
        '422':
          $ref: '#/components/responses/ValidationError'
        '429':
          $ref: '#/components/responses/RateLimitExceeded'
        '503':
          $ref: '#/components/responses/ServiceUnavailable'

  /pylate_colbert/_search:
    post:
      summary: Query PyLate ColBERT pipeline
      description: ColBERT late interaction retrieval for fine-grained relevance matching
      operationId: queryPyLateColBERTPipeline
      tags:
        - Query
      requestBody:
        $ref: '#/components/requestBodies/QueryRequestBody'
      responses:
        '200':
          $ref: '#/components/responses/QuerySuccess'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '../auth.yaml#/components/responses/Unauthorized'
        '422':
          $ref: '#/components/responses/ValidationError'
        '429':
          $ref: '#/components/responses/RateLimitExceeded'
        '503':
          $ref: '#/components/responses/ServiceUnavailable'

  /_search:
    post:
      summary: Query any pipeline (specify in request body)
      description: |
        Generic search endpoint where pipeline type is specified in request body.

        FR-004: System MUST support querying multiple pipeline types with consistent format
      operationId: queryGenericPipeline
      tags:
        - Query
      requestBody:
        required: true
        content:
          application/json:
            schema:
              allOf:
                - $ref: '#/components/schemas/QueryRequest'
                - type: object
                  required:
                    - pipeline
                  properties:
                    pipeline:
                      type: string
                      enum: [basic, basic_rerank, crag, graphrag, pylate_colbert]
                      description: Which pipeline to use for this query
      responses:
        '200':
          $ref: '#/components/responses/QuerySuccess'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '../auth.yaml#/components/responses/Unauthorized'
        '422':
          $ref: '#/components/responses/ValidationError'
        '429':
          $ref: '#/components/responses/RateLimitExceeded'
        '503':
          $ref: '#/components/responses/ServiceUnavailable'

components:
  requestBodies:
    QueryRequestBody:
      required: true
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/QueryRequest'

  schemas:
    QueryRequest:
      type: object
      required:
        - query
      properties:
        query:
          type: string
          minLength: 1
          maxLength: 10000
          description: |
            User's query text (1-10000 characters).

            FR-003: System MUST validate all incoming requests and return field-specific errors
          example: What is diabetes?
        top_k:
          type: integer
          minimum: 1
          maximum: 100
          default: 5
          description: Number of documents to retrieve
          example: 5
        filters:
          type: object
          additionalProperties: true
          description: Optional metadata filters for document retrieval
          example:
            domain: medical
            year: 2023
        include_sources:
          type: boolean
          default: true
          description: Whether to include source references in response
        include_metadata:
          type: boolean
          default: true
          description: Whether to include execution metadata

    QueryResponse:
      type: object
      required:
        - response_id
        - request_id
        - answer
        - retrieved_documents
        - sources
        - pipeline_name
        - execution_time_ms
      properties:
        response_id:
          type: string
          format: uuid
          description: Unique response identifier
        request_id:
          type: string
          format: uuid
          description: Associated request identifier (from X-Request-ID header)
        answer:
          type: string
          minLength: 1
          description: LLM-generated answer text
        retrieved_documents:
          type: array
          items:
            $ref: '#/components/schemas/Document'
          minItems: 1
          description: Retrieved documents with metadata
        sources:
          type: array
          items:
            type: string
          description: Source references (URLs, filenames, etc.)
        contexts:
          type: array
          items:
            type: string
          description: Document content for RAGAS evaluation (LangChain compatible)
        pipeline_name:
          type: string
          description: Pipeline that processed the query
        execution_time_ms:
          type: integer
          minimum: 0
          description: Total query execution time
        retrieval_time_ms:
          type: integer
          minimum: 0
          description: Time spent retrieving documents
        generation_time_ms:
          type: integer
          minimum: 0
          description: Time spent generating answer
        tokens_used:
          type: integer
          minimum: 0
          description: Total LLM tokens consumed
        confidence_score:
          type: number
          minimum: 0.0
          maximum: 1.0
          description: Answer confidence score (if available)
        metadata:
          type: object
          additionalProperties: true
          description: Pipeline-specific metadata
      example:
        response_id: 9a8b7c6d-5e4f-3210-9876-543210fedcba
        request_id: 550e8400-e29b-41d4-a716-446655440000
        answer: "Diabetes is a chronic metabolic disorder characterized by elevated blood glucose levels..."
        retrieved_documents:
          - doc_id: 1a2b3c4d-5678-90ab-cdef-1234567890ab
            content: "Diabetes mellitus is a group of metabolic diseases..."
            score: 0.95
            metadata:
              source: medical_textbook_ch5.pdf
              chunk_index: 3
              page_number: 127
        sources: [medical_textbook_ch5.pdf]
        contexts: ["Diabetes mellitus is a group of metabolic diseases..."]
        pipeline_name: graphrag
        execution_time_ms: 1456
        retrieval_time_ms: 345
        generation_time_ms: 1089
        tokens_used: 2345
        confidence_score: 0.92

    Document:
      type: object
      required:
        - doc_id
        - content
        - score
        - metadata
      properties:
        doc_id:
          type: string
          format: uuid
          description: Document identifier
        content:
          type: string
          minLength: 1
          description: Document text content
        score:
          type: number
          minimum: 0.0
          maximum: 1.0
          description: Similarity/relevance score
        metadata:
          $ref: '#/components/schemas/DocumentMetadata'

    DocumentMetadata:
      type: object
      required:
        - source
      properties:
        source:
          type: string
          description: Source filename, URL, or identifier
        chunk_index:
          type: integer
          minimum: 0
          description: Chunk index for split documents
        page_number:
          type: integer
          minimum: 1
          description: Page number in source document
        created_at:
          type: string
          format: date-time
          description: Document creation timestamp

  responses:
    QuerySuccess:
      description: |
        Query processed successfully.

        FR-002: Response contains answer, retrieved documents, sources, and execution metadata
      headers:
        X-Request-ID:
          $ref: '../openapi.yaml#/components/headers/X-Request-ID'
        X-Pipeline-Name:
          $ref: '../openapi.yaml#/components/headers/X-Pipeline-Name'
        X-Execution-Time-Ms:
          $ref: '../openapi.yaml#/components/headers/X-Execution-Time-Ms'
        X-RateLimit-Limit:
          $ref: '../openapi.yaml#/components/headers/X-RateLimit-Limit'
        X-RateLimit-Remaining:
          $ref: '../openapi.yaml#/components/headers/X-RateLimit-Remaining'
        X-RateLimit-Reset:
          $ref: '../openapi.yaml#/components/headers/X-RateLimit-Reset'
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/QueryResponse'

    BadRequest:
      description: Invalid request format or parameters
      content:
        application/json:
          schema:
            $ref: '../openapi.yaml#/components/schemas/Error'
          example:
            error:
              type: bad_request
              reason: Invalid request format
              details:
                message: Request body must be valid JSON

    ValidationError:
      description: |
        Request validation failed.

        FR-003: System MUST validate all incoming requests and return field-specific error messages
      content:
        application/json:
          schema:
            $ref: '../openapi.yaml#/components/schemas/Error'
          examples:
            query_too_long:
              value:
                error:
                  type: validation_exception
                  reason: Query text exceeds maximum length
                  details:
                    field: query
                    rejected_value: "[10001 character string]"
                    message: Query must be between 1 and 10000 characters
                    max_length: 10000
            invalid_top_k:
              value:
                error:
                  type: validation_exception
                  reason: Invalid parameter value
                  details:
                    field: top_k
                    rejected_value: -5
                    message: Must be positive integer between 1 and 100

    RateLimitExceeded:
      description: |
        Rate limit exceeded for this API key.

        FR-015: System MUST return 429 Too Many Requests when limits exceeded with Retry-After header
      headers:
        X-RateLimit-Limit:
          $ref: '../openapi.yaml#/components/headers/X-RateLimit-Limit'
        X-RateLimit-Remaining:
          $ref: '../openapi.yaml#/components/headers/X-RateLimit-Remaining'
        X-RateLimit-Reset:
          $ref: '../openapi.yaml#/components/headers/X-RateLimit-Reset'
        Retry-After:
          $ref: '../openapi.yaml#/components/headers/Retry-After'
      content:
        application/json:
          schema:
            $ref: '../openapi.yaml#/components/schemas/Error'
          example:
            error:
              type: rate_limit_exceeded
              reason: Too many requests
              details:
                limit: 100
                window: requests per minute
                retry_after_seconds: 60

    InternalServerError:
      description: Internal server error during query processing
      content:
        application/json:
          schema:
            $ref: '../openapi.yaml#/components/schemas/Error'
          example:
            error:
              type: internal_server_error
              reason: Query processing failed
              details:
                message: An unexpected error occurred. Please try again or contact support.
                request_id: 550e8400-e29b-41d4-a716-446655440000

    ServiceUnavailable:
      description: |
        Pipeline is unavailable or unhealthy.

        FR-007: System MUST provide endpoints to list pipelines with current status
      content:
        application/json:
          schema:
            $ref: '../openapi.yaml#/components/schemas/Error'
          example:
            error:
              type: service_unavailable
              reason: Pipeline is currently unavailable
              details:
                pipeline: graphrag
                status: degraded
                estimated_recovery_time: 120
                message: Pipeline is initializing. Please try again in 2 minutes.
